{"version":3,"file":"blocknote.bundled.umd.cjs","sources":["../node_modules/orderedmap/dist/index.js","../node_modules/prosemirror-model/dist/index.js","../node_modules/prosemirror-transform/dist/index.js","../node_modules/prosemirror-state/dist/index.js","../node_modules/prosemirror-view/dist/index.js","../node_modules/w3c-keyname/index.js","../node_modules/prosemirror-keymap/dist/index.js","../node_modules/prosemirror-commands/dist/index.js","../node_modules/prosemirror-schema-list/dist/index.js","../node_modules/@tiptap/core/dist/index.js","../node_modules/@tiptap/extension-bold/dist/index.js","../node_modules/@tiptap/extension-code/dist/index.js","../node_modules/lib0/map.js","../node_modules/lib0/set.js","../node_modules/lib0/array.js","../node_modules/lib0/observable.js","../node_modules/lib0/math.js","../node_modules/lib0/binary.js","../node_modules/lib0/number.js","../node_modules/lib0/string.js","../node_modules/lib0/encoding.js","../node_modules/lib0/error.js","../node_modules/lib0/webcrypto.js","../node_modules/lib0/random.js","../node_modules/lib0/time.js","../node_modules/lib0/promise.js","../node_modules/lib0/conditions.js","../node_modules/lib0/storage.js","../node_modules/lib0/object.js","../node_modules/lib0/function.js","../node_modules/lib0/environment.js","../node_modules/lib0/pair.js","../node_modules/lib0/dom.js","../node_modules/lib0/eventloop.js","../node_modules/lib0/symbol.js","../node_modules/lib0/logging.common.js","../node_modules/lib0/logging.js","../node_modules/lib0/iterator.js","../node_modules/yjs/dist/yjs.mjs","../node_modules/lib0/mutex.js","../node_modules/lib0/diff.js","../node_modules/y-prosemirror/src/plugins/keys.js","../node_modules/y-prosemirror/src/plugins/sync-plugin.js","../node_modules/y-prosemirror/src/lib.js","../node_modules/y-prosemirror/src/plugins/cursor-plugin.js","../node_modules/y-prosemirror/src/plugins/undo-plugin.js","../node_modules/@tiptap/extension-collaboration/dist/index.js","../node_modules/@tiptap/extension-collaboration-cursor/dist/index.js","../node_modules/prosemirror-dropcursor/dist/index.js","../node_modules/@tiptap/extension-dropcursor/dist/index.js","../node_modules/prosemirror-gapcursor/dist/index.js","../node_modules/@tiptap/extension-gapcursor/dist/index.js","../node_modules/@tiptap/extension-hard-break/dist/index.js","../node_modules/rope-sequence/dist/index.js","../node_modules/prosemirror-history/dist/index.js","../node_modules/@tiptap/extension-history/dist/index.js","../node_modules/@tiptap/extension-italic/dist/index.js","../node_modules/linkifyjs/dist/linkify.es.js","../node_modules/@tiptap/extension-link/dist/index.js","../node_modules/@tiptap/extension-strike/dist/index.js","../node_modules/@tiptap/extension-text/dist/index.js","../node_modules/@tiptap/extension-underline/dist/index.js","../packages/core/src/extensions/Blocks/helpers/getBlockInfoFromPos.ts","../packages/core/src/extensions/Blocks/api/defaultProps.ts","../packages/core/src/extensions/BackgroundColor/BackgroundColorExtension.ts","../packages/core/src/extensions/BackgroundColor/BackgroundColorMark.ts","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js","../packages/core/src/extensions/UniqueID/UniqueID.ts","../packages/core/src/shared/utils.ts","../packages/core/src/api/nodeConversions/nodeConversions.ts","../packages/core/src/extensions/Blocks/PreviousBlockTypePlugin.ts","../packages/core/src/extensions/Blocks/nodes/BlockAttributes.ts","../packages/core/src/extensions/Blocks/NonEditableBlockPlugin.ts","../packages/core/src/extensions/Blocks/nodes/BlockContainer.ts","../packages/core/src/extensions/Blocks/nodes/BlockGroup.ts","../packages/core/src/extensions/Blocks/index.ts","../packages/core/src/extensions/Blocks/api/serialization.ts","../packages/core/src/shared/EventEmitter.ts","../packages/core/src/extensions/Blocks/helpers/findBlock.ts","../packages/core/src/shared/plugins/suggestion/SuggestionPlugin.ts","../packages/core/src/extensions/SlashMenu/SlashMenuPlugin.ts","../packages/core/src/extensions/Placeholder/PlaceholderExtension.ts","../packages/core/src/extensions/TextAlignment/TextAlignmentExtension.ts","../packages/core/src/extensions/TextColor/TextColorExtension.ts","../packages/core/src/extensions/TextColor/TextColorMark.ts","../packages/core/src/extensions/TrailingNode/TrailingNodeExtension.ts","../packages/core/src/extensions/Paste/PastePlugin.ts","../packages/core/src/extensions/Copy/CopyPlugin.ts","../packages/core/src/BlockNoteExtensions.ts","../packages/core/src/api/util/nodeUtil.ts","../packages/core/src/api/blockManipulation/blockManipulation.ts","../node_modules/rehype-parse/node_modules/parse5/lib/common/unicode.js","../node_modules/rehype-parse/node_modules/parse5/lib/common/error-codes.js","../node_modules/rehype-parse/node_modules/parse5/lib/tokenizer/preprocessor.js","../node_modules/rehype-parse/node_modules/parse5/lib/tokenizer/named-entity-data.js","../node_modules/rehype-parse/node_modules/parse5/lib/tokenizer/index.js","../node_modules/rehype-parse/node_modules/parse5/lib/common/html.js","../node_modules/rehype-parse/node_modules/parse5/lib/parser/open-element-stack.js","../node_modules/rehype-parse/node_modules/parse5/lib/parser/formatting-element-list.js","../node_modules/rehype-parse/node_modules/parse5/lib/utils/mixin.js","../node_modules/rehype-parse/node_modules/parse5/lib/extensions/position-tracking/preprocessor-mixin.js","../node_modules/rehype-parse/node_modules/parse5/lib/extensions/location-info/tokenizer-mixin.js","../node_modules/rehype-parse/node_modules/parse5/lib/extensions/location-info/open-element-stack-mixin.js","../node_modules/rehype-parse/node_modules/parse5/lib/extensions/location-info/parser-mixin.js","../node_modules/rehype-parse/node_modules/parse5/lib/extensions/error-reporting/mixin-base.js","../node_modules/rehype-parse/node_modules/parse5/lib/extensions/error-reporting/preprocessor-mixin.js","../node_modules/rehype-parse/node_modules/parse5/lib/extensions/error-reporting/tokenizer-mixin.js","../node_modules/rehype-parse/node_modules/parse5/lib/extensions/error-reporting/parser-mixin.js","../node_modules/rehype-parse/node_modules/parse5/lib/tree-adapters/default.js","../node_modules/rehype-parse/node_modules/parse5/lib/utils/merge-options.js","../node_modules/rehype-parse/node_modules/parse5/lib/common/doctype.js","../node_modules/rehype-parse/node_modules/parse5/lib/common/foreign-content.js","../node_modules/rehype-parse/node_modules/parse5/lib/parser/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/index.js","../node_modules/hast-util-parse-selector/lib/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/comma-separated-tokens/index.js","../node_modules/hastscript/lib/core.js","../node_modules/hastscript/lib/html.js","../node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","../node_modules/hastscript/lib/svg.js","../node_modules/vfile-location/lib/index.js","../node_modules/web-namespaces/index.js","../node_modules/hast-util-from-parse5/lib/index.js","../node_modules/rehype-parse/lib/errors.js","../node_modules/rehype-parse/lib/index.js","../node_modules/hast-util-is-element/index.js","../node_modules/hast-util-embedded/lib/index.js","../node_modules/unist-util-is/lib/index.js","../node_modules/hast-util-whitespace/index.js","../node_modules/rehype-minify-whitespace/block.js","../node_modules/rehype-minify-whitespace/content.js","../node_modules/rehype-minify-whitespace/skippable.js","../node_modules/rehype-minify-whitespace/index.js","../node_modules/unist-util-visit-parents/lib/color.browser.js","../node_modules/unist-util-visit-parents/lib/index.js","../node_modules/unist-util-visit/lib/index.js","../node_modules/hast-util-to-mdast/lib/all.js","../node_modules/hast-util-to-mdast/lib/util/own.js","../node_modules/hast-util-to-mdast/lib/util/wrap-text.js","../node_modules/hast-util-to-mdast/lib/one.js","../node_modules/extend/index.js","../node_modules/hast-util-has-property/lib/index.js","../node_modules/hast-util-is-body-ok-link/index.js","../node_modules/hast-util-phrasing/lib/index.js","../node_modules/mdast-util-phrasing/lib/index.js","../node_modules/hast-util-to-mdast/lib/util/wrap.js","../node_modules/hast-util-to-mdast/lib/util/wrap-children.js","../node_modules/hast-util-to-mdast/lib/util/resolve.js","../node_modules/hast-util-to-mdast/lib/handlers/a.js","../node_modules/hast-util-to-mdast/lib/handlers/base.js","../node_modules/hast-util-to-mdast/lib/handlers/blockquote.js","../node_modules/hast-util-to-mdast/lib/handlers/br.js","../node_modules/unist-util-find-after/lib/index.js","../node_modules/hast-util-to-text/lib/index.js","../node_modules/trim-trailing-lines/index.js","../node_modules/hast-util-to-mdast/lib/handlers/code.js","../node_modules/hast-util-to-mdast/lib/handlers/comment.js","../node_modules/hast-util-to-mdast/lib/handlers/del.js","../node_modules/hast-util-to-mdast/lib/util/list-items-spread.js","../node_modules/hast-util-to-mdast/lib/util/wrap-list-items.js","../node_modules/hast-util-to-mdast/lib/handlers/dl.js","../node_modules/hast-util-to-mdast/lib/handlers/em.js","../node_modules/hast-util-to-mdast/lib/handlers/heading.js","../node_modules/hast-util-to-mdast/lib/handlers/hr.js","../node_modules/hast-util-to-mdast/lib/handlers/iframe.js","../node_modules/hast-util-to-mdast/lib/handlers/img.js","../node_modules/hast-util-to-mdast/lib/handlers/inline-code.js","../node_modules/hast-util-to-mdast/lib/util/find-selected-options.js","../node_modules/hast-util-to-mdast/lib/handlers/input.js","../node_modules/hast-util-to-mdast/lib/handlers/li.js","../node_modules/hast-util-to-mdast/lib/handlers/list.js","../node_modules/mdast-util-to-string/lib/index.js","../node_modules/hast-util-to-mdast/lib/handlers/media.js","../node_modules/hast-util-to-mdast/lib/handlers/p.js","../node_modules/hast-util-to-mdast/lib/handlers/q.js","../node_modules/hast-util-to-mdast/lib/handlers/root.js","../node_modules/hast-util-to-mdast/lib/handlers/select.js","../node_modules/hast-util-to-mdast/lib/handlers/strong.js","../node_modules/hast-util-to-mdast/lib/handlers/table-cell.js","../node_modules/hast-util-to-mdast/lib/handlers/table-row.js","../node_modules/hast-util-to-mdast/lib/handlers/table.js","../node_modules/hast-util-to-mdast/lib/handlers/text.js","../node_modules/hast-util-to-mdast/lib/handlers/textarea.js","../node_modules/hast-util-to-mdast/lib/handlers/wbr.js","../node_modules/hast-util-to-mdast/lib/handlers/index.js","../node_modules/hast-util-to-mdast/lib/index.js","../node_modules/rehype-remark/lib/index.js","../node_modules/html-void-elements/index.js","../node_modules/zwitch/index.js","../node_modules/stringify-entities/lib/core.js","../node_modules/stringify-entities/lib/util/to-hexadecimal.js","../node_modules/stringify-entities/lib/util/to-decimal.js","../node_modules/character-entities-legacy/index.js","../node_modules/character-entities-html4/index.js","../node_modules/stringify-entities/lib/constant/dangerous.js","../node_modules/stringify-entities/lib/util/to-named.js","../node_modules/stringify-entities/lib/util/format-smart.js","../node_modules/stringify-entities/lib/index.js","../node_modules/hast-util-to-html/lib/handle/comment.js","../node_modules/hast-util-to-html/lib/handle/doctype.js","../node_modules/ccount/index.js","../node_modules/hast-util-to-html/lib/omission/util/siblings.js","../node_modules/hast-util-to-html/lib/omission/omission.js","../node_modules/hast-util-to-html/lib/omission/closing.js","../node_modules/hast-util-to-html/lib/omission/opening.js","../node_modules/hast-util-to-html/lib/handle/element.js","../node_modules/hast-util-to-html/lib/handle/text.js","../node_modules/hast-util-to-html/lib/handle/raw.js","../node_modules/hast-util-to-html/lib/handle/root.js","../node_modules/hast-util-to-html/lib/handle/index.js","../node_modules/hast-util-to-html/lib/index.js","../node_modules/rehype-stringify/lib/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-extension-gfm-footnote/lib/syntax.js","../node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","../node_modules/micromark-extension-gfm-table/lib/edit-map.js","../node_modules/micromark-extension-gfm-table/lib/infer.js","../node_modules/micromark-extension-gfm-table/lib/syntax.js","../node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","../node_modules/micromark-extension-gfm/index.js","../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","../node_modules/mdast-util-find-and-replace/lib/index.js","../node_modules/mdast-util-gfm-autolink-literal/lib/index.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-to-markdown/lib/util/association.js","../node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../node_modules/mdast-util-to-markdown/lib/util/safe.js","../node_modules/mdast-util-to-markdown/lib/util/track.js","../node_modules/mdast-util-gfm-footnote/lib/index.js","../node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","../node_modules/mdast-util-gfm-strikethrough/lib/index.js","../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../node_modules/markdown-table/index.js","../node_modules/mdast-util-gfm-table/lib/index.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../node_modules/mdast-util-gfm-task-list-item/lib/index.js","../node_modules/mdast-util-gfm/lib/index.js","../node_modules/remark-gfm/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/parse.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark/lib/postprocess.js","../node_modules/unist-util-stringify-position/lib/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/remark-parse/lib/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/unist-util-position/lib/index.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/unist-util-generated/lib/index.js","../node_modules/mdast-util-definitions/lib/index.js","../node_modules/mdast-util-to-hast/lib/state.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/remark-rehype/lib/index.js","../node_modules/mdast-util-to-markdown/lib/configure.js","../node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","../node_modules/mdast-util-to-markdown/lib/handle/break.js","../node_modules/longest-streak/index.js","../node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","../node_modules/mdast-util-to-markdown/lib/util/check-fence.js","../node_modules/mdast-util-to-markdown/lib/handle/code.js","../node_modules/mdast-util-to-markdown/lib/util/check-quote.js","../node_modules/mdast-util-to-markdown/lib/handle/definition.js","../node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","../node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","../node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","../node_modules/mdast-util-to-markdown/lib/handle/heading.js","../node_modules/mdast-util-to-markdown/lib/handle/html.js","../node_modules/mdast-util-to-markdown/lib/handle/image.js","../node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","../node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","../node_modules/mdast-util-to-markdown/lib/handle/link.js","../node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered-other.js","../node_modules/mdast-util-to-markdown/lib/util/check-rule.js","../node_modules/mdast-util-to-markdown/lib/handle/list.js","../node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","../node_modules/mdast-util-to-markdown/lib/handle/root.js","../node_modules/mdast-util-to-markdown/lib/util/check-strong.js","../node_modules/mdast-util-to-markdown/lib/handle/strong.js","../node_modules/mdast-util-to-markdown/lib/handle/text.js","../node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","../node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","../node_modules/mdast-util-to-markdown/lib/handle/index.js","../node_modules/mdast-util-to-markdown/lib/join.js","../node_modules/mdast-util-to-markdown/lib/unsafe.js","../node_modules/mdast-util-to-markdown/lib/index.js","../node_modules/remark-stringify/lib/index.js","../node_modules/bail/index.js","../node_modules/is-buffer/index.js","../node_modules/unified/node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/vfile-message/lib/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/unified/lib/index.js","../packages/core/src/api/formatConversions/removeUnderlinesRehypePlugin.ts","../node_modules/hast-util-from-dom/lib/index.js","../packages/core/src/api/formatConversions/simplifyBlocksRehypePlugin.ts","../packages/core/src/api/formatConversions/formatConversions.ts","../packages/core/src/extensions/Blocks/api/block.ts","../packages/core/src/extensions/Blocks/nodes/BlockContent/HeadingBlockContent/HeadingBlockContent.ts","../packages/core/src/extensions/Blocks/nodes/BlockContent/ListItemBlockContent/ListItemKeyboardShortcuts.ts","../packages/core/src/extensions/Blocks/nodes/BlockContent/ListItemBlockContent/BulletListItemBlockContent/BulletListItemBlockContent.ts","../packages/core/src/extensions/Blocks/nodes/BlockContent/ListItemBlockContent/NumberedListItemBlockContent/NumberedListIndexingPlugin.ts","../packages/core/src/extensions/Blocks/nodes/BlockContent/ListItemBlockContent/NumberedListItemBlockContent/NumberedListItemBlockContent.ts","../packages/core/src/extensions/Blocks/nodes/BlockContent/ParagraphBlockContent/ParagraphBlockContent.ts","../packages/core/src/extensions/ImageToolbar/ImageToolbarPlugin.ts","../packages/core/src/extensions/Blocks/nodes/BlockContent/ImageBlockContent/ImageBlockContent.ts","../node_modules/prosemirror-tables/dist/index.js","../node_modules/@tiptap/extension-table/dist/index.js","../packages/core/src/extensions/Blocks/nodes/BlockContent/TableBlockContent/TableBlockContent.ts","../node_modules/@tiptap/extension-table-row/dist/index.js","../packages/core/src/extensions/Blocks/nodes/BlockContent/TableBlockContent/TableRowBlockContent.ts","../node_modules/@tiptap/extension-table-cell/dist/index.js","../packages/core/src/extensions/Blocks/nodes/BlockContent/TableBlockContent/TableCellKeyboardShortcuts.ts","../packages/core/src/extensions/Blocks/nodes/BlockContent/TableBlockContent/TableCellBlockContent.ts","../node_modules/@tiptap/extension-table-header/dist/index.js","../packages/core/src/extensions/Blocks/nodes/BlockContent/TableBlockContent/TableHeaderBlockContent.ts","../packages/core/src/extensions/Blocks/api/defaultBlocks.ts","../packages/core/src/extensions/FormattingToolbar/FormattingToolbarPlugin.ts","../packages/core/src/extensions/HyperlinkToolbar/HyperlinkToolbarPlugin.ts","../packages/core/src/extensions/TableToolbar/TableToolbarPlugin.ts","../packages/core/src/extensions/SideMenu/MultipleNodeSelection.ts","../packages/core/src/extensions/SideMenu/SideMenuPlugin.ts","../packages/core/src/extensions/SlashMenu/defaultSlashMenuItems.ts","../packages/core/src/BlockNoteEditor.ts","../packages/core/src/extensions/Blocks/nodes/BlockContent/ImageBlockContent/uploadToTmpFilesDotOrg_DEV_ONLY.ts"],"sourcesContent":["// ::- Persistent data structure representing an ordered mapping from\n// strings to values, with some convenient update methods.\nfunction OrderedMap(content) {\n  this.content = content;\n}\n\nOrderedMap.prototype = {\n  constructor: OrderedMap,\n\n  find: function(key) {\n    for (var i = 0; i < this.content.length; i += 2)\n      if (this.content[i] === key) return i\n    return -1\n  },\n\n  // :: (string) → ?any\n  // Retrieve the value stored under `key`, or return undefined when\n  // no such key exists.\n  get: function(key) {\n    var found = this.find(key);\n    return found == -1 ? undefined : this.content[found + 1]\n  },\n\n  // :: (string, any, ?string) → OrderedMap\n  // Create a new map by replacing the value of `key` with a new\n  // value, or adding a binding to the end of the map. If `newKey` is\n  // given, the key of the binding will be replaced with that key.\n  update: function(key, value, newKey) {\n    var self = newKey && newKey != key ? this.remove(newKey) : this;\n    var found = self.find(key), content = self.content.slice();\n    if (found == -1) {\n      content.push(newKey || key, value);\n    } else {\n      content[found + 1] = value;\n      if (newKey) content[found] = newKey;\n    }\n    return new OrderedMap(content)\n  },\n\n  // :: (string) → OrderedMap\n  // Return a map with the given key removed, if it existed.\n  remove: function(key) {\n    var found = this.find(key);\n    if (found == -1) return this\n    var content = this.content.slice();\n    content.splice(found, 2);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, any) → OrderedMap\n  // Add a new key to the start of the map.\n  addToStart: function(key, value) {\n    return new OrderedMap([key, value].concat(this.remove(key).content))\n  },\n\n  // :: (string, any) → OrderedMap\n  // Add a new key to the end of the map.\n  addToEnd: function(key, value) {\n    var content = this.remove(key).content.slice();\n    content.push(key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, string, any) → OrderedMap\n  // Add a key after the given key. If `place` is not found, the new\n  // key is added to the end.\n  addBefore: function(place, key, value) {\n    var without = this.remove(key), content = without.content.slice();\n    var found = without.find(place);\n    content.splice(found == -1 ? content.length : found, 0, key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: ((key: string, value: any))\n  // Call the given function for each key/value pair in the map, in\n  // order.\n  forEach: function(f) {\n    for (var i = 0; i < this.content.length; i += 2)\n      f(this.content[i], this.content[i + 1]);\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a new map by prepending the keys in this map that don't\n  // appear in `map` before the keys in `map`.\n  prepend: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(map.content.concat(this.subtract(map).content))\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a new map by appending the keys in this map that don't\n  // appear in `map` after the keys in `map`.\n  append: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(this.subtract(map).content.concat(map.content))\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a map containing all the keys in this map that don't\n  // appear in `map`.\n  subtract: function(map) {\n    var result = this;\n    map = OrderedMap.from(map);\n    for (var i = 0; i < map.content.length; i += 2)\n      result = result.remove(map.content[i]);\n    return result\n  },\n\n  // :: () → Object\n  // Turn ordered map into a plain object.\n  toObject: function() {\n    var result = {};\n    this.forEach(function(key, value) { result[key] = value; });\n    return result\n  },\n\n  // :: number\n  // The amount of keys in this map.\n  get size() {\n    return this.content.length >> 1\n  }\n};\n\n// :: (?union<Object, OrderedMap>) → OrderedMap\n// Return a map with the given content. If null, create an empty\n// map. If given an ordered map, return that map itself. If given an\n// object, create a map from the object's properties.\nOrderedMap.from = function(value) {\n  if (value instanceof OrderedMap) return value\n  var content = [];\n  if (value) for (var prop in value) content.push(prop, value[prop]);\n  return new OrderedMap(content)\n};\n\nexport default OrderedMap;\n","import OrderedMap from 'orderedmap';\n\nfunction findDiffStart(a, b, pos) {\n    for (let i = 0;; i++) {\n        if (i == a.childCount || i == b.childCount)\n            return a.childCount == b.childCount ? null : pos;\n        let childA = a.child(i), childB = b.child(i);\n        if (childA == childB) {\n            pos += childA.nodeSize;\n            continue;\n        }\n        if (!childA.sameMarkup(childB))\n            return pos;\n        if (childA.isText && childA.text != childB.text) {\n            for (let j = 0; childA.text[j] == childB.text[j]; j++)\n                pos++;\n            return pos;\n        }\n        if (childA.content.size || childB.content.size) {\n            let inner = findDiffStart(childA.content, childB.content, pos + 1);\n            if (inner != null)\n                return inner;\n        }\n        pos += childA.nodeSize;\n    }\n}\nfunction findDiffEnd(a, b, posA, posB) {\n    for (let iA = a.childCount, iB = b.childCount;;) {\n        if (iA == 0 || iB == 0)\n            return iA == iB ? null : { a: posA, b: posB };\n        let childA = a.child(--iA), childB = b.child(--iB), size = childA.nodeSize;\n        if (childA == childB) {\n            posA -= size;\n            posB -= size;\n            continue;\n        }\n        if (!childA.sameMarkup(childB))\n            return { a: posA, b: posB };\n        if (childA.isText && childA.text != childB.text) {\n            let same = 0, minSize = Math.min(childA.text.length, childB.text.length);\n            while (same < minSize && childA.text[childA.text.length - same - 1] == childB.text[childB.text.length - same - 1]) {\n                same++;\n                posA--;\n                posB--;\n            }\n            return { a: posA, b: posB };\n        }\n        if (childA.content.size || childB.content.size) {\n            let inner = findDiffEnd(childA.content, childB.content, posA - 1, posB - 1);\n            if (inner)\n                return inner;\n        }\n        posA -= size;\n        posB -= size;\n    }\n}\n\n/**\nA fragment represents a node's collection of child nodes.\n\nLike nodes, fragments are persistent data structures, and you\nshould not mutate them or their content. Rather, you create new\ninstances whenever needed. The API tries to make this easy.\n*/\nclass Fragment {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    content, size) {\n        this.content = content;\n        this.size = size || 0;\n        if (size == null)\n            for (let i = 0; i < content.length; i++)\n                this.size += content[i].nodeSize;\n    }\n    /**\n    Invoke a callback for all descendant nodes between the given two\n    positions (relative to start of this fragment). Doesn't descend\n    into a node when the callback returns `false`.\n    */\n    nodesBetween(from, to, f, nodeStart = 0, parent) {\n        for (let i = 0, pos = 0; pos < to; i++) {\n            let child = this.content[i], end = pos + child.nodeSize;\n            if (end > from && f(child, nodeStart + pos, parent || null, i) !== false && child.content.size) {\n                let start = pos + 1;\n                child.nodesBetween(Math.max(0, from - start), Math.min(child.content.size, to - start), f, nodeStart + start);\n            }\n            pos = end;\n        }\n    }\n    /**\n    Call the given callback for every descendant node. `pos` will be\n    relative to the start of the fragment. The callback may return\n    `false` to prevent traversal of a given node's children.\n    */\n    descendants(f) {\n        this.nodesBetween(0, this.size, f);\n    }\n    /**\n    Extract the text between `from` and `to`. See the same method on\n    [`Node`](https://prosemirror.net/docs/ref/#model.Node.textBetween).\n    */\n    textBetween(from, to, blockSeparator, leafText) {\n        let text = \"\", separated = true;\n        this.nodesBetween(from, to, (node, pos) => {\n            if (node.isText) {\n                text += node.text.slice(Math.max(from, pos) - pos, to - pos);\n                separated = !blockSeparator;\n            }\n            else if (node.isLeaf) {\n                if (leafText) {\n                    text += typeof leafText === \"function\" ? leafText(node) : leafText;\n                }\n                else if (node.type.spec.leafText) {\n                    text += node.type.spec.leafText(node);\n                }\n                separated = !blockSeparator;\n            }\n            else if (!separated && node.isBlock) {\n                text += blockSeparator;\n                separated = true;\n            }\n        }, 0);\n        return text;\n    }\n    /**\n    Create a new fragment containing the combined content of this\n    fragment and the other.\n    */\n    append(other) {\n        if (!other.size)\n            return this;\n        if (!this.size)\n            return other;\n        let last = this.lastChild, first = other.firstChild, content = this.content.slice(), i = 0;\n        if (last.isText && last.sameMarkup(first)) {\n            content[content.length - 1] = last.withText(last.text + first.text);\n            i = 1;\n        }\n        for (; i < other.content.length; i++)\n            content.push(other.content[i]);\n        return new Fragment(content, this.size + other.size);\n    }\n    /**\n    Cut out the sub-fragment between the two given positions.\n    */\n    cut(from, to = this.size) {\n        if (from == 0 && to == this.size)\n            return this;\n        let result = [], size = 0;\n        if (to > from)\n            for (let i = 0, pos = 0; pos < to; i++) {\n                let child = this.content[i], end = pos + child.nodeSize;\n                if (end > from) {\n                    if (pos < from || end > to) {\n                        if (child.isText)\n                            child = child.cut(Math.max(0, from - pos), Math.min(child.text.length, to - pos));\n                        else\n                            child = child.cut(Math.max(0, from - pos - 1), Math.min(child.content.size, to - pos - 1));\n                    }\n                    result.push(child);\n                    size += child.nodeSize;\n                }\n                pos = end;\n            }\n        return new Fragment(result, size);\n    }\n    /**\n    @internal\n    */\n    cutByIndex(from, to) {\n        if (from == to)\n            return Fragment.empty;\n        if (from == 0 && to == this.content.length)\n            return this;\n        return new Fragment(this.content.slice(from, to));\n    }\n    /**\n    Create a new fragment in which the node at the given index is\n    replaced by the given node.\n    */\n    replaceChild(index, node) {\n        let current = this.content[index];\n        if (current == node)\n            return this;\n        let copy = this.content.slice();\n        let size = this.size + node.nodeSize - current.nodeSize;\n        copy[index] = node;\n        return new Fragment(copy, size);\n    }\n    /**\n    Create a new fragment by prepending the given node to this\n    fragment.\n    */\n    addToStart(node) {\n        return new Fragment([node].concat(this.content), this.size + node.nodeSize);\n    }\n    /**\n    Create a new fragment by appending the given node to this\n    fragment.\n    */\n    addToEnd(node) {\n        return new Fragment(this.content.concat(node), this.size + node.nodeSize);\n    }\n    /**\n    Compare this fragment to another one.\n    */\n    eq(other) {\n        if (this.content.length != other.content.length)\n            return false;\n        for (let i = 0; i < this.content.length; i++)\n            if (!this.content[i].eq(other.content[i]))\n                return false;\n        return true;\n    }\n    /**\n    The first child of the fragment, or `null` if it is empty.\n    */\n    get firstChild() { return this.content.length ? this.content[0] : null; }\n    /**\n    The last child of the fragment, or `null` if it is empty.\n    */\n    get lastChild() { return this.content.length ? this.content[this.content.length - 1] : null; }\n    /**\n    The number of child nodes in this fragment.\n    */\n    get childCount() { return this.content.length; }\n    /**\n    Get the child node at the given index. Raise an error when the\n    index is out of range.\n    */\n    child(index) {\n        let found = this.content[index];\n        if (!found)\n            throw new RangeError(\"Index \" + index + \" out of range for \" + this);\n        return found;\n    }\n    /**\n    Get the child node at the given index, if it exists.\n    */\n    maybeChild(index) {\n        return this.content[index] || null;\n    }\n    /**\n    Call `f` for every child node, passing the node, its offset\n    into this parent node, and its index.\n    */\n    forEach(f) {\n        for (let i = 0, p = 0; i < this.content.length; i++) {\n            let child = this.content[i];\n            f(child, p, i);\n            p += child.nodeSize;\n        }\n    }\n    /**\n    Find the first position at which this fragment and another\n    fragment differ, or `null` if they are the same.\n    */\n    findDiffStart(other, pos = 0) {\n        return findDiffStart(this, other, pos);\n    }\n    /**\n    Find the first position, searching from the end, at which this\n    fragment and the given fragment differ, or `null` if they are\n    the same. Since this position will not be the same in both\n    nodes, an object with two separate positions is returned.\n    */\n    findDiffEnd(other, pos = this.size, otherPos = other.size) {\n        return findDiffEnd(this, other, pos, otherPos);\n    }\n    /**\n    Find the index and inner offset corresponding to a given relative\n    position in this fragment. The result object will be reused\n    (overwritten) the next time the function is called. (Not public.)\n    */\n    findIndex(pos, round = -1) {\n        if (pos == 0)\n            return retIndex(0, pos);\n        if (pos == this.size)\n            return retIndex(this.content.length, pos);\n        if (pos > this.size || pos < 0)\n            throw new RangeError(`Position ${pos} outside of fragment (${this})`);\n        for (let i = 0, curPos = 0;; i++) {\n            let cur = this.child(i), end = curPos + cur.nodeSize;\n            if (end >= pos) {\n                if (end == pos || round > 0)\n                    return retIndex(i + 1, end);\n                return retIndex(i, curPos);\n            }\n            curPos = end;\n        }\n    }\n    /**\n    Return a debugging string that describes this fragment.\n    */\n    toString() { return \"<\" + this.toStringInner() + \">\"; }\n    /**\n    @internal\n    */\n    toStringInner() { return this.content.join(\", \"); }\n    /**\n    Create a JSON-serializeable representation of this fragment.\n    */\n    toJSON() {\n        return this.content.length ? this.content.map(n => n.toJSON()) : null;\n    }\n    /**\n    Deserialize a fragment from its JSON representation.\n    */\n    static fromJSON(schema, value) {\n        if (!value)\n            return Fragment.empty;\n        if (!Array.isArray(value))\n            throw new RangeError(\"Invalid input for Fragment.fromJSON\");\n        return new Fragment(value.map(schema.nodeFromJSON));\n    }\n    /**\n    Build a fragment from an array of nodes. Ensures that adjacent\n    text nodes with the same marks are joined together.\n    */\n    static fromArray(array) {\n        if (!array.length)\n            return Fragment.empty;\n        let joined, size = 0;\n        for (let i = 0; i < array.length; i++) {\n            let node = array[i];\n            size += node.nodeSize;\n            if (i && node.isText && array[i - 1].sameMarkup(node)) {\n                if (!joined)\n                    joined = array.slice(0, i);\n                joined[joined.length - 1] = node\n                    .withText(joined[joined.length - 1].text + node.text);\n            }\n            else if (joined) {\n                joined.push(node);\n            }\n        }\n        return new Fragment(joined || array, size);\n    }\n    /**\n    Create a fragment from something that can be interpreted as a\n    set of nodes. For `null`, it returns the empty fragment. For a\n    fragment, the fragment itself. For a node or array of nodes, a\n    fragment containing those nodes.\n    */\n    static from(nodes) {\n        if (!nodes)\n            return Fragment.empty;\n        if (nodes instanceof Fragment)\n            return nodes;\n        if (Array.isArray(nodes))\n            return this.fromArray(nodes);\n        if (nodes.attrs)\n            return new Fragment([nodes], nodes.nodeSize);\n        throw new RangeError(\"Can not convert \" + nodes + \" to a Fragment\" +\n            (nodes.nodesBetween ? \" (looks like multiple versions of prosemirror-model were loaded)\" : \"\"));\n    }\n}\n/**\nAn empty fragment. Intended to be reused whenever a node doesn't\ncontain anything (rather than allocating a new empty fragment for\neach leaf node).\n*/\nFragment.empty = new Fragment([], 0);\nconst found = { index: 0, offset: 0 };\nfunction retIndex(index, offset) {\n    found.index = index;\n    found.offset = offset;\n    return found;\n}\n\nfunction compareDeep(a, b) {\n    if (a === b)\n        return true;\n    if (!(a && typeof a == \"object\") ||\n        !(b && typeof b == \"object\"))\n        return false;\n    let array = Array.isArray(a);\n    if (Array.isArray(b) != array)\n        return false;\n    if (array) {\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++)\n            if (!compareDeep(a[i], b[i]))\n                return false;\n    }\n    else {\n        for (let p in a)\n            if (!(p in b) || !compareDeep(a[p], b[p]))\n                return false;\n        for (let p in b)\n            if (!(p in a))\n                return false;\n    }\n    return true;\n}\n\n/**\nA mark is a piece of information that can be attached to a node,\nsuch as it being emphasized, in code font, or a link. It has a\ntype and optionally a set of attributes that provide further\ninformation (such as the target of the link). Marks are created\nthrough a `Schema`, which controls which types exist and which\nattributes they have.\n*/\nclass Mark {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The type of this mark.\n    */\n    type, \n    /**\n    The attributes associated with this mark.\n    */\n    attrs) {\n        this.type = type;\n        this.attrs = attrs;\n    }\n    /**\n    Given a set of marks, create a new set which contains this one as\n    well, in the right position. If this mark is already in the set,\n    the set itself is returned. If any marks that are set to be\n    [exclusive](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) with this mark are present,\n    those are replaced by this one.\n    */\n    addToSet(set) {\n        let copy, placed = false;\n        for (let i = 0; i < set.length; i++) {\n            let other = set[i];\n            if (this.eq(other))\n                return set;\n            if (this.type.excludes(other.type)) {\n                if (!copy)\n                    copy = set.slice(0, i);\n            }\n            else if (other.type.excludes(this.type)) {\n                return set;\n            }\n            else {\n                if (!placed && other.type.rank > this.type.rank) {\n                    if (!copy)\n                        copy = set.slice(0, i);\n                    copy.push(this);\n                    placed = true;\n                }\n                if (copy)\n                    copy.push(other);\n            }\n        }\n        if (!copy)\n            copy = set.slice();\n        if (!placed)\n            copy.push(this);\n        return copy;\n    }\n    /**\n    Remove this mark from the given set, returning a new set. If this\n    mark is not in the set, the set itself is returned.\n    */\n    removeFromSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (this.eq(set[i]))\n                return set.slice(0, i).concat(set.slice(i + 1));\n        return set;\n    }\n    /**\n    Test whether this mark is in the given set of marks.\n    */\n    isInSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (this.eq(set[i]))\n                return true;\n        return false;\n    }\n    /**\n    Test whether this mark has the same type and attributes as\n    another mark.\n    */\n    eq(other) {\n        return this == other ||\n            (this.type == other.type && compareDeep(this.attrs, other.attrs));\n    }\n    /**\n    Convert this mark to a JSON-serializeable representation.\n    */\n    toJSON() {\n        let obj = { type: this.type.name };\n        for (let _ in this.attrs) {\n            obj.attrs = this.attrs;\n            break;\n        }\n        return obj;\n    }\n    /**\n    Deserialize a mark from JSON.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            throw new RangeError(\"Invalid input for Mark.fromJSON\");\n        let type = schema.marks[json.type];\n        if (!type)\n            throw new RangeError(`There is no mark type ${json.type} in this schema`);\n        return type.create(json.attrs);\n    }\n    /**\n    Test whether two sets of marks are identical.\n    */\n    static sameSet(a, b) {\n        if (a == b)\n            return true;\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++)\n            if (!a[i].eq(b[i]))\n                return false;\n        return true;\n    }\n    /**\n    Create a properly sorted mark set from null, a single mark, or an\n    unsorted array of marks.\n    */\n    static setFrom(marks) {\n        if (!marks || Array.isArray(marks) && marks.length == 0)\n            return Mark.none;\n        if (marks instanceof Mark)\n            return [marks];\n        let copy = marks.slice();\n        copy.sort((a, b) => a.type.rank - b.type.rank);\n        return copy;\n    }\n}\n/**\nThe empty set of marks.\n*/\nMark.none = [];\n\n/**\nError type raised by [`Node.replace`](https://prosemirror.net/docs/ref/#model.Node.replace) when\ngiven an invalid replacement.\n*/\nclass ReplaceError extends Error {\n}\n/*\nReplaceError = function(this: any, message: string) {\n  let err = Error.call(this, message)\n  ;(err as any).__proto__ = ReplaceError.prototype\n  return err\n} as any\n\nReplaceError.prototype = Object.create(Error.prototype)\nReplaceError.prototype.constructor = ReplaceError\nReplaceError.prototype.name = \"ReplaceError\"\n*/\n/**\nA slice represents a piece cut out of a larger document. It\nstores not only a fragment, but also the depth up to which nodes on\nboth side are ‘open’ (cut through).\n*/\nclass Slice {\n    /**\n    Create a slice. When specifying a non-zero open depth, you must\n    make sure that there are nodes of at least that depth at the\n    appropriate side of the fragment—i.e. if the fragment is an\n    empty paragraph node, `openStart` and `openEnd` can't be greater\n    than 1.\n    \n    It is not necessary for the content of open nodes to conform to\n    the schema's content constraints, though it should be a valid\n    start/end/middle for such a node, depending on which sides are\n    open.\n    */\n    constructor(\n    /**\n    The slice's content.\n    */\n    content, \n    /**\n    The open depth at the start of the fragment.\n    */\n    openStart, \n    /**\n    The open depth at the end.\n    */\n    openEnd) {\n        this.content = content;\n        this.openStart = openStart;\n        this.openEnd = openEnd;\n    }\n    /**\n    The size this slice would add when inserted into a document.\n    */\n    get size() {\n        return this.content.size - this.openStart - this.openEnd;\n    }\n    /**\n    @internal\n    */\n    insertAt(pos, fragment) {\n        let content = insertInto(this.content, pos + this.openStart, fragment);\n        return content && new Slice(content, this.openStart, this.openEnd);\n    }\n    /**\n    @internal\n    */\n    removeBetween(from, to) {\n        return new Slice(removeRange(this.content, from + this.openStart, to + this.openStart), this.openStart, this.openEnd);\n    }\n    /**\n    Tests whether this slice is equal to another slice.\n    */\n    eq(other) {\n        return this.content.eq(other.content) && this.openStart == other.openStart && this.openEnd == other.openEnd;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return this.content + \"(\" + this.openStart + \",\" + this.openEnd + \")\";\n    }\n    /**\n    Convert a slice to a JSON-serializable representation.\n    */\n    toJSON() {\n        if (!this.content.size)\n            return null;\n        let json = { content: this.content.toJSON() };\n        if (this.openStart > 0)\n            json.openStart = this.openStart;\n        if (this.openEnd > 0)\n            json.openEnd = this.openEnd;\n        return json;\n    }\n    /**\n    Deserialize a slice from its JSON representation.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            return Slice.empty;\n        let openStart = json.openStart || 0, openEnd = json.openEnd || 0;\n        if (typeof openStart != \"number\" || typeof openEnd != \"number\")\n            throw new RangeError(\"Invalid input for Slice.fromJSON\");\n        return new Slice(Fragment.fromJSON(schema, json.content), openStart, openEnd);\n    }\n    /**\n    Create a slice from a fragment by taking the maximum possible\n    open value on both side of the fragment.\n    */\n    static maxOpen(fragment, openIsolating = true) {\n        let openStart = 0, openEnd = 0;\n        for (let n = fragment.firstChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.firstChild)\n            openStart++;\n        for (let n = fragment.lastChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.lastChild)\n            openEnd++;\n        return new Slice(fragment, openStart, openEnd);\n    }\n}\n/**\nThe empty slice.\n*/\nSlice.empty = new Slice(Fragment.empty, 0, 0);\nfunction removeRange(content, from, to) {\n    let { index, offset } = content.findIndex(from), child = content.maybeChild(index);\n    let { index: indexTo, offset: offsetTo } = content.findIndex(to);\n    if (offset == from || child.isText) {\n        if (offsetTo != to && !content.child(indexTo).isText)\n            throw new RangeError(\"Removing non-flat range\");\n        return content.cut(0, from).append(content.cut(to));\n    }\n    if (index != indexTo)\n        throw new RangeError(\"Removing non-flat range\");\n    return content.replaceChild(index, child.copy(removeRange(child.content, from - offset - 1, to - offset - 1)));\n}\nfunction insertInto(content, dist, insert, parent) {\n    let { index, offset } = content.findIndex(dist), child = content.maybeChild(index);\n    if (offset == dist || child.isText) {\n        if (parent && !parent.canReplace(index, index, insert))\n            return null;\n        return content.cut(0, dist).append(insert).append(content.cut(dist));\n    }\n    let inner = insertInto(child.content, dist - offset - 1, insert);\n    return inner && content.replaceChild(index, child.copy(inner));\n}\nfunction replace($from, $to, slice) {\n    if (slice.openStart > $from.depth)\n        throw new ReplaceError(\"Inserted content deeper than insertion position\");\n    if ($from.depth - slice.openStart != $to.depth - slice.openEnd)\n        throw new ReplaceError(\"Inconsistent open depths\");\n    return replaceOuter($from, $to, slice, 0);\n}\nfunction replaceOuter($from, $to, slice, depth) {\n    let index = $from.index(depth), node = $from.node(depth);\n    if (index == $to.index(depth) && depth < $from.depth - slice.openStart) {\n        let inner = replaceOuter($from, $to, slice, depth + 1);\n        return node.copy(node.content.replaceChild(index, inner));\n    }\n    else if (!slice.content.size) {\n        return close(node, replaceTwoWay($from, $to, depth));\n    }\n    else if (!slice.openStart && !slice.openEnd && $from.depth == depth && $to.depth == depth) { // Simple, flat case\n        let parent = $from.parent, content = parent.content;\n        return close(parent, content.cut(0, $from.parentOffset).append(slice.content).append(content.cut($to.parentOffset)));\n    }\n    else {\n        let { start, end } = prepareSliceForReplace(slice, $from);\n        return close(node, replaceThreeWay($from, start, end, $to, depth));\n    }\n}\nfunction checkJoin(main, sub) {\n    if (!sub.type.compatibleContent(main.type))\n        throw new ReplaceError(\"Cannot join \" + sub.type.name + \" onto \" + main.type.name);\n}\nfunction joinable($before, $after, depth) {\n    let node = $before.node(depth);\n    checkJoin(node, $after.node(depth));\n    return node;\n}\nfunction addNode(child, target) {\n    let last = target.length - 1;\n    if (last >= 0 && child.isText && child.sameMarkup(target[last]))\n        target[last] = child.withText(target[last].text + child.text);\n    else\n        target.push(child);\n}\nfunction addRange($start, $end, depth, target) {\n    let node = ($end || $start).node(depth);\n    let startIndex = 0, endIndex = $end ? $end.index(depth) : node.childCount;\n    if ($start) {\n        startIndex = $start.index(depth);\n        if ($start.depth > depth) {\n            startIndex++;\n        }\n        else if ($start.textOffset) {\n            addNode($start.nodeAfter, target);\n            startIndex++;\n        }\n    }\n    for (let i = startIndex; i < endIndex; i++)\n        addNode(node.child(i), target);\n    if ($end && $end.depth == depth && $end.textOffset)\n        addNode($end.nodeBefore, target);\n}\nfunction close(node, content) {\n    node.type.checkContent(content);\n    return node.copy(content);\n}\nfunction replaceThreeWay($from, $start, $end, $to, depth) {\n    let openStart = $from.depth > depth && joinable($from, $start, depth + 1);\n    let openEnd = $to.depth > depth && joinable($end, $to, depth + 1);\n    let content = [];\n    addRange(null, $from, depth, content);\n    if (openStart && openEnd && $start.index(depth) == $end.index(depth)) {\n        checkJoin(openStart, openEnd);\n        addNode(close(openStart, replaceThreeWay($from, $start, $end, $to, depth + 1)), content);\n    }\n    else {\n        if (openStart)\n            addNode(close(openStart, replaceTwoWay($from, $start, depth + 1)), content);\n        addRange($start, $end, depth, content);\n        if (openEnd)\n            addNode(close(openEnd, replaceTwoWay($end, $to, depth + 1)), content);\n    }\n    addRange($to, null, depth, content);\n    return new Fragment(content);\n}\nfunction replaceTwoWay($from, $to, depth) {\n    let content = [];\n    addRange(null, $from, depth, content);\n    if ($from.depth > depth) {\n        let type = joinable($from, $to, depth + 1);\n        addNode(close(type, replaceTwoWay($from, $to, depth + 1)), content);\n    }\n    addRange($to, null, depth, content);\n    return new Fragment(content);\n}\nfunction prepareSliceForReplace(slice, $along) {\n    let extra = $along.depth - slice.openStart, parent = $along.node(extra);\n    let node = parent.copy(slice.content);\n    for (let i = extra - 1; i >= 0; i--)\n        node = $along.node(i).copy(Fragment.from(node));\n    return { start: node.resolveNoCache(slice.openStart + extra),\n        end: node.resolveNoCache(node.content.size - slice.openEnd - extra) };\n}\n\n/**\nYou can [_resolve_](https://prosemirror.net/docs/ref/#model.Node.resolve) a position to get more\ninformation about it. Objects of this class represent such a\nresolved position, providing various pieces of context\ninformation, and some helper methods.\n\nThroughout this interface, methods that take an optional `depth`\nparameter will interpret undefined as `this.depth` and negative\nnumbers as `this.depth + value`.\n*/\nclass ResolvedPos {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The position that was resolved.\n    */\n    pos, \n    /**\n    @internal\n    */\n    path, \n    /**\n    The offset this position has into its parent node.\n    */\n    parentOffset) {\n        this.pos = pos;\n        this.path = path;\n        this.parentOffset = parentOffset;\n        this.depth = path.length / 3 - 1;\n    }\n    /**\n    @internal\n    */\n    resolveDepth(val) {\n        if (val == null)\n            return this.depth;\n        if (val < 0)\n            return this.depth + val;\n        return val;\n    }\n    /**\n    The parent node that the position points into. Note that even if\n    a position points into a text node, that node is not considered\n    the parent—text nodes are ‘flat’ in this model, and have no content.\n    */\n    get parent() { return this.node(this.depth); }\n    /**\n    The root node in which the position was resolved.\n    */\n    get doc() { return this.node(0); }\n    /**\n    The ancestor node at the given level. `p.node(p.depth)` is the\n    same as `p.parent`.\n    */\n    node(depth) { return this.path[this.resolveDepth(depth) * 3]; }\n    /**\n    The index into the ancestor at the given level. If this points\n    at the 3rd node in the 2nd paragraph on the top level, for\n    example, `p.index(0)` is 1 and `p.index(1)` is 2.\n    */\n    index(depth) { return this.path[this.resolveDepth(depth) * 3 + 1]; }\n    /**\n    The index pointing after this position into the ancestor at the\n    given level.\n    */\n    indexAfter(depth) {\n        depth = this.resolveDepth(depth);\n        return this.index(depth) + (depth == this.depth && !this.textOffset ? 0 : 1);\n    }\n    /**\n    The (absolute) position at the start of the node at the given\n    level.\n    */\n    start(depth) {\n        depth = this.resolveDepth(depth);\n        return depth == 0 ? 0 : this.path[depth * 3 - 1] + 1;\n    }\n    /**\n    The (absolute) position at the end of the node at the given\n    level.\n    */\n    end(depth) {\n        depth = this.resolveDepth(depth);\n        return this.start(depth) + this.node(depth).content.size;\n    }\n    /**\n    The (absolute) position directly before the wrapping node at the\n    given level, or, when `depth` is `this.depth + 1`, the original\n    position.\n    */\n    before(depth) {\n        depth = this.resolveDepth(depth);\n        if (!depth)\n            throw new RangeError(\"There is no position before the top-level node\");\n        return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1];\n    }\n    /**\n    The (absolute) position directly after the wrapping node at the\n    given level, or the original position when `depth` is `this.depth + 1`.\n    */\n    after(depth) {\n        depth = this.resolveDepth(depth);\n        if (!depth)\n            throw new RangeError(\"There is no position after the top-level node\");\n        return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1] + this.path[depth * 3].nodeSize;\n    }\n    /**\n    When this position points into a text node, this returns the\n    distance between the position and the start of the text node.\n    Will be zero for positions that point between nodes.\n    */\n    get textOffset() { return this.pos - this.path[this.path.length - 1]; }\n    /**\n    Get the node directly after the position, if any. If the position\n    points into a text node, only the part of that node after the\n    position is returned.\n    */\n    get nodeAfter() {\n        let parent = this.parent, index = this.index(this.depth);\n        if (index == parent.childCount)\n            return null;\n        let dOff = this.pos - this.path[this.path.length - 1], child = parent.child(index);\n        return dOff ? parent.child(index).cut(dOff) : child;\n    }\n    /**\n    Get the node directly before the position, if any. If the\n    position points into a text node, only the part of that node\n    before the position is returned.\n    */\n    get nodeBefore() {\n        let index = this.index(this.depth);\n        let dOff = this.pos - this.path[this.path.length - 1];\n        if (dOff)\n            return this.parent.child(index).cut(0, dOff);\n        return index == 0 ? null : this.parent.child(index - 1);\n    }\n    /**\n    Get the position at the given index in the parent node at the\n    given depth (which defaults to `this.depth`).\n    */\n    posAtIndex(index, depth) {\n        depth = this.resolveDepth(depth);\n        let node = this.path[depth * 3], pos = depth == 0 ? 0 : this.path[depth * 3 - 1] + 1;\n        for (let i = 0; i < index; i++)\n            pos += node.child(i).nodeSize;\n        return pos;\n    }\n    /**\n    Get the marks at this position, factoring in the surrounding\n    marks' [`inclusive`](https://prosemirror.net/docs/ref/#model.MarkSpec.inclusive) property. If the\n    position is at the start of a non-empty node, the marks of the\n    node after it (if any) are returned.\n    */\n    marks() {\n        let parent = this.parent, index = this.index();\n        // In an empty parent, return the empty array\n        if (parent.content.size == 0)\n            return Mark.none;\n        // When inside a text node, just return the text node's marks\n        if (this.textOffset)\n            return parent.child(index).marks;\n        let main = parent.maybeChild(index - 1), other = parent.maybeChild(index);\n        // If the `after` flag is true of there is no node before, make\n        // the node after this position the main reference.\n        if (!main) {\n            let tmp = main;\n            main = other;\n            other = tmp;\n        }\n        // Use all marks in the main node, except those that have\n        // `inclusive` set to false and are not present in the other node.\n        let marks = main.marks;\n        for (var i = 0; i < marks.length; i++)\n            if (marks[i].type.spec.inclusive === false && (!other || !marks[i].isInSet(other.marks)))\n                marks = marks[i--].removeFromSet(marks);\n        return marks;\n    }\n    /**\n    Get the marks after the current position, if any, except those\n    that are non-inclusive and not present at position `$end`. This\n    is mostly useful for getting the set of marks to preserve after a\n    deletion. Will return `null` if this position is at the end of\n    its parent node or its parent node isn't a textblock (in which\n    case no marks should be preserved).\n    */\n    marksAcross($end) {\n        let after = this.parent.maybeChild(this.index());\n        if (!after || !after.isInline)\n            return null;\n        let marks = after.marks, next = $end.parent.maybeChild($end.index());\n        for (var i = 0; i < marks.length; i++)\n            if (marks[i].type.spec.inclusive === false && (!next || !marks[i].isInSet(next.marks)))\n                marks = marks[i--].removeFromSet(marks);\n        return marks;\n    }\n    /**\n    The depth up to which this position and the given (non-resolved)\n    position share the same parent nodes.\n    */\n    sharedDepth(pos) {\n        for (let depth = this.depth; depth > 0; depth--)\n            if (this.start(depth) <= pos && this.end(depth) >= pos)\n                return depth;\n        return 0;\n    }\n    /**\n    Returns a range based on the place where this position and the\n    given position diverge around block content. If both point into\n    the same textblock, for example, a range around that textblock\n    will be returned. If they point into different blocks, the range\n    around those blocks in their shared ancestor is returned. You can\n    pass in an optional predicate that will be called with a parent\n    node to see if a range into that parent is acceptable.\n    */\n    blockRange(other = this, pred) {\n        if (other.pos < this.pos)\n            return other.blockRange(this);\n        for (let d = this.depth - (this.parent.inlineContent || this.pos == other.pos ? 1 : 0); d >= 0; d--)\n            if (other.pos <= this.end(d) && (!pred || pred(this.node(d))))\n                return new NodeRange(this, other, d);\n        return null;\n    }\n    /**\n    Query whether the given position shares the same parent node.\n    */\n    sameParent(other) {\n        return this.pos - this.parentOffset == other.pos - other.parentOffset;\n    }\n    /**\n    Return the greater of this and the given position.\n    */\n    max(other) {\n        return other.pos > this.pos ? other : this;\n    }\n    /**\n    Return the smaller of this and the given position.\n    */\n    min(other) {\n        return other.pos < this.pos ? other : this;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let str = \"\";\n        for (let i = 1; i <= this.depth; i++)\n            str += (str ? \"/\" : \"\") + this.node(i).type.name + \"_\" + this.index(i - 1);\n        return str + \":\" + this.parentOffset;\n    }\n    /**\n    @internal\n    */\n    static resolve(doc, pos) {\n        if (!(pos >= 0 && pos <= doc.content.size))\n            throw new RangeError(\"Position \" + pos + \" out of range\");\n        let path = [];\n        let start = 0, parentOffset = pos;\n        for (let node = doc;;) {\n            let { index, offset } = node.content.findIndex(parentOffset);\n            let rem = parentOffset - offset;\n            path.push(node, index, start + offset);\n            if (!rem)\n                break;\n            node = node.child(index);\n            if (node.isText)\n                break;\n            parentOffset = rem - 1;\n            start += offset + 1;\n        }\n        return new ResolvedPos(pos, path, parentOffset);\n    }\n    /**\n    @internal\n    */\n    static resolveCached(doc, pos) {\n        for (let i = 0; i < resolveCache.length; i++) {\n            let cached = resolveCache[i];\n            if (cached.pos == pos && cached.doc == doc)\n                return cached;\n        }\n        let result = resolveCache[resolveCachePos] = ResolvedPos.resolve(doc, pos);\n        resolveCachePos = (resolveCachePos + 1) % resolveCacheSize;\n        return result;\n    }\n}\nlet resolveCache = [], resolveCachePos = 0, resolveCacheSize = 12;\n/**\nRepresents a flat range of content, i.e. one that starts and\nends in the same node.\n*/\nclass NodeRange {\n    /**\n    Construct a node range. `$from` and `$to` should point into the\n    same node until at least the given `depth`, since a node range\n    denotes an adjacent set of nodes in a single parent node.\n    */\n    constructor(\n    /**\n    A resolved position along the start of the content. May have a\n    `depth` greater than this object's `depth` property, since\n    these are the positions that were used to compute the range,\n    not re-resolved positions directly at its boundaries.\n    */\n    $from, \n    /**\n    A position along the end of the content. See\n    caveat for [`$from`](https://prosemirror.net/docs/ref/#model.NodeRange.$from).\n    */\n    $to, \n    /**\n    The depth of the node that this range points into.\n    */\n    depth) {\n        this.$from = $from;\n        this.$to = $to;\n        this.depth = depth;\n    }\n    /**\n    The position at the start of the range.\n    */\n    get start() { return this.$from.before(this.depth + 1); }\n    /**\n    The position at the end of the range.\n    */\n    get end() { return this.$to.after(this.depth + 1); }\n    /**\n    The parent node that the range points into.\n    */\n    get parent() { return this.$from.node(this.depth); }\n    /**\n    The start index of the range in the parent node.\n    */\n    get startIndex() { return this.$from.index(this.depth); }\n    /**\n    The end index of the range in the parent node.\n    */\n    get endIndex() { return this.$to.indexAfter(this.depth); }\n}\n\nconst emptyAttrs = Object.create(null);\n/**\nThis class represents a node in the tree that makes up a\nProseMirror document. So a document is an instance of `Node`, with\nchildren that are also instances of `Node`.\n\nNodes are persistent data structures. Instead of changing them, you\ncreate new ones with the content you want. Old ones keep pointing\nat the old document shape. This is made cheaper by sharing\nstructure between the old and new data as much as possible, which a\ntree shape like this (without back pointers) makes easy.\n\n**Do not** directly mutate the properties of a `Node` object. See\n[the guide](/docs/guide/#doc) for more information.\n*/\nclass Node {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The type of node that this is.\n    */\n    type, \n    /**\n    An object mapping attribute names to values. The kind of\n    attributes allowed and required are\n    [determined](https://prosemirror.net/docs/ref/#model.NodeSpec.attrs) by the node type.\n    */\n    attrs, \n    // A fragment holding the node's children.\n    content, \n    /**\n    The marks (things like whether it is emphasized or part of a\n    link) applied to this node.\n    */\n    marks = Mark.none) {\n        this.type = type;\n        this.attrs = attrs;\n        this.marks = marks;\n        this.content = content || Fragment.empty;\n    }\n    /**\n    The size of this node, as defined by the integer-based [indexing\n    scheme](/docs/guide/#doc.indexing). For text nodes, this is the\n    amount of characters. For other leaf nodes, it is one. For\n    non-leaf nodes, it is the size of the content plus two (the\n    start and end token).\n    */\n    get nodeSize() { return this.isLeaf ? 1 : 2 + this.content.size; }\n    /**\n    The number of children that the node has.\n    */\n    get childCount() { return this.content.childCount; }\n    /**\n    Get the child node at the given index. Raises an error when the\n    index is out of range.\n    */\n    child(index) { return this.content.child(index); }\n    /**\n    Get the child node at the given index, if it exists.\n    */\n    maybeChild(index) { return this.content.maybeChild(index); }\n    /**\n    Call `f` for every child node, passing the node, its offset\n    into this parent node, and its index.\n    */\n    forEach(f) { this.content.forEach(f); }\n    /**\n    Invoke a callback for all descendant nodes recursively between\n    the given two positions that are relative to start of this\n    node's content. The callback is invoked with the node, its\n    parent-relative position, its parent node, and its child index.\n    When the callback returns false for a given node, that node's\n    children will not be recursed over. The last parameter can be\n    used to specify a starting position to count from.\n    */\n    nodesBetween(from, to, f, startPos = 0) {\n        this.content.nodesBetween(from, to, f, startPos, this);\n    }\n    /**\n    Call the given callback for every descendant node. Doesn't\n    descend into a node when the callback returns `false`.\n    */\n    descendants(f) {\n        this.nodesBetween(0, this.content.size, f);\n    }\n    /**\n    Concatenates all the text nodes found in this fragment and its\n    children.\n    */\n    get textContent() {\n        return (this.isLeaf && this.type.spec.leafText)\n            ? this.type.spec.leafText(this)\n            : this.textBetween(0, this.content.size, \"\");\n    }\n    /**\n    Get all text between positions `from` and `to`. When\n    `blockSeparator` is given, it will be inserted to separate text\n    from different block nodes. If `leafText` is given, it'll be\n    inserted for every non-text leaf node encountered, otherwise\n    [`leafText`](https://prosemirror.net/docs/ref/#model.NodeSpec^leafText) will be used.\n    */\n    textBetween(from, to, blockSeparator, leafText) {\n        return this.content.textBetween(from, to, blockSeparator, leafText);\n    }\n    /**\n    Returns this node's first child, or `null` if there are no\n    children.\n    */\n    get firstChild() { return this.content.firstChild; }\n    /**\n    Returns this node's last child, or `null` if there are no\n    children.\n    */\n    get lastChild() { return this.content.lastChild; }\n    /**\n    Test whether two nodes represent the same piece of document.\n    */\n    eq(other) {\n        return this == other || (this.sameMarkup(other) && this.content.eq(other.content));\n    }\n    /**\n    Compare the markup (type, attributes, and marks) of this node to\n    those of another. Returns `true` if both have the same markup.\n    */\n    sameMarkup(other) {\n        return this.hasMarkup(other.type, other.attrs, other.marks);\n    }\n    /**\n    Check whether this node's markup correspond to the given type,\n    attributes, and marks.\n    */\n    hasMarkup(type, attrs, marks) {\n        return this.type == type &&\n            compareDeep(this.attrs, attrs || type.defaultAttrs || emptyAttrs) &&\n            Mark.sameSet(this.marks, marks || Mark.none);\n    }\n    /**\n    Create a new node with the same markup as this node, containing\n    the given content (or empty, if no content is given).\n    */\n    copy(content = null) {\n        if (content == this.content)\n            return this;\n        return new Node(this.type, this.attrs, content, this.marks);\n    }\n    /**\n    Create a copy of this node, with the given set of marks instead\n    of the node's own marks.\n    */\n    mark(marks) {\n        return marks == this.marks ? this : new Node(this.type, this.attrs, this.content, marks);\n    }\n    /**\n    Create a copy of this node with only the content between the\n    given positions. If `to` is not given, it defaults to the end of\n    the node.\n    */\n    cut(from, to = this.content.size) {\n        if (from == 0 && to == this.content.size)\n            return this;\n        return this.copy(this.content.cut(from, to));\n    }\n    /**\n    Cut out the part of the document between the given positions, and\n    return it as a `Slice` object.\n    */\n    slice(from, to = this.content.size, includeParents = false) {\n        if (from == to)\n            return Slice.empty;\n        let $from = this.resolve(from), $to = this.resolve(to);\n        let depth = includeParents ? 0 : $from.sharedDepth(to);\n        let start = $from.start(depth), node = $from.node(depth);\n        let content = node.content.cut($from.pos - start, $to.pos - start);\n        return new Slice(content, $from.depth - depth, $to.depth - depth);\n    }\n    /**\n    Replace the part of the document between the given positions with\n    the given slice. The slice must 'fit', meaning its open sides\n    must be able to connect to the surrounding content, and its\n    content nodes must be valid children for the node they are placed\n    into. If any of this is violated, an error of type\n    [`ReplaceError`](https://prosemirror.net/docs/ref/#model.ReplaceError) is thrown.\n    */\n    replace(from, to, slice) {\n        return replace(this.resolve(from), this.resolve(to), slice);\n    }\n    /**\n    Find the node directly after the given position.\n    */\n    nodeAt(pos) {\n        for (let node = this;;) {\n            let { index, offset } = node.content.findIndex(pos);\n            node = node.maybeChild(index);\n            if (!node)\n                return null;\n            if (offset == pos || node.isText)\n                return node;\n            pos -= offset + 1;\n        }\n    }\n    /**\n    Find the (direct) child node after the given offset, if any,\n    and return it along with its index and offset relative to this\n    node.\n    */\n    childAfter(pos) {\n        let { index, offset } = this.content.findIndex(pos);\n        return { node: this.content.maybeChild(index), index, offset };\n    }\n    /**\n    Find the (direct) child node before the given offset, if any,\n    and return it along with its index and offset relative to this\n    node.\n    */\n    childBefore(pos) {\n        if (pos == 0)\n            return { node: null, index: 0, offset: 0 };\n        let { index, offset } = this.content.findIndex(pos);\n        if (offset < pos)\n            return { node: this.content.child(index), index, offset };\n        let node = this.content.child(index - 1);\n        return { node, index: index - 1, offset: offset - node.nodeSize };\n    }\n    /**\n    Resolve the given position in the document, returning an\n    [object](https://prosemirror.net/docs/ref/#model.ResolvedPos) with information about its context.\n    */\n    resolve(pos) { return ResolvedPos.resolveCached(this, pos); }\n    /**\n    @internal\n    */\n    resolveNoCache(pos) { return ResolvedPos.resolve(this, pos); }\n    /**\n    Test whether a given mark or mark type occurs in this document\n    between the two given positions.\n    */\n    rangeHasMark(from, to, type) {\n        let found = false;\n        if (to > from)\n            this.nodesBetween(from, to, node => {\n                if (type.isInSet(node.marks))\n                    found = true;\n                return !found;\n            });\n        return found;\n    }\n    /**\n    True when this is a block (non-inline node)\n    */\n    get isBlock() { return this.type.isBlock; }\n    /**\n    True when this is a textblock node, a block node with inline\n    content.\n    */\n    get isTextblock() { return this.type.isTextblock; }\n    /**\n    True when this node allows inline content.\n    */\n    get inlineContent() { return this.type.inlineContent; }\n    /**\n    True when this is an inline node (a text node or a node that can\n    appear among text).\n    */\n    get isInline() { return this.type.isInline; }\n    /**\n    True when this is a text node.\n    */\n    get isText() { return this.type.isText; }\n    /**\n    True when this is a leaf node.\n    */\n    get isLeaf() { return this.type.isLeaf; }\n    /**\n    True when this is an atom, i.e. when it does not have directly\n    editable content. This is usually the same as `isLeaf`, but can\n    be configured with the [`atom` property](https://prosemirror.net/docs/ref/#model.NodeSpec.atom)\n    on a node's spec (typically used when the node is displayed as\n    an uneditable [node view](https://prosemirror.net/docs/ref/#view.NodeView)).\n    */\n    get isAtom() { return this.type.isAtom; }\n    /**\n    Return a string representation of this node for debugging\n    purposes.\n    */\n    toString() {\n        if (this.type.spec.toDebugString)\n            return this.type.spec.toDebugString(this);\n        let name = this.type.name;\n        if (this.content.size)\n            name += \"(\" + this.content.toStringInner() + \")\";\n        return wrapMarks(this.marks, name);\n    }\n    /**\n    Get the content match in this node at the given index.\n    */\n    contentMatchAt(index) {\n        let match = this.type.contentMatch.matchFragment(this.content, 0, index);\n        if (!match)\n            throw new Error(\"Called contentMatchAt on a node with invalid content\");\n        return match;\n    }\n    /**\n    Test whether replacing the range between `from` and `to` (by\n    child index) with the given replacement fragment (which defaults\n    to the empty fragment) would leave the node's content valid. You\n    can optionally pass `start` and `end` indices into the\n    replacement fragment.\n    */\n    canReplace(from, to, replacement = Fragment.empty, start = 0, end = replacement.childCount) {\n        let one = this.contentMatchAt(from).matchFragment(replacement, start, end);\n        let two = one && one.matchFragment(this.content, to);\n        if (!two || !two.validEnd)\n            return false;\n        for (let i = start; i < end; i++)\n            if (!this.type.allowsMarks(replacement.child(i).marks))\n                return false;\n        return true;\n    }\n    /**\n    Test whether replacing the range `from` to `to` (by index) with\n    a node of the given type would leave the node's content valid.\n    */\n    canReplaceWith(from, to, type, marks) {\n        if (marks && !this.type.allowsMarks(marks))\n            return false;\n        let start = this.contentMatchAt(from).matchType(type);\n        let end = start && start.matchFragment(this.content, to);\n        return end ? end.validEnd : false;\n    }\n    /**\n    Test whether the given node's content could be appended to this\n    node. If that node is empty, this will only return true if there\n    is at least one node type that can appear in both nodes (to avoid\n    merging completely incompatible nodes).\n    */\n    canAppend(other) {\n        if (other.content.size)\n            return this.canReplace(this.childCount, this.childCount, other.content);\n        else\n            return this.type.compatibleContent(other.type);\n    }\n    /**\n    Check whether this node and its descendants conform to the\n    schema, and raise error when they do not.\n    */\n    check() {\n        this.type.checkContent(this.content);\n        let copy = Mark.none;\n        for (let i = 0; i < this.marks.length; i++)\n            copy = this.marks[i].addToSet(copy);\n        if (!Mark.sameSet(copy, this.marks))\n            throw new RangeError(`Invalid collection of marks for node ${this.type.name}: ${this.marks.map(m => m.type.name)}`);\n        this.content.forEach(node => node.check());\n    }\n    /**\n    Return a JSON-serializeable representation of this node.\n    */\n    toJSON() {\n        let obj = { type: this.type.name };\n        for (let _ in this.attrs) {\n            obj.attrs = this.attrs;\n            break;\n        }\n        if (this.content.size)\n            obj.content = this.content.toJSON();\n        if (this.marks.length)\n            obj.marks = this.marks.map(n => n.toJSON());\n        return obj;\n    }\n    /**\n    Deserialize a node from its JSON representation.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            throw new RangeError(\"Invalid input for Node.fromJSON\");\n        let marks = null;\n        if (json.marks) {\n            if (!Array.isArray(json.marks))\n                throw new RangeError(\"Invalid mark data for Node.fromJSON\");\n            marks = json.marks.map(schema.markFromJSON);\n        }\n        if (json.type == \"text\") {\n            if (typeof json.text != \"string\")\n                throw new RangeError(\"Invalid text node in JSON\");\n            return schema.text(json.text, marks);\n        }\n        let content = Fragment.fromJSON(schema, json.content);\n        return schema.nodeType(json.type).create(json.attrs, content, marks);\n    }\n}\nNode.prototype.text = undefined;\nclass TextNode extends Node {\n    /**\n    @internal\n    */\n    constructor(type, attrs, content, marks) {\n        super(type, attrs, null, marks);\n        if (!content)\n            throw new RangeError(\"Empty text nodes are not allowed\");\n        this.text = content;\n    }\n    toString() {\n        if (this.type.spec.toDebugString)\n            return this.type.spec.toDebugString(this);\n        return wrapMarks(this.marks, JSON.stringify(this.text));\n    }\n    get textContent() { return this.text; }\n    textBetween(from, to) { return this.text.slice(from, to); }\n    get nodeSize() { return this.text.length; }\n    mark(marks) {\n        return marks == this.marks ? this : new TextNode(this.type, this.attrs, this.text, marks);\n    }\n    withText(text) {\n        if (text == this.text)\n            return this;\n        return new TextNode(this.type, this.attrs, text, this.marks);\n    }\n    cut(from = 0, to = this.text.length) {\n        if (from == 0 && to == this.text.length)\n            return this;\n        return this.withText(this.text.slice(from, to));\n    }\n    eq(other) {\n        return this.sameMarkup(other) && this.text == other.text;\n    }\n    toJSON() {\n        let base = super.toJSON();\n        base.text = this.text;\n        return base;\n    }\n}\nfunction wrapMarks(marks, str) {\n    for (let i = marks.length - 1; i >= 0; i--)\n        str = marks[i].type.name + \"(\" + str + \")\";\n    return str;\n}\n\n/**\nInstances of this class represent a match state of a node type's\n[content expression](https://prosemirror.net/docs/ref/#model.NodeSpec.content), and can be used to\nfind out whether further content matches here, and whether a given\nposition is a valid end of the node.\n*/\nclass ContentMatch {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    True when this match state represents a valid end of the node.\n    */\n    validEnd) {\n        this.validEnd = validEnd;\n        /**\n        @internal\n        */\n        this.next = [];\n        /**\n        @internal\n        */\n        this.wrapCache = [];\n    }\n    /**\n    @internal\n    */\n    static parse(string, nodeTypes) {\n        let stream = new TokenStream(string, nodeTypes);\n        if (stream.next == null)\n            return ContentMatch.empty;\n        let expr = parseExpr(stream);\n        if (stream.next)\n            stream.err(\"Unexpected trailing text\");\n        let match = dfa(nfa(expr));\n        checkForDeadEnds(match, stream);\n        return match;\n    }\n    /**\n    Match a node type, returning a match after that node if\n    successful.\n    */\n    matchType(type) {\n        for (let i = 0; i < this.next.length; i++)\n            if (this.next[i].type == type)\n                return this.next[i].next;\n        return null;\n    }\n    /**\n    Try to match a fragment. Returns the resulting match when\n    successful.\n    */\n    matchFragment(frag, start = 0, end = frag.childCount) {\n        let cur = this;\n        for (let i = start; cur && i < end; i++)\n            cur = cur.matchType(frag.child(i).type);\n        return cur;\n    }\n    /**\n    @internal\n    */\n    get inlineContent() {\n        return this.next.length != 0 && this.next[0].type.isInline;\n    }\n    /**\n    Get the first matching node type at this match position that can\n    be generated.\n    */\n    get defaultType() {\n        for (let i = 0; i < this.next.length; i++) {\n            let { type } = this.next[i];\n            if (!(type.isText || type.hasRequiredAttrs()))\n                return type;\n        }\n        return null;\n    }\n    /**\n    @internal\n    */\n    compatible(other) {\n        for (let i = 0; i < this.next.length; i++)\n            for (let j = 0; j < other.next.length; j++)\n                if (this.next[i].type == other.next[j].type)\n                    return true;\n        return false;\n    }\n    /**\n    Try to match the given fragment, and if that fails, see if it can\n    be made to match by inserting nodes in front of it. When\n    successful, return a fragment of inserted nodes (which may be\n    empty if nothing had to be inserted). When `toEnd` is true, only\n    return a fragment if the resulting match goes to the end of the\n    content expression.\n    */\n    fillBefore(after, toEnd = false, startIndex = 0) {\n        let seen = [this];\n        function search(match, types) {\n            let finished = match.matchFragment(after, startIndex);\n            if (finished && (!toEnd || finished.validEnd))\n                return Fragment.from(types.map(tp => tp.createAndFill()));\n            for (let i = 0; i < match.next.length; i++) {\n                let { type, next } = match.next[i];\n                if (!(type.isText || type.hasRequiredAttrs()) && seen.indexOf(next) == -1) {\n                    seen.push(next);\n                    let found = search(next, types.concat(type));\n                    if (found)\n                        return found;\n                }\n            }\n            return null;\n        }\n        return search(this, []);\n    }\n    /**\n    Find a set of wrapping node types that would allow a node of the\n    given type to appear at this position. The result may be empty\n    (when it fits directly) and will be null when no such wrapping\n    exists.\n    */\n    findWrapping(target) {\n        for (let i = 0; i < this.wrapCache.length; i += 2)\n            if (this.wrapCache[i] == target)\n                return this.wrapCache[i + 1];\n        let computed = this.computeWrapping(target);\n        this.wrapCache.push(target, computed);\n        return computed;\n    }\n    /**\n    @internal\n    */\n    computeWrapping(target) {\n        let seen = Object.create(null), active = [{ match: this, type: null, via: null }];\n        while (active.length) {\n            let current = active.shift(), match = current.match;\n            if (match.matchType(target)) {\n                let result = [];\n                for (let obj = current; obj.type; obj = obj.via)\n                    result.push(obj.type);\n                return result.reverse();\n            }\n            for (let i = 0; i < match.next.length; i++) {\n                let { type, next } = match.next[i];\n                if (!type.isLeaf && !type.hasRequiredAttrs() && !(type.name in seen) && (!current.type || next.validEnd)) {\n                    active.push({ match: type.contentMatch, type, via: current });\n                    seen[type.name] = true;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n    The number of outgoing edges this node has in the finite\n    automaton that describes the content expression.\n    */\n    get edgeCount() {\n        return this.next.length;\n    }\n    /**\n    Get the _n_​th outgoing edge from this node in the finite\n    automaton that describes the content expression.\n    */\n    edge(n) {\n        if (n >= this.next.length)\n            throw new RangeError(`There's no ${n}th edge in this content match`);\n        return this.next[n];\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let seen = [];\n        function scan(m) {\n            seen.push(m);\n            for (let i = 0; i < m.next.length; i++)\n                if (seen.indexOf(m.next[i].next) == -1)\n                    scan(m.next[i].next);\n        }\n        scan(this);\n        return seen.map((m, i) => {\n            let out = i + (m.validEnd ? \"*\" : \" \") + \" \";\n            for (let i = 0; i < m.next.length; i++)\n                out += (i ? \", \" : \"\") + m.next[i].type.name + \"->\" + seen.indexOf(m.next[i].next);\n            return out;\n        }).join(\"\\n\");\n    }\n}\n/**\n@internal\n*/\nContentMatch.empty = new ContentMatch(true);\nclass TokenStream {\n    constructor(string, nodeTypes) {\n        this.string = string;\n        this.nodeTypes = nodeTypes;\n        this.inline = null;\n        this.pos = 0;\n        this.tokens = string.split(/\\s*(?=\\b|\\W|$)/);\n        if (this.tokens[this.tokens.length - 1] == \"\")\n            this.tokens.pop();\n        if (this.tokens[0] == \"\")\n            this.tokens.shift();\n    }\n    get next() { return this.tokens[this.pos]; }\n    eat(tok) { return this.next == tok && (this.pos++ || true); }\n    err(str) { throw new SyntaxError(str + \" (in content expression '\" + this.string + \"')\"); }\n}\nfunction parseExpr(stream) {\n    let exprs = [];\n    do {\n        exprs.push(parseExprSeq(stream));\n    } while (stream.eat(\"|\"));\n    return exprs.length == 1 ? exprs[0] : { type: \"choice\", exprs };\n}\nfunction parseExprSeq(stream) {\n    let exprs = [];\n    do {\n        exprs.push(parseExprSubscript(stream));\n    } while (stream.next && stream.next != \")\" && stream.next != \"|\");\n    return exprs.length == 1 ? exprs[0] : { type: \"seq\", exprs };\n}\nfunction parseExprSubscript(stream) {\n    let expr = parseExprAtom(stream);\n    for (;;) {\n        if (stream.eat(\"+\"))\n            expr = { type: \"plus\", expr };\n        else if (stream.eat(\"*\"))\n            expr = { type: \"star\", expr };\n        else if (stream.eat(\"?\"))\n            expr = { type: \"opt\", expr };\n        else if (stream.eat(\"{\"))\n            expr = parseExprRange(stream, expr);\n        else\n            break;\n    }\n    return expr;\n}\nfunction parseNum(stream) {\n    if (/\\D/.test(stream.next))\n        stream.err(\"Expected number, got '\" + stream.next + \"'\");\n    let result = Number(stream.next);\n    stream.pos++;\n    return result;\n}\nfunction parseExprRange(stream, expr) {\n    let min = parseNum(stream), max = min;\n    if (stream.eat(\",\")) {\n        if (stream.next != \"}\")\n            max = parseNum(stream);\n        else\n            max = -1;\n    }\n    if (!stream.eat(\"}\"))\n        stream.err(\"Unclosed braced range\");\n    return { type: \"range\", min, max, expr };\n}\nfunction resolveName(stream, name) {\n    let types = stream.nodeTypes, type = types[name];\n    if (type)\n        return [type];\n    let result = [];\n    for (let typeName in types) {\n        let type = types[typeName];\n        if (type.groups.indexOf(name) > -1)\n            result.push(type);\n    }\n    if (result.length == 0)\n        stream.err(\"No node type or group '\" + name + \"' found\");\n    return result;\n}\nfunction parseExprAtom(stream) {\n    if (stream.eat(\"(\")) {\n        let expr = parseExpr(stream);\n        if (!stream.eat(\")\"))\n            stream.err(\"Missing closing paren\");\n        return expr;\n    }\n    else if (!/\\W/.test(stream.next)) {\n        let exprs = resolveName(stream, stream.next).map(type => {\n            if (stream.inline == null)\n                stream.inline = type.isInline;\n            else if (stream.inline != type.isInline)\n                stream.err(\"Mixing inline and block content\");\n            return { type: \"name\", value: type };\n        });\n        stream.pos++;\n        return exprs.length == 1 ? exprs[0] : { type: \"choice\", exprs };\n    }\n    else {\n        stream.err(\"Unexpected token '\" + stream.next + \"'\");\n    }\n}\n/**\nConstruct an NFA from an expression as returned by the parser. The\nNFA is represented as an array of states, which are themselves\narrays of edges, which are `{term, to}` objects. The first state is\nthe entry state and the last node is the success state.\n\nNote that unlike typical NFAs, the edge ordering in this one is\nsignificant, in that it is used to contruct filler content when\nnecessary.\n*/\nfunction nfa(expr) {\n    let nfa = [[]];\n    connect(compile(expr, 0), node());\n    return nfa;\n    function node() { return nfa.push([]) - 1; }\n    function edge(from, to, term) {\n        let edge = { term, to };\n        nfa[from].push(edge);\n        return edge;\n    }\n    function connect(edges, to) {\n        edges.forEach(edge => edge.to = to);\n    }\n    function compile(expr, from) {\n        if (expr.type == \"choice\") {\n            return expr.exprs.reduce((out, expr) => out.concat(compile(expr, from)), []);\n        }\n        else if (expr.type == \"seq\") {\n            for (let i = 0;; i++) {\n                let next = compile(expr.exprs[i], from);\n                if (i == expr.exprs.length - 1)\n                    return next;\n                connect(next, from = node());\n            }\n        }\n        else if (expr.type == \"star\") {\n            let loop = node();\n            edge(from, loop);\n            connect(compile(expr.expr, loop), loop);\n            return [edge(loop)];\n        }\n        else if (expr.type == \"plus\") {\n            let loop = node();\n            connect(compile(expr.expr, from), loop);\n            connect(compile(expr.expr, loop), loop);\n            return [edge(loop)];\n        }\n        else if (expr.type == \"opt\") {\n            return [edge(from)].concat(compile(expr.expr, from));\n        }\n        else if (expr.type == \"range\") {\n            let cur = from;\n            for (let i = 0; i < expr.min; i++) {\n                let next = node();\n                connect(compile(expr.expr, cur), next);\n                cur = next;\n            }\n            if (expr.max == -1) {\n                connect(compile(expr.expr, cur), cur);\n            }\n            else {\n                for (let i = expr.min; i < expr.max; i++) {\n                    let next = node();\n                    edge(cur, next);\n                    connect(compile(expr.expr, cur), next);\n                    cur = next;\n                }\n            }\n            return [edge(cur)];\n        }\n        else if (expr.type == \"name\") {\n            return [edge(from, undefined, expr.value)];\n        }\n        else {\n            throw new Error(\"Unknown expr type\");\n        }\n    }\n}\nfunction cmp(a, b) { return b - a; }\n// Get the set of nodes reachable by null edges from `node`. Omit\n// nodes with only a single null-out-edge, since they may lead to\n// needless duplicated nodes.\nfunction nullFrom(nfa, node) {\n    let result = [];\n    scan(node);\n    return result.sort(cmp);\n    function scan(node) {\n        let edges = nfa[node];\n        if (edges.length == 1 && !edges[0].term)\n            return scan(edges[0].to);\n        result.push(node);\n        for (let i = 0; i < edges.length; i++) {\n            let { term, to } = edges[i];\n            if (!term && result.indexOf(to) == -1)\n                scan(to);\n        }\n    }\n}\n// Compiles an NFA as produced by `nfa` into a DFA, modeled as a set\n// of state objects (`ContentMatch` instances) with transitions\n// between them.\nfunction dfa(nfa) {\n    let labeled = Object.create(null);\n    return explore(nullFrom(nfa, 0));\n    function explore(states) {\n        let out = [];\n        states.forEach(node => {\n            nfa[node].forEach(({ term, to }) => {\n                if (!term)\n                    return;\n                let set;\n                for (let i = 0; i < out.length; i++)\n                    if (out[i][0] == term)\n                        set = out[i][1];\n                nullFrom(nfa, to).forEach(node => {\n                    if (!set)\n                        out.push([term, set = []]);\n                    if (set.indexOf(node) == -1)\n                        set.push(node);\n                });\n            });\n        });\n        let state = labeled[states.join(\",\")] = new ContentMatch(states.indexOf(nfa.length - 1) > -1);\n        for (let i = 0; i < out.length; i++) {\n            let states = out[i][1].sort(cmp);\n            state.next.push({ type: out[i][0], next: labeled[states.join(\",\")] || explore(states) });\n        }\n        return state;\n    }\n}\nfunction checkForDeadEnds(match, stream) {\n    for (let i = 0, work = [match]; i < work.length; i++) {\n        let state = work[i], dead = !state.validEnd, nodes = [];\n        for (let j = 0; j < state.next.length; j++) {\n            let { type, next } = state.next[j];\n            nodes.push(type.name);\n            if (dead && !(type.isText || type.hasRequiredAttrs()))\n                dead = false;\n            if (work.indexOf(next) == -1)\n                work.push(next);\n        }\n        if (dead)\n            stream.err(\"Only non-generatable nodes (\" + nodes.join(\", \") + \") in a required position (see https://prosemirror.net/docs/guide/#generatable)\");\n    }\n}\n\n// For node types where all attrs have a default value (or which don't\n// have any attributes), build up a single reusable default attribute\n// object, and use it for all nodes that don't specify specific\n// attributes.\nfunction defaultAttrs(attrs) {\n    let defaults = Object.create(null);\n    for (let attrName in attrs) {\n        let attr = attrs[attrName];\n        if (!attr.hasDefault)\n            return null;\n        defaults[attrName] = attr.default;\n    }\n    return defaults;\n}\nfunction computeAttrs(attrs, value) {\n    let built = Object.create(null);\n    for (let name in attrs) {\n        let given = value && value[name];\n        if (given === undefined) {\n            let attr = attrs[name];\n            if (attr.hasDefault)\n                given = attr.default;\n            else\n                throw new RangeError(\"No value supplied for attribute \" + name);\n        }\n        built[name] = given;\n    }\n    return built;\n}\nfunction initAttrs(attrs) {\n    let result = Object.create(null);\n    if (attrs)\n        for (let name in attrs)\n            result[name] = new Attribute(attrs[name]);\n    return result;\n}\n/**\nNode types are objects allocated once per `Schema` and used to\n[tag](https://prosemirror.net/docs/ref/#model.Node.type) `Node` instances. They contain information\nabout the node type, such as its name and what kind of node it\nrepresents.\n*/\nclass NodeType {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The name the node type has in this schema.\n    */\n    name, \n    /**\n    A link back to the `Schema` the node type belongs to.\n    */\n    schema, \n    /**\n    The spec that this type is based on\n    */\n    spec) {\n        this.name = name;\n        this.schema = schema;\n        this.spec = spec;\n        /**\n        The set of marks allowed in this node. `null` means all marks\n        are allowed.\n        */\n        this.markSet = null;\n        this.groups = spec.group ? spec.group.split(\" \") : [];\n        this.attrs = initAttrs(spec.attrs);\n        this.defaultAttrs = defaultAttrs(this.attrs);\n        this.contentMatch = null;\n        this.inlineContent = null;\n        this.isBlock = !(spec.inline || name == \"text\");\n        this.isText = name == \"text\";\n    }\n    /**\n    True if this is an inline type.\n    */\n    get isInline() { return !this.isBlock; }\n    /**\n    True if this is a textblock type, a block that contains inline\n    content.\n    */\n    get isTextblock() { return this.isBlock && this.inlineContent; }\n    /**\n    True for node types that allow no content.\n    */\n    get isLeaf() { return this.contentMatch == ContentMatch.empty; }\n    /**\n    True when this node is an atom, i.e. when it does not have\n    directly editable content.\n    */\n    get isAtom() { return this.isLeaf || !!this.spec.atom; }\n    /**\n    The node type's [whitespace](https://prosemirror.net/docs/ref/#model.NodeSpec.whitespace) option.\n    */\n    get whitespace() {\n        return this.spec.whitespace || (this.spec.code ? \"pre\" : \"normal\");\n    }\n    /**\n    Tells you whether this node type has any required attributes.\n    */\n    hasRequiredAttrs() {\n        for (let n in this.attrs)\n            if (this.attrs[n].isRequired)\n                return true;\n        return false;\n    }\n    /**\n    Indicates whether this node allows some of the same content as\n    the given node type.\n    */\n    compatibleContent(other) {\n        return this == other || this.contentMatch.compatible(other.contentMatch);\n    }\n    /**\n    @internal\n    */\n    computeAttrs(attrs) {\n        if (!attrs && this.defaultAttrs)\n            return this.defaultAttrs;\n        else\n            return computeAttrs(this.attrs, attrs);\n    }\n    /**\n    Create a `Node` of this type. The given attributes are\n    checked and defaulted (you can pass `null` to use the type's\n    defaults entirely, if no required attributes exist). `content`\n    may be a `Fragment`, a node, an array of nodes, or\n    `null`. Similarly `marks` may be `null` to default to the empty\n    set of marks.\n    */\n    create(attrs = null, content, marks) {\n        if (this.isText)\n            throw new Error(\"NodeType.create can't construct text nodes\");\n        return new Node(this, this.computeAttrs(attrs), Fragment.from(content), Mark.setFrom(marks));\n    }\n    /**\n    Like [`create`](https://prosemirror.net/docs/ref/#model.NodeType.create), but check the given content\n    against the node type's content restrictions, and throw an error\n    if it doesn't match.\n    */\n    createChecked(attrs = null, content, marks) {\n        content = Fragment.from(content);\n        this.checkContent(content);\n        return new Node(this, this.computeAttrs(attrs), content, Mark.setFrom(marks));\n    }\n    /**\n    Like [`create`](https://prosemirror.net/docs/ref/#model.NodeType.create), but see if it is\n    necessary to add nodes to the start or end of the given fragment\n    to make it fit the node. If no fitting wrapping can be found,\n    return null. Note that, due to the fact that required nodes can\n    always be created, this will always succeed if you pass null or\n    `Fragment.empty` as content.\n    */\n    createAndFill(attrs = null, content, marks) {\n        attrs = this.computeAttrs(attrs);\n        content = Fragment.from(content);\n        if (content.size) {\n            let before = this.contentMatch.fillBefore(content);\n            if (!before)\n                return null;\n            content = before.append(content);\n        }\n        let matched = this.contentMatch.matchFragment(content);\n        let after = matched && matched.fillBefore(Fragment.empty, true);\n        if (!after)\n            return null;\n        return new Node(this, attrs, content.append(after), Mark.setFrom(marks));\n    }\n    /**\n    Returns true if the given fragment is valid content for this node\n    type with the given attributes.\n    */\n    validContent(content) {\n        let result = this.contentMatch.matchFragment(content);\n        if (!result || !result.validEnd)\n            return false;\n        for (let i = 0; i < content.childCount; i++)\n            if (!this.allowsMarks(content.child(i).marks))\n                return false;\n        return true;\n    }\n    /**\n    Throws a RangeError if the given fragment is not valid content for this\n    node type.\n    @internal\n    */\n    checkContent(content) {\n        if (!this.validContent(content))\n            throw new RangeError(`Invalid content for node ${this.name}: ${content.toString().slice(0, 50)}`);\n    }\n    /**\n    Check whether the given mark type is allowed in this node.\n    */\n    allowsMarkType(markType) {\n        return this.markSet == null || this.markSet.indexOf(markType) > -1;\n    }\n    /**\n    Test whether the given set of marks are allowed in this node.\n    */\n    allowsMarks(marks) {\n        if (this.markSet == null)\n            return true;\n        for (let i = 0; i < marks.length; i++)\n            if (!this.allowsMarkType(marks[i].type))\n                return false;\n        return true;\n    }\n    /**\n    Removes the marks that are not allowed in this node from the given set.\n    */\n    allowedMarks(marks) {\n        if (this.markSet == null)\n            return marks;\n        let copy;\n        for (let i = 0; i < marks.length; i++) {\n            if (!this.allowsMarkType(marks[i].type)) {\n                if (!copy)\n                    copy = marks.slice(0, i);\n            }\n            else if (copy) {\n                copy.push(marks[i]);\n            }\n        }\n        return !copy ? marks : copy.length ? copy : Mark.none;\n    }\n    /**\n    @internal\n    */\n    static compile(nodes, schema) {\n        let result = Object.create(null);\n        nodes.forEach((name, spec) => result[name] = new NodeType(name, schema, spec));\n        let topType = schema.spec.topNode || \"doc\";\n        if (!result[topType])\n            throw new RangeError(\"Schema is missing its top node type ('\" + topType + \"')\");\n        if (!result.text)\n            throw new RangeError(\"Every schema needs a 'text' type\");\n        for (let _ in result.text.attrs)\n            throw new RangeError(\"The text node type should not have attributes\");\n        return result;\n    }\n}\n// Attribute descriptors\nclass Attribute {\n    constructor(options) {\n        this.hasDefault = Object.prototype.hasOwnProperty.call(options, \"default\");\n        this.default = options.default;\n    }\n    get isRequired() {\n        return !this.hasDefault;\n    }\n}\n// Marks\n/**\nLike nodes, marks (which are associated with nodes to signify\nthings like emphasis or being part of a link) are\n[tagged](https://prosemirror.net/docs/ref/#model.Mark.type) with type objects, which are\ninstantiated once per `Schema`.\n*/\nclass MarkType {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The name of the mark type.\n    */\n    name, \n    /**\n    @internal\n    */\n    rank, \n    /**\n    The schema that this mark type instance is part of.\n    */\n    schema, \n    /**\n    The spec on which the type is based.\n    */\n    spec) {\n        this.name = name;\n        this.rank = rank;\n        this.schema = schema;\n        this.spec = spec;\n        this.attrs = initAttrs(spec.attrs);\n        this.excluded = null;\n        let defaults = defaultAttrs(this.attrs);\n        this.instance = defaults ? new Mark(this, defaults) : null;\n    }\n    /**\n    Create a mark of this type. `attrs` may be `null` or an object\n    containing only some of the mark's attributes. The others, if\n    they have defaults, will be added.\n    */\n    create(attrs = null) {\n        if (!attrs && this.instance)\n            return this.instance;\n        return new Mark(this, computeAttrs(this.attrs, attrs));\n    }\n    /**\n    @internal\n    */\n    static compile(marks, schema) {\n        let result = Object.create(null), rank = 0;\n        marks.forEach((name, spec) => result[name] = new MarkType(name, rank++, schema, spec));\n        return result;\n    }\n    /**\n    When there is a mark of this type in the given set, a new set\n    without it is returned. Otherwise, the input set is returned.\n    */\n    removeFromSet(set) {\n        for (var i = 0; i < set.length; i++)\n            if (set[i].type == this) {\n                set = set.slice(0, i).concat(set.slice(i + 1));\n                i--;\n            }\n        return set;\n    }\n    /**\n    Tests whether there is a mark of this type in the given set.\n    */\n    isInSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (set[i].type == this)\n                return set[i];\n    }\n    /**\n    Queries whether a given mark type is\n    [excluded](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) by this one.\n    */\n    excludes(other) {\n        return this.excluded.indexOf(other) > -1;\n    }\n}\n/**\nA document schema. Holds [node](https://prosemirror.net/docs/ref/#model.NodeType) and [mark\ntype](https://prosemirror.net/docs/ref/#model.MarkType) objects for the nodes and marks that may\noccur in conforming documents, and provides functionality for\ncreating and deserializing such documents.\n\nWhen given, the type parameters provide the names of the nodes and\nmarks in this schema.\n*/\nclass Schema {\n    /**\n    Construct a schema from a schema [specification](https://prosemirror.net/docs/ref/#model.SchemaSpec).\n    */\n    constructor(spec) {\n        /**\n        An object for storing whatever values modules may want to\n        compute and cache per schema. (If you want to store something\n        in it, try to use property names unlikely to clash.)\n        */\n        this.cached = Object.create(null);\n        let instanceSpec = this.spec = {};\n        for (let prop in spec)\n            instanceSpec[prop] = spec[prop];\n        instanceSpec.nodes = OrderedMap.from(spec.nodes),\n            instanceSpec.marks = OrderedMap.from(spec.marks || {}),\n            this.nodes = NodeType.compile(this.spec.nodes, this);\n        this.marks = MarkType.compile(this.spec.marks, this);\n        let contentExprCache = Object.create(null);\n        for (let prop in this.nodes) {\n            if (prop in this.marks)\n                throw new RangeError(prop + \" can not be both a node and a mark\");\n            let type = this.nodes[prop], contentExpr = type.spec.content || \"\", markExpr = type.spec.marks;\n            type.contentMatch = contentExprCache[contentExpr] ||\n                (contentExprCache[contentExpr] = ContentMatch.parse(contentExpr, this.nodes));\n            type.inlineContent = type.contentMatch.inlineContent;\n            type.markSet = markExpr == \"_\" ? null :\n                markExpr ? gatherMarks(this, markExpr.split(\" \")) :\n                    markExpr == \"\" || !type.inlineContent ? [] : null;\n        }\n        for (let prop in this.marks) {\n            let type = this.marks[prop], excl = type.spec.excludes;\n            type.excluded = excl == null ? [type] : excl == \"\" ? [] : gatherMarks(this, excl.split(\" \"));\n        }\n        this.nodeFromJSON = this.nodeFromJSON.bind(this);\n        this.markFromJSON = this.markFromJSON.bind(this);\n        this.topNodeType = this.nodes[this.spec.topNode || \"doc\"];\n        this.cached.wrappings = Object.create(null);\n    }\n    /**\n    Create a node in this schema. The `type` may be a string or a\n    `NodeType` instance. Attributes will be extended with defaults,\n    `content` may be a `Fragment`, `null`, a `Node`, or an array of\n    nodes.\n    */\n    node(type, attrs = null, content, marks) {\n        if (typeof type == \"string\")\n            type = this.nodeType(type);\n        else if (!(type instanceof NodeType))\n            throw new RangeError(\"Invalid node type: \" + type);\n        else if (type.schema != this)\n            throw new RangeError(\"Node type from different schema used (\" + type.name + \")\");\n        return type.createChecked(attrs, content, marks);\n    }\n    /**\n    Create a text node in the schema. Empty text nodes are not\n    allowed.\n    */\n    text(text, marks) {\n        let type = this.nodes.text;\n        return new TextNode(type, type.defaultAttrs, text, Mark.setFrom(marks));\n    }\n    /**\n    Create a mark with the given type and attributes.\n    */\n    mark(type, attrs) {\n        if (typeof type == \"string\")\n            type = this.marks[type];\n        return type.create(attrs);\n    }\n    /**\n    Deserialize a node from its JSON representation. This method is\n    bound.\n    */\n    nodeFromJSON(json) {\n        return Node.fromJSON(this, json);\n    }\n    /**\n    Deserialize a mark from its JSON representation. This method is\n    bound.\n    */\n    markFromJSON(json) {\n        return Mark.fromJSON(this, json);\n    }\n    /**\n    @internal\n    */\n    nodeType(name) {\n        let found = this.nodes[name];\n        if (!found)\n            throw new RangeError(\"Unknown node type: \" + name);\n        return found;\n    }\n}\nfunction gatherMarks(schema, marks) {\n    let found = [];\n    for (let i = 0; i < marks.length; i++) {\n        let name = marks[i], mark = schema.marks[name], ok = mark;\n        if (mark) {\n            found.push(mark);\n        }\n        else {\n            for (let prop in schema.marks) {\n                let mark = schema.marks[prop];\n                if (name == \"_\" || (mark.spec.group && mark.spec.group.split(\" \").indexOf(name) > -1))\n                    found.push(ok = mark);\n            }\n        }\n        if (!ok)\n            throw new SyntaxError(\"Unknown mark type: '\" + marks[i] + \"'\");\n    }\n    return found;\n}\n\n/**\nA DOM parser represents a strategy for parsing DOM content into a\nProseMirror document conforming to a given schema. Its behavior is\ndefined by an array of [rules](https://prosemirror.net/docs/ref/#model.ParseRule).\n*/\nclass DOMParser {\n    /**\n    Create a parser that targets the given schema, using the given\n    parsing rules.\n    */\n    constructor(\n    /**\n    The schema into which the parser parses.\n    */\n    schema, \n    /**\n    The set of [parse rules](https://prosemirror.net/docs/ref/#model.ParseRule) that the parser\n    uses, in order of precedence.\n    */\n    rules) {\n        this.schema = schema;\n        this.rules = rules;\n        /**\n        @internal\n        */\n        this.tags = [];\n        /**\n        @internal\n        */\n        this.styles = [];\n        rules.forEach(rule => {\n            if (rule.tag)\n                this.tags.push(rule);\n            else if (rule.style)\n                this.styles.push(rule);\n        });\n        // Only normalize list elements when lists in the schema can't directly contain themselves\n        this.normalizeLists = !this.tags.some(r => {\n            if (!/^(ul|ol)\\b/.test(r.tag) || !r.node)\n                return false;\n            let node = schema.nodes[r.node];\n            return node.contentMatch.matchType(node);\n        });\n    }\n    /**\n    Parse a document from the content of a DOM node.\n    */\n    parse(dom, options = {}) {\n        let context = new ParseContext(this, options, false);\n        context.addAll(dom, options.from, options.to);\n        return context.finish();\n    }\n    /**\n    Parses the content of the given DOM node, like\n    [`parse`](https://prosemirror.net/docs/ref/#model.DOMParser.parse), and takes the same set of\n    options. But unlike that method, which produces a whole node,\n    this one returns a slice that is open at the sides, meaning that\n    the schema constraints aren't applied to the start of nodes to\n    the left of the input and the end of nodes at the end.\n    */\n    parseSlice(dom, options = {}) {\n        let context = new ParseContext(this, options, true);\n        context.addAll(dom, options.from, options.to);\n        return Slice.maxOpen(context.finish());\n    }\n    /**\n    @internal\n    */\n    matchTag(dom, context, after) {\n        for (let i = after ? this.tags.indexOf(after) + 1 : 0; i < this.tags.length; i++) {\n            let rule = this.tags[i];\n            if (matches(dom, rule.tag) &&\n                (rule.namespace === undefined || dom.namespaceURI == rule.namespace) &&\n                (!rule.context || context.matchesContext(rule.context))) {\n                if (rule.getAttrs) {\n                    let result = rule.getAttrs(dom);\n                    if (result === false)\n                        continue;\n                    rule.attrs = result || undefined;\n                }\n                return rule;\n            }\n        }\n    }\n    /**\n    @internal\n    */\n    matchStyle(prop, value, context, after) {\n        for (let i = after ? this.styles.indexOf(after) + 1 : 0; i < this.styles.length; i++) {\n            let rule = this.styles[i], style = rule.style;\n            if (style.indexOf(prop) != 0 ||\n                rule.context && !context.matchesContext(rule.context) ||\n                // Test that the style string either precisely matches the prop,\n                // or has an '=' sign after the prop, followed by the given\n                // value.\n                style.length > prop.length &&\n                    (style.charCodeAt(prop.length) != 61 || style.slice(prop.length + 1) != value))\n                continue;\n            if (rule.getAttrs) {\n                let result = rule.getAttrs(value);\n                if (result === false)\n                    continue;\n                rule.attrs = result || undefined;\n            }\n            return rule;\n        }\n    }\n    /**\n    @internal\n    */\n    static schemaRules(schema) {\n        let result = [];\n        function insert(rule) {\n            let priority = rule.priority == null ? 50 : rule.priority, i = 0;\n            for (; i < result.length; i++) {\n                let next = result[i], nextPriority = next.priority == null ? 50 : next.priority;\n                if (nextPriority < priority)\n                    break;\n            }\n            result.splice(i, 0, rule);\n        }\n        for (let name in schema.marks) {\n            let rules = schema.marks[name].spec.parseDOM;\n            if (rules)\n                rules.forEach(rule => {\n                    insert(rule = copy(rule));\n                    rule.mark = name;\n                });\n        }\n        for (let name in schema.nodes) {\n            let rules = schema.nodes[name].spec.parseDOM;\n            if (rules)\n                rules.forEach(rule => {\n                    insert(rule = copy(rule));\n                    rule.node = name;\n                });\n        }\n        return result;\n    }\n    /**\n    Construct a DOM parser using the parsing rules listed in a\n    schema's [node specs](https://prosemirror.net/docs/ref/#model.NodeSpec.parseDOM), reordered by\n    [priority](https://prosemirror.net/docs/ref/#model.ParseRule.priority).\n    */\n    static fromSchema(schema) {\n        return schema.cached.domParser ||\n            (schema.cached.domParser = new DOMParser(schema, DOMParser.schemaRules(schema)));\n    }\n}\nconst blockTags = {\n    address: true, article: true, aside: true, blockquote: true, canvas: true,\n    dd: true, div: true, dl: true, fieldset: true, figcaption: true, figure: true,\n    footer: true, form: true, h1: true, h2: true, h3: true, h4: true, h5: true,\n    h6: true, header: true, hgroup: true, hr: true, li: true, noscript: true, ol: true,\n    output: true, p: true, pre: true, section: true, table: true, tfoot: true, ul: true\n};\nconst ignoreTags = {\n    head: true, noscript: true, object: true, script: true, style: true, title: true\n};\nconst listTags = { ol: true, ul: true };\n// Using a bitfield for node context options\nconst OPT_PRESERVE_WS = 1, OPT_PRESERVE_WS_FULL = 2, OPT_OPEN_LEFT = 4;\nfunction wsOptionsFor(type, preserveWhitespace, base) {\n    if (preserveWhitespace != null)\n        return (preserveWhitespace ? OPT_PRESERVE_WS : 0) |\n            (preserveWhitespace === \"full\" ? OPT_PRESERVE_WS_FULL : 0);\n    return type && type.whitespace == \"pre\" ? OPT_PRESERVE_WS | OPT_PRESERVE_WS_FULL : base & ~OPT_OPEN_LEFT;\n}\nclass NodeContext {\n    constructor(type, attrs, \n    // Marks applied to this node itself\n    marks, \n    // Marks that can't apply here, but will be used in children if possible\n    pendingMarks, solid, match, options) {\n        this.type = type;\n        this.attrs = attrs;\n        this.marks = marks;\n        this.pendingMarks = pendingMarks;\n        this.solid = solid;\n        this.options = options;\n        this.content = [];\n        // Marks applied to the node's children\n        this.activeMarks = Mark.none;\n        // Nested Marks with same type\n        this.stashMarks = [];\n        this.match = match || (options & OPT_OPEN_LEFT ? null : type.contentMatch);\n    }\n    findWrapping(node) {\n        if (!this.match) {\n            if (!this.type)\n                return [];\n            let fill = this.type.contentMatch.fillBefore(Fragment.from(node));\n            if (fill) {\n                this.match = this.type.contentMatch.matchFragment(fill);\n            }\n            else {\n                let start = this.type.contentMatch, wrap;\n                if (wrap = start.findWrapping(node.type)) {\n                    this.match = start;\n                    return wrap;\n                }\n                else {\n                    return null;\n                }\n            }\n        }\n        return this.match.findWrapping(node.type);\n    }\n    finish(openEnd) {\n        if (!(this.options & OPT_PRESERVE_WS)) { // Strip trailing whitespace\n            let last = this.content[this.content.length - 1], m;\n            if (last && last.isText && (m = /[ \\t\\r\\n\\u000c]+$/.exec(last.text))) {\n                let text = last;\n                if (last.text.length == m[0].length)\n                    this.content.pop();\n                else\n                    this.content[this.content.length - 1] = text.withText(text.text.slice(0, text.text.length - m[0].length));\n            }\n        }\n        let content = Fragment.from(this.content);\n        if (!openEnd && this.match)\n            content = content.append(this.match.fillBefore(Fragment.empty, true));\n        return this.type ? this.type.create(this.attrs, content, this.marks) : content;\n    }\n    popFromStashMark(mark) {\n        for (let i = this.stashMarks.length - 1; i >= 0; i--)\n            if (mark.eq(this.stashMarks[i]))\n                return this.stashMarks.splice(i, 1)[0];\n    }\n    applyPending(nextType) {\n        for (let i = 0, pending = this.pendingMarks; i < pending.length; i++) {\n            let mark = pending[i];\n            if ((this.type ? this.type.allowsMarkType(mark.type) : markMayApply(mark.type, nextType)) &&\n                !mark.isInSet(this.activeMarks)) {\n                this.activeMarks = mark.addToSet(this.activeMarks);\n                this.pendingMarks = mark.removeFromSet(this.pendingMarks);\n            }\n        }\n    }\n    inlineContext(node) {\n        if (this.type)\n            return this.type.inlineContent;\n        if (this.content.length)\n            return this.content[0].isInline;\n        return node.parentNode && !blockTags.hasOwnProperty(node.parentNode.nodeName.toLowerCase());\n    }\n}\nclass ParseContext {\n    constructor(\n    // The parser we are using.\n    parser, \n    // The options passed to this parse.\n    options, isOpen) {\n        this.parser = parser;\n        this.options = options;\n        this.isOpen = isOpen;\n        this.open = 0;\n        let topNode = options.topNode, topContext;\n        let topOptions = wsOptionsFor(null, options.preserveWhitespace, 0) | (isOpen ? OPT_OPEN_LEFT : 0);\n        if (topNode)\n            topContext = new NodeContext(topNode.type, topNode.attrs, Mark.none, Mark.none, true, options.topMatch || topNode.type.contentMatch, topOptions);\n        else if (isOpen)\n            topContext = new NodeContext(null, null, Mark.none, Mark.none, true, null, topOptions);\n        else\n            topContext = new NodeContext(parser.schema.topNodeType, null, Mark.none, Mark.none, true, null, topOptions);\n        this.nodes = [topContext];\n        this.find = options.findPositions;\n        this.needsBlock = false;\n    }\n    get top() {\n        return this.nodes[this.open];\n    }\n    // Add a DOM node to the content. Text is inserted as text node,\n    // otherwise, the node is passed to `addElement` or, if it has a\n    // `style` attribute, `addElementWithStyles`.\n    addDOM(dom) {\n        if (dom.nodeType == 3) {\n            this.addTextNode(dom);\n        }\n        else if (dom.nodeType == 1) {\n            let style = dom.getAttribute(\"style\");\n            let marks = style ? this.readStyles(parseStyles(style)) : null, top = this.top;\n            if (marks != null)\n                for (let i = 0; i < marks.length; i++)\n                    this.addPendingMark(marks[i]);\n            this.addElement(dom);\n            if (marks != null)\n                for (let i = 0; i < marks.length; i++)\n                    this.removePendingMark(marks[i], top);\n        }\n    }\n    addTextNode(dom) {\n        let value = dom.nodeValue;\n        let top = this.top;\n        if (top.options & OPT_PRESERVE_WS_FULL ||\n            top.inlineContext(dom) ||\n            /[^ \\t\\r\\n\\u000c]/.test(value)) {\n            if (!(top.options & OPT_PRESERVE_WS)) {\n                value = value.replace(/[ \\t\\r\\n\\u000c]+/g, \" \");\n                // If this starts with whitespace, and there is no node before it, or\n                // a hard break, or a text node that ends with whitespace, strip the\n                // leading space.\n                if (/^[ \\t\\r\\n\\u000c]/.test(value) && this.open == this.nodes.length - 1) {\n                    let nodeBefore = top.content[top.content.length - 1];\n                    let domNodeBefore = dom.previousSibling;\n                    if (!nodeBefore ||\n                        (domNodeBefore && domNodeBefore.nodeName == 'BR') ||\n                        (nodeBefore.isText && /[ \\t\\r\\n\\u000c]$/.test(nodeBefore.text)))\n                        value = value.slice(1);\n                }\n            }\n            else if (!(top.options & OPT_PRESERVE_WS_FULL)) {\n                value = value.replace(/\\r?\\n|\\r/g, \" \");\n            }\n            else {\n                value = value.replace(/\\r\\n?/g, \"\\n\");\n            }\n            if (value)\n                this.insertNode(this.parser.schema.text(value));\n            this.findInText(dom);\n        }\n        else {\n            this.findInside(dom);\n        }\n    }\n    // Try to find a handler for the given tag and use that to parse. If\n    // none is found, the element's content nodes are added directly.\n    addElement(dom, matchAfter) {\n        let name = dom.nodeName.toLowerCase(), ruleID;\n        if (listTags.hasOwnProperty(name) && this.parser.normalizeLists)\n            normalizeList(dom);\n        let rule = (this.options.ruleFromNode && this.options.ruleFromNode(dom)) ||\n            (ruleID = this.parser.matchTag(dom, this, matchAfter));\n        if (rule ? rule.ignore : ignoreTags.hasOwnProperty(name)) {\n            this.findInside(dom);\n            this.ignoreFallback(dom);\n        }\n        else if (!rule || rule.skip || rule.closeParent) {\n            if (rule && rule.closeParent)\n                this.open = Math.max(0, this.open - 1);\n            else if (rule && rule.skip.nodeType)\n                dom = rule.skip;\n            let sync, top = this.top, oldNeedsBlock = this.needsBlock;\n            if (blockTags.hasOwnProperty(name)) {\n                if (top.content.length && top.content[0].isInline && this.open) {\n                    this.open--;\n                    top = this.top;\n                }\n                sync = true;\n                if (!top.type)\n                    this.needsBlock = true;\n            }\n            else if (!dom.firstChild) {\n                this.leafFallback(dom);\n                return;\n            }\n            this.addAll(dom);\n            if (sync)\n                this.sync(top);\n            this.needsBlock = oldNeedsBlock;\n        }\n        else {\n            this.addElementByRule(dom, rule, rule.consuming === false ? ruleID : undefined);\n        }\n    }\n    // Called for leaf DOM nodes that would otherwise be ignored\n    leafFallback(dom) {\n        if (dom.nodeName == \"BR\" && this.top.type && this.top.type.inlineContent)\n            this.addTextNode(dom.ownerDocument.createTextNode(\"\\n\"));\n    }\n    // Called for ignored nodes\n    ignoreFallback(dom) {\n        // Ignored BR nodes should at least create an inline context\n        if (dom.nodeName == \"BR\" && (!this.top.type || !this.top.type.inlineContent))\n            this.findPlace(this.parser.schema.text(\"-\"));\n    }\n    // Run any style parser associated with the node's styles. Either\n    // return an array of marks, or null to indicate some of the styles\n    // had a rule with `ignore` set.\n    readStyles(styles) {\n        let marks = Mark.none;\n        style: for (let i = 0; i < styles.length; i += 2) {\n            for (let after = undefined;;) {\n                let rule = this.parser.matchStyle(styles[i], styles[i + 1], this, after);\n                if (!rule)\n                    continue style;\n                if (rule.ignore)\n                    return null;\n                marks = this.parser.schema.marks[rule.mark].create(rule.attrs).addToSet(marks);\n                if (rule.consuming === false)\n                    after = rule;\n                else\n                    break;\n            }\n        }\n        return marks;\n    }\n    // Look up a handler for the given node. If none are found, return\n    // false. Otherwise, apply it, use its return value to drive the way\n    // the node's content is wrapped, and return true.\n    addElementByRule(dom, rule, continueAfter) {\n        let sync, nodeType, mark;\n        if (rule.node) {\n            nodeType = this.parser.schema.nodes[rule.node];\n            if (!nodeType.isLeaf) {\n                sync = this.enter(nodeType, rule.attrs || null, rule.preserveWhitespace);\n            }\n            else if (!this.insertNode(nodeType.create(rule.attrs))) {\n                this.leafFallback(dom);\n            }\n        }\n        else {\n            let markType = this.parser.schema.marks[rule.mark];\n            mark = markType.create(rule.attrs);\n            this.addPendingMark(mark);\n        }\n        let startIn = this.top;\n        if (nodeType && nodeType.isLeaf) {\n            this.findInside(dom);\n        }\n        else if (continueAfter) {\n            this.addElement(dom, continueAfter);\n        }\n        else if (rule.getContent) {\n            this.findInside(dom);\n            rule.getContent(dom, this.parser.schema).forEach(node => this.insertNode(node));\n        }\n        else {\n            let contentDOM = dom;\n            if (typeof rule.contentElement == \"string\")\n                contentDOM = dom.querySelector(rule.contentElement);\n            else if (typeof rule.contentElement == \"function\")\n                contentDOM = rule.contentElement(dom);\n            else if (rule.contentElement)\n                contentDOM = rule.contentElement;\n            this.findAround(dom, contentDOM, true);\n            this.addAll(contentDOM);\n        }\n        if (sync && this.sync(startIn))\n            this.open--;\n        if (mark)\n            this.removePendingMark(mark, startIn);\n    }\n    // Add all child nodes between `startIndex` and `endIndex` (or the\n    // whole node, if not given). If `sync` is passed, use it to\n    // synchronize after every block element.\n    addAll(parent, startIndex, endIndex) {\n        let index = startIndex || 0;\n        for (let dom = startIndex ? parent.childNodes[startIndex] : parent.firstChild, end = endIndex == null ? null : parent.childNodes[endIndex]; dom != end; dom = dom.nextSibling, ++index) {\n            this.findAtPoint(parent, index);\n            this.addDOM(dom);\n        }\n        this.findAtPoint(parent, index);\n    }\n    // Try to find a way to fit the given node type into the current\n    // context. May add intermediate wrappers and/or leave non-solid\n    // nodes that we're in.\n    findPlace(node) {\n        let route, sync;\n        for (let depth = this.open; depth >= 0; depth--) {\n            let cx = this.nodes[depth];\n            let found = cx.findWrapping(node);\n            if (found && (!route || route.length > found.length)) {\n                route = found;\n                sync = cx;\n                if (!found.length)\n                    break;\n            }\n            if (cx.solid)\n                break;\n        }\n        if (!route)\n            return false;\n        this.sync(sync);\n        for (let i = 0; i < route.length; i++)\n            this.enterInner(route[i], null, false);\n        return true;\n    }\n    // Try to insert the given node, adjusting the context when needed.\n    insertNode(node) {\n        if (node.isInline && this.needsBlock && !this.top.type) {\n            let block = this.textblockFromContext();\n            if (block)\n                this.enterInner(block);\n        }\n        if (this.findPlace(node)) {\n            this.closeExtra();\n            let top = this.top;\n            top.applyPending(node.type);\n            if (top.match)\n                top.match = top.match.matchType(node.type);\n            let marks = top.activeMarks;\n            for (let i = 0; i < node.marks.length; i++)\n                if (!top.type || top.type.allowsMarkType(node.marks[i].type))\n                    marks = node.marks[i].addToSet(marks);\n            top.content.push(node.mark(marks));\n            return true;\n        }\n        return false;\n    }\n    // Try to start a node of the given type, adjusting the context when\n    // necessary.\n    enter(type, attrs, preserveWS) {\n        let ok = this.findPlace(type.create(attrs));\n        if (ok)\n            this.enterInner(type, attrs, true, preserveWS);\n        return ok;\n    }\n    // Open a node of the given type\n    enterInner(type, attrs = null, solid = false, preserveWS) {\n        this.closeExtra();\n        let top = this.top;\n        top.applyPending(type);\n        top.match = top.match && top.match.matchType(type);\n        let options = wsOptionsFor(type, preserveWS, top.options);\n        if ((top.options & OPT_OPEN_LEFT) && top.content.length == 0)\n            options |= OPT_OPEN_LEFT;\n        this.nodes.push(new NodeContext(type, attrs, top.activeMarks, top.pendingMarks, solid, null, options));\n        this.open++;\n    }\n    // Make sure all nodes above this.open are finished and added to\n    // their parents\n    closeExtra(openEnd = false) {\n        let i = this.nodes.length - 1;\n        if (i > this.open) {\n            for (; i > this.open; i--)\n                this.nodes[i - 1].content.push(this.nodes[i].finish(openEnd));\n            this.nodes.length = this.open + 1;\n        }\n    }\n    finish() {\n        this.open = 0;\n        this.closeExtra(this.isOpen);\n        return this.nodes[0].finish(this.isOpen || this.options.topOpen);\n    }\n    sync(to) {\n        for (let i = this.open; i >= 0; i--)\n            if (this.nodes[i] == to) {\n                this.open = i;\n                return true;\n            }\n        return false;\n    }\n    get currentPos() {\n        this.closeExtra();\n        let pos = 0;\n        for (let i = this.open; i >= 0; i--) {\n            let content = this.nodes[i].content;\n            for (let j = content.length - 1; j >= 0; j--)\n                pos += content[j].nodeSize;\n            if (i)\n                pos++;\n        }\n        return pos;\n    }\n    findAtPoint(parent, offset) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].node == parent && this.find[i].offset == offset)\n                    this.find[i].pos = this.currentPos;\n            }\n    }\n    findInside(parent) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node))\n                    this.find[i].pos = this.currentPos;\n            }\n    }\n    findAround(parent, content, before) {\n        if (parent != content && this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node)) {\n                    let pos = content.compareDocumentPosition(this.find[i].node);\n                    if (pos & (before ? 2 : 4))\n                        this.find[i].pos = this.currentPos;\n                }\n            }\n    }\n    findInText(textNode) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].node == textNode)\n                    this.find[i].pos = this.currentPos - (textNode.nodeValue.length - this.find[i].offset);\n            }\n    }\n    // Determines whether the given context string matches this context.\n    matchesContext(context) {\n        if (context.indexOf(\"|\") > -1)\n            return context.split(/\\s*\\|\\s*/).some(this.matchesContext, this);\n        let parts = context.split(\"/\");\n        let option = this.options.context;\n        let useRoot = !this.isOpen && (!option || option.parent.type == this.nodes[0].type);\n        let minDepth = -(option ? option.depth + 1 : 0) + (useRoot ? 0 : 1);\n        let match = (i, depth) => {\n            for (; i >= 0; i--) {\n                let part = parts[i];\n                if (part == \"\") {\n                    if (i == parts.length - 1 || i == 0)\n                        continue;\n                    for (; depth >= minDepth; depth--)\n                        if (match(i - 1, depth))\n                            return true;\n                    return false;\n                }\n                else {\n                    let next = depth > 0 || (depth == 0 && useRoot) ? this.nodes[depth].type\n                        : option && depth >= minDepth ? option.node(depth - minDepth).type\n                            : null;\n                    if (!next || (next.name != part && next.groups.indexOf(part) == -1))\n                        return false;\n                    depth--;\n                }\n            }\n            return true;\n        };\n        return match(parts.length - 1, this.open);\n    }\n    textblockFromContext() {\n        let $context = this.options.context;\n        if ($context)\n            for (let d = $context.depth; d >= 0; d--) {\n                let deflt = $context.node(d).contentMatchAt($context.indexAfter(d)).defaultType;\n                if (deflt && deflt.isTextblock && deflt.defaultAttrs)\n                    return deflt;\n            }\n        for (let name in this.parser.schema.nodes) {\n            let type = this.parser.schema.nodes[name];\n            if (type.isTextblock && type.defaultAttrs)\n                return type;\n        }\n    }\n    addPendingMark(mark) {\n        let found = findSameMarkInSet(mark, this.top.pendingMarks);\n        if (found)\n            this.top.stashMarks.push(found);\n        this.top.pendingMarks = mark.addToSet(this.top.pendingMarks);\n    }\n    removePendingMark(mark, upto) {\n        for (let depth = this.open; depth >= 0; depth--) {\n            let level = this.nodes[depth];\n            let found = level.pendingMarks.lastIndexOf(mark);\n            if (found > -1) {\n                level.pendingMarks = mark.removeFromSet(level.pendingMarks);\n            }\n            else {\n                level.activeMarks = mark.removeFromSet(level.activeMarks);\n                let stashMark = level.popFromStashMark(mark);\n                if (stashMark && level.type && level.type.allowsMarkType(stashMark.type))\n                    level.activeMarks = stashMark.addToSet(level.activeMarks);\n            }\n            if (level == upto)\n                break;\n        }\n    }\n}\n// Kludge to work around directly nested list nodes produced by some\n// tools and allowed by browsers to mean that the nested list is\n// actually part of the list item above it.\nfunction normalizeList(dom) {\n    for (let child = dom.firstChild, prevItem = null; child; child = child.nextSibling) {\n        let name = child.nodeType == 1 ? child.nodeName.toLowerCase() : null;\n        if (name && listTags.hasOwnProperty(name) && prevItem) {\n            prevItem.appendChild(child);\n            child = prevItem;\n        }\n        else if (name == \"li\") {\n            prevItem = child;\n        }\n        else if (name) {\n            prevItem = null;\n        }\n    }\n}\n// Apply a CSS selector.\nfunction matches(dom, selector) {\n    return (dom.matches || dom.msMatchesSelector || dom.webkitMatchesSelector || dom.mozMatchesSelector).call(dom, selector);\n}\n// Tokenize a style attribute into property/value pairs.\nfunction parseStyles(style) {\n    let re = /\\s*([\\w-]+)\\s*:\\s*([^;]+)/g, m, result = [];\n    while (m = re.exec(style))\n        result.push(m[1], m[2].trim());\n    return result;\n}\nfunction copy(obj) {\n    let copy = {};\n    for (let prop in obj)\n        copy[prop] = obj[prop];\n    return copy;\n}\n// Used when finding a mark at the top level of a fragment parse.\n// Checks whether it would be reasonable to apply a given mark type to\n// a given node, by looking at the way the mark occurs in the schema.\nfunction markMayApply(markType, nodeType) {\n    let nodes = nodeType.schema.nodes;\n    for (let name in nodes) {\n        let parent = nodes[name];\n        if (!parent.allowsMarkType(markType))\n            continue;\n        let seen = [], scan = (match) => {\n            seen.push(match);\n            for (let i = 0; i < match.edgeCount; i++) {\n                let { type, next } = match.edge(i);\n                if (type == nodeType)\n                    return true;\n                if (seen.indexOf(next) < 0 && scan(next))\n                    return true;\n            }\n        };\n        if (scan(parent.contentMatch))\n            return true;\n    }\n}\nfunction findSameMarkInSet(mark, set) {\n    for (let i = 0; i < set.length; i++) {\n        if (mark.eq(set[i]))\n            return set[i];\n    }\n}\n\n/**\nA DOM serializer knows how to convert ProseMirror nodes and\nmarks of various types to DOM nodes.\n*/\nclass DOMSerializer {\n    /**\n    Create a serializer. `nodes` should map node names to functions\n    that take a node and return a description of the corresponding\n    DOM. `marks` does the same for mark names, but also gets an\n    argument that tells it whether the mark's content is block or\n    inline content (for typical use, it'll always be inline). A mark\n    serializer may be `null` to indicate that marks of that type\n    should not be serialized.\n    */\n    constructor(\n    /**\n    The node serialization functions.\n    */\n    nodes, \n    /**\n    The mark serialization functions.\n    */\n    marks) {\n        this.nodes = nodes;\n        this.marks = marks;\n    }\n    /**\n    Serialize the content of this fragment to a DOM fragment. When\n    not in the browser, the `document` option, containing a DOM\n    document, should be passed so that the serializer can create\n    nodes.\n    */\n    serializeFragment(fragment, options = {}, target) {\n        if (!target)\n            target = doc(options).createDocumentFragment();\n        let top = target, active = [];\n        fragment.forEach(node => {\n            if (active.length || node.marks.length) {\n                let keep = 0, rendered = 0;\n                while (keep < active.length && rendered < node.marks.length) {\n                    let next = node.marks[rendered];\n                    if (!this.marks[next.type.name]) {\n                        rendered++;\n                        continue;\n                    }\n                    if (!next.eq(active[keep][0]) || next.type.spec.spanning === false)\n                        break;\n                    keep++;\n                    rendered++;\n                }\n                while (keep < active.length)\n                    top = active.pop()[1];\n                while (rendered < node.marks.length) {\n                    let add = node.marks[rendered++];\n                    let markDOM = this.serializeMark(add, node.isInline, options);\n                    if (markDOM) {\n                        active.push([add, top]);\n                        top.appendChild(markDOM.dom);\n                        top = markDOM.contentDOM || markDOM.dom;\n                    }\n                }\n            }\n            top.appendChild(this.serializeNodeInner(node, options));\n        });\n        return target;\n    }\n    /**\n    @internal\n    */\n    serializeNodeInner(node, options) {\n        let { dom, contentDOM } = DOMSerializer.renderSpec(doc(options), this.nodes[node.type.name](node));\n        if (contentDOM) {\n            if (node.isLeaf)\n                throw new RangeError(\"Content hole not allowed in a leaf node spec\");\n            this.serializeFragment(node.content, options, contentDOM);\n        }\n        return dom;\n    }\n    /**\n    Serialize this node to a DOM node. This can be useful when you\n    need to serialize a part of a document, as opposed to the whole\n    document. To serialize a whole document, use\n    [`serializeFragment`](https://prosemirror.net/docs/ref/#model.DOMSerializer.serializeFragment) on\n    its [content](https://prosemirror.net/docs/ref/#model.Node.content).\n    */\n    serializeNode(node, options = {}) {\n        let dom = this.serializeNodeInner(node, options);\n        for (let i = node.marks.length - 1; i >= 0; i--) {\n            let wrap = this.serializeMark(node.marks[i], node.isInline, options);\n            if (wrap) {\n                (wrap.contentDOM || wrap.dom).appendChild(dom);\n                dom = wrap.dom;\n            }\n        }\n        return dom;\n    }\n    /**\n    @internal\n    */\n    serializeMark(mark, inline, options = {}) {\n        let toDOM = this.marks[mark.type.name];\n        return toDOM && DOMSerializer.renderSpec(doc(options), toDOM(mark, inline));\n    }\n    /**\n    Render an [output spec](https://prosemirror.net/docs/ref/#model.DOMOutputSpec) to a DOM node. If\n    the spec has a hole (zero) in it, `contentDOM` will point at the\n    node with the hole.\n    */\n    static renderSpec(doc, structure, xmlNS = null) {\n        if (typeof structure == \"string\")\n            return { dom: doc.createTextNode(structure) };\n        if (structure.nodeType != null)\n            return { dom: structure };\n        if (structure.dom && structure.dom.nodeType != null)\n            return structure;\n        let tagName = structure[0], space = tagName.indexOf(\" \");\n        if (space > 0) {\n            xmlNS = tagName.slice(0, space);\n            tagName = tagName.slice(space + 1);\n        }\n        let contentDOM;\n        let dom = (xmlNS ? doc.createElementNS(xmlNS, tagName) : doc.createElement(tagName));\n        let attrs = structure[1], start = 1;\n        if (attrs && typeof attrs == \"object\" && attrs.nodeType == null && !Array.isArray(attrs)) {\n            start = 2;\n            for (let name in attrs)\n                if (attrs[name] != null) {\n                    let space = name.indexOf(\" \");\n                    if (space > 0)\n                        dom.setAttributeNS(name.slice(0, space), name.slice(space + 1), attrs[name]);\n                    else\n                        dom.setAttribute(name, attrs[name]);\n                }\n        }\n        for (let i = start; i < structure.length; i++) {\n            let child = structure[i];\n            if (child === 0) {\n                if (i < structure.length - 1 || i > start)\n                    throw new RangeError(\"Content hole must be the only child of its parent node\");\n                return { dom, contentDOM: dom };\n            }\n            else {\n                let { dom: inner, contentDOM: innerContent } = DOMSerializer.renderSpec(doc, child, xmlNS);\n                dom.appendChild(inner);\n                if (innerContent) {\n                    if (contentDOM)\n                        throw new RangeError(\"Multiple content holes\");\n                    contentDOM = innerContent;\n                }\n            }\n        }\n        return { dom, contentDOM };\n    }\n    /**\n    Build a serializer using the [`toDOM`](https://prosemirror.net/docs/ref/#model.NodeSpec.toDOM)\n    properties in a schema's node and mark specs.\n    */\n    static fromSchema(schema) {\n        return schema.cached.domSerializer ||\n            (schema.cached.domSerializer = new DOMSerializer(this.nodesFromSchema(schema), this.marksFromSchema(schema)));\n    }\n    /**\n    Gather the serializers in a schema's node specs into an object.\n    This can be useful as a base to build a custom serializer from.\n    */\n    static nodesFromSchema(schema) {\n        let result = gatherToDOM(schema.nodes);\n        if (!result.text)\n            result.text = node => node.text;\n        return result;\n    }\n    /**\n    Gather the serializers in a schema's mark specs into an object.\n    */\n    static marksFromSchema(schema) {\n        return gatherToDOM(schema.marks);\n    }\n}\nfunction gatherToDOM(obj) {\n    let result = {};\n    for (let name in obj) {\n        let toDOM = obj[name].spec.toDOM;\n        if (toDOM)\n            result[name] = toDOM;\n    }\n    return result;\n}\nfunction doc(options) {\n    return options.document || window.document;\n}\n\nexport { ContentMatch, DOMParser, DOMSerializer, Fragment, Mark, MarkType, Node, NodeRange, NodeType, ReplaceError, ResolvedPos, Schema, Slice };\n","import { ReplaceError, Slice, Fragment, MarkType, Mark } from 'prosemirror-model';\n\n// Recovery values encode a range index and an offset. They are\n// represented as numbers, because tons of them will be created when\n// mapping, for example, a large number of decorations. The number's\n// lower 16 bits provide the index, the remaining bits the offset.\n//\n// Note: We intentionally don't use bit shift operators to en- and\n// decode these, since those clip to 32 bits, which we might in rare\n// cases want to overflow. A 64-bit float can represent 48-bit\n// integers precisely.\nconst lower16 = 0xffff;\nconst factor16 = Math.pow(2, 16);\nfunction makeRecover(index, offset) { return index + offset * factor16; }\nfunction recoverIndex(value) { return value & lower16; }\nfunction recoverOffset(value) { return (value - (value & lower16)) / factor16; }\nconst DEL_BEFORE = 1, DEL_AFTER = 2, DEL_ACROSS = 4, DEL_SIDE = 8;\n/**\nAn object representing a mapped position with extra\ninformation.\n*/\nclass MapResult {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The mapped version of the position.\n    */\n    pos, \n    /**\n    @internal\n    */\n    delInfo, \n    /**\n    @internal\n    */\n    recover) {\n        this.pos = pos;\n        this.delInfo = delInfo;\n        this.recover = recover;\n    }\n    /**\n    Tells you whether the position was deleted, that is, whether the\n    step removed the token on the side queried (via the `assoc`)\n    argument from the document.\n    */\n    get deleted() { return (this.delInfo & DEL_SIDE) > 0; }\n    /**\n    Tells you whether the token before the mapped position was deleted.\n    */\n    get deletedBefore() { return (this.delInfo & (DEL_BEFORE | DEL_ACROSS)) > 0; }\n    /**\n    True when the token after the mapped position was deleted.\n    */\n    get deletedAfter() { return (this.delInfo & (DEL_AFTER | DEL_ACROSS)) > 0; }\n    /**\n    Tells whether any of the steps mapped through deletes across the\n    position (including both the token before and after the\n    position).\n    */\n    get deletedAcross() { return (this.delInfo & DEL_ACROSS) > 0; }\n}\n/**\nA map describing the deletions and insertions made by a step, which\ncan be used to find the correspondence between positions in the\npre-step version of a document and the same position in the\npost-step version.\n*/\nclass StepMap {\n    /**\n    Create a position map. The modifications to the document are\n    represented as an array of numbers, in which each group of three\n    represents a modified chunk as `[start, oldSize, newSize]`.\n    */\n    constructor(\n    /**\n    @internal\n    */\n    ranges, \n    /**\n    @internal\n    */\n    inverted = false) {\n        this.ranges = ranges;\n        this.inverted = inverted;\n        if (!ranges.length && StepMap.empty)\n            return StepMap.empty;\n    }\n    /**\n    @internal\n    */\n    recover(value) {\n        let diff = 0, index = recoverIndex(value);\n        if (!this.inverted)\n            for (let i = 0; i < index; i++)\n                diff += this.ranges[i * 3 + 2] - this.ranges[i * 3 + 1];\n        return this.ranges[index * 3] + diff + recoverOffset(value);\n    }\n    mapResult(pos, assoc = 1) { return this._map(pos, assoc, false); }\n    map(pos, assoc = 1) { return this._map(pos, assoc, true); }\n    /**\n    @internal\n    */\n    _map(pos, assoc, simple) {\n        let diff = 0, oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i] - (this.inverted ? diff : 0);\n            if (start > pos)\n                break;\n            let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex], end = start + oldSize;\n            if (pos <= end) {\n                let side = !oldSize ? assoc : pos == start ? -1 : pos == end ? 1 : assoc;\n                let result = start + diff + (side < 0 ? 0 : newSize);\n                if (simple)\n                    return result;\n                let recover = pos == (assoc < 0 ? start : end) ? null : makeRecover(i / 3, pos - start);\n                let del = pos == start ? DEL_AFTER : pos == end ? DEL_BEFORE : DEL_ACROSS;\n                if (assoc < 0 ? pos != start : pos != end)\n                    del |= DEL_SIDE;\n                return new MapResult(result, del, recover);\n            }\n            diff += newSize - oldSize;\n        }\n        return simple ? pos + diff : new MapResult(pos + diff, 0, null);\n    }\n    /**\n    @internal\n    */\n    touches(pos, recover) {\n        let diff = 0, index = recoverIndex(recover);\n        let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i] - (this.inverted ? diff : 0);\n            if (start > pos)\n                break;\n            let oldSize = this.ranges[i + oldIndex], end = start + oldSize;\n            if (pos <= end && i == index * 3)\n                return true;\n            diff += this.ranges[i + newIndex] - oldSize;\n        }\n        return false;\n    }\n    /**\n    Calls the given function on each of the changed ranges included in\n    this map.\n    */\n    forEach(f) {\n        let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0, diff = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i], oldStart = start - (this.inverted ? diff : 0), newStart = start + (this.inverted ? 0 : diff);\n            let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex];\n            f(oldStart, oldStart + oldSize, newStart, newStart + newSize);\n            diff += newSize - oldSize;\n        }\n    }\n    /**\n    Create an inverted version of this map. The result can be used to\n    map positions in the post-step document to the pre-step document.\n    */\n    invert() {\n        return new StepMap(this.ranges, !this.inverted);\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return (this.inverted ? \"-\" : \"\") + JSON.stringify(this.ranges);\n    }\n    /**\n    Create a map that moves all positions by offset `n` (which may be\n    negative). This can be useful when applying steps meant for a\n    sub-document to a larger document, or vice-versa.\n    */\n    static offset(n) {\n        return n == 0 ? StepMap.empty : new StepMap(n < 0 ? [0, -n, 0] : [0, 0, n]);\n    }\n}\n/**\nA StepMap that contains no changed ranges.\n*/\nStepMap.empty = new StepMap([]);\n/**\nA mapping represents a pipeline of zero or more [step\nmaps](https://prosemirror.net/docs/ref/#transform.StepMap). It has special provisions for losslessly\nhandling mapping positions through a series of steps in which some\nsteps are inverted versions of earlier steps. (This comes up when\n‘[rebasing](/docs/guide/#transform.rebasing)’ steps for\ncollaboration or history management.)\n*/\nclass Mapping {\n    /**\n    Create a new mapping with the given position maps.\n    */\n    constructor(\n    /**\n    The step maps in this mapping.\n    */\n    maps = [], \n    /**\n    @internal\n    */\n    mirror, \n    /**\n    The starting position in the `maps` array, used when `map` or\n    `mapResult` is called.\n    */\n    from = 0, \n    /**\n    The end position in the `maps` array.\n    */\n    to = maps.length) {\n        this.maps = maps;\n        this.mirror = mirror;\n        this.from = from;\n        this.to = to;\n    }\n    /**\n    Create a mapping that maps only through a part of this one.\n    */\n    slice(from = 0, to = this.maps.length) {\n        return new Mapping(this.maps, this.mirror, from, to);\n    }\n    /**\n    @internal\n    */\n    copy() {\n        return new Mapping(this.maps.slice(), this.mirror && this.mirror.slice(), this.from, this.to);\n    }\n    /**\n    Add a step map to the end of this mapping. If `mirrors` is\n    given, it should be the index of the step map that is the mirror\n    image of this one.\n    */\n    appendMap(map, mirrors) {\n        this.to = this.maps.push(map);\n        if (mirrors != null)\n            this.setMirror(this.maps.length - 1, mirrors);\n    }\n    /**\n    Add all the step maps in a given mapping to this one (preserving\n    mirroring information).\n    */\n    appendMapping(mapping) {\n        for (let i = 0, startSize = this.maps.length; i < mapping.maps.length; i++) {\n            let mirr = mapping.getMirror(i);\n            this.appendMap(mapping.maps[i], mirr != null && mirr < i ? startSize + mirr : undefined);\n        }\n    }\n    /**\n    Finds the offset of the step map that mirrors the map at the\n    given offset, in this mapping (as per the second argument to\n    `appendMap`).\n    */\n    getMirror(n) {\n        if (this.mirror)\n            for (let i = 0; i < this.mirror.length; i++)\n                if (this.mirror[i] == n)\n                    return this.mirror[i + (i % 2 ? -1 : 1)];\n    }\n    /**\n    @internal\n    */\n    setMirror(n, m) {\n        if (!this.mirror)\n            this.mirror = [];\n        this.mirror.push(n, m);\n    }\n    /**\n    Append the inverse of the given mapping to this one.\n    */\n    appendMappingInverted(mapping) {\n        for (let i = mapping.maps.length - 1, totalSize = this.maps.length + mapping.maps.length; i >= 0; i--) {\n            let mirr = mapping.getMirror(i);\n            this.appendMap(mapping.maps[i].invert(), mirr != null && mirr > i ? totalSize - mirr - 1 : undefined);\n        }\n    }\n    /**\n    Create an inverted version of this mapping.\n    */\n    invert() {\n        let inverse = new Mapping;\n        inverse.appendMappingInverted(this);\n        return inverse;\n    }\n    /**\n    Map a position through this mapping.\n    */\n    map(pos, assoc = 1) {\n        if (this.mirror)\n            return this._map(pos, assoc, true);\n        for (let i = this.from; i < this.to; i++)\n            pos = this.maps[i].map(pos, assoc);\n        return pos;\n    }\n    /**\n    Map a position through this mapping, returning a mapping\n    result.\n    */\n    mapResult(pos, assoc = 1) { return this._map(pos, assoc, false); }\n    /**\n    @internal\n    */\n    _map(pos, assoc, simple) {\n        let delInfo = 0;\n        for (let i = this.from; i < this.to; i++) {\n            let map = this.maps[i], result = map.mapResult(pos, assoc);\n            if (result.recover != null) {\n                let corr = this.getMirror(i);\n                if (corr != null && corr > i && corr < this.to) {\n                    i = corr;\n                    pos = this.maps[corr].recover(result.recover);\n                    continue;\n                }\n            }\n            delInfo |= result.delInfo;\n            pos = result.pos;\n        }\n        return simple ? pos : new MapResult(pos, delInfo, null);\n    }\n}\n\nconst stepsByID = Object.create(null);\n/**\nA step object represents an atomic change. It generally applies\nonly to the document it was created for, since the positions\nstored in it will only make sense for that document.\n\nNew steps are defined by creating classes that extend `Step`,\noverriding the `apply`, `invert`, `map`, `getMap` and `fromJSON`\nmethods, and registering your class with a unique\nJSON-serialization identifier using\n[`Step.jsonID`](https://prosemirror.net/docs/ref/#transform.Step^jsonID).\n*/\nclass Step {\n    /**\n    Get the step map that represents the changes made by this step,\n    and which can be used to transform between positions in the old\n    and the new document.\n    */\n    getMap() { return StepMap.empty; }\n    /**\n    Try to merge this step with another one, to be applied directly\n    after it. Returns the merged step when possible, null if the\n    steps can't be merged.\n    */\n    merge(other) { return null; }\n    /**\n    Deserialize a step from its JSON representation. Will call\n    through to the step class' own implementation of this method.\n    */\n    static fromJSON(schema, json) {\n        if (!json || !json.stepType)\n            throw new RangeError(\"Invalid input for Step.fromJSON\");\n        let type = stepsByID[json.stepType];\n        if (!type)\n            throw new RangeError(`No step type ${json.stepType} defined`);\n        return type.fromJSON(schema, json);\n    }\n    /**\n    To be able to serialize steps to JSON, each step needs a string\n    ID to attach to its JSON representation. Use this method to\n    register an ID for your step classes. Try to pick something\n    that's unlikely to clash with steps from other modules.\n    */\n    static jsonID(id, stepClass) {\n        if (id in stepsByID)\n            throw new RangeError(\"Duplicate use of step JSON ID \" + id);\n        stepsByID[id] = stepClass;\n        stepClass.prototype.jsonID = id;\n        return stepClass;\n    }\n}\n/**\nThe result of [applying](https://prosemirror.net/docs/ref/#transform.Step.apply) a step. Contains either a\nnew document or a failure value.\n*/\nclass StepResult {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The transformed document, if successful.\n    */\n    doc, \n    /**\n    The failure message, if unsuccessful.\n    */\n    failed) {\n        this.doc = doc;\n        this.failed = failed;\n    }\n    /**\n    Create a successful step result.\n    */\n    static ok(doc) { return new StepResult(doc, null); }\n    /**\n    Create a failed step result.\n    */\n    static fail(message) { return new StepResult(null, message); }\n    /**\n    Call [`Node.replace`](https://prosemirror.net/docs/ref/#model.Node.replace) with the given\n    arguments. Create a successful result if it succeeds, and a\n    failed one if it throws a `ReplaceError`.\n    */\n    static fromReplace(doc, from, to, slice) {\n        try {\n            return StepResult.ok(doc.replace(from, to, slice));\n        }\n        catch (e) {\n            if (e instanceof ReplaceError)\n                return StepResult.fail(e.message);\n            throw e;\n        }\n    }\n}\n\nfunction mapFragment(fragment, f, parent) {\n    let mapped = [];\n    for (let i = 0; i < fragment.childCount; i++) {\n        let child = fragment.child(i);\n        if (child.content.size)\n            child = child.copy(mapFragment(child.content, f, child));\n        if (child.isInline)\n            child = f(child, parent, i);\n        mapped.push(child);\n    }\n    return Fragment.fromArray(mapped);\n}\n/**\nAdd a mark to all inline content between two positions.\n*/\nclass AddMarkStep extends Step {\n    /**\n    Create a mark step.\n    */\n    constructor(\n    /**\n    The start of the marked range.\n    */\n    from, \n    /**\n    The end of the marked range.\n    */\n    to, \n    /**\n    The mark to add.\n    */\n    mark) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let oldSlice = doc.slice(this.from, this.to), $from = doc.resolve(this.from);\n        let parent = $from.node($from.sharedDepth(this.to));\n        let slice = new Slice(mapFragment(oldSlice.content, (node, parent) => {\n            if (!node.isAtom || !parent.type.allowsMarkType(this.mark.type))\n                return node;\n            return node.mark(this.mark.addToSet(node.marks));\n        }, parent), oldSlice.openStart, oldSlice.openEnd);\n        return StepResult.fromReplace(doc, this.from, this.to, slice);\n    }\n    invert() {\n        return new RemoveMarkStep(this.from, this.to, this.mark);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deleted && to.deleted || from.pos >= to.pos)\n            return null;\n        return new AddMarkStep(from.pos, to.pos, this.mark);\n    }\n    merge(other) {\n        if (other instanceof AddMarkStep &&\n            other.mark.eq(this.mark) &&\n            this.from <= other.to && this.to >= other.from)\n            return new AddMarkStep(Math.min(this.from, other.from), Math.max(this.to, other.to), this.mark);\n        return null;\n    }\n    toJSON() {\n        return { stepType: \"addMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for AddMarkStep.fromJSON\");\n        return new AddMarkStep(json.from, json.to, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"addMark\", AddMarkStep);\n/**\nRemove a mark from all inline content between two positions.\n*/\nclass RemoveMarkStep extends Step {\n    /**\n    Create a mark-removing step.\n    */\n    constructor(\n    /**\n    The start of the unmarked range.\n    */\n    from, \n    /**\n    The end of the unmarked range.\n    */\n    to, \n    /**\n    The mark to remove.\n    */\n    mark) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let oldSlice = doc.slice(this.from, this.to);\n        let slice = new Slice(mapFragment(oldSlice.content, node => {\n            return node.mark(this.mark.removeFromSet(node.marks));\n        }, doc), oldSlice.openStart, oldSlice.openEnd);\n        return StepResult.fromReplace(doc, this.from, this.to, slice);\n    }\n    invert() {\n        return new AddMarkStep(this.from, this.to, this.mark);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deleted && to.deleted || from.pos >= to.pos)\n            return null;\n        return new RemoveMarkStep(from.pos, to.pos, this.mark);\n    }\n    merge(other) {\n        if (other instanceof RemoveMarkStep &&\n            other.mark.eq(this.mark) &&\n            this.from <= other.to && this.to >= other.from)\n            return new RemoveMarkStep(Math.min(this.from, other.from), Math.max(this.to, other.to), this.mark);\n        return null;\n    }\n    toJSON() {\n        return { stepType: \"removeMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for RemoveMarkStep.fromJSON\");\n        return new RemoveMarkStep(json.from, json.to, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"removeMark\", RemoveMarkStep);\n/**\nAdd a mark to a specific node.\n*/\nclass AddNodeMarkStep extends Step {\n    /**\n    Create a node mark step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The mark to add.\n    */\n    mark) {\n        super();\n        this.pos = pos;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at mark step's position\");\n        let updated = node.type.create(node.attrs, null, this.mark.addToSet(node.marks));\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    invert(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (node) {\n            let newSet = this.mark.addToSet(node.marks);\n            if (newSet.length == node.marks.length) {\n                for (let i = 0; i < node.marks.length; i++)\n                    if (!node.marks[i].isInSet(newSet))\n                        return new AddNodeMarkStep(this.pos, node.marks[i]);\n                return new AddNodeMarkStep(this.pos, this.mark);\n            }\n        }\n        return new RemoveNodeMarkStep(this.pos, this.mark);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new AddNodeMarkStep(pos.pos, this.mark);\n    }\n    toJSON() {\n        return { stepType: \"addNodeMark\", pos: this.pos, mark: this.mark.toJSON() };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for AddNodeMarkStep.fromJSON\");\n        return new AddNodeMarkStep(json.pos, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"addNodeMark\", AddNodeMarkStep);\n/**\nRemove a mark from a specific node.\n*/\nclass RemoveNodeMarkStep extends Step {\n    /**\n    Create a mark-removing step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The mark to remove.\n    */\n    mark) {\n        super();\n        this.pos = pos;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at mark step's position\");\n        let updated = node.type.create(node.attrs, null, this.mark.removeFromSet(node.marks));\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    invert(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node || !this.mark.isInSet(node.marks))\n            return this;\n        return new AddNodeMarkStep(this.pos, this.mark);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new RemoveNodeMarkStep(pos.pos, this.mark);\n    }\n    toJSON() {\n        return { stepType: \"removeNodeMark\", pos: this.pos, mark: this.mark.toJSON() };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for RemoveNodeMarkStep.fromJSON\");\n        return new RemoveNodeMarkStep(json.pos, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"removeNodeMark\", RemoveNodeMarkStep);\n\n/**\nReplace a part of the document with a slice of new content.\n*/\nclass ReplaceStep extends Step {\n    /**\n    The given `slice` should fit the 'gap' between `from` and\n    `to`—the depths must line up, and the surrounding nodes must be\n    able to be joined with the open sides of the slice. When\n    `structure` is true, the step will fail if the content between\n    from and to is not just a sequence of closing and then opening\n    tokens (this is to guard against rebased replace steps\n    overwriting something they weren't supposed to).\n    */\n    constructor(\n    /**\n    The start position of the replaced range.\n    */\n    from, \n    /**\n    The end position of the replaced range.\n    */\n    to, \n    /**\n    The slice to insert.\n    */\n    slice, \n    /**\n    @internal\n    */\n    structure = false) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.slice = slice;\n        this.structure = structure;\n    }\n    apply(doc) {\n        if (this.structure && contentBetween(doc, this.from, this.to))\n            return StepResult.fail(\"Structure replace would overwrite content\");\n        return StepResult.fromReplace(doc, this.from, this.to, this.slice);\n    }\n    getMap() {\n        return new StepMap([this.from, this.to - this.from, this.slice.size]);\n    }\n    invert(doc) {\n        return new ReplaceStep(this.from, this.from + this.slice.size, doc.slice(this.from, this.to));\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deletedAcross && to.deletedAcross)\n            return null;\n        return new ReplaceStep(from.pos, Math.max(from.pos, to.pos), this.slice);\n    }\n    merge(other) {\n        if (!(other instanceof ReplaceStep) || other.structure || this.structure)\n            return null;\n        if (this.from + this.slice.size == other.from && !this.slice.openEnd && !other.slice.openStart) {\n            let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n                : new Slice(this.slice.content.append(other.slice.content), this.slice.openStart, other.slice.openEnd);\n            return new ReplaceStep(this.from, this.to + (other.to - other.from), slice, this.structure);\n        }\n        else if (other.to == this.from && !this.slice.openStart && !other.slice.openEnd) {\n            let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n                : new Slice(other.slice.content.append(this.slice.content), other.slice.openStart, this.slice.openEnd);\n            return new ReplaceStep(other.from, this.to, slice, this.structure);\n        }\n        else {\n            return null;\n        }\n    }\n    toJSON() {\n        let json = { stepType: \"replace\", from: this.from, to: this.to };\n        if (this.slice.size)\n            json.slice = this.slice.toJSON();\n        if (this.structure)\n            json.structure = true;\n        return json;\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for ReplaceStep.fromJSON\");\n        return new ReplaceStep(json.from, json.to, Slice.fromJSON(schema, json.slice), !!json.structure);\n    }\n}\nStep.jsonID(\"replace\", ReplaceStep);\n/**\nReplace a part of the document with a slice of content, but\npreserve a range of the replaced content by moving it into the\nslice.\n*/\nclass ReplaceAroundStep extends Step {\n    /**\n    Create a replace-around step with the given range and gap.\n    `insert` should be the point in the slice into which the content\n    of the gap should be moved. `structure` has the same meaning as\n    it has in the [`ReplaceStep`](https://prosemirror.net/docs/ref/#transform.ReplaceStep) class.\n    */\n    constructor(\n    /**\n    The start position of the replaced range.\n    */\n    from, \n    /**\n    The end position of the replaced range.\n    */\n    to, \n    /**\n    The start of preserved range.\n    */\n    gapFrom, \n    /**\n    The end of preserved range.\n    */\n    gapTo, \n    /**\n    The slice to insert.\n    */\n    slice, \n    /**\n    The position in the slice where the preserved range should be\n    inserted.\n    */\n    insert, \n    /**\n    @internal\n    */\n    structure = false) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.gapFrom = gapFrom;\n        this.gapTo = gapTo;\n        this.slice = slice;\n        this.insert = insert;\n        this.structure = structure;\n    }\n    apply(doc) {\n        if (this.structure && (contentBetween(doc, this.from, this.gapFrom) ||\n            contentBetween(doc, this.gapTo, this.to)))\n            return StepResult.fail(\"Structure gap-replace would overwrite content\");\n        let gap = doc.slice(this.gapFrom, this.gapTo);\n        if (gap.openStart || gap.openEnd)\n            return StepResult.fail(\"Gap is not a flat range\");\n        let inserted = this.slice.insertAt(this.insert, gap.content);\n        if (!inserted)\n            return StepResult.fail(\"Content does not fit in gap\");\n        return StepResult.fromReplace(doc, this.from, this.to, inserted);\n    }\n    getMap() {\n        return new StepMap([this.from, this.gapFrom - this.from, this.insert,\n            this.gapTo, this.to - this.gapTo, this.slice.size - this.insert]);\n    }\n    invert(doc) {\n        let gap = this.gapTo - this.gapFrom;\n        return new ReplaceAroundStep(this.from, this.from + this.slice.size + gap, this.from + this.insert, this.from + this.insert + gap, doc.slice(this.from, this.to).removeBetween(this.gapFrom - this.from, this.gapTo - this.from), this.gapFrom - this.from, this.structure);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        let gapFrom = mapping.map(this.gapFrom, -1), gapTo = mapping.map(this.gapTo, 1);\n        if ((from.deletedAcross && to.deletedAcross) || gapFrom < from.pos || gapTo > to.pos)\n            return null;\n        return new ReplaceAroundStep(from.pos, to.pos, gapFrom, gapTo, this.slice, this.insert, this.structure);\n    }\n    toJSON() {\n        let json = { stepType: \"replaceAround\", from: this.from, to: this.to,\n            gapFrom: this.gapFrom, gapTo: this.gapTo, insert: this.insert };\n        if (this.slice.size)\n            json.slice = this.slice.toJSON();\n        if (this.structure)\n            json.structure = true;\n        return json;\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\" ||\n            typeof json.gapFrom != \"number\" || typeof json.gapTo != \"number\" || typeof json.insert != \"number\")\n            throw new RangeError(\"Invalid input for ReplaceAroundStep.fromJSON\");\n        return new ReplaceAroundStep(json.from, json.to, json.gapFrom, json.gapTo, Slice.fromJSON(schema, json.slice), json.insert, !!json.structure);\n    }\n}\nStep.jsonID(\"replaceAround\", ReplaceAroundStep);\nfunction contentBetween(doc, from, to) {\n    let $from = doc.resolve(from), dist = to - from, depth = $from.depth;\n    while (dist > 0 && depth > 0 && $from.indexAfter(depth) == $from.node(depth).childCount) {\n        depth--;\n        dist--;\n    }\n    if (dist > 0) {\n        let next = $from.node(depth).maybeChild($from.indexAfter(depth));\n        while (dist > 0) {\n            if (!next || next.isLeaf)\n                return true;\n            next = next.firstChild;\n            dist--;\n        }\n    }\n    return false;\n}\n\nfunction addMark(tr, from, to, mark) {\n    let removed = [], added = [];\n    let removing, adding;\n    tr.doc.nodesBetween(from, to, (node, pos, parent) => {\n        if (!node.isInline)\n            return;\n        let marks = node.marks;\n        if (!mark.isInSet(marks) && parent.type.allowsMarkType(mark.type)) {\n            let start = Math.max(pos, from), end = Math.min(pos + node.nodeSize, to);\n            let newSet = mark.addToSet(marks);\n            for (let i = 0; i < marks.length; i++) {\n                if (!marks[i].isInSet(newSet)) {\n                    if (removing && removing.to == start && removing.mark.eq(marks[i]))\n                        removing.to = end;\n                    else\n                        removed.push(removing = new RemoveMarkStep(start, end, marks[i]));\n                }\n            }\n            if (adding && adding.to == start)\n                adding.to = end;\n            else\n                added.push(adding = new AddMarkStep(start, end, mark));\n        }\n    });\n    removed.forEach(s => tr.step(s));\n    added.forEach(s => tr.step(s));\n}\nfunction removeMark(tr, from, to, mark) {\n    let matched = [], step = 0;\n    tr.doc.nodesBetween(from, to, (node, pos) => {\n        if (!node.isInline)\n            return;\n        step++;\n        let toRemove = null;\n        if (mark instanceof MarkType) {\n            let set = node.marks, found;\n            while (found = mark.isInSet(set)) {\n                (toRemove || (toRemove = [])).push(found);\n                set = found.removeFromSet(set);\n            }\n        }\n        else if (mark) {\n            if (mark.isInSet(node.marks))\n                toRemove = [mark];\n        }\n        else {\n            toRemove = node.marks;\n        }\n        if (toRemove && toRemove.length) {\n            let end = Math.min(pos + node.nodeSize, to);\n            for (let i = 0; i < toRemove.length; i++) {\n                let style = toRemove[i], found;\n                for (let j = 0; j < matched.length; j++) {\n                    let m = matched[j];\n                    if (m.step == step - 1 && style.eq(matched[j].style))\n                        found = m;\n                }\n                if (found) {\n                    found.to = end;\n                    found.step = step;\n                }\n                else {\n                    matched.push({ style, from: Math.max(pos, from), to: end, step });\n                }\n            }\n        }\n    });\n    matched.forEach(m => tr.step(new RemoveMarkStep(m.from, m.to, m.style)));\n}\nfunction clearIncompatible(tr, pos, parentType, match = parentType.contentMatch) {\n    let node = tr.doc.nodeAt(pos);\n    let replSteps = [], cur = pos + 1;\n    for (let i = 0; i < node.childCount; i++) {\n        let child = node.child(i), end = cur + child.nodeSize;\n        let allowed = match.matchType(child.type);\n        if (!allowed) {\n            replSteps.push(new ReplaceStep(cur, end, Slice.empty));\n        }\n        else {\n            match = allowed;\n            for (let j = 0; j < child.marks.length; j++)\n                if (!parentType.allowsMarkType(child.marks[j].type))\n                    tr.step(new RemoveMarkStep(cur, end, child.marks[j]));\n            if (child.isText && !parentType.spec.code) {\n                let m, newline = /\\r?\\n|\\r/g, slice;\n                while (m = newline.exec(child.text)) {\n                    if (!slice)\n                        slice = new Slice(Fragment.from(parentType.schema.text(\" \", parentType.allowedMarks(child.marks))), 0, 0);\n                    replSteps.push(new ReplaceStep(cur + m.index, cur + m.index + m[0].length, slice));\n                }\n            }\n        }\n        cur = end;\n    }\n    if (!match.validEnd) {\n        let fill = match.fillBefore(Fragment.empty, true);\n        tr.replace(cur, cur, new Slice(fill, 0, 0));\n    }\n    for (let i = replSteps.length - 1; i >= 0; i--)\n        tr.step(replSteps[i]);\n}\n\nfunction canCut(node, start, end) {\n    return (start == 0 || node.canReplace(start, node.childCount)) &&\n        (end == node.childCount || node.canReplace(0, end));\n}\n/**\nTry to find a target depth to which the content in the given range\ncan be lifted. Will not go across\n[isolating](https://prosemirror.net/docs/ref/#model.NodeSpec.isolating) parent nodes.\n*/\nfunction liftTarget(range) {\n    let parent = range.parent;\n    let content = parent.content.cutByIndex(range.startIndex, range.endIndex);\n    for (let depth = range.depth;; --depth) {\n        let node = range.$from.node(depth);\n        let index = range.$from.index(depth), endIndex = range.$to.indexAfter(depth);\n        if (depth < range.depth && node.canReplace(index, endIndex, content))\n            return depth;\n        if (depth == 0 || node.type.spec.isolating || !canCut(node, index, endIndex))\n            break;\n    }\n    return null;\n}\nfunction lift(tr, range, target) {\n    let { $from, $to, depth } = range;\n    let gapStart = $from.before(depth + 1), gapEnd = $to.after(depth + 1);\n    let start = gapStart, end = gapEnd;\n    let before = Fragment.empty, openStart = 0;\n    for (let d = depth, splitting = false; d > target; d--)\n        if (splitting || $from.index(d) > 0) {\n            splitting = true;\n            before = Fragment.from($from.node(d).copy(before));\n            openStart++;\n        }\n        else {\n            start--;\n        }\n    let after = Fragment.empty, openEnd = 0;\n    for (let d = depth, splitting = false; d > target; d--)\n        if (splitting || $to.after(d + 1) < $to.end(d)) {\n            splitting = true;\n            after = Fragment.from($to.node(d).copy(after));\n            openEnd++;\n        }\n        else {\n            end++;\n        }\n    tr.step(new ReplaceAroundStep(start, end, gapStart, gapEnd, new Slice(before.append(after), openStart, openEnd), before.size - openStart, true));\n}\n/**\nTry to find a valid way to wrap the content in the given range in a\nnode of the given type. May introduce extra nodes around and inside\nthe wrapper node, if necessary. Returns null if no valid wrapping\ncould be found. When `innerRange` is given, that range's content is\nused as the content to fit into the wrapping, instead of the\ncontent of `range`.\n*/\nfunction findWrapping(range, nodeType, attrs = null, innerRange = range) {\n    let around = findWrappingOutside(range, nodeType);\n    let inner = around && findWrappingInside(innerRange, nodeType);\n    if (!inner)\n        return null;\n    return around.map(withAttrs)\n        .concat({ type: nodeType, attrs }).concat(inner.map(withAttrs));\n}\nfunction withAttrs(type) { return { type, attrs: null }; }\nfunction findWrappingOutside(range, type) {\n    let { parent, startIndex, endIndex } = range;\n    let around = parent.contentMatchAt(startIndex).findWrapping(type);\n    if (!around)\n        return null;\n    let outer = around.length ? around[0] : type;\n    return parent.canReplaceWith(startIndex, endIndex, outer) ? around : null;\n}\nfunction findWrappingInside(range, type) {\n    let { parent, startIndex, endIndex } = range;\n    let inner = parent.child(startIndex);\n    let inside = type.contentMatch.findWrapping(inner.type);\n    if (!inside)\n        return null;\n    let lastType = inside.length ? inside[inside.length - 1] : type;\n    let innerMatch = lastType.contentMatch;\n    for (let i = startIndex; innerMatch && i < endIndex; i++)\n        innerMatch = innerMatch.matchType(parent.child(i).type);\n    if (!innerMatch || !innerMatch.validEnd)\n        return null;\n    return inside;\n}\nfunction wrap(tr, range, wrappers) {\n    let content = Fragment.empty;\n    for (let i = wrappers.length - 1; i >= 0; i--) {\n        if (content.size) {\n            let match = wrappers[i].type.contentMatch.matchFragment(content);\n            if (!match || !match.validEnd)\n                throw new RangeError(\"Wrapper type given to Transform.wrap does not form valid content of its parent wrapper\");\n        }\n        content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content));\n    }\n    let start = range.start, end = range.end;\n    tr.step(new ReplaceAroundStep(start, end, start, end, new Slice(content, 0, 0), wrappers.length, true));\n}\nfunction setBlockType(tr, from, to, type, attrs) {\n    if (!type.isTextblock)\n        throw new RangeError(\"Type given to setBlockType should be a textblock\");\n    let mapFrom = tr.steps.length;\n    tr.doc.nodesBetween(from, to, (node, pos) => {\n        if (node.isTextblock && !node.hasMarkup(type, attrs) && canChangeType(tr.doc, tr.mapping.slice(mapFrom).map(pos), type)) {\n            // Ensure all markup that isn't allowed in the new node type is cleared\n            tr.clearIncompatible(tr.mapping.slice(mapFrom).map(pos, 1), type);\n            let mapping = tr.mapping.slice(mapFrom);\n            let startM = mapping.map(pos, 1), endM = mapping.map(pos + node.nodeSize, 1);\n            tr.step(new ReplaceAroundStep(startM, endM, startM + 1, endM - 1, new Slice(Fragment.from(type.create(attrs, null, node.marks)), 0, 0), 1, true));\n            return false;\n        }\n    });\n}\nfunction canChangeType(doc, pos, type) {\n    let $pos = doc.resolve(pos), index = $pos.index();\n    return $pos.parent.canReplaceWith(index, index + 1, type);\n}\n/**\nChange the type, attributes, and/or marks of the node at `pos`.\nWhen `type` isn't given, the existing node type is preserved,\n*/\nfunction setNodeMarkup(tr, pos, type, attrs, marks) {\n    let node = tr.doc.nodeAt(pos);\n    if (!node)\n        throw new RangeError(\"No node at given position\");\n    if (!type)\n        type = node.type;\n    let newNode = type.create(attrs, null, marks || node.marks);\n    if (node.isLeaf)\n        return tr.replaceWith(pos, pos + node.nodeSize, newNode);\n    if (!type.validContent(node.content))\n        throw new RangeError(\"Invalid content for node type \" + type.name);\n    tr.step(new ReplaceAroundStep(pos, pos + node.nodeSize, pos + 1, pos + node.nodeSize - 1, new Slice(Fragment.from(newNode), 0, 0), 1, true));\n}\n/**\nCheck whether splitting at the given position is allowed.\n*/\nfunction canSplit(doc, pos, depth = 1, typesAfter) {\n    let $pos = doc.resolve(pos), base = $pos.depth - depth;\n    let innerType = (typesAfter && typesAfter[typesAfter.length - 1]) || $pos.parent;\n    if (base < 0 || $pos.parent.type.spec.isolating ||\n        !$pos.parent.canReplace($pos.index(), $pos.parent.childCount) ||\n        !innerType.type.validContent($pos.parent.content.cutByIndex($pos.index(), $pos.parent.childCount)))\n        return false;\n    for (let d = $pos.depth - 1, i = depth - 2; d > base; d--, i--) {\n        let node = $pos.node(d), index = $pos.index(d);\n        if (node.type.spec.isolating)\n            return false;\n        let rest = node.content.cutByIndex(index, node.childCount);\n        let overrideChild = typesAfter && typesAfter[i + 1];\n        if (overrideChild)\n            rest = rest.replaceChild(0, overrideChild.type.create(overrideChild.attrs));\n        let after = (typesAfter && typesAfter[i]) || node;\n        if (!node.canReplace(index + 1, node.childCount) || !after.type.validContent(rest))\n            return false;\n    }\n    let index = $pos.indexAfter(base);\n    let baseType = typesAfter && typesAfter[0];\n    return $pos.node(base).canReplaceWith(index, index, baseType ? baseType.type : $pos.node(base + 1).type);\n}\nfunction split(tr, pos, depth = 1, typesAfter) {\n    let $pos = tr.doc.resolve(pos), before = Fragment.empty, after = Fragment.empty;\n    for (let d = $pos.depth, e = $pos.depth - depth, i = depth - 1; d > e; d--, i--) {\n        before = Fragment.from($pos.node(d).copy(before));\n        let typeAfter = typesAfter && typesAfter[i];\n        after = Fragment.from(typeAfter ? typeAfter.type.create(typeAfter.attrs, after) : $pos.node(d).copy(after));\n    }\n    tr.step(new ReplaceStep(pos, pos, new Slice(before.append(after), depth, depth), true));\n}\n/**\nTest whether the blocks before and after a given position can be\njoined.\n*/\nfunction canJoin(doc, pos) {\n    let $pos = doc.resolve(pos), index = $pos.index();\n    return joinable($pos.nodeBefore, $pos.nodeAfter) &&\n        $pos.parent.canReplace(index, index + 1);\n}\nfunction joinable(a, b) {\n    return !!(a && b && !a.isLeaf && a.canAppend(b));\n}\n/**\nFind an ancestor of the given position that can be joined to the\nblock before (or after if `dir` is positive). Returns the joinable\npoint, if any.\n*/\nfunction joinPoint(doc, pos, dir = -1) {\n    let $pos = doc.resolve(pos);\n    for (let d = $pos.depth;; d--) {\n        let before, after, index = $pos.index(d);\n        if (d == $pos.depth) {\n            before = $pos.nodeBefore;\n            after = $pos.nodeAfter;\n        }\n        else if (dir > 0) {\n            before = $pos.node(d + 1);\n            index++;\n            after = $pos.node(d).maybeChild(index);\n        }\n        else {\n            before = $pos.node(d).maybeChild(index - 1);\n            after = $pos.node(d + 1);\n        }\n        if (before && !before.isTextblock && joinable(before, after) &&\n            $pos.node(d).canReplace(index, index + 1))\n            return pos;\n        if (d == 0)\n            break;\n        pos = dir < 0 ? $pos.before(d) : $pos.after(d);\n    }\n}\nfunction join(tr, pos, depth) {\n    let step = new ReplaceStep(pos - depth, pos + depth, Slice.empty, true);\n    tr.step(step);\n}\n/**\nTry to find a point where a node of the given type can be inserted\nnear `pos`, by searching up the node hierarchy when `pos` itself\nisn't a valid place but is at the start or end of a node. Return\nnull if no position was found.\n*/\nfunction insertPoint(doc, pos, nodeType) {\n    let $pos = doc.resolve(pos);\n    if ($pos.parent.canReplaceWith($pos.index(), $pos.index(), nodeType))\n        return pos;\n    if ($pos.parentOffset == 0)\n        for (let d = $pos.depth - 1; d >= 0; d--) {\n            let index = $pos.index(d);\n            if ($pos.node(d).canReplaceWith(index, index, nodeType))\n                return $pos.before(d + 1);\n            if (index > 0)\n                return null;\n        }\n    if ($pos.parentOffset == $pos.parent.content.size)\n        for (let d = $pos.depth - 1; d >= 0; d--) {\n            let index = $pos.indexAfter(d);\n            if ($pos.node(d).canReplaceWith(index, index, nodeType))\n                return $pos.after(d + 1);\n            if (index < $pos.node(d).childCount)\n                return null;\n        }\n    return null;\n}\n/**\nFinds a position at or around the given position where the given\nslice can be inserted. Will look at parent nodes' nearest boundary\nand try there, even if the original position wasn't directly at the\nstart or end of that node. Returns null when no position was found.\n*/\nfunction dropPoint(doc, pos, slice) {\n    let $pos = doc.resolve(pos);\n    if (!slice.content.size)\n        return pos;\n    let content = slice.content;\n    for (let i = 0; i < slice.openStart; i++)\n        content = content.firstChild.content;\n    for (let pass = 1; pass <= (slice.openStart == 0 && slice.size ? 2 : 1); pass++) {\n        for (let d = $pos.depth; d >= 0; d--) {\n            let bias = d == $pos.depth ? 0 : $pos.pos <= ($pos.start(d + 1) + $pos.end(d + 1)) / 2 ? -1 : 1;\n            let insertPos = $pos.index(d) + (bias > 0 ? 1 : 0);\n            let parent = $pos.node(d), fits = false;\n            if (pass == 1) {\n                fits = parent.canReplace(insertPos, insertPos, content);\n            }\n            else {\n                let wrapping = parent.contentMatchAt(insertPos).findWrapping(content.firstChild.type);\n                fits = wrapping && parent.canReplaceWith(insertPos, insertPos, wrapping[0]);\n            }\n            if (fits)\n                return bias == 0 ? $pos.pos : bias < 0 ? $pos.before(d + 1) : $pos.after(d + 1);\n        }\n    }\n    return null;\n}\n\n/**\n‘Fit’ a slice into a given position in the document, producing a\n[step](https://prosemirror.net/docs/ref/#transform.Step) that inserts it. Will return null if\nthere's no meaningful way to insert the slice here, or inserting it\nwould be a no-op (an empty slice over an empty range).\n*/\nfunction replaceStep(doc, from, to = from, slice = Slice.empty) {\n    if (from == to && !slice.size)\n        return null;\n    let $from = doc.resolve(from), $to = doc.resolve(to);\n    // Optimization -- avoid work if it's obvious that it's not needed.\n    if (fitsTrivially($from, $to, slice))\n        return new ReplaceStep(from, to, slice);\n    return new Fitter($from, $to, slice).fit();\n}\nfunction fitsTrivially($from, $to, slice) {\n    return !slice.openStart && !slice.openEnd && $from.start() == $to.start() &&\n        $from.parent.canReplace($from.index(), $to.index(), slice.content);\n}\n// Algorithm for 'placing' the elements of a slice into a gap:\n//\n// We consider the content of each node that is open to the left to be\n// independently placeable. I.e. in <p(\"foo\"), p(\"bar\")>, when the\n// paragraph on the left is open, \"foo\" can be placed (somewhere on\n// the left side of the replacement gap) independently from p(\"bar\").\n//\n// This class tracks the state of the placement progress in the\n// following properties:\n//\n//  - `frontier` holds a stack of `{type, match}` objects that\n//    represent the open side of the replacement. It starts at\n//    `$from`, then moves forward as content is placed, and is finally\n//    reconciled with `$to`.\n//\n//  - `unplaced` is a slice that represents the content that hasn't\n//    been placed yet.\n//\n//  - `placed` is a fragment of placed content. Its open-start value\n//    is implicit in `$from`, and its open-end value in `frontier`.\nclass Fitter {\n    constructor($from, $to, unplaced) {\n        this.$from = $from;\n        this.$to = $to;\n        this.unplaced = unplaced;\n        this.frontier = [];\n        this.placed = Fragment.empty;\n        for (let i = 0; i <= $from.depth; i++) {\n            let node = $from.node(i);\n            this.frontier.push({\n                type: node.type,\n                match: node.contentMatchAt($from.indexAfter(i))\n            });\n        }\n        for (let i = $from.depth; i > 0; i--)\n            this.placed = Fragment.from($from.node(i).copy(this.placed));\n    }\n    get depth() { return this.frontier.length - 1; }\n    fit() {\n        // As long as there's unplaced content, try to place some of it.\n        // If that fails, either increase the open score of the unplaced\n        // slice, or drop nodes from it, and then try again.\n        while (this.unplaced.size) {\n            let fit = this.findFittable();\n            if (fit)\n                this.placeNodes(fit);\n            else\n                this.openMore() || this.dropNode();\n        }\n        // When there's inline content directly after the frontier _and_\n        // directly after `this.$to`, we must generate a `ReplaceAround`\n        // step that pulls that content into the node after the frontier.\n        // That means the fitting must be done to the end of the textblock\n        // node after `this.$to`, not `this.$to` itself.\n        let moveInline = this.mustMoveInline(), placedSize = this.placed.size - this.depth - this.$from.depth;\n        let $from = this.$from, $to = this.close(moveInline < 0 ? this.$to : $from.doc.resolve(moveInline));\n        if (!$to)\n            return null;\n        // If closing to `$to` succeeded, create a step\n        let content = this.placed, openStart = $from.depth, openEnd = $to.depth;\n        while (openStart && openEnd && content.childCount == 1) { // Normalize by dropping open parent nodes\n            content = content.firstChild.content;\n            openStart--;\n            openEnd--;\n        }\n        let slice = new Slice(content, openStart, openEnd);\n        if (moveInline > -1)\n            return new ReplaceAroundStep($from.pos, moveInline, this.$to.pos, this.$to.end(), slice, placedSize);\n        if (slice.size || $from.pos != this.$to.pos) // Don't generate no-op steps\n            return new ReplaceStep($from.pos, $to.pos, slice);\n        return null;\n    }\n    // Find a position on the start spine of `this.unplaced` that has\n    // content that can be moved somewhere on the frontier. Returns two\n    // depths, one for the slice and one for the frontier.\n    findFittable() {\n        let startDepth = this.unplaced.openStart;\n        for (let cur = this.unplaced.content, d = 0, openEnd = this.unplaced.openEnd; d < startDepth; d++) {\n            let node = cur.firstChild;\n            if (cur.childCount > 1)\n                openEnd = 0;\n            if (node.type.spec.isolating && openEnd <= d) {\n                startDepth = d;\n                break;\n            }\n            cur = node.content;\n        }\n        // Only try wrapping nodes (pass 2) after finding a place without\n        // wrapping failed.\n        for (let pass = 1; pass <= 2; pass++) {\n            for (let sliceDepth = pass == 1 ? startDepth : this.unplaced.openStart; sliceDepth >= 0; sliceDepth--) {\n                let fragment, parent = null;\n                if (sliceDepth) {\n                    parent = contentAt(this.unplaced.content, sliceDepth - 1).firstChild;\n                    fragment = parent.content;\n                }\n                else {\n                    fragment = this.unplaced.content;\n                }\n                let first = fragment.firstChild;\n                for (let frontierDepth = this.depth; frontierDepth >= 0; frontierDepth--) {\n                    let { type, match } = this.frontier[frontierDepth], wrap, inject = null;\n                    // In pass 1, if the next node matches, or there is no next\n                    // node but the parents look compatible, we've found a\n                    // place.\n                    if (pass == 1 && (first ? match.matchType(first.type) || (inject = match.fillBefore(Fragment.from(first), false))\n                        : parent && type.compatibleContent(parent.type)))\n                        return { sliceDepth, frontierDepth, parent, inject };\n                    // In pass 2, look for a set of wrapping nodes that make\n                    // `first` fit here.\n                    else if (pass == 2 && first && (wrap = match.findWrapping(first.type)))\n                        return { sliceDepth, frontierDepth, parent, wrap };\n                    // Don't continue looking further up if the parent node\n                    // would fit here.\n                    if (parent && match.matchType(parent.type))\n                        break;\n                }\n            }\n        }\n    }\n    openMore() {\n        let { content, openStart, openEnd } = this.unplaced;\n        let inner = contentAt(content, openStart);\n        if (!inner.childCount || inner.firstChild.isLeaf)\n            return false;\n        this.unplaced = new Slice(content, openStart + 1, Math.max(openEnd, inner.size + openStart >= content.size - openEnd ? openStart + 1 : 0));\n        return true;\n    }\n    dropNode() {\n        let { content, openStart, openEnd } = this.unplaced;\n        let inner = contentAt(content, openStart);\n        if (inner.childCount <= 1 && openStart > 0) {\n            let openAtEnd = content.size - openStart <= openStart + inner.size;\n            this.unplaced = new Slice(dropFromFragment(content, openStart - 1, 1), openStart - 1, openAtEnd ? openStart - 1 : openEnd);\n        }\n        else {\n            this.unplaced = new Slice(dropFromFragment(content, openStart, 1), openStart, openEnd);\n        }\n    }\n    // Move content from the unplaced slice at `sliceDepth` to the\n    // frontier node at `frontierDepth`. Close that frontier node when\n    // applicable.\n    placeNodes({ sliceDepth, frontierDepth, parent, inject, wrap }) {\n        while (this.depth > frontierDepth)\n            this.closeFrontierNode();\n        if (wrap)\n            for (let i = 0; i < wrap.length; i++)\n                this.openFrontierNode(wrap[i]);\n        let slice = this.unplaced, fragment = parent ? parent.content : slice.content;\n        let openStart = slice.openStart - sliceDepth;\n        let taken = 0, add = [];\n        let { match, type } = this.frontier[frontierDepth];\n        if (inject) {\n            for (let i = 0; i < inject.childCount; i++)\n                add.push(inject.child(i));\n            match = match.matchFragment(inject);\n        }\n        // Computes the amount of (end) open nodes at the end of the\n        // fragment. When 0, the parent is open, but no more. When\n        // negative, nothing is open.\n        let openEndCount = (fragment.size + sliceDepth) - (slice.content.size - slice.openEnd);\n        // Scan over the fragment, fitting as many child nodes as\n        // possible.\n        while (taken < fragment.childCount) {\n            let next = fragment.child(taken), matches = match.matchType(next.type);\n            if (!matches)\n                break;\n            taken++;\n            if (taken > 1 || openStart == 0 || next.content.size) { // Drop empty open nodes\n                match = matches;\n                add.push(closeNodeStart(next.mark(type.allowedMarks(next.marks)), taken == 1 ? openStart : 0, taken == fragment.childCount ? openEndCount : -1));\n            }\n        }\n        let toEnd = taken == fragment.childCount;\n        if (!toEnd)\n            openEndCount = -1;\n        this.placed = addToFragment(this.placed, frontierDepth, Fragment.from(add));\n        this.frontier[frontierDepth].match = match;\n        // If the parent types match, and the entire node was moved, and\n        // it's not open, close this frontier node right away.\n        if (toEnd && openEndCount < 0 && parent && parent.type == this.frontier[this.depth].type && this.frontier.length > 1)\n            this.closeFrontierNode();\n        // Add new frontier nodes for any open nodes at the end.\n        for (let i = 0, cur = fragment; i < openEndCount; i++) {\n            let node = cur.lastChild;\n            this.frontier.push({ type: node.type, match: node.contentMatchAt(node.childCount) });\n            cur = node.content;\n        }\n        // Update `this.unplaced`. Drop the entire node from which we\n        // placed it we got to its end, otherwise just drop the placed\n        // nodes.\n        this.unplaced = !toEnd ? new Slice(dropFromFragment(slice.content, sliceDepth, taken), slice.openStart, slice.openEnd)\n            : sliceDepth == 0 ? Slice.empty\n                : new Slice(dropFromFragment(slice.content, sliceDepth - 1, 1), sliceDepth - 1, openEndCount < 0 ? slice.openEnd : sliceDepth - 1);\n    }\n    mustMoveInline() {\n        if (!this.$to.parent.isTextblock)\n            return -1;\n        let top = this.frontier[this.depth], level;\n        if (!top.type.isTextblock || !contentAfterFits(this.$to, this.$to.depth, top.type, top.match, false) ||\n            (this.$to.depth == this.depth && (level = this.findCloseLevel(this.$to)) && level.depth == this.depth))\n            return -1;\n        let { depth } = this.$to, after = this.$to.after(depth);\n        while (depth > 1 && after == this.$to.end(--depth))\n            ++after;\n        return after;\n    }\n    findCloseLevel($to) {\n        scan: for (let i = Math.min(this.depth, $to.depth); i >= 0; i--) {\n            let { match, type } = this.frontier[i];\n            let dropInner = i < $to.depth && $to.end(i + 1) == $to.pos + ($to.depth - (i + 1));\n            let fit = contentAfterFits($to, i, type, match, dropInner);\n            if (!fit)\n                continue;\n            for (let d = i - 1; d >= 0; d--) {\n                let { match, type } = this.frontier[d];\n                let matches = contentAfterFits($to, d, type, match, true);\n                if (!matches || matches.childCount)\n                    continue scan;\n            }\n            return { depth: i, fit, move: dropInner ? $to.doc.resolve($to.after(i + 1)) : $to };\n        }\n    }\n    close($to) {\n        let close = this.findCloseLevel($to);\n        if (!close)\n            return null;\n        while (this.depth > close.depth)\n            this.closeFrontierNode();\n        if (close.fit.childCount)\n            this.placed = addToFragment(this.placed, close.depth, close.fit);\n        $to = close.move;\n        for (let d = close.depth + 1; d <= $to.depth; d++) {\n            let node = $to.node(d), add = node.type.contentMatch.fillBefore(node.content, true, $to.index(d));\n            this.openFrontierNode(node.type, node.attrs, add);\n        }\n        return $to;\n    }\n    openFrontierNode(type, attrs = null, content) {\n        let top = this.frontier[this.depth];\n        top.match = top.match.matchType(type);\n        this.placed = addToFragment(this.placed, this.depth, Fragment.from(type.create(attrs, content)));\n        this.frontier.push({ type, match: type.contentMatch });\n    }\n    closeFrontierNode() {\n        let open = this.frontier.pop();\n        let add = open.match.fillBefore(Fragment.empty, true);\n        if (add.childCount)\n            this.placed = addToFragment(this.placed, this.frontier.length, add);\n    }\n}\nfunction dropFromFragment(fragment, depth, count) {\n    if (depth == 0)\n        return fragment.cutByIndex(count, fragment.childCount);\n    return fragment.replaceChild(0, fragment.firstChild.copy(dropFromFragment(fragment.firstChild.content, depth - 1, count)));\n}\nfunction addToFragment(fragment, depth, content) {\n    if (depth == 0)\n        return fragment.append(content);\n    return fragment.replaceChild(fragment.childCount - 1, fragment.lastChild.copy(addToFragment(fragment.lastChild.content, depth - 1, content)));\n}\nfunction contentAt(fragment, depth) {\n    for (let i = 0; i < depth; i++)\n        fragment = fragment.firstChild.content;\n    return fragment;\n}\nfunction closeNodeStart(node, openStart, openEnd) {\n    if (openStart <= 0)\n        return node;\n    let frag = node.content;\n    if (openStart > 1)\n        frag = frag.replaceChild(0, closeNodeStart(frag.firstChild, openStart - 1, frag.childCount == 1 ? openEnd - 1 : 0));\n    if (openStart > 0) {\n        frag = node.type.contentMatch.fillBefore(frag).append(frag);\n        if (openEnd <= 0)\n            frag = frag.append(node.type.contentMatch.matchFragment(frag).fillBefore(Fragment.empty, true));\n    }\n    return node.copy(frag);\n}\nfunction contentAfterFits($to, depth, type, match, open) {\n    let node = $to.node(depth), index = open ? $to.indexAfter(depth) : $to.index(depth);\n    if (index == node.childCount && !type.compatibleContent(node.type))\n        return null;\n    let fit = match.fillBefore(node.content, true, index);\n    return fit && !invalidMarks(type, node.content, index) ? fit : null;\n}\nfunction invalidMarks(type, fragment, start) {\n    for (let i = start; i < fragment.childCount; i++)\n        if (!type.allowsMarks(fragment.child(i).marks))\n            return true;\n    return false;\n}\nfunction definesContent(type) {\n    return type.spec.defining || type.spec.definingForContent;\n}\nfunction replaceRange(tr, from, to, slice) {\n    if (!slice.size)\n        return tr.deleteRange(from, to);\n    let $from = tr.doc.resolve(from), $to = tr.doc.resolve(to);\n    if (fitsTrivially($from, $to, slice))\n        return tr.step(new ReplaceStep(from, to, slice));\n    let targetDepths = coveredDepths($from, tr.doc.resolve(to));\n    // Can't replace the whole document, so remove 0 if it's present\n    if (targetDepths[targetDepths.length - 1] == 0)\n        targetDepths.pop();\n    // Negative numbers represent not expansion over the whole node at\n    // that depth, but replacing from $from.before(-D) to $to.pos.\n    let preferredTarget = -($from.depth + 1);\n    targetDepths.unshift(preferredTarget);\n    // This loop picks a preferred target depth, if one of the covering\n    // depths is not outside of a defining node, and adds negative\n    // depths for any depth that has $from at its start and does not\n    // cross a defining node.\n    for (let d = $from.depth, pos = $from.pos - 1; d > 0; d--, pos--) {\n        let spec = $from.node(d).type.spec;\n        if (spec.defining || spec.definingAsContext || spec.isolating)\n            break;\n        if (targetDepths.indexOf(d) > -1)\n            preferredTarget = d;\n        else if ($from.before(d) == pos)\n            targetDepths.splice(1, 0, -d);\n    }\n    // Try to fit each possible depth of the slice into each possible\n    // target depth, starting with the preferred depths.\n    let preferredTargetIndex = targetDepths.indexOf(preferredTarget);\n    let leftNodes = [], preferredDepth = slice.openStart;\n    for (let content = slice.content, i = 0;; i++) {\n        let node = content.firstChild;\n        leftNodes.push(node);\n        if (i == slice.openStart)\n            break;\n        content = node.content;\n    }\n    // Back up preferredDepth to cover defining textblocks directly\n    // above it, possibly skipping a non-defining textblock.\n    for (let d = preferredDepth - 1; d >= 0; d--) {\n        let leftNode = leftNodes[d], def = definesContent(leftNode.type);\n        if (def && !leftNode.sameMarkup($from.node(Math.abs(preferredTarget) - 1)))\n            preferredDepth = d;\n        else if (def || !leftNode.type.isTextblock)\n            break;\n    }\n    for (let j = slice.openStart; j >= 0; j--) {\n        let openDepth = (j + preferredDepth + 1) % (slice.openStart + 1);\n        let insert = leftNodes[openDepth];\n        if (!insert)\n            continue;\n        for (let i = 0; i < targetDepths.length; i++) {\n            // Loop over possible expansion levels, starting with the\n            // preferred one\n            let targetDepth = targetDepths[(i + preferredTargetIndex) % targetDepths.length], expand = true;\n            if (targetDepth < 0) {\n                expand = false;\n                targetDepth = -targetDepth;\n            }\n            let parent = $from.node(targetDepth - 1), index = $from.index(targetDepth - 1);\n            if (parent.canReplaceWith(index, index, insert.type, insert.marks))\n                return tr.replace($from.before(targetDepth), expand ? $to.after(targetDepth) : to, new Slice(closeFragment(slice.content, 0, slice.openStart, openDepth), openDepth, slice.openEnd));\n        }\n    }\n    let startSteps = tr.steps.length;\n    for (let i = targetDepths.length - 1; i >= 0; i--) {\n        tr.replace(from, to, slice);\n        if (tr.steps.length > startSteps)\n            break;\n        let depth = targetDepths[i];\n        if (depth < 0)\n            continue;\n        from = $from.before(depth);\n        to = $to.after(depth);\n    }\n}\nfunction closeFragment(fragment, depth, oldOpen, newOpen, parent) {\n    if (depth < oldOpen) {\n        let first = fragment.firstChild;\n        fragment = fragment.replaceChild(0, first.copy(closeFragment(first.content, depth + 1, oldOpen, newOpen, first)));\n    }\n    if (depth > newOpen) {\n        let match = parent.contentMatchAt(0);\n        let start = match.fillBefore(fragment).append(fragment);\n        fragment = start.append(match.matchFragment(start).fillBefore(Fragment.empty, true));\n    }\n    return fragment;\n}\nfunction replaceRangeWith(tr, from, to, node) {\n    if (!node.isInline && from == to && tr.doc.resolve(from).parent.content.size) {\n        let point = insertPoint(tr.doc, from, node.type);\n        if (point != null)\n            from = to = point;\n    }\n    tr.replaceRange(from, to, new Slice(Fragment.from(node), 0, 0));\n}\nfunction deleteRange(tr, from, to) {\n    let $from = tr.doc.resolve(from), $to = tr.doc.resolve(to);\n    let covered = coveredDepths($from, $to);\n    for (let i = 0; i < covered.length; i++) {\n        let depth = covered[i], last = i == covered.length - 1;\n        if ((last && depth == 0) || $from.node(depth).type.contentMatch.validEnd)\n            return tr.delete($from.start(depth), $to.end(depth));\n        if (depth > 0 && (last || $from.node(depth - 1).canReplace($from.index(depth - 1), $to.indexAfter(depth - 1))))\n            return tr.delete($from.before(depth), $to.after(depth));\n    }\n    for (let d = 1; d <= $from.depth && d <= $to.depth; d++) {\n        if (from - $from.start(d) == $from.depth - d && to > $from.end(d) && $to.end(d) - to != $to.depth - d)\n            return tr.delete($from.before(d), to);\n    }\n    tr.delete(from, to);\n}\n// Returns an array of all depths for which $from - $to spans the\n// whole content of the nodes at that depth.\nfunction coveredDepths($from, $to) {\n    let result = [], minDepth = Math.min($from.depth, $to.depth);\n    for (let d = minDepth; d >= 0; d--) {\n        let start = $from.start(d);\n        if (start < $from.pos - ($from.depth - d) ||\n            $to.end(d) > $to.pos + ($to.depth - d) ||\n            $from.node(d).type.spec.isolating ||\n            $to.node(d).type.spec.isolating)\n            break;\n        if (start == $to.start(d) ||\n            (d == $from.depth && d == $to.depth && $from.parent.inlineContent && $to.parent.inlineContent &&\n                d && $to.start(d - 1) == start - 1))\n            result.push(d);\n    }\n    return result;\n}\n\n/**\nUpdate an attribute in a specific node.\n*/\nclass AttrStep extends Step {\n    /**\n    Construct an attribute step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The attribute to set.\n    */\n    attr, \n    // The attribute's new value.\n    value) {\n        super();\n        this.pos = pos;\n        this.attr = attr;\n        this.value = value;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at attribute step's position\");\n        let attrs = Object.create(null);\n        for (let name in node.attrs)\n            attrs[name] = node.attrs[name];\n        attrs[this.attr] = this.value;\n        let updated = node.type.create(attrs, null, node.marks);\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    getMap() {\n        return StepMap.empty;\n    }\n    invert(doc) {\n        return new AttrStep(this.pos, this.attr, doc.nodeAt(this.pos).attrs[this.attr]);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new AttrStep(pos.pos, this.attr, this.value);\n    }\n    toJSON() {\n        return { stepType: \"attr\", pos: this.pos, attr: this.attr, value: this.value };\n    }\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\" || typeof json.attr != \"string\")\n            throw new RangeError(\"Invalid input for AttrStep.fromJSON\");\n        return new AttrStep(json.pos, json.attr, json.value);\n    }\n}\nStep.jsonID(\"attr\", AttrStep);\n/**\nUpdate an attribute in the doc node.\n*/\nclass DocAttrStep extends Step {\n    /**\n    Construct an attribute step.\n    */\n    constructor(\n    /**\n    The attribute to set.\n    */\n    attr, \n    // The attribute's new value.\n    value) {\n        super();\n        this.attr = attr;\n        this.value = value;\n    }\n    apply(doc) {\n        let attrs = Object.create(null);\n        for (let name in doc.attrs)\n            attrs[name] = doc.attrs[name];\n        attrs[this.attr] = this.value;\n        let updated = doc.type.create(attrs, doc.content, doc.marks);\n        return StepResult.ok(updated);\n    }\n    getMap() {\n        return StepMap.empty;\n    }\n    invert(doc) {\n        return new DocAttrStep(this.attr, doc.attrs[this.attr]);\n    }\n    map(mapping) {\n        return this;\n    }\n    toJSON() {\n        return { stepType: \"docAttr\", attr: this.attr, value: this.value };\n    }\n    static fromJSON(schema, json) {\n        if (typeof json.attr != \"string\")\n            throw new RangeError(\"Invalid input for DocAttrStep.fromJSON\");\n        return new DocAttrStep(json.attr, json.value);\n    }\n}\nStep.jsonID(\"docAttr\", DocAttrStep);\n\n/**\n@internal\n*/\nlet TransformError = class extends Error {\n};\nTransformError = function TransformError(message) {\n    let err = Error.call(this, message);\n    err.__proto__ = TransformError.prototype;\n    return err;\n};\nTransformError.prototype = Object.create(Error.prototype);\nTransformError.prototype.constructor = TransformError;\nTransformError.prototype.name = \"TransformError\";\n/**\nAbstraction to build up and track an array of\n[steps](https://prosemirror.net/docs/ref/#transform.Step) representing a document transformation.\n\nMost transforming methods return the `Transform` object itself, so\nthat they can be chained.\n*/\nclass Transform {\n    /**\n    Create a transform that starts with the given document.\n    */\n    constructor(\n    /**\n    The current document (the result of applying the steps in the\n    transform).\n    */\n    doc) {\n        this.doc = doc;\n        /**\n        The steps in this transform.\n        */\n        this.steps = [];\n        /**\n        The documents before each of the steps.\n        */\n        this.docs = [];\n        /**\n        A mapping with the maps for each of the steps in this transform.\n        */\n        this.mapping = new Mapping;\n    }\n    /**\n    The starting document.\n    */\n    get before() { return this.docs.length ? this.docs[0] : this.doc; }\n    /**\n    Apply a new step in this transform, saving the result. Throws an\n    error when the step fails.\n    */\n    step(step) {\n        let result = this.maybeStep(step);\n        if (result.failed)\n            throw new TransformError(result.failed);\n        return this;\n    }\n    /**\n    Try to apply a step in this transformation, ignoring it if it\n    fails. Returns the step result.\n    */\n    maybeStep(step) {\n        let result = step.apply(this.doc);\n        if (!result.failed)\n            this.addStep(step, result.doc);\n        return result;\n    }\n    /**\n    True when the document has been changed (when there are any\n    steps).\n    */\n    get docChanged() {\n        return this.steps.length > 0;\n    }\n    /**\n    @internal\n    */\n    addStep(step, doc) {\n        this.docs.push(this.doc);\n        this.steps.push(step);\n        this.mapping.appendMap(step.getMap());\n        this.doc = doc;\n    }\n    /**\n    Replace the part of the document between `from` and `to` with the\n    given `slice`.\n    */\n    replace(from, to = from, slice = Slice.empty) {\n        let step = replaceStep(this.doc, from, to, slice);\n        if (step)\n            this.step(step);\n        return this;\n    }\n    /**\n    Replace the given range with the given content, which may be a\n    fragment, node, or array of nodes.\n    */\n    replaceWith(from, to, content) {\n        return this.replace(from, to, new Slice(Fragment.from(content), 0, 0));\n    }\n    /**\n    Delete the content between the given positions.\n    */\n    delete(from, to) {\n        return this.replace(from, to, Slice.empty);\n    }\n    /**\n    Insert the given content at the given position.\n    */\n    insert(pos, content) {\n        return this.replaceWith(pos, pos, content);\n    }\n    /**\n    Replace a range of the document with a given slice, using\n    `from`, `to`, and the slice's\n    [`openStart`](https://prosemirror.net/docs/ref/#model.Slice.openStart) property as hints, rather\n    than fixed start and end points. This method may grow the\n    replaced area or close open nodes in the slice in order to get a\n    fit that is more in line with WYSIWYG expectations, by dropping\n    fully covered parent nodes of the replaced region when they are\n    marked [non-defining as\n    context](https://prosemirror.net/docs/ref/#model.NodeSpec.definingAsContext), or including an\n    open parent node from the slice that _is_ marked as [defining\n    its content](https://prosemirror.net/docs/ref/#model.NodeSpec.definingForContent).\n    \n    This is the method, for example, to handle paste. The similar\n    [`replace`](https://prosemirror.net/docs/ref/#transform.Transform.replace) method is a more\n    primitive tool which will _not_ move the start and end of its given\n    range, and is useful in situations where you need more precise\n    control over what happens.\n    */\n    replaceRange(from, to, slice) {\n        replaceRange(this, from, to, slice);\n        return this;\n    }\n    /**\n    Replace the given range with a node, but use `from` and `to` as\n    hints, rather than precise positions. When from and to are the same\n    and are at the start or end of a parent node in which the given\n    node doesn't fit, this method may _move_ them out towards a parent\n    that does allow the given node to be placed. When the given range\n    completely covers a parent node, this method may completely replace\n    that parent node.\n    */\n    replaceRangeWith(from, to, node) {\n        replaceRangeWith(this, from, to, node);\n        return this;\n    }\n    /**\n    Delete the given range, expanding it to cover fully covered\n    parent nodes until a valid replace is found.\n    */\n    deleteRange(from, to) {\n        deleteRange(this, from, to);\n        return this;\n    }\n    /**\n    Split the content in the given range off from its parent, if there\n    is sibling content before or after it, and move it up the tree to\n    the depth specified by `target`. You'll probably want to use\n    [`liftTarget`](https://prosemirror.net/docs/ref/#transform.liftTarget) to compute `target`, to make\n    sure the lift is valid.\n    */\n    lift(range, target) {\n        lift(this, range, target);\n        return this;\n    }\n    /**\n    Join the blocks around the given position. If depth is 2, their\n    last and first siblings are also joined, and so on.\n    */\n    join(pos, depth = 1) {\n        join(this, pos, depth);\n        return this;\n    }\n    /**\n    Wrap the given [range](https://prosemirror.net/docs/ref/#model.NodeRange) in the given set of wrappers.\n    The wrappers are assumed to be valid in this position, and should\n    probably be computed with [`findWrapping`](https://prosemirror.net/docs/ref/#transform.findWrapping).\n    */\n    wrap(range, wrappers) {\n        wrap(this, range, wrappers);\n        return this;\n    }\n    /**\n    Set the type of all textblocks (partly) between `from` and `to` to\n    the given node type with the given attributes.\n    */\n    setBlockType(from, to = from, type, attrs = null) {\n        setBlockType(this, from, to, type, attrs);\n        return this;\n    }\n    /**\n    Change the type, attributes, and/or marks of the node at `pos`.\n    When `type` isn't given, the existing node type is preserved,\n    */\n    setNodeMarkup(pos, type, attrs = null, marks) {\n        setNodeMarkup(this, pos, type, attrs, marks);\n        return this;\n    }\n    /**\n    Set a single attribute on a given node to a new value.\n    The `pos` addresses the document content. Use `setDocAttribute`\n    to set attributes on the document itself.\n    */\n    setNodeAttribute(pos, attr, value) {\n        this.step(new AttrStep(pos, attr, value));\n        return this;\n    }\n    /**\n    Set a single attribute on the document to a new value.\n    */\n    setDocAttribute(attr, value) {\n        this.step(new DocAttrStep(attr, value));\n        return this;\n    }\n    /**\n    Add a mark to the node at position `pos`.\n    */\n    addNodeMark(pos, mark) {\n        this.step(new AddNodeMarkStep(pos, mark));\n        return this;\n    }\n    /**\n    Remove a mark (or a mark of the given type) from the node at\n    position `pos`.\n    */\n    removeNodeMark(pos, mark) {\n        if (!(mark instanceof Mark)) {\n            let node = this.doc.nodeAt(pos);\n            if (!node)\n                throw new RangeError(\"No node at position \" + pos);\n            mark = mark.isInSet(node.marks);\n            if (!mark)\n                return this;\n        }\n        this.step(new RemoveNodeMarkStep(pos, mark));\n        return this;\n    }\n    /**\n    Split the node at the given position, and optionally, if `depth` is\n    greater than one, any number of nodes above that. By default, the\n    parts split off will inherit the node type of the original node.\n    This can be changed by passing an array of types and attributes to\n    use after the split.\n    */\n    split(pos, depth = 1, typesAfter) {\n        split(this, pos, depth, typesAfter);\n        return this;\n    }\n    /**\n    Add the given mark to the inline content between `from` and `to`.\n    */\n    addMark(from, to, mark) {\n        addMark(this, from, to, mark);\n        return this;\n    }\n    /**\n    Remove marks from inline nodes between `from` and `to`. When\n    `mark` is a single mark, remove precisely that mark. When it is\n    a mark type, remove all marks of that type. When it is null,\n    remove all marks of any type.\n    */\n    removeMark(from, to, mark) {\n        removeMark(this, from, to, mark);\n        return this;\n    }\n    /**\n    Removes all marks and nodes from the content of the node at\n    `pos` that don't match the given new parent node type. Accepts\n    an optional starting [content match](https://prosemirror.net/docs/ref/#model.ContentMatch) as\n    third argument.\n    */\n    clearIncompatible(pos, parentType, match) {\n        clearIncompatible(this, pos, parentType, match);\n        return this;\n    }\n}\n\nexport { AddMarkStep, AddNodeMarkStep, AttrStep, DocAttrStep, MapResult, Mapping, RemoveMarkStep, RemoveNodeMarkStep, ReplaceAroundStep, ReplaceStep, Step, StepMap, StepResult, Transform, TransformError, canJoin, canSplit, dropPoint, findWrapping, insertPoint, joinPoint, liftTarget, replaceStep };\n","import { Slice, Fragment, Mark, Node } from 'prosemirror-model';\nimport { ReplaceStep, ReplaceAroundStep, Transform } from 'prosemirror-transform';\n\nconst classesById = Object.create(null);\n/**\nSuperclass for editor selections. Every selection type should\nextend this. Should not be instantiated directly.\n*/\nclass Selection {\n    /**\n    Initialize a selection with the head and anchor and ranges. If no\n    ranges are given, constructs a single range across `$anchor` and\n    `$head`.\n    */\n    constructor(\n    /**\n    The resolved anchor of the selection (the side that stays in\n    place when the selection is modified).\n    */\n    $anchor, \n    /**\n    The resolved head of the selection (the side that moves when\n    the selection is modified).\n    */\n    $head, ranges) {\n        this.$anchor = $anchor;\n        this.$head = $head;\n        this.ranges = ranges || [new SelectionRange($anchor.min($head), $anchor.max($head))];\n    }\n    /**\n    The selection's anchor, as an unresolved position.\n    */\n    get anchor() { return this.$anchor.pos; }\n    /**\n    The selection's head.\n    */\n    get head() { return this.$head.pos; }\n    /**\n    The lower bound of the selection's main range.\n    */\n    get from() { return this.$from.pos; }\n    /**\n    The upper bound of the selection's main range.\n    */\n    get to() { return this.$to.pos; }\n    /**\n    The resolved lower  bound of the selection's main range.\n    */\n    get $from() {\n        return this.ranges[0].$from;\n    }\n    /**\n    The resolved upper bound of the selection's main range.\n    */\n    get $to() {\n        return this.ranges[0].$to;\n    }\n    /**\n    Indicates whether the selection contains any content.\n    */\n    get empty() {\n        let ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++)\n            if (ranges[i].$from.pos != ranges[i].$to.pos)\n                return false;\n        return true;\n    }\n    /**\n    Get the content of this selection as a slice.\n    */\n    content() {\n        return this.$from.doc.slice(this.from, this.to, true);\n    }\n    /**\n    Replace the selection with a slice or, if no slice is given,\n    delete the selection. Will append to the given transaction.\n    */\n    replace(tr, content = Slice.empty) {\n        // Put the new selection at the position after the inserted\n        // content. When that ended in an inline node, search backwards,\n        // to get the position after that node. If not, search forward.\n        let lastNode = content.content.lastChild, lastParent = null;\n        for (let i = 0; i < content.openEnd; i++) {\n            lastParent = lastNode;\n            lastNode = lastNode.lastChild;\n        }\n        let mapFrom = tr.steps.length, ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++) {\n            let { $from, $to } = ranges[i], mapping = tr.mapping.slice(mapFrom);\n            tr.replaceRange(mapping.map($from.pos), mapping.map($to.pos), i ? Slice.empty : content);\n            if (i == 0)\n                selectionToInsertionEnd(tr, mapFrom, (lastNode ? lastNode.isInline : lastParent && lastParent.isTextblock) ? -1 : 1);\n        }\n    }\n    /**\n    Replace the selection with the given node, appending the changes\n    to the given transaction.\n    */\n    replaceWith(tr, node) {\n        let mapFrom = tr.steps.length, ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++) {\n            let { $from, $to } = ranges[i], mapping = tr.mapping.slice(mapFrom);\n            let from = mapping.map($from.pos), to = mapping.map($to.pos);\n            if (i) {\n                tr.deleteRange(from, to);\n            }\n            else {\n                tr.replaceRangeWith(from, to, node);\n                selectionToInsertionEnd(tr, mapFrom, node.isInline ? -1 : 1);\n            }\n        }\n    }\n    /**\n    Find a valid cursor or leaf node selection starting at the given\n    position and searching back if `dir` is negative, and forward if\n    positive. When `textOnly` is true, only consider cursor\n    selections. Will return null when no valid selection position is\n    found.\n    */\n    static findFrom($pos, dir, textOnly = false) {\n        let inner = $pos.parent.inlineContent ? new TextSelection($pos)\n            : findSelectionIn($pos.node(0), $pos.parent, $pos.pos, $pos.index(), dir, textOnly);\n        if (inner)\n            return inner;\n        for (let depth = $pos.depth - 1; depth >= 0; depth--) {\n            let found = dir < 0\n                ? findSelectionIn($pos.node(0), $pos.node(depth), $pos.before(depth + 1), $pos.index(depth), dir, textOnly)\n                : findSelectionIn($pos.node(0), $pos.node(depth), $pos.after(depth + 1), $pos.index(depth) + 1, dir, textOnly);\n            if (found)\n                return found;\n        }\n        return null;\n    }\n    /**\n    Find a valid cursor or leaf node selection near the given\n    position. Searches forward first by default, but if `bias` is\n    negative, it will search backwards first.\n    */\n    static near($pos, bias = 1) {\n        return this.findFrom($pos, bias) || this.findFrom($pos, -bias) || new AllSelection($pos.node(0));\n    }\n    /**\n    Find the cursor or leaf node selection closest to the start of\n    the given document. Will return an\n    [`AllSelection`](https://prosemirror.net/docs/ref/#state.AllSelection) if no valid position\n    exists.\n    */\n    static atStart(doc) {\n        return findSelectionIn(doc, doc, 0, 0, 1) || new AllSelection(doc);\n    }\n    /**\n    Find the cursor or leaf node selection closest to the end of the\n    given document.\n    */\n    static atEnd(doc) {\n        return findSelectionIn(doc, doc, doc.content.size, doc.childCount, -1) || new AllSelection(doc);\n    }\n    /**\n    Deserialize the JSON representation of a selection. Must be\n    implemented for custom classes (as a static class method).\n    */\n    static fromJSON(doc, json) {\n        if (!json || !json.type)\n            throw new RangeError(\"Invalid input for Selection.fromJSON\");\n        let cls = classesById[json.type];\n        if (!cls)\n            throw new RangeError(`No selection type ${json.type} defined`);\n        return cls.fromJSON(doc, json);\n    }\n    /**\n    To be able to deserialize selections from JSON, custom selection\n    classes must register themselves with an ID string, so that they\n    can be disambiguated. Try to pick something that's unlikely to\n    clash with classes from other modules.\n    */\n    static jsonID(id, selectionClass) {\n        if (id in classesById)\n            throw new RangeError(\"Duplicate use of selection JSON ID \" + id);\n        classesById[id] = selectionClass;\n        selectionClass.prototype.jsonID = id;\n        return selectionClass;\n    }\n    /**\n    Get a [bookmark](https://prosemirror.net/docs/ref/#state.SelectionBookmark) for this selection,\n    which is a value that can be mapped without having access to a\n    current document, and later resolved to a real selection for a\n    given document again. (This is used mostly by the history to\n    track and restore old selections.) The default implementation of\n    this method just converts the selection to a text selection and\n    returns the bookmark for that.\n    */\n    getBookmark() {\n        return TextSelection.between(this.$anchor, this.$head).getBookmark();\n    }\n}\nSelection.prototype.visible = true;\n/**\nRepresents a selected range in a document.\n*/\nclass SelectionRange {\n    /**\n    Create a range.\n    */\n    constructor(\n    /**\n    The lower bound of the range.\n    */\n    $from, \n    /**\n    The upper bound of the range.\n    */\n    $to) {\n        this.$from = $from;\n        this.$to = $to;\n    }\n}\nlet warnedAboutTextSelection = false;\nfunction checkTextSelection($pos) {\n    if (!warnedAboutTextSelection && !$pos.parent.inlineContent) {\n        warnedAboutTextSelection = true;\n        console[\"warn\"](\"TextSelection endpoint not pointing into a node with inline content (\" + $pos.parent.type.name + \")\");\n    }\n}\n/**\nA text selection represents a classical editor selection, with a\nhead (the moving side) and anchor (immobile side), both of which\npoint into textblock nodes. It can be empty (a regular cursor\nposition).\n*/\nclass TextSelection extends Selection {\n    /**\n    Construct a text selection between the given points.\n    */\n    constructor($anchor, $head = $anchor) {\n        checkTextSelection($anchor);\n        checkTextSelection($head);\n        super($anchor, $head);\n    }\n    /**\n    Returns a resolved position if this is a cursor selection (an\n    empty text selection), and null otherwise.\n    */\n    get $cursor() { return this.$anchor.pos == this.$head.pos ? this.$head : null; }\n    map(doc, mapping) {\n        let $head = doc.resolve(mapping.map(this.head));\n        if (!$head.parent.inlineContent)\n            return Selection.near($head);\n        let $anchor = doc.resolve(mapping.map(this.anchor));\n        return new TextSelection($anchor.parent.inlineContent ? $anchor : $head, $head);\n    }\n    replace(tr, content = Slice.empty) {\n        super.replace(tr, content);\n        if (content == Slice.empty) {\n            let marks = this.$from.marksAcross(this.$to);\n            if (marks)\n                tr.ensureMarks(marks);\n        }\n    }\n    eq(other) {\n        return other instanceof TextSelection && other.anchor == this.anchor && other.head == this.head;\n    }\n    getBookmark() {\n        return new TextBookmark(this.anchor, this.head);\n    }\n    toJSON() {\n        return { type: \"text\", anchor: this.anchor, head: this.head };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.anchor != \"number\" || typeof json.head != \"number\")\n            throw new RangeError(\"Invalid input for TextSelection.fromJSON\");\n        return new TextSelection(doc.resolve(json.anchor), doc.resolve(json.head));\n    }\n    /**\n    Create a text selection from non-resolved positions.\n    */\n    static create(doc, anchor, head = anchor) {\n        let $anchor = doc.resolve(anchor);\n        return new this($anchor, head == anchor ? $anchor : doc.resolve(head));\n    }\n    /**\n    Return a text selection that spans the given positions or, if\n    they aren't text positions, find a text selection near them.\n    `bias` determines whether the method searches forward (default)\n    or backwards (negative number) first. Will fall back to calling\n    [`Selection.near`](https://prosemirror.net/docs/ref/#state.Selection^near) when the document\n    doesn't contain a valid text position.\n    */\n    static between($anchor, $head, bias) {\n        let dPos = $anchor.pos - $head.pos;\n        if (!bias || dPos)\n            bias = dPos >= 0 ? 1 : -1;\n        if (!$head.parent.inlineContent) {\n            let found = Selection.findFrom($head, bias, true) || Selection.findFrom($head, -bias, true);\n            if (found)\n                $head = found.$head;\n            else\n                return Selection.near($head, bias);\n        }\n        if (!$anchor.parent.inlineContent) {\n            if (dPos == 0) {\n                $anchor = $head;\n            }\n            else {\n                $anchor = (Selection.findFrom($anchor, -bias, true) || Selection.findFrom($anchor, bias, true)).$anchor;\n                if (($anchor.pos < $head.pos) != (dPos < 0))\n                    $anchor = $head;\n            }\n        }\n        return new TextSelection($anchor, $head);\n    }\n}\nSelection.jsonID(\"text\", TextSelection);\nclass TextBookmark {\n    constructor(anchor, head) {\n        this.anchor = anchor;\n        this.head = head;\n    }\n    map(mapping) {\n        return new TextBookmark(mapping.map(this.anchor), mapping.map(this.head));\n    }\n    resolve(doc) {\n        return TextSelection.between(doc.resolve(this.anchor), doc.resolve(this.head));\n    }\n}\n/**\nA node selection is a selection that points at a single node. All\nnodes marked [selectable](https://prosemirror.net/docs/ref/#model.NodeSpec.selectable) can be the\ntarget of a node selection. In such a selection, `from` and `to`\npoint directly before and after the selected node, `anchor` equals\n`from`, and `head` equals `to`..\n*/\nclass NodeSelection extends Selection {\n    /**\n    Create a node selection. Does not verify the validity of its\n    argument.\n    */\n    constructor($pos) {\n        let node = $pos.nodeAfter;\n        let $end = $pos.node(0).resolve($pos.pos + node.nodeSize);\n        super($pos, $end);\n        this.node = node;\n    }\n    map(doc, mapping) {\n        let { deleted, pos } = mapping.mapResult(this.anchor);\n        let $pos = doc.resolve(pos);\n        if (deleted)\n            return Selection.near($pos);\n        return new NodeSelection($pos);\n    }\n    content() {\n        return new Slice(Fragment.from(this.node), 0, 0);\n    }\n    eq(other) {\n        return other instanceof NodeSelection && other.anchor == this.anchor;\n    }\n    toJSON() {\n        return { type: \"node\", anchor: this.anchor };\n    }\n    getBookmark() { return new NodeBookmark(this.anchor); }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.anchor != \"number\")\n            throw new RangeError(\"Invalid input for NodeSelection.fromJSON\");\n        return new NodeSelection(doc.resolve(json.anchor));\n    }\n    /**\n    Create a node selection from non-resolved positions.\n    */\n    static create(doc, from) {\n        return new NodeSelection(doc.resolve(from));\n    }\n    /**\n    Determines whether the given node may be selected as a node\n    selection.\n    */\n    static isSelectable(node) {\n        return !node.isText && node.type.spec.selectable !== false;\n    }\n}\nNodeSelection.prototype.visible = false;\nSelection.jsonID(\"node\", NodeSelection);\nclass NodeBookmark {\n    constructor(anchor) {\n        this.anchor = anchor;\n    }\n    map(mapping) {\n        let { deleted, pos } = mapping.mapResult(this.anchor);\n        return deleted ? new TextBookmark(pos, pos) : new NodeBookmark(pos);\n    }\n    resolve(doc) {\n        let $pos = doc.resolve(this.anchor), node = $pos.nodeAfter;\n        if (node && NodeSelection.isSelectable(node))\n            return new NodeSelection($pos);\n        return Selection.near($pos);\n    }\n}\n/**\nA selection type that represents selecting the whole document\n(which can not necessarily be expressed with a text selection, when\nthere are for example leaf block nodes at the start or end of the\ndocument).\n*/\nclass AllSelection extends Selection {\n    /**\n    Create an all-selection over the given document.\n    */\n    constructor(doc) {\n        super(doc.resolve(0), doc.resolve(doc.content.size));\n    }\n    replace(tr, content = Slice.empty) {\n        if (content == Slice.empty) {\n            tr.delete(0, tr.doc.content.size);\n            let sel = Selection.atStart(tr.doc);\n            if (!sel.eq(tr.selection))\n                tr.setSelection(sel);\n        }\n        else {\n            super.replace(tr, content);\n        }\n    }\n    toJSON() { return { type: \"all\" }; }\n    /**\n    @internal\n    */\n    static fromJSON(doc) { return new AllSelection(doc); }\n    map(doc) { return new AllSelection(doc); }\n    eq(other) { return other instanceof AllSelection; }\n    getBookmark() { return AllBookmark; }\n}\nSelection.jsonID(\"all\", AllSelection);\nconst AllBookmark = {\n    map() { return this; },\n    resolve(doc) { return new AllSelection(doc); }\n};\n// FIXME we'll need some awareness of text direction when scanning for selections\n// Try to find a selection inside the given node. `pos` points at the\n// position where the search starts. When `text` is true, only return\n// text selections.\nfunction findSelectionIn(doc, node, pos, index, dir, text = false) {\n    if (node.inlineContent)\n        return TextSelection.create(doc, pos);\n    for (let i = index - (dir > 0 ? 0 : 1); dir > 0 ? i < node.childCount : i >= 0; i += dir) {\n        let child = node.child(i);\n        if (!child.isAtom) {\n            let inner = findSelectionIn(doc, child, pos + dir, dir < 0 ? child.childCount : 0, dir, text);\n            if (inner)\n                return inner;\n        }\n        else if (!text && NodeSelection.isSelectable(child)) {\n            return NodeSelection.create(doc, pos - (dir < 0 ? child.nodeSize : 0));\n        }\n        pos += child.nodeSize * dir;\n    }\n    return null;\n}\nfunction selectionToInsertionEnd(tr, startLen, bias) {\n    let last = tr.steps.length - 1;\n    if (last < startLen)\n        return;\n    let step = tr.steps[last];\n    if (!(step instanceof ReplaceStep || step instanceof ReplaceAroundStep))\n        return;\n    let map = tr.mapping.maps[last], end;\n    map.forEach((_from, _to, _newFrom, newTo) => { if (end == null)\n        end = newTo; });\n    tr.setSelection(Selection.near(tr.doc.resolve(end), bias));\n}\n\nconst UPDATED_SEL = 1, UPDATED_MARKS = 2, UPDATED_SCROLL = 4;\n/**\nAn editor state transaction, which can be applied to a state to\ncreate an updated state. Use\n[`EditorState.tr`](https://prosemirror.net/docs/ref/#state.EditorState.tr) to create an instance.\n\nTransactions track changes to the document (they are a subclass of\n[`Transform`](https://prosemirror.net/docs/ref/#transform.Transform)), but also other state changes,\nlike selection updates and adjustments of the set of [stored\nmarks](https://prosemirror.net/docs/ref/#state.EditorState.storedMarks). In addition, you can store\nmetadata properties in a transaction, which are extra pieces of\ninformation that client code or plugins can use to describe what a\ntransaction represents, so that they can update their [own\nstate](https://prosemirror.net/docs/ref/#state.StateField) accordingly.\n\nThe [editor view](https://prosemirror.net/docs/ref/#view.EditorView) uses a few metadata\nproperties: it will attach a property `\"pointer\"` with the value\n`true` to selection transactions directly caused by mouse or touch\ninput, a `\"composition\"` property holding an ID identifying the\ncomposition that caused it to transactions caused by composed DOM\ninput, and a `\"uiEvent\"` property of that may be `\"paste\"`,\n`\"cut\"`, or `\"drop\"`.\n*/\nclass Transaction extends Transform {\n    /**\n    @internal\n    */\n    constructor(state) {\n        super(state.doc);\n        // The step count for which the current selection is valid.\n        this.curSelectionFor = 0;\n        // Bitfield to track which aspects of the state were updated by\n        // this transaction.\n        this.updated = 0;\n        // Object used to store metadata properties for the transaction.\n        this.meta = Object.create(null);\n        this.time = Date.now();\n        this.curSelection = state.selection;\n        this.storedMarks = state.storedMarks;\n    }\n    /**\n    The transaction's current selection. This defaults to the editor\n    selection [mapped](https://prosemirror.net/docs/ref/#state.Selection.map) through the steps in the\n    transaction, but can be overwritten with\n    [`setSelection`](https://prosemirror.net/docs/ref/#state.Transaction.setSelection).\n    */\n    get selection() {\n        if (this.curSelectionFor < this.steps.length) {\n            this.curSelection = this.curSelection.map(this.doc, this.mapping.slice(this.curSelectionFor));\n            this.curSelectionFor = this.steps.length;\n        }\n        return this.curSelection;\n    }\n    /**\n    Update the transaction's current selection. Will determine the\n    selection that the editor gets when the transaction is applied.\n    */\n    setSelection(selection) {\n        if (selection.$from.doc != this.doc)\n            throw new RangeError(\"Selection passed to setSelection must point at the current document\");\n        this.curSelection = selection;\n        this.curSelectionFor = this.steps.length;\n        this.updated = (this.updated | UPDATED_SEL) & ~UPDATED_MARKS;\n        this.storedMarks = null;\n        return this;\n    }\n    /**\n    Whether the selection was explicitly updated by this transaction.\n    */\n    get selectionSet() {\n        return (this.updated & UPDATED_SEL) > 0;\n    }\n    /**\n    Set the current stored marks.\n    */\n    setStoredMarks(marks) {\n        this.storedMarks = marks;\n        this.updated |= UPDATED_MARKS;\n        return this;\n    }\n    /**\n    Make sure the current stored marks or, if that is null, the marks\n    at the selection, match the given set of marks. Does nothing if\n    this is already the case.\n    */\n    ensureMarks(marks) {\n        if (!Mark.sameSet(this.storedMarks || this.selection.$from.marks(), marks))\n            this.setStoredMarks(marks);\n        return this;\n    }\n    /**\n    Add a mark to the set of stored marks.\n    */\n    addStoredMark(mark) {\n        return this.ensureMarks(mark.addToSet(this.storedMarks || this.selection.$head.marks()));\n    }\n    /**\n    Remove a mark or mark type from the set of stored marks.\n    */\n    removeStoredMark(mark) {\n        return this.ensureMarks(mark.removeFromSet(this.storedMarks || this.selection.$head.marks()));\n    }\n    /**\n    Whether the stored marks were explicitly set for this transaction.\n    */\n    get storedMarksSet() {\n        return (this.updated & UPDATED_MARKS) > 0;\n    }\n    /**\n    @internal\n    */\n    addStep(step, doc) {\n        super.addStep(step, doc);\n        this.updated = this.updated & ~UPDATED_MARKS;\n        this.storedMarks = null;\n    }\n    /**\n    Update the timestamp for the transaction.\n    */\n    setTime(time) {\n        this.time = time;\n        return this;\n    }\n    /**\n    Replace the current selection with the given slice.\n    */\n    replaceSelection(slice) {\n        this.selection.replace(this, slice);\n        return this;\n    }\n    /**\n    Replace the selection with the given node. When `inheritMarks` is\n    true and the content is inline, it inherits the marks from the\n    place where it is inserted.\n    */\n    replaceSelectionWith(node, inheritMarks = true) {\n        let selection = this.selection;\n        if (inheritMarks)\n            node = node.mark(this.storedMarks || (selection.empty ? selection.$from.marks() : (selection.$from.marksAcross(selection.$to) || Mark.none)));\n        selection.replaceWith(this, node);\n        return this;\n    }\n    /**\n    Delete the selection.\n    */\n    deleteSelection() {\n        this.selection.replace(this);\n        return this;\n    }\n    /**\n    Replace the given range, or the selection if no range is given,\n    with a text node containing the given string.\n    */\n    insertText(text, from, to) {\n        let schema = this.doc.type.schema;\n        if (from == null) {\n            if (!text)\n                return this.deleteSelection();\n            return this.replaceSelectionWith(schema.text(text), true);\n        }\n        else {\n            if (to == null)\n                to = from;\n            to = to == null ? from : to;\n            if (!text)\n                return this.deleteRange(from, to);\n            let marks = this.storedMarks;\n            if (!marks) {\n                let $from = this.doc.resolve(from);\n                marks = to == from ? $from.marks() : $from.marksAcross(this.doc.resolve(to));\n            }\n            this.replaceRangeWith(from, to, schema.text(text, marks));\n            if (!this.selection.empty)\n                this.setSelection(Selection.near(this.selection.$to));\n            return this;\n        }\n    }\n    /**\n    Store a metadata property in this transaction, keyed either by\n    name or by plugin.\n    */\n    setMeta(key, value) {\n        this.meta[typeof key == \"string\" ? key : key.key] = value;\n        return this;\n    }\n    /**\n    Retrieve a metadata property for a given name or plugin.\n    */\n    getMeta(key) {\n        return this.meta[typeof key == \"string\" ? key : key.key];\n    }\n    /**\n    Returns true if this transaction doesn't contain any metadata,\n    and can thus safely be extended.\n    */\n    get isGeneric() {\n        for (let _ in this.meta)\n            return false;\n        return true;\n    }\n    /**\n    Indicate that the editor should scroll the selection into view\n    when updated to the state produced by this transaction.\n    */\n    scrollIntoView() {\n        this.updated |= UPDATED_SCROLL;\n        return this;\n    }\n    /**\n    True when this transaction has had `scrollIntoView` called on it.\n    */\n    get scrolledIntoView() {\n        return (this.updated & UPDATED_SCROLL) > 0;\n    }\n}\n\nfunction bind(f, self) {\n    return !self || !f ? f : f.bind(self);\n}\nclass FieldDesc {\n    constructor(name, desc, self) {\n        this.name = name;\n        this.init = bind(desc.init, self);\n        this.apply = bind(desc.apply, self);\n    }\n}\nconst baseFields = [\n    new FieldDesc(\"doc\", {\n        init(config) { return config.doc || config.schema.topNodeType.createAndFill(); },\n        apply(tr) { return tr.doc; }\n    }),\n    new FieldDesc(\"selection\", {\n        init(config, instance) { return config.selection || Selection.atStart(instance.doc); },\n        apply(tr) { return tr.selection; }\n    }),\n    new FieldDesc(\"storedMarks\", {\n        init(config) { return config.storedMarks || null; },\n        apply(tr, _marks, _old, state) { return state.selection.$cursor ? tr.storedMarks : null; }\n    }),\n    new FieldDesc(\"scrollToSelection\", {\n        init() { return 0; },\n        apply(tr, prev) { return tr.scrolledIntoView ? prev + 1 : prev; }\n    })\n];\n// Object wrapping the part of a state object that stays the same\n// across transactions. Stored in the state's `config` property.\nclass Configuration {\n    constructor(schema, plugins) {\n        this.schema = schema;\n        this.plugins = [];\n        this.pluginsByKey = Object.create(null);\n        this.fields = baseFields.slice();\n        if (plugins)\n            plugins.forEach(plugin => {\n                if (this.pluginsByKey[plugin.key])\n                    throw new RangeError(\"Adding different instances of a keyed plugin (\" + plugin.key + \")\");\n                this.plugins.push(plugin);\n                this.pluginsByKey[plugin.key] = plugin;\n                if (plugin.spec.state)\n                    this.fields.push(new FieldDesc(plugin.key, plugin.spec.state, plugin));\n            });\n    }\n}\n/**\nThe state of a ProseMirror editor is represented by an object of\nthis type. A state is a persistent data structure—it isn't\nupdated, but rather a new state value is computed from an old one\nusing the [`apply`](https://prosemirror.net/docs/ref/#state.EditorState.apply) method.\n\nA state holds a number of built-in fields, and plugins can\n[define](https://prosemirror.net/docs/ref/#state.PluginSpec.state) additional fields.\n*/\nclass EditorState {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    config) {\n        this.config = config;\n    }\n    /**\n    The schema of the state's document.\n    */\n    get schema() {\n        return this.config.schema;\n    }\n    /**\n    The plugins that are active in this state.\n    */\n    get plugins() {\n        return this.config.plugins;\n    }\n    /**\n    Apply the given transaction to produce a new state.\n    */\n    apply(tr) {\n        return this.applyTransaction(tr).state;\n    }\n    /**\n    @internal\n    */\n    filterTransaction(tr, ignore = -1) {\n        for (let i = 0; i < this.config.plugins.length; i++)\n            if (i != ignore) {\n                let plugin = this.config.plugins[i];\n                if (plugin.spec.filterTransaction && !plugin.spec.filterTransaction.call(plugin, tr, this))\n                    return false;\n            }\n        return true;\n    }\n    /**\n    Verbose variant of [`apply`](https://prosemirror.net/docs/ref/#state.EditorState.apply) that\n    returns the precise transactions that were applied (which might\n    be influenced by the [transaction\n    hooks](https://prosemirror.net/docs/ref/#state.PluginSpec.filterTransaction) of\n    plugins) along with the new state.\n    */\n    applyTransaction(rootTr) {\n        if (!this.filterTransaction(rootTr))\n            return { state: this, transactions: [] };\n        let trs = [rootTr], newState = this.applyInner(rootTr), seen = null;\n        // This loop repeatedly gives plugins a chance to respond to\n        // transactions as new transactions are added, making sure to only\n        // pass the transactions the plugin did not see before.\n        for (;;) {\n            let haveNew = false;\n            for (let i = 0; i < this.config.plugins.length; i++) {\n                let plugin = this.config.plugins[i];\n                if (plugin.spec.appendTransaction) {\n                    let n = seen ? seen[i].n : 0, oldState = seen ? seen[i].state : this;\n                    let tr = n < trs.length &&\n                        plugin.spec.appendTransaction.call(plugin, n ? trs.slice(n) : trs, oldState, newState);\n                    if (tr && newState.filterTransaction(tr, i)) {\n                        tr.setMeta(\"appendedTransaction\", rootTr);\n                        if (!seen) {\n                            seen = [];\n                            for (let j = 0; j < this.config.plugins.length; j++)\n                                seen.push(j < i ? { state: newState, n: trs.length } : { state: this, n: 0 });\n                        }\n                        trs.push(tr);\n                        newState = newState.applyInner(tr);\n                        haveNew = true;\n                    }\n                    if (seen)\n                        seen[i] = { state: newState, n: trs.length };\n                }\n            }\n            if (!haveNew)\n                return { state: newState, transactions: trs };\n        }\n    }\n    /**\n    @internal\n    */\n    applyInner(tr) {\n        if (!tr.before.eq(this.doc))\n            throw new RangeError(\"Applying a mismatched transaction\");\n        let newInstance = new EditorState(this.config), fields = this.config.fields;\n        for (let i = 0; i < fields.length; i++) {\n            let field = fields[i];\n            newInstance[field.name] = field.apply(tr, this[field.name], this, newInstance);\n        }\n        return newInstance;\n    }\n    /**\n    Start a [transaction](https://prosemirror.net/docs/ref/#state.Transaction) from this state.\n    */\n    get tr() { return new Transaction(this); }\n    /**\n    Create a new state.\n    */\n    static create(config) {\n        let $config = new Configuration(config.doc ? config.doc.type.schema : config.schema, config.plugins);\n        let instance = new EditorState($config);\n        for (let i = 0; i < $config.fields.length; i++)\n            instance[$config.fields[i].name] = $config.fields[i].init(config, instance);\n        return instance;\n    }\n    /**\n    Create a new state based on this one, but with an adjusted set\n    of active plugins. State fields that exist in both sets of\n    plugins are kept unchanged. Those that no longer exist are\n    dropped, and those that are new are initialized using their\n    [`init`](https://prosemirror.net/docs/ref/#state.StateField.init) method, passing in the new\n    configuration object..\n    */\n    reconfigure(config) {\n        let $config = new Configuration(this.schema, config.plugins);\n        let fields = $config.fields, instance = new EditorState($config);\n        for (let i = 0; i < fields.length; i++) {\n            let name = fields[i].name;\n            instance[name] = this.hasOwnProperty(name) ? this[name] : fields[i].init(config, instance);\n        }\n        return instance;\n    }\n    /**\n    Serialize this state to JSON. If you want to serialize the state\n    of plugins, pass an object mapping property names to use in the\n    resulting JSON object to plugin objects. The argument may also be\n    a string or number, in which case it is ignored, to support the\n    way `JSON.stringify` calls `toString` methods.\n    */\n    toJSON(pluginFields) {\n        let result = { doc: this.doc.toJSON(), selection: this.selection.toJSON() };\n        if (this.storedMarks)\n            result.storedMarks = this.storedMarks.map(m => m.toJSON());\n        if (pluginFields && typeof pluginFields == 'object')\n            for (let prop in pluginFields) {\n                if (prop == \"doc\" || prop == \"selection\")\n                    throw new RangeError(\"The JSON fields `doc` and `selection` are reserved\");\n                let plugin = pluginFields[prop], state = plugin.spec.state;\n                if (state && state.toJSON)\n                    result[prop] = state.toJSON.call(plugin, this[plugin.key]);\n            }\n        return result;\n    }\n    /**\n    Deserialize a JSON representation of a state. `config` should\n    have at least a `schema` field, and should contain array of\n    plugins to initialize the state with. `pluginFields` can be used\n    to deserialize the state of plugins, by associating plugin\n    instances with the property names they use in the JSON object.\n    */\n    static fromJSON(config, json, pluginFields) {\n        if (!json)\n            throw new RangeError(\"Invalid input for EditorState.fromJSON\");\n        if (!config.schema)\n            throw new RangeError(\"Required config field 'schema' missing\");\n        let $config = new Configuration(config.schema, config.plugins);\n        let instance = new EditorState($config);\n        $config.fields.forEach(field => {\n            if (field.name == \"doc\") {\n                instance.doc = Node.fromJSON(config.schema, json.doc);\n            }\n            else if (field.name == \"selection\") {\n                instance.selection = Selection.fromJSON(instance.doc, json.selection);\n            }\n            else if (field.name == \"storedMarks\") {\n                if (json.storedMarks)\n                    instance.storedMarks = json.storedMarks.map(config.schema.markFromJSON);\n            }\n            else {\n                if (pluginFields)\n                    for (let prop in pluginFields) {\n                        let plugin = pluginFields[prop], state = plugin.spec.state;\n                        if (plugin.key == field.name && state && state.fromJSON &&\n                            Object.prototype.hasOwnProperty.call(json, prop)) {\n                            instance[field.name] = state.fromJSON.call(plugin, config, json[prop], instance);\n                            return;\n                        }\n                    }\n                instance[field.name] = field.init(config, instance);\n            }\n        });\n        return instance;\n    }\n}\n\nfunction bindProps(obj, self, target) {\n    for (let prop in obj) {\n        let val = obj[prop];\n        if (val instanceof Function)\n            val = val.bind(self);\n        else if (prop == \"handleDOMEvents\")\n            val = bindProps(val, self, {});\n        target[prop] = val;\n    }\n    return target;\n}\n/**\nPlugins bundle functionality that can be added to an editor.\nThey are part of the [editor state](https://prosemirror.net/docs/ref/#state.EditorState) and\nmay influence that state and the view that contains it.\n*/\nclass Plugin {\n    /**\n    Create a plugin.\n    */\n    constructor(\n    /**\n    The plugin's [spec object](https://prosemirror.net/docs/ref/#state.PluginSpec).\n    */\n    spec) {\n        this.spec = spec;\n        /**\n        The [props](https://prosemirror.net/docs/ref/#view.EditorProps) exported by this plugin.\n        */\n        this.props = {};\n        if (spec.props)\n            bindProps(spec.props, this, this.props);\n        this.key = spec.key ? spec.key.key : createKey(\"plugin\");\n    }\n    /**\n    Extract the plugin's state field from an editor state.\n    */\n    getState(state) { return state[this.key]; }\n}\nconst keys = Object.create(null);\nfunction createKey(name) {\n    if (name in keys)\n        return name + \"$\" + ++keys[name];\n    keys[name] = 0;\n    return name + \"$\";\n}\n/**\nA key is used to [tag](https://prosemirror.net/docs/ref/#state.PluginSpec.key) plugins in a way\nthat makes it possible to find them, given an editor state.\nAssigning a key does mean only one plugin of that type can be\nactive in a state.\n*/\nclass PluginKey {\n    /**\n    Create a plugin key.\n    */\n    constructor(name = \"key\") { this.key = createKey(name); }\n    /**\n    Get the active plugin with this key, if any, from an editor\n    state.\n    */\n    get(state) { return state.config.pluginsByKey[this.key]; }\n    /**\n    Get the plugin's state from an editor state.\n    */\n    getState(state) { return state[this.key]; }\n}\n\nexport { AllSelection, EditorState, NodeSelection, Plugin, PluginKey, Selection, SelectionRange, TextSelection, Transaction };\n","import { TextSelection, NodeSelection, AllSelection, Selection } from 'prosemirror-state';\nimport { DOMSerializer, Fragment, Mark, Slice, DOMParser } from 'prosemirror-model';\nimport { dropPoint } from 'prosemirror-transform';\n\nconst domIndex = function (node) {\n    for (var index = 0;; index++) {\n        node = node.previousSibling;\n        if (!node)\n            return index;\n    }\n};\nconst parentNode = function (node) {\n    let parent = node.assignedSlot || node.parentNode;\n    return parent && parent.nodeType == 11 ? parent.host : parent;\n};\nlet reusedRange = null;\n// Note that this will always return the same range, because DOM range\n// objects are every expensive, and keep slowing down subsequent DOM\n// updates, for some reason.\nconst textRange = function (node, from, to) {\n    let range = reusedRange || (reusedRange = document.createRange());\n    range.setEnd(node, to == null ? node.nodeValue.length : to);\n    range.setStart(node, from || 0);\n    return range;\n};\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nconst isEquivalentPosition = function (node, off, targetNode, targetOff) {\n    return targetNode && (scanFor(node, off, targetNode, targetOff, -1) ||\n        scanFor(node, off, targetNode, targetOff, 1));\n};\nconst atomElements = /^(img|br|input|textarea|hr)$/i;\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n    for (;;) {\n        if (node == targetNode && off == targetOff)\n            return true;\n        if (off == (dir < 0 ? 0 : nodeSize(node))) {\n            let parent = node.parentNode;\n            if (!parent || parent.nodeType != 1 || hasBlockDesc(node) || atomElements.test(node.nodeName) ||\n                node.contentEditable == \"false\")\n                return false;\n            off = domIndex(node) + (dir < 0 ? 0 : 1);\n            node = parent;\n        }\n        else if (node.nodeType == 1) {\n            node = node.childNodes[off + (dir < 0 ? -1 : 0)];\n            if (node.contentEditable == \"false\")\n                return false;\n            off = dir < 0 ? nodeSize(node) : 0;\n        }\n        else {\n            return false;\n        }\n    }\n}\nfunction nodeSize(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction isOnEdge(node, offset, parent) {\n    for (let atStart = offset == 0, atEnd = offset == nodeSize(node); atStart || atEnd;) {\n        if (node == parent)\n            return true;\n        let index = domIndex(node);\n        node = node.parentNode;\n        if (!node)\n            return false;\n        atStart = atStart && index == 0;\n        atEnd = atEnd && index == nodeSize(node);\n    }\n}\nfunction hasBlockDesc(dom) {\n    let desc;\n    for (let cur = dom; cur; cur = cur.parentNode)\n        if (desc = cur.pmViewDesc)\n            break;\n    return desc && desc.node && desc.node.isBlock && (desc.dom == dom || desc.contentDOM == dom);\n}\n// Work around Chrome issue https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n// (isCollapsed inappropriately returns true in shadow dom)\nconst selectionCollapsed = function (domSel) {\n    return domSel.focusNode && isEquivalentPosition(domSel.focusNode, domSel.focusOffset, domSel.anchorNode, domSel.anchorOffset);\n};\nfunction keyEvent(keyCode, key) {\n    let event = document.createEvent(\"Event\");\n    event.initEvent(\"keydown\", true, true);\n    event.keyCode = keyCode;\n    event.key = event.code = key;\n    return event;\n}\nfunction deepActiveElement(doc) {\n    let elt = doc.activeElement;\n    while (elt && elt.shadowRoot)\n        elt = elt.shadowRoot.activeElement;\n    return elt;\n}\nfunction caretFromPoint(doc, x, y) {\n    if (doc.caretPositionFromPoint) {\n        try { // Firefox throws for this call in hard-to-predict circumstances (#994)\n            let pos = doc.caretPositionFromPoint(x, y);\n            if (pos)\n                return { node: pos.offsetNode, offset: pos.offset };\n        }\n        catch (_) { }\n    }\n    if (doc.caretRangeFromPoint) {\n        let range = doc.caretRangeFromPoint(x, y);\n        if (range)\n            return { node: range.startContainer, offset: range.startOffset };\n    }\n}\n\nconst nav = typeof navigator != \"undefined\" ? navigator : null;\nconst doc = typeof document != \"undefined\" ? document : null;\nconst agent = (nav && nav.userAgent) || \"\";\nconst ie_edge = /Edge\\/(\\d+)/.exec(agent);\nconst ie_upto10 = /MSIE \\d/.exec(agent);\nconst ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(agent);\nconst ie = !!(ie_upto10 || ie_11up || ie_edge);\nconst ie_version = ie_upto10 ? document.documentMode : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : 0;\nconst gecko = !ie && /gecko\\/(\\d+)/i.test(agent);\ngecko && +(/Firefox\\/(\\d+)/.exec(agent) || [0, 0])[1];\nconst _chrome = !ie && /Chrome\\/(\\d+)/.exec(agent);\nconst chrome = !!_chrome;\nconst chrome_version = _chrome ? +_chrome[1] : 0;\nconst safari = !ie && !!nav && /Apple Computer/.test(nav.vendor);\n// Is true for both iOS and iPadOS for convenience\nconst ios = safari && (/Mobile\\/\\w+/.test(agent) || !!nav && nav.maxTouchPoints > 2);\nconst mac = ios || (nav ? /Mac/.test(nav.platform) : false);\nconst windows = nav ? /Win/.test(nav.platform) : false;\nconst android = /Android \\d/.test(agent);\nconst webkit = !!doc && \"webkitFontSmoothing\" in doc.documentElement.style;\nconst webkit_version = webkit ? +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0;\n\nfunction windowRect(doc) {\n    return { left: 0, right: doc.documentElement.clientWidth,\n        top: 0, bottom: doc.documentElement.clientHeight };\n}\nfunction getSide(value, side) {\n    return typeof value == \"number\" ? value : value[side];\n}\nfunction clientRect(node) {\n    let rect = node.getBoundingClientRect();\n    // Adjust for elements with style \"transform: scale()\"\n    let scaleX = (rect.width / node.offsetWidth) || 1;\n    let scaleY = (rect.height / node.offsetHeight) || 1;\n    // Make sure scrollbar width isn't included in the rectangle\n    return { left: rect.left, right: rect.left + node.clientWidth * scaleX,\n        top: rect.top, bottom: rect.top + node.clientHeight * scaleY };\n}\nfunction scrollRectIntoView(view, rect, startDOM) {\n    let scrollThreshold = view.someProp(\"scrollThreshold\") || 0, scrollMargin = view.someProp(\"scrollMargin\") || 5;\n    let doc = view.dom.ownerDocument;\n    for (let parent = startDOM || view.dom;; parent = parentNode(parent)) {\n        if (!parent)\n            break;\n        if (parent.nodeType != 1)\n            continue;\n        let elt = parent;\n        let atTop = elt == doc.body;\n        let bounding = atTop ? windowRect(doc) : clientRect(elt);\n        let moveX = 0, moveY = 0;\n        if (rect.top < bounding.top + getSide(scrollThreshold, \"top\"))\n            moveY = -(bounding.top - rect.top + getSide(scrollMargin, \"top\"));\n        else if (rect.bottom > bounding.bottom - getSide(scrollThreshold, \"bottom\"))\n            moveY = rect.bottom - rect.top > bounding.bottom - bounding.top\n                ? rect.top + getSide(scrollMargin, \"top\") - bounding.top\n                : rect.bottom - bounding.bottom + getSide(scrollMargin, \"bottom\");\n        if (rect.left < bounding.left + getSide(scrollThreshold, \"left\"))\n            moveX = -(bounding.left - rect.left + getSide(scrollMargin, \"left\"));\n        else if (rect.right > bounding.right - getSide(scrollThreshold, \"right\"))\n            moveX = rect.right - bounding.right + getSide(scrollMargin, \"right\");\n        if (moveX || moveY) {\n            if (atTop) {\n                doc.defaultView.scrollBy(moveX, moveY);\n            }\n            else {\n                let startX = elt.scrollLeft, startY = elt.scrollTop;\n                if (moveY)\n                    elt.scrollTop += moveY;\n                if (moveX)\n                    elt.scrollLeft += moveX;\n                let dX = elt.scrollLeft - startX, dY = elt.scrollTop - startY;\n                rect = { left: rect.left - dX, top: rect.top - dY, right: rect.right - dX, bottom: rect.bottom - dY };\n            }\n        }\n        if (atTop || /^(fixed|sticky)$/.test(getComputedStyle(parent).position))\n            break;\n    }\n}\n// Store the scroll position of the editor's parent nodes, along with\n// the top position of an element near the top of the editor, which\n// will be used to make sure the visible viewport remains stable even\n// when the size of the content above changes.\nfunction storeScrollPos(view) {\n    let rect = view.dom.getBoundingClientRect(), startY = Math.max(0, rect.top);\n    let refDOM, refTop;\n    for (let x = (rect.left + rect.right) / 2, y = startY + 1; y < Math.min(innerHeight, rect.bottom); y += 5) {\n        let dom = view.root.elementFromPoint(x, y);\n        if (!dom || dom == view.dom || !view.dom.contains(dom))\n            continue;\n        let localRect = dom.getBoundingClientRect();\n        if (localRect.top >= startY - 20) {\n            refDOM = dom;\n            refTop = localRect.top;\n            break;\n        }\n    }\n    return { refDOM: refDOM, refTop: refTop, stack: scrollStack(view.dom) };\n}\nfunction scrollStack(dom) {\n    let stack = [], doc = dom.ownerDocument;\n    for (let cur = dom; cur; cur = parentNode(cur)) {\n        stack.push({ dom: cur, top: cur.scrollTop, left: cur.scrollLeft });\n        if (dom == doc)\n            break;\n    }\n    return stack;\n}\n// Reset the scroll position of the editor's parent nodes to that what\n// it was before, when storeScrollPos was called.\nfunction resetScrollPos({ refDOM, refTop, stack }) {\n    let newRefTop = refDOM ? refDOM.getBoundingClientRect().top : 0;\n    restoreScrollStack(stack, newRefTop == 0 ? 0 : newRefTop - refTop);\n}\nfunction restoreScrollStack(stack, dTop) {\n    for (let i = 0; i < stack.length; i++) {\n        let { dom, top, left } = stack[i];\n        if (dom.scrollTop != top + dTop)\n            dom.scrollTop = top + dTop;\n        if (dom.scrollLeft != left)\n            dom.scrollLeft = left;\n    }\n}\nlet preventScrollSupported = null;\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nfunction focusPreventScroll(dom) {\n    if (dom.setActive)\n        return dom.setActive(); // in IE\n    if (preventScrollSupported)\n        return dom.focus(preventScrollSupported);\n    let stored = scrollStack(dom);\n    dom.focus(preventScrollSupported == null ? {\n        get preventScroll() {\n            preventScrollSupported = { preventScroll: true };\n            return true;\n        }\n    } : undefined);\n    if (!preventScrollSupported) {\n        preventScrollSupported = false;\n        restoreScrollStack(stored, 0);\n    }\n}\nfunction findOffsetInNode(node, coords) {\n    let closest, dxClosest = 2e8, coordsClosest, offset = 0;\n    let rowBot = coords.top, rowTop = coords.top;\n    let firstBelow, coordsBelow;\n    for (let child = node.firstChild, childIndex = 0; child; child = child.nextSibling, childIndex++) {\n        let rects;\n        if (child.nodeType == 1)\n            rects = child.getClientRects();\n        else if (child.nodeType == 3)\n            rects = textRange(child).getClientRects();\n        else\n            continue;\n        for (let i = 0; i < rects.length; i++) {\n            let rect = rects[i];\n            if (rect.top <= rowBot && rect.bottom >= rowTop) {\n                rowBot = Math.max(rect.bottom, rowBot);\n                rowTop = Math.min(rect.top, rowTop);\n                let dx = rect.left > coords.left ? rect.left - coords.left\n                    : rect.right < coords.left ? coords.left - rect.right : 0;\n                if (dx < dxClosest) {\n                    closest = child;\n                    dxClosest = dx;\n                    coordsClosest = dx && closest.nodeType == 3 ? {\n                        left: rect.right < coords.left ? rect.right : rect.left,\n                        top: coords.top\n                    } : coords;\n                    if (child.nodeType == 1 && dx)\n                        offset = childIndex + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0);\n                    continue;\n                }\n            }\n            else if (rect.top > coords.top && !firstBelow && rect.left <= coords.left && rect.right >= coords.left) {\n                firstBelow = child;\n                coordsBelow = { left: Math.max(rect.left, Math.min(rect.right, coords.left)), top: rect.top };\n            }\n            if (!closest && (coords.left >= rect.right && coords.top >= rect.top ||\n                coords.left >= rect.left && coords.top >= rect.bottom))\n                offset = childIndex + 1;\n        }\n    }\n    if (!closest && firstBelow) {\n        closest = firstBelow;\n        coordsClosest = coordsBelow;\n        dxClosest = 0;\n    }\n    if (closest && closest.nodeType == 3)\n        return findOffsetInText(closest, coordsClosest);\n    if (!closest || (dxClosest && closest.nodeType == 1))\n        return { node, offset };\n    return findOffsetInNode(closest, coordsClosest);\n}\nfunction findOffsetInText(node, coords) {\n    let len = node.nodeValue.length;\n    let range = document.createRange();\n    for (let i = 0; i < len; i++) {\n        range.setEnd(node, i + 1);\n        range.setStart(node, i);\n        let rect = singleRect(range, 1);\n        if (rect.top == rect.bottom)\n            continue;\n        if (inRect(coords, rect))\n            return { node, offset: i + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0) };\n    }\n    return { node, offset: 0 };\n}\nfunction inRect(coords, rect) {\n    return coords.left >= rect.left - 1 && coords.left <= rect.right + 1 &&\n        coords.top >= rect.top - 1 && coords.top <= rect.bottom + 1;\n}\nfunction targetKludge(dom, coords) {\n    let parent = dom.parentNode;\n    if (parent && /^li$/i.test(parent.nodeName) && coords.left < dom.getBoundingClientRect().left)\n        return parent;\n    return dom;\n}\nfunction posFromElement(view, elt, coords) {\n    let { node, offset } = findOffsetInNode(elt, coords), bias = -1;\n    if (node.nodeType == 1 && !node.firstChild) {\n        let rect = node.getBoundingClientRect();\n        bias = rect.left != rect.right && coords.left > (rect.left + rect.right) / 2 ? 1 : -1;\n    }\n    return view.docView.posFromDOM(node, offset, bias);\n}\nfunction posFromCaret(view, node, offset, coords) {\n    // Browser (in caretPosition/RangeFromPoint) will agressively\n    // normalize towards nearby inline nodes. Since we are interested in\n    // positions between block nodes too, we first walk up the hierarchy\n    // of nodes to see if there are block nodes that the coordinates\n    // fall outside of. If so, we take the position before/after that\n    // block. If not, we call `posFromDOM` on the raw node/offset.\n    let outsideBlock = -1;\n    for (let cur = node, sawBlock = false;;) {\n        if (cur == view.dom)\n            break;\n        let desc = view.docView.nearestDesc(cur, true);\n        if (!desc)\n            return null;\n        if (desc.dom.nodeType == 1 && (desc.node.isBlock && desc.parent && !sawBlock || !desc.contentDOM)) {\n            let rect = desc.dom.getBoundingClientRect();\n            if (desc.node.isBlock && desc.parent && !sawBlock) {\n                sawBlock = true;\n                if (rect.left > coords.left || rect.top > coords.top)\n                    outsideBlock = desc.posBefore;\n                else if (rect.right < coords.left || rect.bottom < coords.top)\n                    outsideBlock = desc.posAfter;\n            }\n            if (!desc.contentDOM && outsideBlock < 0 && !desc.node.isText) {\n                // If we are inside a leaf, return the side of the leaf closer to the coords\n                let before = desc.node.isBlock ? coords.top < (rect.top + rect.bottom) / 2\n                    : coords.left < (rect.left + rect.right) / 2;\n                return before ? desc.posBefore : desc.posAfter;\n            }\n        }\n        cur = desc.dom.parentNode;\n    }\n    return outsideBlock > -1 ? outsideBlock : view.docView.posFromDOM(node, offset, -1);\n}\nfunction elementFromPoint(element, coords, box) {\n    let len = element.childNodes.length;\n    if (len && box.top < box.bottom) {\n        for (let startI = Math.max(0, Math.min(len - 1, Math.floor(len * (coords.top - box.top) / (box.bottom - box.top)) - 2)), i = startI;;) {\n            let child = element.childNodes[i];\n            if (child.nodeType == 1) {\n                let rects = child.getClientRects();\n                for (let j = 0; j < rects.length; j++) {\n                    let rect = rects[j];\n                    if (inRect(coords, rect))\n                        return elementFromPoint(child, coords, rect);\n                }\n            }\n            if ((i = (i + 1) % len) == startI)\n                break;\n        }\n    }\n    return element;\n}\n// Given an x,y position on the editor, get the position in the document.\nfunction posAtCoords(view, coords) {\n    let doc = view.dom.ownerDocument, node, offset = 0;\n    let caret = caretFromPoint(doc, coords.left, coords.top);\n    if (caret)\n        ({ node, offset } = caret);\n    let elt = (view.root.elementFromPoint ? view.root : doc)\n        .elementFromPoint(coords.left, coords.top);\n    let pos;\n    if (!elt || !view.dom.contains(elt.nodeType != 1 ? elt.parentNode : elt)) {\n        let box = view.dom.getBoundingClientRect();\n        if (!inRect(coords, box))\n            return null;\n        elt = elementFromPoint(view.dom, coords, box);\n        if (!elt)\n            return null;\n    }\n    // Safari's caretRangeFromPoint returns nonsense when on a draggable element\n    if (safari) {\n        for (let p = elt; node && p; p = parentNode(p))\n            if (p.draggable)\n                node = undefined;\n    }\n    elt = targetKludge(elt, coords);\n    if (node) {\n        if (gecko && node.nodeType == 1) {\n            // Firefox will sometimes return offsets into <input> nodes, which\n            // have no actual children, from caretPositionFromPoint (#953)\n            offset = Math.min(offset, node.childNodes.length);\n            // It'll also move the returned position before image nodes,\n            // even if those are behind it.\n            if (offset < node.childNodes.length) {\n                let next = node.childNodes[offset], box;\n                if (next.nodeName == \"IMG\" && (box = next.getBoundingClientRect()).right <= coords.left &&\n                    box.bottom > coords.top)\n                    offset++;\n            }\n        }\n        let prev;\n        // When clicking above the right side of an uneditable node, Chrome will report a cursor position after that node.\n        if (webkit && offset && node.nodeType == 1 && (prev = node.childNodes[offset - 1]).nodeType == 1 &&\n            prev.contentEditable == \"false\" && prev.getBoundingClientRect().top >= coords.top)\n            offset--;\n        // Suspiciously specific kludge to work around caret*FromPoint\n        // never returning a position at the end of the document\n        if (node == view.dom && offset == node.childNodes.length - 1 && node.lastChild.nodeType == 1 &&\n            coords.top > node.lastChild.getBoundingClientRect().bottom)\n            pos = view.state.doc.content.size;\n        // Ignore positions directly after a BR, since caret*FromPoint\n        // 'round up' positions that would be more accurately placed\n        // before the BR node.\n        else if (offset == 0 || node.nodeType != 1 || node.childNodes[offset - 1].nodeName != \"BR\")\n            pos = posFromCaret(view, node, offset, coords);\n    }\n    if (pos == null)\n        pos = posFromElement(view, elt, coords);\n    let desc = view.docView.nearestDesc(elt, true);\n    return { pos, inside: desc ? desc.posAtStart - desc.border : -1 };\n}\nfunction nonZero(rect) {\n    return rect.top < rect.bottom || rect.left < rect.right;\n}\nfunction singleRect(target, bias) {\n    let rects = target.getClientRects();\n    if (rects.length) {\n        let first = rects[bias < 0 ? 0 : rects.length - 1];\n        if (nonZero(first))\n            return first;\n    }\n    return Array.prototype.find.call(rects, nonZero) || target.getBoundingClientRect();\n}\nconst BIDI = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac]/;\n// Given a position in the document model, get a bounding box of the\n// character at that position, relative to the window.\nfunction coordsAtPos(view, pos, side) {\n    let { node, offset, atom } = view.docView.domFromPos(pos, side < 0 ? -1 : 1);\n    let supportEmptyRange = webkit || gecko;\n    if (node.nodeType == 3) {\n        // These browsers support querying empty text ranges. Prefer that in\n        // bidi context or when at the end of a node.\n        if (supportEmptyRange && (BIDI.test(node.nodeValue) || (side < 0 ? !offset : offset == node.nodeValue.length))) {\n            let rect = singleRect(textRange(node, offset, offset), side);\n            // Firefox returns bad results (the position before the space)\n            // when querying a position directly after line-broken\n            // whitespace. Detect this situation and and kludge around it\n            if (gecko && offset && /\\s/.test(node.nodeValue[offset - 1]) && offset < node.nodeValue.length) {\n                let rectBefore = singleRect(textRange(node, offset - 1, offset - 1), -1);\n                if (rectBefore.top == rect.top) {\n                    let rectAfter = singleRect(textRange(node, offset, offset + 1), -1);\n                    if (rectAfter.top != rect.top)\n                        return flattenV(rectAfter, rectAfter.left < rectBefore.left);\n                }\n            }\n            return rect;\n        }\n        else {\n            let from = offset, to = offset, takeSide = side < 0 ? 1 : -1;\n            if (side < 0 && !offset) {\n                to++;\n                takeSide = -1;\n            }\n            else if (side >= 0 && offset == node.nodeValue.length) {\n                from--;\n                takeSide = 1;\n            }\n            else if (side < 0) {\n                from--;\n            }\n            else {\n                to++;\n            }\n            return flattenV(singleRect(textRange(node, from, to), takeSide), takeSide < 0);\n        }\n    }\n    let $dom = view.state.doc.resolve(pos - (atom || 0));\n    // Return a horizontal line in block context\n    if (!$dom.parent.inlineContent) {\n        if (atom == null && offset && (side < 0 || offset == nodeSize(node))) {\n            let before = node.childNodes[offset - 1];\n            if (before.nodeType == 1)\n                return flattenH(before.getBoundingClientRect(), false);\n        }\n        if (atom == null && offset < nodeSize(node)) {\n            let after = node.childNodes[offset];\n            if (after.nodeType == 1)\n                return flattenH(after.getBoundingClientRect(), true);\n        }\n        return flattenH(node.getBoundingClientRect(), side >= 0);\n    }\n    // Inline, not in text node (this is not Bidi-safe)\n    if (atom == null && offset && (side < 0 || offset == nodeSize(node))) {\n        let before = node.childNodes[offset - 1];\n        let target = before.nodeType == 3 ? textRange(before, nodeSize(before) - (supportEmptyRange ? 0 : 1))\n            // BR nodes tend to only return the rectangle before them.\n            // Only use them if they are the last element in their parent\n            : before.nodeType == 1 && (before.nodeName != \"BR\" || !before.nextSibling) ? before : null;\n        if (target)\n            return flattenV(singleRect(target, 1), false);\n    }\n    if (atom == null && offset < nodeSize(node)) {\n        let after = node.childNodes[offset];\n        while (after.pmViewDesc && after.pmViewDesc.ignoreForCoords)\n            after = after.nextSibling;\n        let target = !after ? null : after.nodeType == 3 ? textRange(after, 0, (supportEmptyRange ? 0 : 1))\n            : after.nodeType == 1 ? after : null;\n        if (target)\n            return flattenV(singleRect(target, -1), true);\n    }\n    // All else failed, just try to get a rectangle for the target node\n    return flattenV(singleRect(node.nodeType == 3 ? textRange(node) : node, -side), side >= 0);\n}\nfunction flattenV(rect, left) {\n    if (rect.width == 0)\n        return rect;\n    let x = left ? rect.left : rect.right;\n    return { top: rect.top, bottom: rect.bottom, left: x, right: x };\n}\nfunction flattenH(rect, top) {\n    if (rect.height == 0)\n        return rect;\n    let y = top ? rect.top : rect.bottom;\n    return { top: y, bottom: y, left: rect.left, right: rect.right };\n}\nfunction withFlushedState(view, state, f) {\n    let viewState = view.state, active = view.root.activeElement;\n    if (viewState != state)\n        view.updateState(state);\n    if (active != view.dom)\n        view.focus();\n    try {\n        return f();\n    }\n    finally {\n        if (viewState != state)\n            view.updateState(viewState);\n        if (active != view.dom && active)\n            active.focus();\n    }\n}\n// Whether vertical position motion in a given direction\n// from a position would leave a text block.\nfunction endOfTextblockVertical(view, state, dir) {\n    let sel = state.selection;\n    let $pos = dir == \"up\" ? sel.$from : sel.$to;\n    return withFlushedState(view, state, () => {\n        let { node: dom } = view.docView.domFromPos($pos.pos, dir == \"up\" ? -1 : 1);\n        for (;;) {\n            let nearest = view.docView.nearestDesc(dom, true);\n            if (!nearest)\n                break;\n            if (nearest.node.isBlock) {\n                dom = nearest.contentDOM || nearest.dom;\n                break;\n            }\n            dom = nearest.dom.parentNode;\n        }\n        let coords = coordsAtPos(view, $pos.pos, 1);\n        for (let child = dom.firstChild; child; child = child.nextSibling) {\n            let boxes;\n            if (child.nodeType == 1)\n                boxes = child.getClientRects();\n            else if (child.nodeType == 3)\n                boxes = textRange(child, 0, child.nodeValue.length).getClientRects();\n            else\n                continue;\n            for (let i = 0; i < boxes.length; i++) {\n                let box = boxes[i];\n                if (box.bottom > box.top + 1 &&\n                    (dir == \"up\" ? coords.top - box.top > (box.bottom - coords.top) * 2\n                        : box.bottom - coords.bottom > (coords.bottom - box.top) * 2))\n                    return false;\n            }\n        }\n        return true;\n    });\n}\nconst maybeRTL = /[\\u0590-\\u08ac]/;\nfunction endOfTextblockHorizontal(view, state, dir) {\n    let { $head } = state.selection;\n    if (!$head.parent.isTextblock)\n        return false;\n    let offset = $head.parentOffset, atStart = !offset, atEnd = offset == $head.parent.content.size;\n    let sel = view.domSelection();\n    // If the textblock is all LTR, or the browser doesn't support\n    // Selection.modify (Edge), fall back to a primitive approach\n    if (!maybeRTL.test($head.parent.textContent) || !sel.modify)\n        return dir == \"left\" || dir == \"backward\" ? atStart : atEnd;\n    return withFlushedState(view, state, () => {\n        // This is a huge hack, but appears to be the best we can\n        // currently do: use `Selection.modify` to move the selection by\n        // one character, and see if that moves the cursor out of the\n        // textblock (or doesn't move it at all, when at the start/end of\n        // the document).\n        let { focusNode: oldNode, focusOffset: oldOff, anchorNode, anchorOffset } = view.domSelectionRange();\n        let oldBidiLevel = sel.caretBidiLevel // Only for Firefox\n        ;\n        sel.modify(\"move\", dir, \"character\");\n        let parentDOM = $head.depth ? view.docView.domAfterPos($head.before()) : view.dom;\n        let { focusNode: newNode, focusOffset: newOff } = view.domSelectionRange();\n        let result = newNode && !parentDOM.contains(newNode.nodeType == 1 ? newNode : newNode.parentNode) ||\n            (oldNode == newNode && oldOff == newOff);\n        // Restore the previous selection\n        try {\n            sel.collapse(anchorNode, anchorOffset);\n            if (oldNode && (oldNode != anchorNode || oldOff != anchorOffset) && sel.extend)\n                sel.extend(oldNode, oldOff);\n        }\n        catch (_) { }\n        if (oldBidiLevel != null)\n            sel.caretBidiLevel = oldBidiLevel;\n        return result;\n    });\n}\nlet cachedState = null;\nlet cachedDir = null;\nlet cachedResult = false;\nfunction endOfTextblock(view, state, dir) {\n    if (cachedState == state && cachedDir == dir)\n        return cachedResult;\n    cachedState = state;\n    cachedDir = dir;\n    return cachedResult = dir == \"up\" || dir == \"down\"\n        ? endOfTextblockVertical(view, state, dir)\n        : endOfTextblockHorizontal(view, state, dir);\n}\n\n// View descriptions are data structures that describe the DOM that is\n// used to represent the editor's content. They are used for:\n//\n// - Incremental redrawing when the document changes\n//\n// - Figuring out what part of the document a given DOM position\n//   corresponds to\n//\n// - Wiring in custom implementations of the editing interface for a\n//   given node\n//\n// They form a doubly-linked mutable tree, starting at `view.docView`.\nconst NOT_DIRTY = 0, CHILD_DIRTY = 1, CONTENT_DIRTY = 2, NODE_DIRTY = 3;\n// Superclass for the various kinds of descriptions. Defines their\n// basic structure and shared methods.\nclass ViewDesc {\n    constructor(parent, children, dom, \n    // This is the node that holds the child views. It may be null for\n    // descs that don't have children.\n    contentDOM) {\n        this.parent = parent;\n        this.children = children;\n        this.dom = dom;\n        this.contentDOM = contentDOM;\n        this.dirty = NOT_DIRTY;\n        // An expando property on the DOM node provides a link back to its\n        // description.\n        dom.pmViewDesc = this;\n    }\n    // Used to check whether a given description corresponds to a\n    // widget/mark/node.\n    matchesWidget(widget) { return false; }\n    matchesMark(mark) { return false; }\n    matchesNode(node, outerDeco, innerDeco) { return false; }\n    matchesHack(nodeName) { return false; }\n    // When parsing in-editor content (in domchange.js), we allow\n    // descriptions to determine the parse rules that should be used to\n    // parse them.\n    parseRule() { return null; }\n    // Used by the editor's event handler to ignore events that come\n    // from certain descs.\n    stopEvent(event) { return false; }\n    // The size of the content represented by this desc.\n    get size() {\n        let size = 0;\n        for (let i = 0; i < this.children.length; i++)\n            size += this.children[i].size;\n        return size;\n    }\n    // For block nodes, this represents the space taken up by their\n    // start/end tokens.\n    get border() { return 0; }\n    destroy() {\n        this.parent = undefined;\n        if (this.dom.pmViewDesc == this)\n            this.dom.pmViewDesc = undefined;\n        for (let i = 0; i < this.children.length; i++)\n            this.children[i].destroy();\n    }\n    posBeforeChild(child) {\n        for (let i = 0, pos = this.posAtStart;; i++) {\n            let cur = this.children[i];\n            if (cur == child)\n                return pos;\n            pos += cur.size;\n        }\n    }\n    get posBefore() {\n        return this.parent.posBeforeChild(this);\n    }\n    get posAtStart() {\n        return this.parent ? this.parent.posBeforeChild(this) + this.border : 0;\n    }\n    get posAfter() {\n        return this.posBefore + this.size;\n    }\n    get posAtEnd() {\n        return this.posAtStart + this.size - 2 * this.border;\n    }\n    localPosFromDOM(dom, offset, bias) {\n        // If the DOM position is in the content, use the child desc after\n        // it to figure out a position.\n        if (this.contentDOM && this.contentDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode)) {\n            if (bias < 0) {\n                let domBefore, desc;\n                if (dom == this.contentDOM) {\n                    domBefore = dom.childNodes[offset - 1];\n                }\n                else {\n                    while (dom.parentNode != this.contentDOM)\n                        dom = dom.parentNode;\n                    domBefore = dom.previousSibling;\n                }\n                while (domBefore && !((desc = domBefore.pmViewDesc) && desc.parent == this))\n                    domBefore = domBefore.previousSibling;\n                return domBefore ? this.posBeforeChild(desc) + desc.size : this.posAtStart;\n            }\n            else {\n                let domAfter, desc;\n                if (dom == this.contentDOM) {\n                    domAfter = dom.childNodes[offset];\n                }\n                else {\n                    while (dom.parentNode != this.contentDOM)\n                        dom = dom.parentNode;\n                    domAfter = dom.nextSibling;\n                }\n                while (domAfter && !((desc = domAfter.pmViewDesc) && desc.parent == this))\n                    domAfter = domAfter.nextSibling;\n                return domAfter ? this.posBeforeChild(desc) : this.posAtEnd;\n            }\n        }\n        // Otherwise, use various heuristics, falling back on the bias\n        // parameter, to determine whether to return the position at the\n        // start or at the end of this view desc.\n        let atEnd;\n        if (dom == this.dom && this.contentDOM) {\n            atEnd = offset > domIndex(this.contentDOM);\n        }\n        else if (this.contentDOM && this.contentDOM != this.dom && this.dom.contains(this.contentDOM)) {\n            atEnd = dom.compareDocumentPosition(this.contentDOM) & 2;\n        }\n        else if (this.dom.firstChild) {\n            if (offset == 0)\n                for (let search = dom;; search = search.parentNode) {\n                    if (search == this.dom) {\n                        atEnd = false;\n                        break;\n                    }\n                    if (search.previousSibling)\n                        break;\n                }\n            if (atEnd == null && offset == dom.childNodes.length)\n                for (let search = dom;; search = search.parentNode) {\n                    if (search == this.dom) {\n                        atEnd = true;\n                        break;\n                    }\n                    if (search.nextSibling)\n                        break;\n                }\n        }\n        return (atEnd == null ? bias > 0 : atEnd) ? this.posAtEnd : this.posAtStart;\n    }\n    nearestDesc(dom, onlyNodes = false) {\n        for (let first = true, cur = dom; cur; cur = cur.parentNode) {\n            let desc = this.getDesc(cur), nodeDOM;\n            if (desc && (!onlyNodes || desc.node)) {\n                // If dom is outside of this desc's nodeDOM, don't count it.\n                if (first && (nodeDOM = desc.nodeDOM) &&\n                    !(nodeDOM.nodeType == 1 ? nodeDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode) : nodeDOM == dom))\n                    first = false;\n                else\n                    return desc;\n            }\n        }\n    }\n    getDesc(dom) {\n        let desc = dom.pmViewDesc;\n        for (let cur = desc; cur; cur = cur.parent)\n            if (cur == this)\n                return desc;\n    }\n    posFromDOM(dom, offset, bias) {\n        for (let scan = dom; scan; scan = scan.parentNode) {\n            let desc = this.getDesc(scan);\n            if (desc)\n                return desc.localPosFromDOM(dom, offset, bias);\n        }\n        return -1;\n    }\n    // Find the desc for the node after the given pos, if any. (When a\n    // parent node overrode rendering, there might not be one.)\n    descAt(pos) {\n        for (let i = 0, offset = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (offset == pos && end != offset) {\n                while (!child.border && child.children.length)\n                    child = child.children[0];\n                return child;\n            }\n            if (pos < end)\n                return child.descAt(pos - offset - child.border);\n            offset = end;\n        }\n    }\n    domFromPos(pos, side) {\n        if (!this.contentDOM)\n            return { node: this.dom, offset: 0, atom: pos + 1 };\n        // First find the position in the child array\n        let i = 0, offset = 0;\n        for (let curPos = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = curPos + child.size;\n            if (end > pos || child instanceof TrailingHackViewDesc) {\n                offset = pos - curPos;\n                break;\n            }\n            curPos = end;\n        }\n        // If this points into the middle of a child, call through\n        if (offset)\n            return this.children[i].domFromPos(offset - this.children[i].border, side);\n        // Go back if there were any zero-length widgets with side >= 0 before this point\n        for (let prev; i && !(prev = this.children[i - 1]).size && prev instanceof WidgetViewDesc && prev.side >= 0; i--) { }\n        // Scan towards the first useable node\n        if (side <= 0) {\n            let prev, enter = true;\n            for (;; i--, enter = false) {\n                prev = i ? this.children[i - 1] : null;\n                if (!prev || prev.dom.parentNode == this.contentDOM)\n                    break;\n            }\n            if (prev && side && enter && !prev.border && !prev.domAtom)\n                return prev.domFromPos(prev.size, side);\n            return { node: this.contentDOM, offset: prev ? domIndex(prev.dom) + 1 : 0 };\n        }\n        else {\n            let next, enter = true;\n            for (;; i++, enter = false) {\n                next = i < this.children.length ? this.children[i] : null;\n                if (!next || next.dom.parentNode == this.contentDOM)\n                    break;\n            }\n            if (next && enter && !next.border && !next.domAtom)\n                return next.domFromPos(0, side);\n            return { node: this.contentDOM, offset: next ? domIndex(next.dom) : this.contentDOM.childNodes.length };\n        }\n    }\n    // Used to find a DOM range in a single parent for a given changed\n    // range.\n    parseRange(from, to, base = 0) {\n        if (this.children.length == 0)\n            return { node: this.contentDOM, from, to, fromOffset: 0, toOffset: this.contentDOM.childNodes.length };\n        let fromOffset = -1, toOffset = -1;\n        for (let offset = base, i = 0;; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (fromOffset == -1 && from <= end) {\n                let childBase = offset + child.border;\n                // FIXME maybe descend mark views to parse a narrower range?\n                if (from >= childBase && to <= end - child.border && child.node &&\n                    child.contentDOM && this.contentDOM.contains(child.contentDOM))\n                    return child.parseRange(from, to, childBase);\n                from = offset;\n                for (let j = i; j > 0; j--) {\n                    let prev = this.children[j - 1];\n                    if (prev.size && prev.dom.parentNode == this.contentDOM && !prev.emptyChildAt(1)) {\n                        fromOffset = domIndex(prev.dom) + 1;\n                        break;\n                    }\n                    from -= prev.size;\n                }\n                if (fromOffset == -1)\n                    fromOffset = 0;\n            }\n            if (fromOffset > -1 && (end > to || i == this.children.length - 1)) {\n                to = end;\n                for (let j = i + 1; j < this.children.length; j++) {\n                    let next = this.children[j];\n                    if (next.size && next.dom.parentNode == this.contentDOM && !next.emptyChildAt(-1)) {\n                        toOffset = domIndex(next.dom);\n                        break;\n                    }\n                    to += next.size;\n                }\n                if (toOffset == -1)\n                    toOffset = this.contentDOM.childNodes.length;\n                break;\n            }\n            offset = end;\n        }\n        return { node: this.contentDOM, from, to, fromOffset, toOffset };\n    }\n    emptyChildAt(side) {\n        if (this.border || !this.contentDOM || !this.children.length)\n            return false;\n        let child = this.children[side < 0 ? 0 : this.children.length - 1];\n        return child.size == 0 || child.emptyChildAt(side);\n    }\n    domAfterPos(pos) {\n        let { node, offset } = this.domFromPos(pos, 0);\n        if (node.nodeType != 1 || offset == node.childNodes.length)\n            throw new RangeError(\"No node after pos \" + pos);\n        return node.childNodes[offset];\n    }\n    // View descs are responsible for setting any selection that falls\n    // entirely inside of them, so that custom implementations can do\n    // custom things with the selection. Note that this falls apart when\n    // a selection starts in such a node and ends in another, in which\n    // case we just use whatever domFromPos produces as a best effort.\n    setSelection(anchor, head, root, force = false) {\n        // If the selection falls entirely in a child, give it to that child\n        let from = Math.min(anchor, head), to = Math.max(anchor, head);\n        for (let i = 0, offset = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (from > offset && to < end)\n                return child.setSelection(anchor - offset - child.border, head - offset - child.border, root, force);\n            offset = end;\n        }\n        let anchorDOM = this.domFromPos(anchor, anchor ? -1 : 1);\n        let headDOM = head == anchor ? anchorDOM : this.domFromPos(head, head ? -1 : 1);\n        let domSel = root.getSelection();\n        let brKludge = false;\n        // On Firefox, using Selection.collapse to put the cursor after a\n        // BR node for some reason doesn't always work (#1073). On Safari,\n        // the cursor sometimes inexplicable visually lags behind its\n        // reported position in such situations (#1092).\n        if ((gecko || safari) && anchor == head) {\n            let { node, offset } = anchorDOM;\n            if (node.nodeType == 3) {\n                brKludge = !!(offset && node.nodeValue[offset - 1] == \"\\n\");\n                // Issue #1128\n                if (brKludge && offset == node.nodeValue.length) {\n                    for (let scan = node, after; scan; scan = scan.parentNode) {\n                        if (after = scan.nextSibling) {\n                            if (after.nodeName == \"BR\")\n                                anchorDOM = headDOM = { node: after.parentNode, offset: domIndex(after) + 1 };\n                            break;\n                        }\n                        let desc = scan.pmViewDesc;\n                        if (desc && desc.node && desc.node.isBlock)\n                            break;\n                    }\n                }\n            }\n            else {\n                let prev = node.childNodes[offset - 1];\n                brKludge = prev && (prev.nodeName == \"BR\" || prev.contentEditable == \"false\");\n            }\n        }\n        // Firefox can act strangely when the selection is in front of an\n        // uneditable node. See #1163 and https://bugzilla.mozilla.org/show_bug.cgi?id=1709536\n        if (gecko && domSel.focusNode && domSel.focusNode != headDOM.node && domSel.focusNode.nodeType == 1) {\n            let after = domSel.focusNode.childNodes[domSel.focusOffset];\n            if (after && after.contentEditable == \"false\")\n                force = true;\n        }\n        if (!(force || brKludge && safari) &&\n            isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset) &&\n            isEquivalentPosition(headDOM.node, headDOM.offset, domSel.focusNode, domSel.focusOffset))\n            return;\n        // Selection.extend can be used to create an 'inverted' selection\n        // (one where the focus is before the anchor), but not all\n        // browsers support it yet.\n        let domSelExtended = false;\n        if ((domSel.extend || anchor == head) && !brKludge) {\n            domSel.collapse(anchorDOM.node, anchorDOM.offset);\n            try {\n                if (anchor != head)\n                    domSel.extend(headDOM.node, headDOM.offset);\n                domSelExtended = true;\n            }\n            catch (_) {\n                // In some cases with Chrome the selection is empty after calling\n                // collapse, even when it should be valid. This appears to be a bug, but\n                // it is difficult to isolate. If this happens fallback to the old path\n                // without using extend.\n                // Similarly, this could crash on Safari if the editor is hidden, and\n                // there was no selection.\n            }\n        }\n        if (!domSelExtended) {\n            if (anchor > head) {\n                let tmp = anchorDOM;\n                anchorDOM = headDOM;\n                headDOM = tmp;\n            }\n            let range = document.createRange();\n            range.setEnd(headDOM.node, headDOM.offset);\n            range.setStart(anchorDOM.node, anchorDOM.offset);\n            domSel.removeAllRanges();\n            domSel.addRange(range);\n        }\n    }\n    ignoreMutation(mutation) {\n        return !this.contentDOM && mutation.type != \"selection\";\n    }\n    get contentLost() {\n        return this.contentDOM && this.contentDOM != this.dom && !this.dom.contains(this.contentDOM);\n    }\n    // Remove a subtree of the element tree that has been touched\n    // by a DOM change, so that the next update will redraw it.\n    markDirty(from, to) {\n        for (let offset = 0, i = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (offset == end ? from <= end && to >= offset : from < end && to > offset) {\n                let startInside = offset + child.border, endInside = end - child.border;\n                if (from >= startInside && to <= endInside) {\n                    this.dirty = from == offset || to == end ? CONTENT_DIRTY : CHILD_DIRTY;\n                    if (from == startInside && to == endInside &&\n                        (child.contentLost || child.dom.parentNode != this.contentDOM))\n                        child.dirty = NODE_DIRTY;\n                    else\n                        child.markDirty(from - startInside, to - startInside);\n                    return;\n                }\n                else {\n                    child.dirty = child.dom == child.contentDOM && child.dom.parentNode == this.contentDOM && !child.children.length\n                        ? CONTENT_DIRTY : NODE_DIRTY;\n                }\n            }\n            offset = end;\n        }\n        this.dirty = CONTENT_DIRTY;\n    }\n    markParentsDirty() {\n        let level = 1;\n        for (let node = this.parent; node; node = node.parent, level++) {\n            let dirty = level == 1 ? CONTENT_DIRTY : CHILD_DIRTY;\n            if (node.dirty < dirty)\n                node.dirty = dirty;\n        }\n    }\n    get domAtom() { return false; }\n    get ignoreForCoords() { return false; }\n}\n// A widget desc represents a widget decoration, which is a DOM node\n// drawn between the document nodes.\nclass WidgetViewDesc extends ViewDesc {\n    constructor(parent, widget, view, pos) {\n        let self, dom = widget.type.toDOM;\n        if (typeof dom == \"function\")\n            dom = dom(view, () => {\n                if (!self)\n                    return pos;\n                if (self.parent)\n                    return self.parent.posBeforeChild(self);\n            });\n        if (!widget.type.spec.raw) {\n            if (dom.nodeType != 1) {\n                let wrap = document.createElement(\"span\");\n                wrap.appendChild(dom);\n                dom = wrap;\n            }\n            dom.contentEditable = \"false\";\n            dom.classList.add(\"ProseMirror-widget\");\n        }\n        super(parent, [], dom, null);\n        this.widget = widget;\n        this.widget = widget;\n        self = this;\n    }\n    matchesWidget(widget) {\n        return this.dirty == NOT_DIRTY && widget.type.eq(this.widget.type);\n    }\n    parseRule() { return { ignore: true }; }\n    stopEvent(event) {\n        let stop = this.widget.spec.stopEvent;\n        return stop ? stop(event) : false;\n    }\n    ignoreMutation(mutation) {\n        return mutation.type != \"selection\" || this.widget.spec.ignoreSelection;\n    }\n    destroy() {\n        this.widget.type.destroy(this.dom);\n        super.destroy();\n    }\n    get domAtom() { return true; }\n    get side() { return this.widget.type.side; }\n}\nclass CompositionViewDesc extends ViewDesc {\n    constructor(parent, dom, textDOM, text) {\n        super(parent, [], dom, null);\n        this.textDOM = textDOM;\n        this.text = text;\n    }\n    get size() { return this.text.length; }\n    localPosFromDOM(dom, offset) {\n        if (dom != this.textDOM)\n            return this.posAtStart + (offset ? this.size : 0);\n        return this.posAtStart + offset;\n    }\n    domFromPos(pos) {\n        return { node: this.textDOM, offset: pos };\n    }\n    ignoreMutation(mut) {\n        return mut.type === 'characterData' && mut.target.nodeValue == mut.oldValue;\n    }\n}\n// A mark desc represents a mark. May have multiple children,\n// depending on how the mark is split. Note that marks are drawn using\n// a fixed nesting order, for simplicity and predictability, so in\n// some cases they will be split more often than would appear\n// necessary.\nclass MarkViewDesc extends ViewDesc {\n    constructor(parent, mark, dom, contentDOM) {\n        super(parent, [], dom, contentDOM);\n        this.mark = mark;\n    }\n    static create(parent, mark, inline, view) {\n        let custom = view.nodeViews[mark.type.name];\n        let spec = custom && custom(mark, view, inline);\n        if (!spec || !spec.dom)\n            spec = DOMSerializer.renderSpec(document, mark.type.spec.toDOM(mark, inline));\n        return new MarkViewDesc(parent, mark, spec.dom, spec.contentDOM || spec.dom);\n    }\n    parseRule() {\n        if ((this.dirty & NODE_DIRTY) || this.mark.type.spec.reparseInView)\n            return null;\n        return { mark: this.mark.type.name, attrs: this.mark.attrs, contentElement: this.contentDOM };\n    }\n    matchesMark(mark) { return this.dirty != NODE_DIRTY && this.mark.eq(mark); }\n    markDirty(from, to) {\n        super.markDirty(from, to);\n        // Move dirty info to nearest node view\n        if (this.dirty != NOT_DIRTY) {\n            let parent = this.parent;\n            while (!parent.node)\n                parent = parent.parent;\n            if (parent.dirty < this.dirty)\n                parent.dirty = this.dirty;\n            this.dirty = NOT_DIRTY;\n        }\n    }\n    slice(from, to, view) {\n        let copy = MarkViewDesc.create(this.parent, this.mark, true, view);\n        let nodes = this.children, size = this.size;\n        if (to < size)\n            nodes = replaceNodes(nodes, to, size, view);\n        if (from > 0)\n            nodes = replaceNodes(nodes, 0, from, view);\n        for (let i = 0; i < nodes.length; i++)\n            nodes[i].parent = copy;\n        copy.children = nodes;\n        return copy;\n    }\n}\n// Node view descs are the main, most common type of view desc, and\n// correspond to an actual node in the document. Unlike mark descs,\n// they populate their child array themselves.\nclass NodeViewDesc extends ViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos) {\n        super(parent, [], dom, contentDOM);\n        this.node = node;\n        this.outerDeco = outerDeco;\n        this.innerDeco = innerDeco;\n        this.nodeDOM = nodeDOM;\n    }\n    // By default, a node is rendered using the `toDOM` method from the\n    // node type spec. But client code can use the `nodeViews` spec to\n    // supply a custom node view, which can influence various aspects of\n    // the way the node works.\n    //\n    // (Using subclassing for this was intentionally decided against,\n    // since it'd require exposing a whole slew of finicky\n    // implementation details to the user code that they probably will\n    // never need.)\n    static create(parent, node, outerDeco, innerDeco, view, pos) {\n        let custom = view.nodeViews[node.type.name], descObj;\n        let spec = custom && custom(node, view, () => {\n            // (This is a function that allows the custom view to find its\n            // own position)\n            if (!descObj)\n                return pos;\n            if (descObj.parent)\n                return descObj.parent.posBeforeChild(descObj);\n        }, outerDeco, innerDeco);\n        let dom = spec && spec.dom, contentDOM = spec && spec.contentDOM;\n        if (node.isText) {\n            if (!dom)\n                dom = document.createTextNode(node.text);\n            else if (dom.nodeType != 3)\n                throw new RangeError(\"Text must be rendered as a DOM text node\");\n        }\n        else if (!dom) {\n            ({ dom, contentDOM } = DOMSerializer.renderSpec(document, node.type.spec.toDOM(node)));\n        }\n        if (!contentDOM && !node.isText && dom.nodeName != \"BR\") { // Chrome gets confused by <br contenteditable=false>\n            if (!dom.hasAttribute(\"contenteditable\"))\n                dom.contentEditable = \"false\";\n            if (node.type.spec.draggable)\n                dom.draggable = true;\n        }\n        let nodeDOM = dom;\n        dom = applyOuterDeco(dom, outerDeco, node);\n        if (spec)\n            return descObj = new CustomNodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM || null, nodeDOM, spec, view, pos + 1);\n        else if (node.isText)\n            return new TextViewDesc(parent, node, outerDeco, innerDeco, dom, nodeDOM, view);\n        else\n            return new NodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM || null, nodeDOM, view, pos + 1);\n    }\n    parseRule() {\n        // Experimental kludge to allow opt-in re-parsing of nodes\n        if (this.node.type.spec.reparseInView)\n            return null;\n        // FIXME the assumption that this can always return the current\n        // attrs means that if the user somehow manages to change the\n        // attrs in the dom, that won't be picked up. Not entirely sure\n        // whether this is a problem\n        let rule = { node: this.node.type.name, attrs: this.node.attrs };\n        if (this.node.type.whitespace == \"pre\")\n            rule.preserveWhitespace = \"full\";\n        if (!this.contentDOM) {\n            rule.getContent = () => this.node.content;\n        }\n        else if (!this.contentLost) {\n            rule.contentElement = this.contentDOM;\n        }\n        else {\n            // Chrome likes to randomly recreate parent nodes when\n            // backspacing things. When that happens, this tries to find the\n            // new parent.\n            for (let i = this.children.length - 1; i >= 0; i--) {\n                let child = this.children[i];\n                if (this.dom.contains(child.dom.parentNode)) {\n                    rule.contentElement = child.dom.parentNode;\n                    break;\n                }\n            }\n            if (!rule.contentElement)\n                rule.getContent = () => Fragment.empty;\n        }\n        return rule;\n    }\n    matchesNode(node, outerDeco, innerDeco) {\n        return this.dirty == NOT_DIRTY && node.eq(this.node) &&\n            sameOuterDeco(outerDeco, this.outerDeco) && innerDeco.eq(this.innerDeco);\n    }\n    get size() { return this.node.nodeSize; }\n    get border() { return this.node.isLeaf ? 0 : 1; }\n    // Syncs `this.children` to match `this.node.content` and the local\n    // decorations, possibly introducing nesting for marks. Then, in a\n    // separate step, syncs the DOM inside `this.contentDOM` to\n    // `this.children`.\n    updateChildren(view, pos) {\n        let inline = this.node.inlineContent, off = pos;\n        let composition = view.composing ? this.localCompositionInfo(view, pos) : null;\n        let localComposition = composition && composition.pos > -1 ? composition : null;\n        let compositionInChild = composition && composition.pos < 0;\n        let updater = new ViewTreeUpdater(this, localComposition && localComposition.node, view);\n        iterDeco(this.node, this.innerDeco, (widget, i, insideNode) => {\n            if (widget.spec.marks)\n                updater.syncToMarks(widget.spec.marks, inline, view);\n            else if (widget.type.side >= 0 && !insideNode)\n                updater.syncToMarks(i == this.node.childCount ? Mark.none : this.node.child(i).marks, inline, view);\n            // If the next node is a desc matching this widget, reuse it,\n            // otherwise insert the widget as a new view desc.\n            updater.placeWidget(widget, view, off);\n        }, (child, outerDeco, innerDeco, i) => {\n            // Make sure the wrapping mark descs match the node's marks.\n            updater.syncToMarks(child.marks, inline, view);\n            // Try several strategies for drawing this node\n            let compIndex;\n            if (updater.findNodeMatch(child, outerDeco, innerDeco, i)) ;\n            else if (compositionInChild && view.state.selection.from > off &&\n                view.state.selection.to < off + child.nodeSize &&\n                (compIndex = updater.findIndexWithChild(composition.node)) > -1 &&\n                updater.updateNodeAt(child, outerDeco, innerDeco, compIndex, view)) ;\n            else if (updater.updateNextNode(child, outerDeco, innerDeco, view, i, off)) ;\n            else {\n                // Add it as a new view\n                updater.addNode(child, outerDeco, innerDeco, view, off);\n            }\n            off += child.nodeSize;\n        });\n        // Drop all remaining descs after the current position.\n        updater.syncToMarks([], inline, view);\n        if (this.node.isTextblock)\n            updater.addTextblockHacks();\n        updater.destroyRest();\n        // Sync the DOM if anything changed\n        if (updater.changed || this.dirty == CONTENT_DIRTY) {\n            // May have to protect focused DOM from being changed if a composition is active\n            if (localComposition)\n                this.protectLocalComposition(view, localComposition);\n            renderDescs(this.contentDOM, this.children, view);\n            if (ios)\n                iosHacks(this.dom);\n        }\n    }\n    localCompositionInfo(view, pos) {\n        // Only do something if both the selection and a focused text node\n        // are inside of this node\n        let { from, to } = view.state.selection;\n        if (!(view.state.selection instanceof TextSelection) || from < pos || to > pos + this.node.content.size)\n            return null;\n        let sel = view.domSelectionRange();\n        let textNode = nearbyTextNode(sel.focusNode, sel.focusOffset);\n        if (!textNode || !this.dom.contains(textNode.parentNode))\n            return null;\n        if (this.node.inlineContent) {\n            // Find the text in the focused node in the node, stop if it's not\n            // there (may have been modified through other means, in which\n            // case it should overwritten)\n            let text = textNode.nodeValue;\n            let textPos = findTextInFragment(this.node.content, text, from - pos, to - pos);\n            return textPos < 0 ? null : { node: textNode, pos: textPos, text };\n        }\n        else {\n            return { node: textNode, pos: -1, text: \"\" };\n        }\n    }\n    protectLocalComposition(view, { node, pos, text }) {\n        // The node is already part of a local view desc, leave it there\n        if (this.getDesc(node))\n            return;\n        // Create a composition view for the orphaned nodes\n        let topNode = node;\n        for (;; topNode = topNode.parentNode) {\n            if (topNode.parentNode == this.contentDOM)\n                break;\n            while (topNode.previousSibling)\n                topNode.parentNode.removeChild(topNode.previousSibling);\n            while (topNode.nextSibling)\n                topNode.parentNode.removeChild(topNode.nextSibling);\n            if (topNode.pmViewDesc)\n                topNode.pmViewDesc = undefined;\n        }\n        let desc = new CompositionViewDesc(this, topNode, node, text);\n        view.input.compositionNodes.push(desc);\n        // Patch up this.children to contain the composition view\n        this.children = replaceNodes(this.children, pos, pos + text.length, view, desc);\n    }\n    // If this desc must be updated to match the given node decoration,\n    // do so and return true.\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY ||\n            !node.sameMarkup(this.node))\n            return false;\n        this.updateInner(node, outerDeco, innerDeco, view);\n        return true;\n    }\n    updateInner(node, outerDeco, innerDeco, view) {\n        this.updateOuterDeco(outerDeco);\n        this.node = node;\n        this.innerDeco = innerDeco;\n        if (this.contentDOM)\n            this.updateChildren(view, this.posAtStart);\n        this.dirty = NOT_DIRTY;\n    }\n    updateOuterDeco(outerDeco) {\n        if (sameOuterDeco(outerDeco, this.outerDeco))\n            return;\n        let needsWrap = this.nodeDOM.nodeType != 1;\n        let oldDOM = this.dom;\n        this.dom = patchOuterDeco(this.dom, this.nodeDOM, computeOuterDeco(this.outerDeco, this.node, needsWrap), computeOuterDeco(outerDeco, this.node, needsWrap));\n        if (this.dom != oldDOM) {\n            oldDOM.pmViewDesc = undefined;\n            this.dom.pmViewDesc = this;\n        }\n        this.outerDeco = outerDeco;\n    }\n    // Mark this node as being the selected node.\n    selectNode() {\n        if (this.nodeDOM.nodeType == 1)\n            this.nodeDOM.classList.add(\"ProseMirror-selectednode\");\n        if (this.contentDOM || !this.node.type.spec.draggable)\n            this.dom.draggable = true;\n    }\n    // Remove selected node marking from this node.\n    deselectNode() {\n        if (this.nodeDOM.nodeType == 1)\n            this.nodeDOM.classList.remove(\"ProseMirror-selectednode\");\n        if (this.contentDOM || !this.node.type.spec.draggable)\n            this.dom.removeAttribute(\"draggable\");\n    }\n    get domAtom() { return this.node.isAtom; }\n}\n// Create a view desc for the top-level document node, to be exported\n// and used by the view class.\nfunction docViewDesc(doc, outerDeco, innerDeco, dom, view) {\n    applyOuterDeco(dom, outerDeco, doc);\n    let docView = new NodeViewDesc(undefined, doc, outerDeco, innerDeco, dom, dom, dom, view, 0);\n    if (docView.contentDOM)\n        docView.updateChildren(view, 0);\n    return docView;\n}\nclass TextViewDesc extends NodeViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, nodeDOM, view) {\n        super(parent, node, outerDeco, innerDeco, dom, null, nodeDOM, view, 0);\n    }\n    parseRule() {\n        let skip = this.nodeDOM.parentNode;\n        while (skip && skip != this.dom && !skip.pmIsDeco)\n            skip = skip.parentNode;\n        return { skip: (skip || true) };\n    }\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY || (this.dirty != NOT_DIRTY && !this.inParent()) ||\n            !node.sameMarkup(this.node))\n            return false;\n        this.updateOuterDeco(outerDeco);\n        if ((this.dirty != NOT_DIRTY || node.text != this.node.text) && node.text != this.nodeDOM.nodeValue) {\n            this.nodeDOM.nodeValue = node.text;\n            if (view.trackWrites == this.nodeDOM)\n                view.trackWrites = null;\n        }\n        this.node = node;\n        this.dirty = NOT_DIRTY;\n        return true;\n    }\n    inParent() {\n        let parentDOM = this.parent.contentDOM;\n        for (let n = this.nodeDOM; n; n = n.parentNode)\n            if (n == parentDOM)\n                return true;\n        return false;\n    }\n    domFromPos(pos) {\n        return { node: this.nodeDOM, offset: pos };\n    }\n    localPosFromDOM(dom, offset, bias) {\n        if (dom == this.nodeDOM)\n            return this.posAtStart + Math.min(offset, this.node.text.length);\n        return super.localPosFromDOM(dom, offset, bias);\n    }\n    ignoreMutation(mutation) {\n        return mutation.type != \"characterData\" && mutation.type != \"selection\";\n    }\n    slice(from, to, view) {\n        let node = this.node.cut(from, to), dom = document.createTextNode(node.text);\n        return new TextViewDesc(this.parent, node, this.outerDeco, this.innerDeco, dom, dom, view);\n    }\n    markDirty(from, to) {\n        super.markDirty(from, to);\n        if (this.dom != this.nodeDOM && (from == 0 || to == this.nodeDOM.nodeValue.length))\n            this.dirty = NODE_DIRTY;\n    }\n    get domAtom() { return false; }\n}\n// A dummy desc used to tag trailing BR or IMG nodes created to work\n// around contentEditable terribleness.\nclass TrailingHackViewDesc extends ViewDesc {\n    parseRule() { return { ignore: true }; }\n    matchesHack(nodeName) { return this.dirty == NOT_DIRTY && this.dom.nodeName == nodeName; }\n    get domAtom() { return true; }\n    get ignoreForCoords() { return this.dom.nodeName == \"IMG\"; }\n}\n// A separate subclass is used for customized node views, so that the\n// extra checks only have to be made for nodes that are actually\n// customized.\nclass CustomNodeViewDesc extends NodeViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, spec, view, pos) {\n        super(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos);\n        this.spec = spec;\n    }\n    // A custom `update` method gets to decide whether the update goes\n    // through. If it does, and there's a `contentDOM` node, our logic\n    // updates the children.\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY)\n            return false;\n        if (this.spec.update) {\n            let result = this.spec.update(node, outerDeco, innerDeco);\n            if (result)\n                this.updateInner(node, outerDeco, innerDeco, view);\n            return result;\n        }\n        else if (!this.contentDOM && !node.isLeaf) {\n            return false;\n        }\n        else {\n            return super.update(node, outerDeco, innerDeco, view);\n        }\n    }\n    selectNode() {\n        this.spec.selectNode ? this.spec.selectNode() : super.selectNode();\n    }\n    deselectNode() {\n        this.spec.deselectNode ? this.spec.deselectNode() : super.deselectNode();\n    }\n    setSelection(anchor, head, root, force) {\n        this.spec.setSelection ? this.spec.setSelection(anchor, head, root)\n            : super.setSelection(anchor, head, root, force);\n    }\n    destroy() {\n        if (this.spec.destroy)\n            this.spec.destroy();\n        super.destroy();\n    }\n    stopEvent(event) {\n        return this.spec.stopEvent ? this.spec.stopEvent(event) : false;\n    }\n    ignoreMutation(mutation) {\n        return this.spec.ignoreMutation ? this.spec.ignoreMutation(mutation) : super.ignoreMutation(mutation);\n    }\n}\n// Sync the content of the given DOM node with the nodes associated\n// with the given array of view descs, recursing into mark descs\n// because this should sync the subtree for a whole node at a time.\nfunction renderDescs(parentDOM, descs, view) {\n    let dom = parentDOM.firstChild, written = false;\n    for (let i = 0; i < descs.length; i++) {\n        let desc = descs[i], childDOM = desc.dom;\n        if (childDOM.parentNode == parentDOM) {\n            while (childDOM != dom) {\n                dom = rm(dom);\n                written = true;\n            }\n            dom = dom.nextSibling;\n        }\n        else {\n            written = true;\n            parentDOM.insertBefore(childDOM, dom);\n        }\n        if (desc instanceof MarkViewDesc) {\n            let pos = dom ? dom.previousSibling : parentDOM.lastChild;\n            renderDescs(desc.contentDOM, desc.children, view);\n            dom = pos ? pos.nextSibling : parentDOM.firstChild;\n        }\n    }\n    while (dom) {\n        dom = rm(dom);\n        written = true;\n    }\n    if (written && view.trackWrites == parentDOM)\n        view.trackWrites = null;\n}\nconst OuterDecoLevel = function (nodeName) {\n    if (nodeName)\n        this.nodeName = nodeName;\n};\nOuterDecoLevel.prototype = Object.create(null);\nconst noDeco = [new OuterDecoLevel];\nfunction computeOuterDeco(outerDeco, node, needsWrap) {\n    if (outerDeco.length == 0)\n        return noDeco;\n    let top = needsWrap ? noDeco[0] : new OuterDecoLevel, result = [top];\n    for (let i = 0; i < outerDeco.length; i++) {\n        let attrs = outerDeco[i].type.attrs;\n        if (!attrs)\n            continue;\n        if (attrs.nodeName)\n            result.push(top = new OuterDecoLevel(attrs.nodeName));\n        for (let name in attrs) {\n            let val = attrs[name];\n            if (val == null)\n                continue;\n            if (needsWrap && result.length == 1)\n                result.push(top = new OuterDecoLevel(node.isInline ? \"span\" : \"div\"));\n            if (name == \"class\")\n                top.class = (top.class ? top.class + \" \" : \"\") + val;\n            else if (name == \"style\")\n                top.style = (top.style ? top.style + \";\" : \"\") + val;\n            else if (name != \"nodeName\")\n                top[name] = val;\n        }\n    }\n    return result;\n}\nfunction patchOuterDeco(outerDOM, nodeDOM, prevComputed, curComputed) {\n    // Shortcut for trivial case\n    if (prevComputed == noDeco && curComputed == noDeco)\n        return nodeDOM;\n    let curDOM = nodeDOM;\n    for (let i = 0; i < curComputed.length; i++) {\n        let deco = curComputed[i], prev = prevComputed[i];\n        if (i) {\n            let parent;\n            if (prev && prev.nodeName == deco.nodeName && curDOM != outerDOM &&\n                (parent = curDOM.parentNode) && parent.nodeName.toLowerCase() == deco.nodeName) {\n                curDOM = parent;\n            }\n            else {\n                parent = document.createElement(deco.nodeName);\n                parent.pmIsDeco = true;\n                parent.appendChild(curDOM);\n                prev = noDeco[0];\n                curDOM = parent;\n            }\n        }\n        patchAttributes(curDOM, prev || noDeco[0], deco);\n    }\n    return curDOM;\n}\nfunction patchAttributes(dom, prev, cur) {\n    for (let name in prev)\n        if (name != \"class\" && name != \"style\" && name != \"nodeName\" && !(name in cur))\n            dom.removeAttribute(name);\n    for (let name in cur)\n        if (name != \"class\" && name != \"style\" && name != \"nodeName\" && cur[name] != prev[name])\n            dom.setAttribute(name, cur[name]);\n    if (prev.class != cur.class) {\n        let prevList = prev.class ? prev.class.split(\" \").filter(Boolean) : [];\n        let curList = cur.class ? cur.class.split(\" \").filter(Boolean) : [];\n        for (let i = 0; i < prevList.length; i++)\n            if (curList.indexOf(prevList[i]) == -1)\n                dom.classList.remove(prevList[i]);\n        for (let i = 0; i < curList.length; i++)\n            if (prevList.indexOf(curList[i]) == -1)\n                dom.classList.add(curList[i]);\n        if (dom.classList.length == 0)\n            dom.removeAttribute(\"class\");\n    }\n    if (prev.style != cur.style) {\n        if (prev.style) {\n            let prop = /\\s*([\\w\\-\\xa1-\\uffff]+)\\s*:(?:\"(?:\\\\.|[^\"])*\"|'(?:\\\\.|[^'])*'|\\(.*?\\)|[^;])*/g, m;\n            while (m = prop.exec(prev.style))\n                dom.style.removeProperty(m[1]);\n        }\n        if (cur.style)\n            dom.style.cssText += cur.style;\n    }\n}\nfunction applyOuterDeco(dom, deco, node) {\n    return patchOuterDeco(dom, dom, noDeco, computeOuterDeco(deco, node, dom.nodeType != 1));\n}\nfunction sameOuterDeco(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!a[i].type.eq(b[i].type))\n            return false;\n    return true;\n}\n// Remove a DOM node and return its next sibling.\nfunction rm(dom) {\n    let next = dom.nextSibling;\n    dom.parentNode.removeChild(dom);\n    return next;\n}\n// Helper class for incrementally updating a tree of mark descs and\n// the widget and node descs inside of them.\nclass ViewTreeUpdater {\n    constructor(top, lock, view) {\n        this.lock = lock;\n        this.view = view;\n        // Index into `this.top`'s child array, represents the current\n        // update position.\n        this.index = 0;\n        // When entering a mark, the current top and index are pushed\n        // onto this.\n        this.stack = [];\n        // Tracks whether anything was changed\n        this.changed = false;\n        this.top = top;\n        this.preMatch = preMatch(top.node.content, top);\n    }\n    // Destroy and remove the children between the given indices in\n    // `this.top`.\n    destroyBetween(start, end) {\n        if (start == end)\n            return;\n        for (let i = start; i < end; i++)\n            this.top.children[i].destroy();\n        this.top.children.splice(start, end - start);\n        this.changed = true;\n    }\n    // Destroy all remaining children in `this.top`.\n    destroyRest() {\n        this.destroyBetween(this.index, this.top.children.length);\n    }\n    // Sync the current stack of mark descs with the given array of\n    // marks, reusing existing mark descs when possible.\n    syncToMarks(marks, inline, view) {\n        let keep = 0, depth = this.stack.length >> 1;\n        let maxKeep = Math.min(depth, marks.length);\n        while (keep < maxKeep &&\n            (keep == depth - 1 ? this.top : this.stack[(keep + 1) << 1])\n                .matchesMark(marks[keep]) && marks[keep].type.spec.spanning !== false)\n            keep++;\n        while (keep < depth) {\n            this.destroyRest();\n            this.top.dirty = NOT_DIRTY;\n            this.index = this.stack.pop();\n            this.top = this.stack.pop();\n            depth--;\n        }\n        while (depth < marks.length) {\n            this.stack.push(this.top, this.index + 1);\n            let found = -1;\n            for (let i = this.index; i < Math.min(this.index + 3, this.top.children.length); i++) {\n                let next = this.top.children[i];\n                if (next.matchesMark(marks[depth]) && !this.isLocked(next.dom)) {\n                    found = i;\n                    break;\n                }\n            }\n            if (found > -1) {\n                if (found > this.index) {\n                    this.changed = true;\n                    this.destroyBetween(this.index, found);\n                }\n                this.top = this.top.children[this.index];\n            }\n            else {\n                let markDesc = MarkViewDesc.create(this.top, marks[depth], inline, view);\n                this.top.children.splice(this.index, 0, markDesc);\n                this.top = markDesc;\n                this.changed = true;\n            }\n            this.index = 0;\n            depth++;\n        }\n    }\n    // Try to find a node desc matching the given data. Skip over it and\n    // return true when successful.\n    findNodeMatch(node, outerDeco, innerDeco, index) {\n        let found = -1, targetDesc;\n        if (index >= this.preMatch.index &&\n            (targetDesc = this.preMatch.matches[index - this.preMatch.index]).parent == this.top &&\n            targetDesc.matchesNode(node, outerDeco, innerDeco)) {\n            found = this.top.children.indexOf(targetDesc, this.index);\n        }\n        else {\n            for (let i = this.index, e = Math.min(this.top.children.length, i + 5); i < e; i++) {\n                let child = this.top.children[i];\n                if (child.matchesNode(node, outerDeco, innerDeco) && !this.preMatch.matched.has(child)) {\n                    found = i;\n                    break;\n                }\n            }\n        }\n        if (found < 0)\n            return false;\n        this.destroyBetween(this.index, found);\n        this.index++;\n        return true;\n    }\n    updateNodeAt(node, outerDeco, innerDeco, index, view) {\n        let child = this.top.children[index];\n        if (child.dirty == NODE_DIRTY && child.dom == child.contentDOM)\n            child.dirty = CONTENT_DIRTY;\n        if (!child.update(node, outerDeco, innerDeco, view))\n            return false;\n        this.destroyBetween(this.index, index);\n        this.index++;\n        return true;\n    }\n    findIndexWithChild(domNode) {\n        for (;;) {\n            let parent = domNode.parentNode;\n            if (!parent)\n                return -1;\n            if (parent == this.top.contentDOM) {\n                let desc = domNode.pmViewDesc;\n                if (desc)\n                    for (let i = this.index; i < this.top.children.length; i++) {\n                        if (this.top.children[i] == desc)\n                            return i;\n                    }\n                return -1;\n            }\n            domNode = parent;\n        }\n    }\n    // Try to update the next node, if any, to the given data. Checks\n    // pre-matches to avoid overwriting nodes that could still be used.\n    updateNextNode(node, outerDeco, innerDeco, view, index, pos) {\n        for (let i = this.index; i < this.top.children.length; i++) {\n            let next = this.top.children[i];\n            if (next instanceof NodeViewDesc) {\n                let preMatch = this.preMatch.matched.get(next);\n                if (preMatch != null && preMatch != index)\n                    return false;\n                let nextDOM = next.dom, updated;\n                // Can't update if nextDOM is or contains this.lock, except if\n                // it's a text node whose content already matches the new text\n                // and whose decorations match the new ones.\n                let locked = this.isLocked(nextDOM) &&\n                    !(node.isText && next.node && next.node.isText && next.nodeDOM.nodeValue == node.text &&\n                        next.dirty != NODE_DIRTY && sameOuterDeco(outerDeco, next.outerDeco));\n                if (!locked && next.update(node, outerDeco, innerDeco, view)) {\n                    this.destroyBetween(this.index, i);\n                    if (next.dom != nextDOM)\n                        this.changed = true;\n                    this.index++;\n                    return true;\n                }\n                else if (!locked && (updated = this.recreateWrapper(next, node, outerDeco, innerDeco, view, pos))) {\n                    this.top.children[this.index] = updated;\n                    if (updated.contentDOM) {\n                        updated.dirty = CONTENT_DIRTY;\n                        updated.updateChildren(view, pos + 1);\n                        updated.dirty = NOT_DIRTY;\n                    }\n                    this.changed = true;\n                    this.index++;\n                    return true;\n                }\n                break;\n            }\n        }\n        return false;\n    }\n    // When a node with content is replaced by a different node with\n    // identical content, move over its children.\n    recreateWrapper(next, node, outerDeco, innerDeco, view, pos) {\n        if (next.dirty || node.isAtom || !next.children.length ||\n            !next.node.content.eq(node.content))\n            return null;\n        let wrapper = NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view, pos);\n        if (wrapper.contentDOM) {\n            wrapper.children = next.children;\n            next.children = [];\n            for (let ch of wrapper.children)\n                ch.parent = wrapper;\n        }\n        next.destroy();\n        return wrapper;\n    }\n    // Insert the node as a newly created node desc.\n    addNode(node, outerDeco, innerDeco, view, pos) {\n        let desc = NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view, pos);\n        if (desc.contentDOM)\n            desc.updateChildren(view, pos + 1);\n        this.top.children.splice(this.index++, 0, desc);\n        this.changed = true;\n    }\n    placeWidget(widget, view, pos) {\n        let next = this.index < this.top.children.length ? this.top.children[this.index] : null;\n        if (next && next.matchesWidget(widget) &&\n            (widget == next.widget || !next.widget.type.toDOM.parentNode)) {\n            this.index++;\n        }\n        else {\n            let desc = new WidgetViewDesc(this.top, widget, view, pos);\n            this.top.children.splice(this.index++, 0, desc);\n            this.changed = true;\n        }\n    }\n    // Make sure a textblock looks and behaves correctly in\n    // contentEditable.\n    addTextblockHacks() {\n        let lastChild = this.top.children[this.index - 1], parent = this.top;\n        while (lastChild instanceof MarkViewDesc) {\n            parent = lastChild;\n            lastChild = parent.children[parent.children.length - 1];\n        }\n        if (!lastChild || // Empty textblock\n            !(lastChild instanceof TextViewDesc) ||\n            /\\n$/.test(lastChild.node.text) ||\n            (this.view.requiresGeckoHackNode && /\\s$/.test(lastChild.node.text))) {\n            // Avoid bugs in Safari's cursor drawing (#1165) and Chrome's mouse selection (#1152)\n            if ((safari || chrome) && lastChild && lastChild.dom.contentEditable == \"false\")\n                this.addHackNode(\"IMG\", parent);\n            this.addHackNode(\"BR\", this.top);\n        }\n    }\n    addHackNode(nodeName, parent) {\n        if (parent == this.top && this.index < parent.children.length && parent.children[this.index].matchesHack(nodeName)) {\n            this.index++;\n        }\n        else {\n            let dom = document.createElement(nodeName);\n            if (nodeName == \"IMG\") {\n                dom.className = \"ProseMirror-separator\";\n                dom.alt = \"\";\n            }\n            if (nodeName == \"BR\")\n                dom.className = \"ProseMirror-trailingBreak\";\n            let hack = new TrailingHackViewDesc(this.top, [], dom, null);\n            if (parent != this.top)\n                parent.children.push(hack);\n            else\n                parent.children.splice(this.index++, 0, hack);\n            this.changed = true;\n        }\n    }\n    isLocked(node) {\n        return this.lock && (node == this.lock || node.nodeType == 1 && node.contains(this.lock.parentNode));\n    }\n}\n// Iterate from the end of the fragment and array of descs to find\n// directly matching ones, in order to avoid overeagerly reusing those\n// for other nodes. Returns the fragment index of the first node that\n// is part of the sequence of matched nodes at the end of the\n// fragment.\nfunction preMatch(frag, parentDesc) {\n    let curDesc = parentDesc, descI = curDesc.children.length;\n    let fI = frag.childCount, matched = new Map, matches = [];\n    outer: while (fI > 0) {\n        let desc;\n        for (;;) {\n            if (descI) {\n                let next = curDesc.children[descI - 1];\n                if (next instanceof MarkViewDesc) {\n                    curDesc = next;\n                    descI = next.children.length;\n                }\n                else {\n                    desc = next;\n                    descI--;\n                    break;\n                }\n            }\n            else if (curDesc == parentDesc) {\n                break outer;\n            }\n            else {\n                // FIXME\n                descI = curDesc.parent.children.indexOf(curDesc);\n                curDesc = curDesc.parent;\n            }\n        }\n        let node = desc.node;\n        if (!node)\n            continue;\n        if (node != frag.child(fI - 1))\n            break;\n        --fI;\n        matched.set(desc, fI);\n        matches.push(desc);\n    }\n    return { index: fI, matched, matches: matches.reverse() };\n}\nfunction compareSide(a, b) {\n    return a.type.side - b.type.side;\n}\n// This function abstracts iterating over the nodes and decorations in\n// a fragment. Calls `onNode` for each node, with its local and child\n// decorations. Splits text nodes when there is a decoration starting\n// or ending inside of them. Calls `onWidget` for each widget.\nfunction iterDeco(parent, deco, onWidget, onNode) {\n    let locals = deco.locals(parent), offset = 0;\n    // Simple, cheap variant for when there are no local decorations\n    if (locals.length == 0) {\n        for (let i = 0; i < parent.childCount; i++) {\n            let child = parent.child(i);\n            onNode(child, locals, deco.forChild(offset, child), i);\n            offset += child.nodeSize;\n        }\n        return;\n    }\n    let decoIndex = 0, active = [], restNode = null;\n    for (let parentIndex = 0;;) {\n        let widget, widgets;\n        while (decoIndex < locals.length && locals[decoIndex].to == offset) {\n            let next = locals[decoIndex++];\n            if (next.widget) {\n                if (!widget)\n                    widget = next;\n                else\n                    (widgets || (widgets = [widget])).push(next);\n            }\n        }\n        if (widget) {\n            if (widgets) {\n                widgets.sort(compareSide);\n                for (let i = 0; i < widgets.length; i++)\n                    onWidget(widgets[i], parentIndex, !!restNode);\n            }\n            else {\n                onWidget(widget, parentIndex, !!restNode);\n            }\n        }\n        let child, index;\n        if (restNode) {\n            index = -1;\n            child = restNode;\n            restNode = null;\n        }\n        else if (parentIndex < parent.childCount) {\n            index = parentIndex;\n            child = parent.child(parentIndex++);\n        }\n        else {\n            break;\n        }\n        for (let i = 0; i < active.length; i++)\n            if (active[i].to <= offset)\n                active.splice(i--, 1);\n        while (decoIndex < locals.length && locals[decoIndex].from <= offset && locals[decoIndex].to > offset)\n            active.push(locals[decoIndex++]);\n        let end = offset + child.nodeSize;\n        if (child.isText) {\n            let cutAt = end;\n            if (decoIndex < locals.length && locals[decoIndex].from < cutAt)\n                cutAt = locals[decoIndex].from;\n            for (let i = 0; i < active.length; i++)\n                if (active[i].to < cutAt)\n                    cutAt = active[i].to;\n            if (cutAt < end) {\n                restNode = child.cut(cutAt - offset);\n                child = child.cut(0, cutAt - offset);\n                end = cutAt;\n                index = -1;\n            }\n        }\n        let outerDeco = child.isInline && !child.isLeaf ? active.filter(d => !d.inline) : active.slice();\n        onNode(child, outerDeco, deco.forChild(offset, child), index);\n        offset = end;\n    }\n}\n// List markers in Mobile Safari will mysteriously disappear\n// sometimes. This works around that.\nfunction iosHacks(dom) {\n    if (dom.nodeName == \"UL\" || dom.nodeName == \"OL\") {\n        let oldCSS = dom.style.cssText;\n        dom.style.cssText = oldCSS + \"; list-style: square !important\";\n        window.getComputedStyle(dom).listStyle;\n        dom.style.cssText = oldCSS;\n    }\n}\nfunction nearbyTextNode(node, offset) {\n    for (;;) {\n        if (node.nodeType == 3)\n            return node;\n        if (node.nodeType == 1 && offset > 0) {\n            if (node.childNodes.length > offset && node.childNodes[offset].nodeType == 3)\n                return node.childNodes[offset];\n            node = node.childNodes[offset - 1];\n            offset = nodeSize(node);\n        }\n        else if (node.nodeType == 1 && offset < node.childNodes.length) {\n            node = node.childNodes[offset];\n            offset = 0;\n        }\n        else {\n            return null;\n        }\n    }\n}\n// Find a piece of text in an inline fragment, overlapping from-to\nfunction findTextInFragment(frag, text, from, to) {\n    for (let i = 0, pos = 0; i < frag.childCount && pos <= to;) {\n        let child = frag.child(i++), childStart = pos;\n        pos += child.nodeSize;\n        if (!child.isText)\n            continue;\n        let str = child.text;\n        while (i < frag.childCount) {\n            let next = frag.child(i++);\n            pos += next.nodeSize;\n            if (!next.isText)\n                break;\n            str += next.text;\n        }\n        if (pos >= from) {\n            if (pos >= to && str.slice(to - text.length - childStart, to - childStart) == text)\n                return to - text.length;\n            let found = childStart < to ? str.lastIndexOf(text, to - childStart - 1) : -1;\n            if (found >= 0 && found + text.length + childStart >= from)\n                return childStart + found;\n            if (from == to && str.length >= (to + text.length) - childStart &&\n                str.slice(to - childStart, to - childStart + text.length) == text)\n                return to;\n        }\n    }\n    return -1;\n}\n// Replace range from-to in an array of view descs with replacement\n// (may be null to just delete). This goes very much against the grain\n// of the rest of this code, which tends to create nodes with the\n// right shape in one go, rather than messing with them after\n// creation, but is necessary in the composition hack.\nfunction replaceNodes(nodes, from, to, view, replacement) {\n    let result = [];\n    for (let i = 0, off = 0; i < nodes.length; i++) {\n        let child = nodes[i], start = off, end = off += child.size;\n        if (start >= to || end <= from) {\n            result.push(child);\n        }\n        else {\n            if (start < from)\n                result.push(child.slice(0, from - start, view));\n            if (replacement) {\n                result.push(replacement);\n                replacement = undefined;\n            }\n            if (end > to)\n                result.push(child.slice(to - start, child.size, view));\n        }\n    }\n    return result;\n}\n\nfunction selectionFromDOM(view, origin = null) {\n    let domSel = view.domSelectionRange(), doc = view.state.doc;\n    if (!domSel.focusNode)\n        return null;\n    let nearestDesc = view.docView.nearestDesc(domSel.focusNode), inWidget = nearestDesc && nearestDesc.size == 0;\n    let head = view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset, 1);\n    if (head < 0)\n        return null;\n    let $head = doc.resolve(head), $anchor, selection;\n    if (selectionCollapsed(domSel)) {\n        $anchor = $head;\n        while (nearestDesc && !nearestDesc.node)\n            nearestDesc = nearestDesc.parent;\n        let nearestDescNode = nearestDesc.node;\n        if (nearestDesc && nearestDescNode.isAtom && NodeSelection.isSelectable(nearestDescNode) && nearestDesc.parent\n            && !(nearestDescNode.isInline && isOnEdge(domSel.focusNode, domSel.focusOffset, nearestDesc.dom))) {\n            let pos = nearestDesc.posBefore;\n            selection = new NodeSelection(head == pos ? $head : doc.resolve(pos));\n        }\n    }\n    else {\n        let anchor = view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset, 1);\n        if (anchor < 0)\n            return null;\n        $anchor = doc.resolve(anchor);\n    }\n    if (!selection) {\n        let bias = origin == \"pointer\" || (view.state.selection.head < $head.pos && !inWidget) ? 1 : -1;\n        selection = selectionBetween(view, $anchor, $head, bias);\n    }\n    return selection;\n}\nfunction editorOwnsSelection(view) {\n    return view.editable ? view.hasFocus() :\n        hasSelection(view) && document.activeElement && document.activeElement.contains(view.dom);\n}\nfunction selectionToDOM(view, force = false) {\n    let sel = view.state.selection;\n    syncNodeSelection(view, sel);\n    if (!editorOwnsSelection(view))\n        return;\n    // The delayed drag selection causes issues with Cell Selections\n    // in Safari. And the drag selection delay is to workarond issues\n    // which only present in Chrome.\n    if (!force && view.input.mouseDown && view.input.mouseDown.allowDefault && chrome) {\n        let domSel = view.domSelectionRange(), curSel = view.domObserver.currentSelection;\n        if (domSel.anchorNode && curSel.anchorNode &&\n            isEquivalentPosition(domSel.anchorNode, domSel.anchorOffset, curSel.anchorNode, curSel.anchorOffset)) {\n            view.input.mouseDown.delayedSelectionSync = true;\n            view.domObserver.setCurSelection();\n            return;\n        }\n    }\n    view.domObserver.disconnectSelection();\n    if (view.cursorWrapper) {\n        selectCursorWrapper(view);\n    }\n    else {\n        let { anchor, head } = sel, resetEditableFrom, resetEditableTo;\n        if (brokenSelectBetweenUneditable && !(sel instanceof TextSelection)) {\n            if (!sel.$from.parent.inlineContent)\n                resetEditableFrom = temporarilyEditableNear(view, sel.from);\n            if (!sel.empty && !sel.$from.parent.inlineContent)\n                resetEditableTo = temporarilyEditableNear(view, sel.to);\n        }\n        view.docView.setSelection(anchor, head, view.root, force);\n        if (brokenSelectBetweenUneditable) {\n            if (resetEditableFrom)\n                resetEditable(resetEditableFrom);\n            if (resetEditableTo)\n                resetEditable(resetEditableTo);\n        }\n        if (sel.visible) {\n            view.dom.classList.remove(\"ProseMirror-hideselection\");\n        }\n        else {\n            view.dom.classList.add(\"ProseMirror-hideselection\");\n            if (\"onselectionchange\" in document)\n                removeClassOnSelectionChange(view);\n        }\n    }\n    view.domObserver.setCurSelection();\n    view.domObserver.connectSelection();\n}\n// Kludge to work around Webkit not allowing a selection to start/end\n// between non-editable block nodes. We briefly make something\n// editable, set the selection, then set it uneditable again.\nconst brokenSelectBetweenUneditable = safari || chrome && chrome_version < 63;\nfunction temporarilyEditableNear(view, pos) {\n    let { node, offset } = view.docView.domFromPos(pos, 0);\n    let after = offset < node.childNodes.length ? node.childNodes[offset] : null;\n    let before = offset ? node.childNodes[offset - 1] : null;\n    if (safari && after && after.contentEditable == \"false\")\n        return setEditable(after);\n    if ((!after || after.contentEditable == \"false\") &&\n        (!before || before.contentEditable == \"false\")) {\n        if (after)\n            return setEditable(after);\n        else if (before)\n            return setEditable(before);\n    }\n}\nfunction setEditable(element) {\n    element.contentEditable = \"true\";\n    if (safari && element.draggable) {\n        element.draggable = false;\n        element.wasDraggable = true;\n    }\n    return element;\n}\nfunction resetEditable(element) {\n    element.contentEditable = \"false\";\n    if (element.wasDraggable) {\n        element.draggable = true;\n        element.wasDraggable = null;\n    }\n}\nfunction removeClassOnSelectionChange(view) {\n    let doc = view.dom.ownerDocument;\n    doc.removeEventListener(\"selectionchange\", view.input.hideSelectionGuard);\n    let domSel = view.domSelectionRange();\n    let node = domSel.anchorNode, offset = domSel.anchorOffset;\n    doc.addEventListener(\"selectionchange\", view.input.hideSelectionGuard = () => {\n        if (domSel.anchorNode != node || domSel.anchorOffset != offset) {\n            doc.removeEventListener(\"selectionchange\", view.input.hideSelectionGuard);\n            setTimeout(() => {\n                if (!editorOwnsSelection(view) || view.state.selection.visible)\n                    view.dom.classList.remove(\"ProseMirror-hideselection\");\n            }, 20);\n        }\n    });\n}\nfunction selectCursorWrapper(view) {\n    let domSel = view.domSelection(), range = document.createRange();\n    let node = view.cursorWrapper.dom, img = node.nodeName == \"IMG\";\n    if (img)\n        range.setEnd(node.parentNode, domIndex(node) + 1);\n    else\n        range.setEnd(node, 0);\n    range.collapse(false);\n    domSel.removeAllRanges();\n    domSel.addRange(range);\n    // Kludge to kill 'control selection' in IE11 when selecting an\n    // invisible cursor wrapper, since that would result in those weird\n    // resize handles and a selection that considers the absolutely\n    // positioned wrapper, rather than the root editable node, the\n    // focused element.\n    if (!img && !view.state.selection.visible && ie && ie_version <= 11) {\n        node.disabled = true;\n        node.disabled = false;\n    }\n}\nfunction syncNodeSelection(view, sel) {\n    if (sel instanceof NodeSelection) {\n        let desc = view.docView.descAt(sel.from);\n        if (desc != view.lastSelectedViewDesc) {\n            clearNodeSelection(view);\n            if (desc)\n                desc.selectNode();\n            view.lastSelectedViewDesc = desc;\n        }\n    }\n    else {\n        clearNodeSelection(view);\n    }\n}\n// Clear all DOM statefulness of the last node selection.\nfunction clearNodeSelection(view) {\n    if (view.lastSelectedViewDesc) {\n        if (view.lastSelectedViewDesc.parent)\n            view.lastSelectedViewDesc.deselectNode();\n        view.lastSelectedViewDesc = undefined;\n    }\n}\nfunction selectionBetween(view, $anchor, $head, bias) {\n    return view.someProp(\"createSelectionBetween\", f => f(view, $anchor, $head))\n        || TextSelection.between($anchor, $head, bias);\n}\nfunction hasFocusAndSelection(view) {\n    if (view.editable && !view.hasFocus())\n        return false;\n    return hasSelection(view);\n}\nfunction hasSelection(view) {\n    let sel = view.domSelectionRange();\n    if (!sel.anchorNode)\n        return false;\n    try {\n        // Firefox will raise 'permission denied' errors when accessing\n        // properties of `sel.anchorNode` when it's in a generated CSS\n        // element.\n        return view.dom.contains(sel.anchorNode.nodeType == 3 ? sel.anchorNode.parentNode : sel.anchorNode) &&\n            (view.editable || view.dom.contains(sel.focusNode.nodeType == 3 ? sel.focusNode.parentNode : sel.focusNode));\n    }\n    catch (_) {\n        return false;\n    }\n}\nfunction anchorInRightPlace(view) {\n    let anchorDOM = view.docView.domFromPos(view.state.selection.anchor, 0);\n    let domSel = view.domSelectionRange();\n    return isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset);\n}\n\nfunction moveSelectionBlock(state, dir) {\n    let { $anchor, $head } = state.selection;\n    let $side = dir > 0 ? $anchor.max($head) : $anchor.min($head);\n    let $start = !$side.parent.inlineContent ? $side : $side.depth ? state.doc.resolve(dir > 0 ? $side.after() : $side.before()) : null;\n    return $start && Selection.findFrom($start, dir);\n}\nfunction apply(view, sel) {\n    view.dispatch(view.state.tr.setSelection(sel).scrollIntoView());\n    return true;\n}\nfunction selectHorizontally(view, dir, mods) {\n    let sel = view.state.selection;\n    if (sel instanceof TextSelection) {\n        if (mods.indexOf(\"s\") > -1) {\n            let { $head } = sel, node = $head.textOffset ? null : dir < 0 ? $head.nodeBefore : $head.nodeAfter;\n            if (!node || node.isText || !node.isLeaf)\n                return false;\n            let $newHead = view.state.doc.resolve($head.pos + node.nodeSize * (dir < 0 ? -1 : 1));\n            return apply(view, new TextSelection(sel.$anchor, $newHead));\n        }\n        else if (!sel.empty) {\n            return false;\n        }\n        else if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\")) {\n            let next = moveSelectionBlock(view.state, dir);\n            if (next && (next instanceof NodeSelection))\n                return apply(view, next);\n            return false;\n        }\n        else if (!(mac && mods.indexOf(\"m\") > -1)) {\n            let $head = sel.$head, node = $head.textOffset ? null : dir < 0 ? $head.nodeBefore : $head.nodeAfter, desc;\n            if (!node || node.isText)\n                return false;\n            let nodePos = dir < 0 ? $head.pos - node.nodeSize : $head.pos;\n            if (!(node.isAtom || (desc = view.docView.descAt(nodePos)) && !desc.contentDOM))\n                return false;\n            if (NodeSelection.isSelectable(node)) {\n                return apply(view, new NodeSelection(dir < 0 ? view.state.doc.resolve($head.pos - node.nodeSize) : $head));\n            }\n            else if (webkit) {\n                // Chrome and Safari will introduce extra pointless cursor\n                // positions around inline uneditable nodes, so we have to\n                // take over and move the cursor past them (#937)\n                return apply(view, new TextSelection(view.state.doc.resolve(dir < 0 ? nodePos : nodePos + node.nodeSize)));\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    else if (sel instanceof NodeSelection && sel.node.isInline) {\n        return apply(view, new TextSelection(dir > 0 ? sel.$to : sel.$from));\n    }\n    else {\n        let next = moveSelectionBlock(view.state, dir);\n        if (next)\n            return apply(view, next);\n        return false;\n    }\n}\nfunction nodeLen(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction isIgnorable(dom, dir) {\n    let desc = dom.pmViewDesc;\n    return desc && desc.size == 0 && (dir < 0 || dom.nextSibling || dom.nodeName != \"BR\");\n}\nfunction skipIgnoredNodes(view, dir) {\n    return dir < 0 ? skipIgnoredNodesBefore(view) : skipIgnoredNodesAfter(view);\n}\n// Make sure the cursor isn't directly after one or more ignored\n// nodes, which will confuse the browser's cursor motion logic.\nfunction skipIgnoredNodesBefore(view) {\n    let sel = view.domSelectionRange();\n    let node = sel.focusNode, offset = sel.focusOffset;\n    if (!node)\n        return;\n    let moveNode, moveOffset, force = false;\n    // Gecko will do odd things when the selection is directly in front\n    // of a non-editable node, so in that case, move it into the next\n    // node if possible. Issue prosemirror/prosemirror#832.\n    if (gecko && node.nodeType == 1 && offset < nodeLen(node) && isIgnorable(node.childNodes[offset], -1))\n        force = true;\n    for (;;) {\n        if (offset > 0) {\n            if (node.nodeType != 1) {\n                break;\n            }\n            else {\n                let before = node.childNodes[offset - 1];\n                if (isIgnorable(before, -1)) {\n                    moveNode = node;\n                    moveOffset = --offset;\n                }\n                else if (before.nodeType == 3) {\n                    node = before;\n                    offset = node.nodeValue.length;\n                }\n                else\n                    break;\n            }\n        }\n        else if (isBlockNode(node)) {\n            break;\n        }\n        else {\n            let prev = node.previousSibling;\n            while (prev && isIgnorable(prev, -1)) {\n                moveNode = node.parentNode;\n                moveOffset = domIndex(prev);\n                prev = prev.previousSibling;\n            }\n            if (!prev) {\n                node = node.parentNode;\n                if (node == view.dom)\n                    break;\n                offset = 0;\n            }\n            else {\n                node = prev;\n                offset = nodeLen(node);\n            }\n        }\n    }\n    if (force)\n        setSelFocus(view, node, offset);\n    else if (moveNode)\n        setSelFocus(view, moveNode, moveOffset);\n}\n// Make sure the cursor isn't directly before one or more ignored\n// nodes.\nfunction skipIgnoredNodesAfter(view) {\n    let sel = view.domSelectionRange();\n    let node = sel.focusNode, offset = sel.focusOffset;\n    if (!node)\n        return;\n    let len = nodeLen(node);\n    let moveNode, moveOffset;\n    for (;;) {\n        if (offset < len) {\n            if (node.nodeType != 1)\n                break;\n            let after = node.childNodes[offset];\n            if (isIgnorable(after, 1)) {\n                moveNode = node;\n                moveOffset = ++offset;\n            }\n            else\n                break;\n        }\n        else if (isBlockNode(node)) {\n            break;\n        }\n        else {\n            let next = node.nextSibling;\n            while (next && isIgnorable(next, 1)) {\n                moveNode = next.parentNode;\n                moveOffset = domIndex(next) + 1;\n                next = next.nextSibling;\n            }\n            if (!next) {\n                node = node.parentNode;\n                if (node == view.dom)\n                    break;\n                offset = len = 0;\n            }\n            else {\n                node = next;\n                offset = 0;\n                len = nodeLen(node);\n            }\n        }\n    }\n    if (moveNode)\n        setSelFocus(view, moveNode, moveOffset);\n}\nfunction isBlockNode(dom) {\n    let desc = dom.pmViewDesc;\n    return desc && desc.node && desc.node.isBlock;\n}\nfunction textNodeAfter(node, offset) {\n    while (node && offset == node.childNodes.length && !hasBlockDesc(node)) {\n        offset = domIndex(node) + 1;\n        node = node.parentNode;\n    }\n    while (node && offset < node.childNodes.length) {\n        let next = node.childNodes[offset];\n        if (next.nodeType == 3)\n            return next;\n        if (next.nodeType == 1 && next.contentEditable == \"false\")\n            break;\n        node = next;\n        offset = 0;\n    }\n}\nfunction textNodeBefore(node, offset) {\n    while (node && !offset && !hasBlockDesc(node)) {\n        offset = domIndex(node);\n        node = node.parentNode;\n    }\n    while (node && offset) {\n        let next = node.childNodes[offset - 1];\n        if (next.nodeType == 3)\n            return next;\n        if (next.nodeType == 1 && next.contentEditable == \"false\")\n            break;\n        node = next;\n        offset = node.childNodes.length;\n    }\n}\nfunction setSelFocus(view, node, offset) {\n    if (node.nodeType != 3) {\n        let before, after;\n        if (after = textNodeAfter(node, offset)) {\n            node = after;\n            offset = 0;\n        }\n        else if (before = textNodeBefore(node, offset)) {\n            node = before;\n            offset = before.nodeValue.length;\n        }\n    }\n    let sel = view.domSelection();\n    if (selectionCollapsed(sel)) {\n        let range = document.createRange();\n        range.setEnd(node, offset);\n        range.setStart(node, offset);\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n    else if (sel.extend) {\n        sel.extend(node, offset);\n    }\n    view.domObserver.setCurSelection();\n    let { state } = view;\n    // If no state update ends up happening, reset the selection.\n    setTimeout(() => {\n        if (view.state == state)\n            selectionToDOM(view);\n    }, 50);\n}\nfunction findDirection(view, pos) {\n    let $pos = view.state.doc.resolve(pos);\n    if (!(chrome || windows) && $pos.parent.inlineContent) {\n        let coords = view.coordsAtPos(pos);\n        if (pos > $pos.start()) {\n            let before = view.coordsAtPos(pos - 1);\n            let mid = (before.top + before.bottom) / 2;\n            if (mid > coords.top && mid < coords.bottom && Math.abs(before.left - coords.left) > 1)\n                return before.left < coords.left ? \"ltr\" : \"rtl\";\n        }\n        if (pos < $pos.end()) {\n            let after = view.coordsAtPos(pos + 1);\n            let mid = (after.top + after.bottom) / 2;\n            if (mid > coords.top && mid < coords.bottom && Math.abs(after.left - coords.left) > 1)\n                return after.left > coords.left ? \"ltr\" : \"rtl\";\n        }\n    }\n    let computed = getComputedStyle(view.dom).direction;\n    return computed == \"rtl\" ? \"rtl\" : \"ltr\";\n}\n// Check whether vertical selection motion would involve node\n// selections. If so, apply it (if not, the result is left to the\n// browser)\nfunction selectVertically(view, dir, mods) {\n    let sel = view.state.selection;\n    if (sel instanceof TextSelection && !sel.empty || mods.indexOf(\"s\") > -1)\n        return false;\n    if (mac && mods.indexOf(\"m\") > -1)\n        return false;\n    let { $from, $to } = sel;\n    if (!$from.parent.inlineContent || view.endOfTextblock(dir < 0 ? \"up\" : \"down\")) {\n        let next = moveSelectionBlock(view.state, dir);\n        if (next && (next instanceof NodeSelection))\n            return apply(view, next);\n    }\n    if (!$from.parent.inlineContent) {\n        let side = dir < 0 ? $from : $to;\n        let beyond = sel instanceof AllSelection ? Selection.near(side, dir) : Selection.findFrom(side, dir);\n        return beyond ? apply(view, beyond) : false;\n    }\n    return false;\n}\nfunction stopNativeHorizontalDelete(view, dir) {\n    if (!(view.state.selection instanceof TextSelection))\n        return true;\n    let { $head, $anchor, empty } = view.state.selection;\n    if (!$head.sameParent($anchor))\n        return true;\n    if (!empty)\n        return false;\n    if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\"))\n        return true;\n    let nextNode = !$head.textOffset && (dir < 0 ? $head.nodeBefore : $head.nodeAfter);\n    if (nextNode && !nextNode.isText) {\n        let tr = view.state.tr;\n        if (dir < 0)\n            tr.delete($head.pos - nextNode.nodeSize, $head.pos);\n        else\n            tr.delete($head.pos, $head.pos + nextNode.nodeSize);\n        view.dispatch(tr);\n        return true;\n    }\n    return false;\n}\nfunction switchEditable(view, node, state) {\n    view.domObserver.stop();\n    node.contentEditable = state;\n    view.domObserver.start();\n}\n// Issue #867 / #1090 / https://bugs.chromium.org/p/chromium/issues/detail?id=903821\n// In which Safari (and at some point in the past, Chrome) does really\n// wrong things when the down arrow is pressed when the cursor is\n// directly at the start of a textblock and has an uneditable node\n// after it\nfunction safariDownArrowBug(view) {\n    if (!safari || view.state.selection.$head.parentOffset > 0)\n        return false;\n    let { focusNode, focusOffset } = view.domSelectionRange();\n    if (focusNode && focusNode.nodeType == 1 && focusOffset == 0 &&\n        focusNode.firstChild && focusNode.firstChild.contentEditable == \"false\") {\n        let child = focusNode.firstChild;\n        switchEditable(view, child, \"true\");\n        setTimeout(() => switchEditable(view, child, \"false\"), 20);\n    }\n    return false;\n}\n// A backdrop key mapping used to make sure we always suppress keys\n// that have a dangerous default effect, even if the commands they are\n// bound to return false, and to make sure that cursor-motion keys\n// find a cursor (as opposed to a node selection) when pressed. For\n// cursor-motion keys, the code in the handlers also takes care of\n// block selections.\nfunction getMods(event) {\n    let result = \"\";\n    if (event.ctrlKey)\n        result += \"c\";\n    if (event.metaKey)\n        result += \"m\";\n    if (event.altKey)\n        result += \"a\";\n    if (event.shiftKey)\n        result += \"s\";\n    return result;\n}\nfunction captureKeyDown(view, event) {\n    let code = event.keyCode, mods = getMods(event);\n    if (code == 8 || (mac && code == 72 && mods == \"c\")) { // Backspace, Ctrl-h on Mac\n        return stopNativeHorizontalDelete(view, -1) || skipIgnoredNodes(view, -1);\n    }\n    else if ((code == 46 && !event.shiftKey) || (mac && code == 68 && mods == \"c\")) { // Delete, Ctrl-d on Mac\n        return stopNativeHorizontalDelete(view, 1) || skipIgnoredNodes(view, 1);\n    }\n    else if (code == 13 || code == 27) { // Enter, Esc\n        return true;\n    }\n    else if (code == 37 || (mac && code == 66 && mods == \"c\")) { // Left arrow, Ctrl-b on Mac\n        let dir = code == 37 ? (findDirection(view, view.state.selection.from) == \"ltr\" ? -1 : 1) : -1;\n        return selectHorizontally(view, dir, mods) || skipIgnoredNodes(view, dir);\n    }\n    else if (code == 39 || (mac && code == 70 && mods == \"c\")) { // Right arrow, Ctrl-f on Mac\n        let dir = code == 39 ? (findDirection(view, view.state.selection.from) == \"ltr\" ? 1 : -1) : 1;\n        return selectHorizontally(view, dir, mods) || skipIgnoredNodes(view, dir);\n    }\n    else if (code == 38 || (mac && code == 80 && mods == \"c\")) { // Up arrow, Ctrl-p on Mac\n        return selectVertically(view, -1, mods) || skipIgnoredNodes(view, -1);\n    }\n    else if (code == 40 || (mac && code == 78 && mods == \"c\")) { // Down arrow, Ctrl-n on Mac\n        return safariDownArrowBug(view) || selectVertically(view, 1, mods) || skipIgnoredNodes(view, 1);\n    }\n    else if (mods == (mac ? \"m\" : \"c\") &&\n        (code == 66 || code == 73 || code == 89 || code == 90)) { // Mod-[biyz]\n        return true;\n    }\n    return false;\n}\n\nfunction serializeForClipboard(view, slice) {\n    view.someProp(\"transformCopied\", f => { slice = f(slice, view); });\n    let context = [], { content, openStart, openEnd } = slice;\n    while (openStart > 1 && openEnd > 1 && content.childCount == 1 && content.firstChild.childCount == 1) {\n        openStart--;\n        openEnd--;\n        let node = content.firstChild;\n        context.push(node.type.name, node.attrs != node.type.defaultAttrs ? node.attrs : null);\n        content = node.content;\n    }\n    let serializer = view.someProp(\"clipboardSerializer\") || DOMSerializer.fromSchema(view.state.schema);\n    let doc = detachedDoc(), wrap = doc.createElement(\"div\");\n    wrap.appendChild(serializer.serializeFragment(content, { document: doc }));\n    let firstChild = wrap.firstChild, needsWrap, wrappers = 0;\n    while (firstChild && firstChild.nodeType == 1 && (needsWrap = wrapMap[firstChild.nodeName.toLowerCase()])) {\n        for (let i = needsWrap.length - 1; i >= 0; i--) {\n            let wrapper = doc.createElement(needsWrap[i]);\n            while (wrap.firstChild)\n                wrapper.appendChild(wrap.firstChild);\n            wrap.appendChild(wrapper);\n            wrappers++;\n        }\n        firstChild = wrap.firstChild;\n    }\n    if (firstChild && firstChild.nodeType == 1)\n        firstChild.setAttribute(\"data-pm-slice\", `${openStart} ${openEnd}${wrappers ? ` -${wrappers}` : \"\"} ${JSON.stringify(context)}`);\n    let text = view.someProp(\"clipboardTextSerializer\", f => f(slice, view)) ||\n        slice.content.textBetween(0, slice.content.size, \"\\n\\n\");\n    return { dom: wrap, text };\n}\n// Read a slice of content from the clipboard (or drop data).\nfunction parseFromClipboard(view, text, html, plainText, $context) {\n    let inCode = $context.parent.type.spec.code;\n    let dom, slice;\n    if (!html && !text)\n        return null;\n    let asText = text && (plainText || inCode || !html);\n    if (asText) {\n        view.someProp(\"transformPastedText\", f => { text = f(text, inCode || plainText, view); });\n        if (inCode)\n            return text ? new Slice(Fragment.from(view.state.schema.text(text.replace(/\\r\\n?/g, \"\\n\"))), 0, 0) : Slice.empty;\n        let parsed = view.someProp(\"clipboardTextParser\", f => f(text, $context, plainText, view));\n        if (parsed) {\n            slice = parsed;\n        }\n        else {\n            let marks = $context.marks();\n            let { schema } = view.state, serializer = DOMSerializer.fromSchema(schema);\n            dom = document.createElement(\"div\");\n            text.split(/(?:\\r\\n?|\\n)+/).forEach(block => {\n                let p = dom.appendChild(document.createElement(\"p\"));\n                if (block)\n                    p.appendChild(serializer.serializeNode(schema.text(block, marks)));\n            });\n        }\n    }\n    else {\n        view.someProp(\"transformPastedHTML\", f => { html = f(html, view); });\n        dom = readHTML(html);\n        if (webkit)\n            restoreReplacedSpaces(dom);\n    }\n    let contextNode = dom && dom.querySelector(\"[data-pm-slice]\");\n    let sliceData = contextNode && /^(\\d+) (\\d+)(?: -(\\d+))? (.*)/.exec(contextNode.getAttribute(\"data-pm-slice\") || \"\");\n    if (sliceData && sliceData[3])\n        for (let i = +sliceData[3]; i > 0; i--) {\n            let child = dom.firstChild;\n            while (child && child.nodeType != 1)\n                child = child.nextSibling;\n            if (!child)\n                break;\n            dom = child;\n        }\n    if (!slice) {\n        let parser = view.someProp(\"clipboardParser\") || view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema);\n        slice = parser.parseSlice(dom, {\n            preserveWhitespace: !!(asText || sliceData),\n            context: $context,\n            ruleFromNode(dom) {\n                if (dom.nodeName == \"BR\" && !dom.nextSibling &&\n                    dom.parentNode && !inlineParents.test(dom.parentNode.nodeName))\n                    return { ignore: true };\n                return null;\n            }\n        });\n    }\n    if (sliceData) {\n        slice = addContext(closeSlice(slice, +sliceData[1], +sliceData[2]), sliceData[4]);\n    }\n    else { // HTML wasn't created by ProseMirror. Make sure top-level siblings are coherent\n        slice = Slice.maxOpen(normalizeSiblings(slice.content, $context), true);\n        if (slice.openStart || slice.openEnd) {\n            let openStart = 0, openEnd = 0;\n            for (let node = slice.content.firstChild; openStart < slice.openStart && !node.type.spec.isolating; openStart++, node = node.firstChild) { }\n            for (let node = slice.content.lastChild; openEnd < slice.openEnd && !node.type.spec.isolating; openEnd++, node = node.lastChild) { }\n            slice = closeSlice(slice, openStart, openEnd);\n        }\n    }\n    view.someProp(\"transformPasted\", f => { slice = f(slice, view); });\n    return slice;\n}\nconst inlineParents = /^(a|abbr|acronym|b|cite|code|del|em|i|ins|kbd|label|output|q|ruby|s|samp|span|strong|sub|sup|time|u|tt|var)$/i;\n// Takes a slice parsed with parseSlice, which means there hasn't been\n// any content-expression checking done on the top nodes, tries to\n// find a parent node in the current context that might fit the nodes,\n// and if successful, rebuilds the slice so that it fits into that parent.\n//\n// This addresses the problem that Transform.replace expects a\n// coherent slice, and will fail to place a set of siblings that don't\n// fit anywhere in the schema.\nfunction normalizeSiblings(fragment, $context) {\n    if (fragment.childCount < 2)\n        return fragment;\n    for (let d = $context.depth; d >= 0; d--) {\n        let parent = $context.node(d);\n        let match = parent.contentMatchAt($context.index(d));\n        let lastWrap, result = [];\n        fragment.forEach(node => {\n            if (!result)\n                return;\n            let wrap = match.findWrapping(node.type), inLast;\n            if (!wrap)\n                return result = null;\n            if (inLast = result.length && lastWrap.length && addToSibling(wrap, lastWrap, node, result[result.length - 1], 0)) {\n                result[result.length - 1] = inLast;\n            }\n            else {\n                if (result.length)\n                    result[result.length - 1] = closeRight(result[result.length - 1], lastWrap.length);\n                let wrapped = withWrappers(node, wrap);\n                result.push(wrapped);\n                match = match.matchType(wrapped.type);\n                lastWrap = wrap;\n            }\n        });\n        if (result)\n            return Fragment.from(result);\n    }\n    return fragment;\n}\nfunction withWrappers(node, wrap, from = 0) {\n    for (let i = wrap.length - 1; i >= from; i--)\n        node = wrap[i].create(null, Fragment.from(node));\n    return node;\n}\n// Used to group adjacent nodes wrapped in similar parents by\n// normalizeSiblings into the same parent node\nfunction addToSibling(wrap, lastWrap, node, sibling, depth) {\n    if (depth < wrap.length && depth < lastWrap.length && wrap[depth] == lastWrap[depth]) {\n        let inner = addToSibling(wrap, lastWrap, node, sibling.lastChild, depth + 1);\n        if (inner)\n            return sibling.copy(sibling.content.replaceChild(sibling.childCount - 1, inner));\n        let match = sibling.contentMatchAt(sibling.childCount);\n        if (match.matchType(depth == wrap.length - 1 ? node.type : wrap[depth + 1]))\n            return sibling.copy(sibling.content.append(Fragment.from(withWrappers(node, wrap, depth + 1))));\n    }\n}\nfunction closeRight(node, depth) {\n    if (depth == 0)\n        return node;\n    let fragment = node.content.replaceChild(node.childCount - 1, closeRight(node.lastChild, depth - 1));\n    let fill = node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true);\n    return node.copy(fragment.append(fill));\n}\nfunction closeRange(fragment, side, from, to, depth, openEnd) {\n    let node = side < 0 ? fragment.firstChild : fragment.lastChild, inner = node.content;\n    if (fragment.childCount > 1)\n        openEnd = 0;\n    if (depth < to - 1)\n        inner = closeRange(inner, side, from, to, depth + 1, openEnd);\n    if (depth >= from)\n        inner = side < 0 ? node.contentMatchAt(0).fillBefore(inner, openEnd <= depth).append(inner)\n            : inner.append(node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true));\n    return fragment.replaceChild(side < 0 ? 0 : fragment.childCount - 1, node.copy(inner));\n}\nfunction closeSlice(slice, openStart, openEnd) {\n    if (openStart < slice.openStart)\n        slice = new Slice(closeRange(slice.content, -1, openStart, slice.openStart, 0, slice.openEnd), openStart, slice.openEnd);\n    if (openEnd < slice.openEnd)\n        slice = new Slice(closeRange(slice.content, 1, openEnd, slice.openEnd, 0, 0), slice.openStart, openEnd);\n    return slice;\n}\n// Trick from jQuery -- some elements must be wrapped in other\n// elements for innerHTML to work. I.e. if you do `div.innerHTML =\n// \"<td>..</td>\"` the table cells are ignored.\nconst wrapMap = {\n    thead: [\"table\"],\n    tbody: [\"table\"],\n    tfoot: [\"table\"],\n    caption: [\"table\"],\n    colgroup: [\"table\"],\n    col: [\"table\", \"colgroup\"],\n    tr: [\"table\", \"tbody\"],\n    td: [\"table\", \"tbody\", \"tr\"],\n    th: [\"table\", \"tbody\", \"tr\"]\n};\nlet _detachedDoc = null;\nfunction detachedDoc() {\n    return _detachedDoc || (_detachedDoc = document.implementation.createHTMLDocument(\"title\"));\n}\nfunction readHTML(html) {\n    let metas = /^(\\s*<meta [^>]*>)*/.exec(html);\n    if (metas)\n        html = html.slice(metas[0].length);\n    let elt = detachedDoc().createElement(\"div\");\n    let firstTag = /<([a-z][^>\\s]+)/i.exec(html), wrap;\n    if (wrap = firstTag && wrapMap[firstTag[1].toLowerCase()])\n        html = wrap.map(n => \"<\" + n + \">\").join(\"\") + html + wrap.map(n => \"</\" + n + \">\").reverse().join(\"\");\n    elt.innerHTML = html;\n    if (wrap)\n        for (let i = 0; i < wrap.length; i++)\n            elt = elt.querySelector(wrap[i]) || elt;\n    return elt;\n}\n// Webkit browsers do some hard-to-predict replacement of regular\n// spaces with non-breaking spaces when putting content on the\n// clipboard. This tries to convert such non-breaking spaces (which\n// will be wrapped in a plain span on Chrome, a span with class\n// Apple-converted-space on Safari) back to regular spaces.\nfunction restoreReplacedSpaces(dom) {\n    let nodes = dom.querySelectorAll(chrome ? \"span:not([class]):not([style])\" : \"span.Apple-converted-space\");\n    for (let i = 0; i < nodes.length; i++) {\n        let node = nodes[i];\n        if (node.childNodes.length == 1 && node.textContent == \"\\u00a0\" && node.parentNode)\n            node.parentNode.replaceChild(dom.ownerDocument.createTextNode(\" \"), node);\n    }\n}\nfunction addContext(slice, context) {\n    if (!slice.size)\n        return slice;\n    let schema = slice.content.firstChild.type.schema, array;\n    try {\n        array = JSON.parse(context);\n    }\n    catch (e) {\n        return slice;\n    }\n    let { content, openStart, openEnd } = slice;\n    for (let i = array.length - 2; i >= 0; i -= 2) {\n        let type = schema.nodes[array[i]];\n        if (!type || type.hasRequiredAttrs())\n            break;\n        content = Fragment.from(type.create(array[i + 1], content));\n        openStart++;\n        openEnd++;\n    }\n    return new Slice(content, openStart, openEnd);\n}\n\n// A collection of DOM events that occur within the editor, and callback functions\n// to invoke when the event fires.\nconst handlers = {};\nconst editHandlers = {};\nconst passiveHandlers = { touchstart: true, touchmove: true };\nclass InputState {\n    constructor() {\n        this.shiftKey = false;\n        this.mouseDown = null;\n        this.lastKeyCode = null;\n        this.lastKeyCodeTime = 0;\n        this.lastClick = { time: 0, x: 0, y: 0, type: \"\" };\n        this.lastSelectionOrigin = null;\n        this.lastSelectionTime = 0;\n        this.lastIOSEnter = 0;\n        this.lastIOSEnterFallbackTimeout = -1;\n        this.lastFocus = 0;\n        this.lastTouch = 0;\n        this.lastAndroidDelete = 0;\n        this.composing = false;\n        this.composingTimeout = -1;\n        this.compositionNodes = [];\n        this.compositionEndedAt = -2e8;\n        this.compositionID = 1;\n        // Set to a composition ID when there are pending changes at compositionend\n        this.compositionPendingChanges = 0;\n        this.domChangeCount = 0;\n        this.eventHandlers = Object.create(null);\n        this.hideSelectionGuard = null;\n    }\n}\nfunction initInput(view) {\n    for (let event in handlers) {\n        let handler = handlers[event];\n        view.dom.addEventListener(event, view.input.eventHandlers[event] = (event) => {\n            if (eventBelongsToView(view, event) && !runCustomHandler(view, event) &&\n                (view.editable || !(event.type in editHandlers)))\n                handler(view, event);\n        }, passiveHandlers[event] ? { passive: true } : undefined);\n    }\n    // On Safari, for reasons beyond my understanding, adding an input\n    // event handler makes an issue where the composition vanishes when\n    // you press enter go away.\n    if (safari)\n        view.dom.addEventListener(\"input\", () => null);\n    ensureListeners(view);\n}\nfunction setSelectionOrigin(view, origin) {\n    view.input.lastSelectionOrigin = origin;\n    view.input.lastSelectionTime = Date.now();\n}\nfunction destroyInput(view) {\n    view.domObserver.stop();\n    for (let type in view.input.eventHandlers)\n        view.dom.removeEventListener(type, view.input.eventHandlers[type]);\n    clearTimeout(view.input.composingTimeout);\n    clearTimeout(view.input.lastIOSEnterFallbackTimeout);\n}\nfunction ensureListeners(view) {\n    view.someProp(\"handleDOMEvents\", currentHandlers => {\n        for (let type in currentHandlers)\n            if (!view.input.eventHandlers[type])\n                view.dom.addEventListener(type, view.input.eventHandlers[type] = event => runCustomHandler(view, event));\n    });\n}\nfunction runCustomHandler(view, event) {\n    return view.someProp(\"handleDOMEvents\", handlers => {\n        let handler = handlers[event.type];\n        return handler ? handler(view, event) || event.defaultPrevented : false;\n    });\n}\nfunction eventBelongsToView(view, event) {\n    if (!event.bubbles)\n        return true;\n    if (event.defaultPrevented)\n        return false;\n    for (let node = event.target; node != view.dom; node = node.parentNode)\n        if (!node || node.nodeType == 11 ||\n            (node.pmViewDesc && node.pmViewDesc.stopEvent(event)))\n            return false;\n    return true;\n}\nfunction dispatchEvent(view, event) {\n    if (!runCustomHandler(view, event) && handlers[event.type] &&\n        (view.editable || !(event.type in editHandlers)))\n        handlers[event.type](view, event);\n}\neditHandlers.keydown = (view, _event) => {\n    let event = _event;\n    view.input.shiftKey = event.keyCode == 16 || event.shiftKey;\n    if (inOrNearComposition(view, event))\n        return;\n    view.input.lastKeyCode = event.keyCode;\n    view.input.lastKeyCodeTime = Date.now();\n    // Suppress enter key events on Chrome Android, because those tend\n    // to be part of a confused sequence of composition events fired,\n    // and handling them eagerly tends to corrupt the input.\n    if (android && chrome && event.keyCode == 13)\n        return;\n    if (event.keyCode != 229)\n        view.domObserver.forceFlush();\n    // On iOS, if we preventDefault enter key presses, the virtual\n    // keyboard gets confused. So the hack here is to set a flag that\n    // makes the DOM change code recognize that what just happens should\n    // be replaced by whatever the Enter key handlers do.\n    if (ios && event.keyCode == 13 && !event.ctrlKey && !event.altKey && !event.metaKey) {\n        let now = Date.now();\n        view.input.lastIOSEnter = now;\n        view.input.lastIOSEnterFallbackTimeout = setTimeout(() => {\n            if (view.input.lastIOSEnter == now) {\n                view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")));\n                view.input.lastIOSEnter = 0;\n            }\n        }, 200);\n    }\n    else if (view.someProp(\"handleKeyDown\", f => f(view, event)) || captureKeyDown(view, event)) {\n        event.preventDefault();\n    }\n    else {\n        setSelectionOrigin(view, \"key\");\n    }\n};\neditHandlers.keyup = (view, event) => {\n    if (event.keyCode == 16)\n        view.input.shiftKey = false;\n};\neditHandlers.keypress = (view, _event) => {\n    let event = _event;\n    if (inOrNearComposition(view, event) || !event.charCode ||\n        event.ctrlKey && !event.altKey || mac && event.metaKey)\n        return;\n    if (view.someProp(\"handleKeyPress\", f => f(view, event))) {\n        event.preventDefault();\n        return;\n    }\n    let sel = view.state.selection;\n    if (!(sel instanceof TextSelection) || !sel.$from.sameParent(sel.$to)) {\n        let text = String.fromCharCode(event.charCode);\n        if (!/[\\r\\n]/.test(text) && !view.someProp(\"handleTextInput\", f => f(view, sel.$from.pos, sel.$to.pos, text)))\n            view.dispatch(view.state.tr.insertText(text).scrollIntoView());\n        event.preventDefault();\n    }\n};\nfunction eventCoords(event) { return { left: event.clientX, top: event.clientY }; }\nfunction isNear(event, click) {\n    let dx = click.x - event.clientX, dy = click.y - event.clientY;\n    return dx * dx + dy * dy < 100;\n}\nfunction runHandlerOnContext(view, propName, pos, inside, event) {\n    if (inside == -1)\n        return false;\n    let $pos = view.state.doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        if (view.someProp(propName, f => i > $pos.depth ? f(view, pos, $pos.nodeAfter, $pos.before(i), event, true)\n            : f(view, pos, $pos.node(i), $pos.before(i), event, false)))\n            return true;\n    }\n    return false;\n}\nfunction updateSelection(view, selection, origin) {\n    if (!view.focused)\n        view.focus();\n    let tr = view.state.tr.setSelection(selection);\n    if (origin == \"pointer\")\n        tr.setMeta(\"pointer\", true);\n    view.dispatch(tr);\n}\nfunction selectClickedLeaf(view, inside) {\n    if (inside == -1)\n        return false;\n    let $pos = view.state.doc.resolve(inside), node = $pos.nodeAfter;\n    if (node && node.isAtom && NodeSelection.isSelectable(node)) {\n        updateSelection(view, new NodeSelection($pos), \"pointer\");\n        return true;\n    }\n    return false;\n}\nfunction selectClickedNode(view, inside) {\n    if (inside == -1)\n        return false;\n    let sel = view.state.selection, selectedNode, selectAt;\n    if (sel instanceof NodeSelection)\n        selectedNode = sel.node;\n    let $pos = view.state.doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i);\n        if (NodeSelection.isSelectable(node)) {\n            if (selectedNode && sel.$from.depth > 0 &&\n                i >= sel.$from.depth && $pos.before(sel.$from.depth + 1) == sel.$from.pos)\n                selectAt = $pos.before(sel.$from.depth);\n            else\n                selectAt = $pos.before(i);\n            break;\n        }\n    }\n    if (selectAt != null) {\n        updateSelection(view, NodeSelection.create(view.state.doc, selectAt), \"pointer\");\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nfunction handleSingleClick(view, pos, inside, event, selectNode) {\n    return runHandlerOnContext(view, \"handleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleClick\", f => f(view, pos, event)) ||\n        (selectNode ? selectClickedNode(view, inside) : selectClickedLeaf(view, inside));\n}\nfunction handleDoubleClick(view, pos, inside, event) {\n    return runHandlerOnContext(view, \"handleDoubleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleDoubleClick\", f => f(view, pos, event));\n}\nfunction handleTripleClick(view, pos, inside, event) {\n    return runHandlerOnContext(view, \"handleTripleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleTripleClick\", f => f(view, pos, event)) ||\n        defaultTripleClick(view, inside, event);\n}\nfunction defaultTripleClick(view, inside, event) {\n    if (event.button != 0)\n        return false;\n    let doc = view.state.doc;\n    if (inside == -1) {\n        if (doc.inlineContent) {\n            updateSelection(view, TextSelection.create(doc, 0, doc.content.size), \"pointer\");\n            return true;\n        }\n        return false;\n    }\n    let $pos = doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i);\n        let nodePos = $pos.before(i);\n        if (node.inlineContent)\n            updateSelection(view, TextSelection.create(doc, nodePos + 1, nodePos + 1 + node.content.size), \"pointer\");\n        else if (NodeSelection.isSelectable(node))\n            updateSelection(view, NodeSelection.create(doc, nodePos), \"pointer\");\n        else\n            continue;\n        return true;\n    }\n}\nfunction forceDOMFlush(view) {\n    return endComposition(view);\n}\nconst selectNodeModifier = mac ? \"metaKey\" : \"ctrlKey\";\nhandlers.mousedown = (view, _event) => {\n    let event = _event;\n    view.input.shiftKey = event.shiftKey;\n    let flushed = forceDOMFlush(view);\n    let now = Date.now(), type = \"singleClick\";\n    if (now - view.input.lastClick.time < 500 && isNear(event, view.input.lastClick) && !event[selectNodeModifier]) {\n        if (view.input.lastClick.type == \"singleClick\")\n            type = \"doubleClick\";\n        else if (view.input.lastClick.type == \"doubleClick\")\n            type = \"tripleClick\";\n    }\n    view.input.lastClick = { time: now, x: event.clientX, y: event.clientY, type };\n    let pos = view.posAtCoords(eventCoords(event));\n    if (!pos)\n        return;\n    if (type == \"singleClick\") {\n        if (view.input.mouseDown)\n            view.input.mouseDown.done();\n        view.input.mouseDown = new MouseDown(view, pos, event, !!flushed);\n    }\n    else if ((type == \"doubleClick\" ? handleDoubleClick : handleTripleClick)(view, pos.pos, pos.inside, event)) {\n        event.preventDefault();\n    }\n    else {\n        setSelectionOrigin(view, \"pointer\");\n    }\n};\nclass MouseDown {\n    constructor(view, pos, event, flushed) {\n        this.view = view;\n        this.pos = pos;\n        this.event = event;\n        this.flushed = flushed;\n        this.delayedSelectionSync = false;\n        this.mightDrag = null;\n        this.startDoc = view.state.doc;\n        this.selectNode = !!event[selectNodeModifier];\n        this.allowDefault = event.shiftKey;\n        let targetNode, targetPos;\n        if (pos.inside > -1) {\n            targetNode = view.state.doc.nodeAt(pos.inside);\n            targetPos = pos.inside;\n        }\n        else {\n            let $pos = view.state.doc.resolve(pos.pos);\n            targetNode = $pos.parent;\n            targetPos = $pos.depth ? $pos.before() : 0;\n        }\n        const target = flushed ? null : event.target;\n        const targetDesc = target ? view.docView.nearestDesc(target, true) : null;\n        this.target = targetDesc ? targetDesc.dom : null;\n        let { selection } = view.state;\n        if (event.button == 0 &&\n            targetNode.type.spec.draggable && targetNode.type.spec.selectable !== false ||\n            selection instanceof NodeSelection && selection.from <= targetPos && selection.to > targetPos)\n            this.mightDrag = {\n                node: targetNode,\n                pos: targetPos,\n                addAttr: !!(this.target && !this.target.draggable),\n                setUneditable: !!(this.target && gecko && !this.target.hasAttribute(\"contentEditable\"))\n            };\n        if (this.target && this.mightDrag && (this.mightDrag.addAttr || this.mightDrag.setUneditable)) {\n            this.view.domObserver.stop();\n            if (this.mightDrag.addAttr)\n                this.target.draggable = true;\n            if (this.mightDrag.setUneditable)\n                setTimeout(() => {\n                    if (this.view.input.mouseDown == this)\n                        this.target.setAttribute(\"contentEditable\", \"false\");\n                }, 20);\n            this.view.domObserver.start();\n        }\n        view.root.addEventListener(\"mouseup\", this.up = this.up.bind(this));\n        view.root.addEventListener(\"mousemove\", this.move = this.move.bind(this));\n        setSelectionOrigin(view, \"pointer\");\n    }\n    done() {\n        this.view.root.removeEventListener(\"mouseup\", this.up);\n        this.view.root.removeEventListener(\"mousemove\", this.move);\n        if (this.mightDrag && this.target) {\n            this.view.domObserver.stop();\n            if (this.mightDrag.addAttr)\n                this.target.removeAttribute(\"draggable\");\n            if (this.mightDrag.setUneditable)\n                this.target.removeAttribute(\"contentEditable\");\n            this.view.domObserver.start();\n        }\n        if (this.delayedSelectionSync)\n            setTimeout(() => selectionToDOM(this.view));\n        this.view.input.mouseDown = null;\n    }\n    up(event) {\n        this.done();\n        if (!this.view.dom.contains(event.target))\n            return;\n        let pos = this.pos;\n        if (this.view.state.doc != this.startDoc)\n            pos = this.view.posAtCoords(eventCoords(event));\n        this.updateAllowDefault(event);\n        if (this.allowDefault || !pos) {\n            setSelectionOrigin(this.view, \"pointer\");\n        }\n        else if (handleSingleClick(this.view, pos.pos, pos.inside, event, this.selectNode)) {\n            event.preventDefault();\n        }\n        else if (event.button == 0 &&\n            (this.flushed ||\n                // Safari ignores clicks on draggable elements\n                (safari && this.mightDrag && !this.mightDrag.node.isAtom) ||\n                // Chrome will sometimes treat a node selection as a\n                // cursor, but still report that the node is selected\n                // when asked through getSelection. You'll then get a\n                // situation where clicking at the point where that\n                // (hidden) cursor is doesn't change the selection, and\n                // thus doesn't get a reaction from ProseMirror. This\n                // works around that.\n                (chrome && !this.view.state.selection.visible &&\n                    Math.min(Math.abs(pos.pos - this.view.state.selection.from), Math.abs(pos.pos - this.view.state.selection.to)) <= 2))) {\n            updateSelection(this.view, Selection.near(this.view.state.doc.resolve(pos.pos)), \"pointer\");\n            event.preventDefault();\n        }\n        else {\n            setSelectionOrigin(this.view, \"pointer\");\n        }\n    }\n    move(event) {\n        this.updateAllowDefault(event);\n        setSelectionOrigin(this.view, \"pointer\");\n        if (event.buttons == 0)\n            this.done();\n    }\n    updateAllowDefault(event) {\n        if (!this.allowDefault && (Math.abs(this.event.x - event.clientX) > 4 ||\n            Math.abs(this.event.y - event.clientY) > 4))\n            this.allowDefault = true;\n    }\n}\nhandlers.touchstart = view => {\n    view.input.lastTouch = Date.now();\n    forceDOMFlush(view);\n    setSelectionOrigin(view, \"pointer\");\n};\nhandlers.touchmove = view => {\n    view.input.lastTouch = Date.now();\n    setSelectionOrigin(view, \"pointer\");\n};\nhandlers.contextmenu = view => forceDOMFlush(view);\nfunction inOrNearComposition(view, event) {\n    if (view.composing)\n        return true;\n    // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n    // On Japanese input method editors (IMEs), the Enter key is used to confirm character\n    // selection. On Safari, when Enter is pressed, compositionend and keydown events are\n    // emitted. The keydown event triggers newline insertion, which we don't want.\n    // This method returns true if the keydown event should be ignored.\n    // We only ignore it once, as pressing Enter a second time *should* insert a newline.\n    // Furthermore, the keydown event timestamp must be close to the compositionEndedAt timestamp.\n    // This guards against the case where compositionend is triggered without the keyboard\n    // (e.g. character confirmation may be done with the mouse), and keydown is triggered\n    // afterwards- we wouldn't want to ignore the keydown event in this case.\n    if (safari && Math.abs(event.timeStamp - view.input.compositionEndedAt) < 500) {\n        view.input.compositionEndedAt = -2e8;\n        return true;\n    }\n    return false;\n}\n// Drop active composition after 5 seconds of inactivity on Android\nconst timeoutComposition = android ? 5000 : -1;\neditHandlers.compositionstart = editHandlers.compositionupdate = view => {\n    if (!view.composing) {\n        view.domObserver.flush();\n        let { state } = view, $pos = state.selection.$from;\n        if (state.selection.empty &&\n            (state.storedMarks ||\n                (!$pos.textOffset && $pos.parentOffset && $pos.nodeBefore.marks.some(m => m.type.spec.inclusive === false)))) {\n            // Need to wrap the cursor in mark nodes different from the ones in the DOM context\n            view.markCursor = view.state.storedMarks || $pos.marks();\n            endComposition(view, true);\n            view.markCursor = null;\n        }\n        else {\n            endComposition(view);\n            // In firefox, if the cursor is after but outside a marked node,\n            // the inserted text won't inherit the marks. So this moves it\n            // inside if necessary.\n            if (gecko && state.selection.empty && $pos.parentOffset && !$pos.textOffset && $pos.nodeBefore.marks.length) {\n                let sel = view.domSelectionRange();\n                for (let node = sel.focusNode, offset = sel.focusOffset; node && node.nodeType == 1 && offset != 0;) {\n                    let before = offset < 0 ? node.lastChild : node.childNodes[offset - 1];\n                    if (!before)\n                        break;\n                    if (before.nodeType == 3) {\n                        view.domSelection().collapse(before, before.nodeValue.length);\n                        break;\n                    }\n                    else {\n                        node = before;\n                        offset = -1;\n                    }\n                }\n            }\n        }\n        view.input.composing = true;\n    }\n    scheduleComposeEnd(view, timeoutComposition);\n};\neditHandlers.compositionend = (view, event) => {\n    if (view.composing) {\n        view.input.composing = false;\n        view.input.compositionEndedAt = event.timeStamp;\n        view.input.compositionPendingChanges = view.domObserver.pendingRecords().length ? view.input.compositionID : 0;\n        if (view.input.compositionPendingChanges)\n            Promise.resolve().then(() => view.domObserver.flush());\n        view.input.compositionID++;\n        scheduleComposeEnd(view, 20);\n    }\n};\nfunction scheduleComposeEnd(view, delay) {\n    clearTimeout(view.input.composingTimeout);\n    if (delay > -1)\n        view.input.composingTimeout = setTimeout(() => endComposition(view), delay);\n}\nfunction clearComposition(view) {\n    if (view.composing) {\n        view.input.composing = false;\n        view.input.compositionEndedAt = timestampFromCustomEvent();\n    }\n    while (view.input.compositionNodes.length > 0)\n        view.input.compositionNodes.pop().markParentsDirty();\n}\nfunction timestampFromCustomEvent() {\n    let event = document.createEvent(\"Event\");\n    event.initEvent(\"event\", true, true);\n    return event.timeStamp;\n}\n/**\n@internal\n*/\nfunction endComposition(view, forceUpdate = false) {\n    if (android && view.domObserver.flushingSoon >= 0)\n        return;\n    view.domObserver.forceFlush();\n    clearComposition(view);\n    if (forceUpdate || view.docView && view.docView.dirty) {\n        let sel = selectionFromDOM(view);\n        if (sel && !sel.eq(view.state.selection))\n            view.dispatch(view.state.tr.setSelection(sel));\n        else\n            view.updateState(view.state);\n        return true;\n    }\n    return false;\n}\nfunction captureCopy(view, dom) {\n    // The extra wrapper is somehow necessary on IE/Edge to prevent the\n    // content from being mangled when it is put onto the clipboard\n    if (!view.dom.parentNode)\n        return;\n    let wrap = view.dom.parentNode.appendChild(document.createElement(\"div\"));\n    wrap.appendChild(dom);\n    wrap.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    let sel = getSelection(), range = document.createRange();\n    range.selectNodeContents(dom);\n    // Done because IE will fire a selectionchange moving the selection\n    // to its start when removeAllRanges is called and the editor still\n    // has focus (which will mess up the editor's selection state).\n    view.dom.blur();\n    sel.removeAllRanges();\n    sel.addRange(range);\n    setTimeout(() => {\n        if (wrap.parentNode)\n            wrap.parentNode.removeChild(wrap);\n        view.focus();\n    }, 50);\n}\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = (ie && ie_version < 15) ||\n    (ios && webkit_version < 604);\nhandlers.copy = editHandlers.cut = (view, _event) => {\n    let event = _event;\n    let sel = view.state.selection, cut = event.type == \"cut\";\n    if (sel.empty)\n        return;\n    // IE and Edge's clipboard interface is completely broken\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    let slice = sel.content(), { dom, text } = serializeForClipboard(view, slice);\n    if (data) {\n        event.preventDefault();\n        data.clearData();\n        data.setData(\"text/html\", dom.innerHTML);\n        data.setData(\"text/plain\", text);\n    }\n    else {\n        captureCopy(view, dom);\n    }\n    if (cut)\n        view.dispatch(view.state.tr.deleteSelection().scrollIntoView().setMeta(\"uiEvent\", \"cut\"));\n};\nfunction sliceSingleNode(slice) {\n    return slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1 ? slice.content.firstChild : null;\n}\nfunction capturePaste(view, event) {\n    if (!view.dom.parentNode)\n        return;\n    let plainText = view.input.shiftKey || view.state.selection.$from.parent.type.spec.code;\n    let target = view.dom.parentNode.appendChild(document.createElement(plainText ? \"textarea\" : \"div\"));\n    if (!plainText)\n        target.contentEditable = \"true\";\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.focus();\n    let plain = view.input.shiftKey && view.input.lastKeyCode != 45;\n    setTimeout(() => {\n        view.focus();\n        if (target.parentNode)\n            target.parentNode.removeChild(target);\n        if (plainText)\n            doPaste(view, target.value, null, plain, event);\n        else\n            doPaste(view, target.textContent, target.innerHTML, plain, event);\n    }, 50);\n}\nfunction doPaste(view, text, html, preferPlain, event) {\n    let slice = parseFromClipboard(view, text, html, preferPlain, view.state.selection.$from);\n    if (view.someProp(\"handlePaste\", f => f(view, event, slice || Slice.empty)))\n        return true;\n    if (!slice)\n        return false;\n    let singleNode = sliceSingleNode(slice);\n    let tr = singleNode\n        ? view.state.tr.replaceSelectionWith(singleNode, preferPlain)\n        : view.state.tr.replaceSelection(slice);\n    view.dispatch(tr.scrollIntoView().setMeta(\"paste\", true).setMeta(\"uiEvent\", \"paste\"));\n    return true;\n}\nfunction getText(clipboardData) {\n    let text = clipboardData.getData(\"text/plain\") || clipboardData.getData(\"Text\");\n    if (text)\n        return text;\n    let uris = clipboardData.getData(\"text/uri-list\");\n    return uris ? uris.replace(/\\r?\\n/g, \" \") : \"\";\n}\neditHandlers.paste = (view, _event) => {\n    let event = _event;\n    // Handling paste from JavaScript during composition is very poorly\n    // handled by browsers, so as a dodgy but preferable kludge, we just\n    // let the browser do its native thing there, except on Android,\n    // where the editor is almost always composing.\n    if (view.composing && !android)\n        return;\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    let plain = view.input.shiftKey && view.input.lastKeyCode != 45;\n    if (data && doPaste(view, getText(data), data.getData(\"text/html\"), plain, event))\n        event.preventDefault();\n    else\n        capturePaste(view, event);\n};\nclass Dragging {\n    constructor(slice, move, node) {\n        this.slice = slice;\n        this.move = move;\n        this.node = node;\n    }\n}\nconst dragCopyModifier = mac ? \"altKey\" : \"ctrlKey\";\nhandlers.dragstart = (view, _event) => {\n    let event = _event;\n    let mouseDown = view.input.mouseDown;\n    if (mouseDown)\n        mouseDown.done();\n    if (!event.dataTransfer)\n        return;\n    let sel = view.state.selection;\n    let pos = sel.empty ? null : view.posAtCoords(eventCoords(event));\n    let node;\n    if (pos && pos.pos >= sel.from && pos.pos <= (sel instanceof NodeSelection ? sel.to - 1 : sel.to)) ;\n    else if (mouseDown && mouseDown.mightDrag) {\n        node = NodeSelection.create(view.state.doc, mouseDown.mightDrag.pos);\n    }\n    else if (event.target && event.target.nodeType == 1) {\n        let desc = view.docView.nearestDesc(event.target, true);\n        if (desc && desc.node.type.spec.draggable && desc != view.docView)\n            node = NodeSelection.create(view.state.doc, desc.posBefore);\n    }\n    let slice = (node || view.state.selection).content(), { dom, text } = serializeForClipboard(view, slice);\n    event.dataTransfer.clearData();\n    event.dataTransfer.setData(brokenClipboardAPI ? \"Text\" : \"text/html\", dom.innerHTML);\n    // See https://github.com/ProseMirror/prosemirror/issues/1156\n    event.dataTransfer.effectAllowed = \"copyMove\";\n    if (!brokenClipboardAPI)\n        event.dataTransfer.setData(\"text/plain\", text);\n    view.dragging = new Dragging(slice, !event[dragCopyModifier], node);\n};\nhandlers.dragend = view => {\n    let dragging = view.dragging;\n    window.setTimeout(() => {\n        if (view.dragging == dragging)\n            view.dragging = null;\n    }, 50);\n};\neditHandlers.dragover = editHandlers.dragenter = (_, e) => e.preventDefault();\neditHandlers.drop = (view, _event) => {\n    let event = _event;\n    let dragging = view.dragging;\n    view.dragging = null;\n    if (!event.dataTransfer)\n        return;\n    let eventPos = view.posAtCoords(eventCoords(event));\n    if (!eventPos)\n        return;\n    let $mouse = view.state.doc.resolve(eventPos.pos);\n    let slice = dragging && dragging.slice;\n    if (slice) {\n        view.someProp(\"transformPasted\", f => { slice = f(slice, view); });\n    }\n    else {\n        slice = parseFromClipboard(view, getText(event.dataTransfer), brokenClipboardAPI ? null : event.dataTransfer.getData(\"text/html\"), false, $mouse);\n    }\n    let move = !!(dragging && !event[dragCopyModifier]);\n    if (view.someProp(\"handleDrop\", f => f(view, event, slice || Slice.empty, move))) {\n        event.preventDefault();\n        return;\n    }\n    if (!slice)\n        return;\n    event.preventDefault();\n    let insertPos = slice ? dropPoint(view.state.doc, $mouse.pos, slice) : $mouse.pos;\n    if (insertPos == null)\n        insertPos = $mouse.pos;\n    let tr = view.state.tr;\n    if (move) {\n        let { node } = dragging;\n        if (node)\n            node.replace(tr);\n        else\n            tr.deleteSelection();\n    }\n    let pos = tr.mapping.map(insertPos);\n    let isNode = slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1;\n    let beforeInsert = tr.doc;\n    if (isNode)\n        tr.replaceRangeWith(pos, pos, slice.content.firstChild);\n    else\n        tr.replaceRange(pos, pos, slice);\n    if (tr.doc.eq(beforeInsert))\n        return;\n    let $pos = tr.doc.resolve(pos);\n    if (isNode && NodeSelection.isSelectable(slice.content.firstChild) &&\n        $pos.nodeAfter && $pos.nodeAfter.sameMarkup(slice.content.firstChild)) {\n        tr.setSelection(new NodeSelection($pos));\n    }\n    else {\n        let end = tr.mapping.map(insertPos);\n        tr.mapping.maps[tr.mapping.maps.length - 1].forEach((_from, _to, _newFrom, newTo) => end = newTo);\n        tr.setSelection(selectionBetween(view, $pos, tr.doc.resolve(end)));\n    }\n    view.focus();\n    view.dispatch(tr.setMeta(\"uiEvent\", \"drop\"));\n};\nhandlers.focus = view => {\n    view.input.lastFocus = Date.now();\n    if (!view.focused) {\n        view.domObserver.stop();\n        view.dom.classList.add(\"ProseMirror-focused\");\n        view.domObserver.start();\n        view.focused = true;\n        setTimeout(() => {\n            if (view.docView && view.hasFocus() && !view.domObserver.currentSelection.eq(view.domSelectionRange()))\n                selectionToDOM(view);\n        }, 20);\n    }\n};\nhandlers.blur = (view, _event) => {\n    let event = _event;\n    if (view.focused) {\n        view.domObserver.stop();\n        view.dom.classList.remove(\"ProseMirror-focused\");\n        view.domObserver.start();\n        if (event.relatedTarget && view.dom.contains(event.relatedTarget))\n            view.domObserver.currentSelection.clear();\n        view.focused = false;\n    }\n};\nhandlers.beforeinput = (view, _event) => {\n    let event = _event;\n    // We should probably do more with beforeinput events, but support\n    // is so spotty that I'm still waiting to see where they are going.\n    // Very specific hack to deal with backspace sometimes failing on\n    // Chrome Android when after an uneditable node.\n    if (chrome && android && event.inputType == \"deleteContentBackward\") {\n        view.domObserver.flushSoon();\n        let { domChangeCount } = view.input;\n        setTimeout(() => {\n            if (view.input.domChangeCount != domChangeCount)\n                return; // Event already had some effect\n            // This bug tends to close the virtual keyboard, so we refocus\n            view.dom.blur();\n            view.focus();\n            if (view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\"))))\n                return;\n            let { $cursor } = view.state.selection;\n            // Crude approximation of backspace behavior when no command handled it\n            if ($cursor && $cursor.pos > 0)\n                view.dispatch(view.state.tr.delete($cursor.pos - 1, $cursor.pos).scrollIntoView());\n        }, 50);\n    }\n};\n// Make sure all handlers get registered\nfor (let prop in editHandlers)\n    handlers[prop] = editHandlers[prop];\n\nfunction compareObjs(a, b) {\n    if (a == b)\n        return true;\n    for (let p in a)\n        if (a[p] !== b[p])\n            return false;\n    for (let p in b)\n        if (!(p in a))\n            return false;\n    return true;\n}\nclass WidgetType {\n    constructor(toDOM, spec) {\n        this.toDOM = toDOM;\n        this.spec = spec || noSpec;\n        this.side = this.spec.side || 0;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let { pos, deleted } = mapping.mapResult(span.from + oldOffset, this.side < 0 ? -1 : 1);\n        return deleted ? null : new Decoration(pos - offset, pos - offset, this);\n    }\n    valid() { return true; }\n    eq(other) {\n        return this == other ||\n            (other instanceof WidgetType &&\n                (this.spec.key && this.spec.key == other.spec.key ||\n                    this.toDOM == other.toDOM && compareObjs(this.spec, other.spec)));\n    }\n    destroy(node) {\n        if (this.spec.destroy)\n            this.spec.destroy(node);\n    }\n}\nclass InlineType {\n    constructor(attrs, spec) {\n        this.attrs = attrs;\n        this.spec = spec || noSpec;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let from = mapping.map(span.from + oldOffset, this.spec.inclusiveStart ? -1 : 1) - offset;\n        let to = mapping.map(span.to + oldOffset, this.spec.inclusiveEnd ? 1 : -1) - offset;\n        return from >= to ? null : new Decoration(from, to, this);\n    }\n    valid(_, span) { return span.from < span.to; }\n    eq(other) {\n        return this == other ||\n            (other instanceof InlineType && compareObjs(this.attrs, other.attrs) &&\n                compareObjs(this.spec, other.spec));\n    }\n    static is(span) { return span.type instanceof InlineType; }\n    destroy() { }\n}\nclass NodeType {\n    constructor(attrs, spec) {\n        this.attrs = attrs;\n        this.spec = spec || noSpec;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let from = mapping.mapResult(span.from + oldOffset, 1);\n        if (from.deleted)\n            return null;\n        let to = mapping.mapResult(span.to + oldOffset, -1);\n        if (to.deleted || to.pos <= from.pos)\n            return null;\n        return new Decoration(from.pos - offset, to.pos - offset, this);\n    }\n    valid(node, span) {\n        let { index, offset } = node.content.findIndex(span.from), child;\n        return offset == span.from && !(child = node.child(index)).isText && offset + child.nodeSize == span.to;\n    }\n    eq(other) {\n        return this == other ||\n            (other instanceof NodeType && compareObjs(this.attrs, other.attrs) &&\n                compareObjs(this.spec, other.spec));\n    }\n    destroy() { }\n}\n/**\nDecoration objects can be provided to the view through the\n[`decorations` prop](https://prosemirror.net/docs/ref/#view.EditorProps.decorations). They come in\nseveral variants—see the static members of this class for details.\n*/\nclass Decoration {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The start position of the decoration.\n    */\n    from, \n    /**\n    The end position. Will be the same as `from` for [widget\n    decorations](https://prosemirror.net/docs/ref/#view.Decoration^widget).\n    */\n    to, \n    /**\n    @internal\n    */\n    type) {\n        this.from = from;\n        this.to = to;\n        this.type = type;\n    }\n    /**\n    @internal\n    */\n    copy(from, to) {\n        return new Decoration(from, to, this.type);\n    }\n    /**\n    @internal\n    */\n    eq(other, offset = 0) {\n        return this.type.eq(other.type) && this.from + offset == other.from && this.to + offset == other.to;\n    }\n    /**\n    @internal\n    */\n    map(mapping, offset, oldOffset) {\n        return this.type.map(mapping, this, offset, oldOffset);\n    }\n    /**\n    Creates a widget decoration, which is a DOM node that's shown in\n    the document at the given position. It is recommended that you\n    delay rendering the widget by passing a function that will be\n    called when the widget is actually drawn in a view, but you can\n    also directly pass a DOM node. `getPos` can be used to find the\n    widget's current document position.\n    */\n    static widget(pos, toDOM, spec) {\n        return new Decoration(pos, pos, new WidgetType(toDOM, spec));\n    }\n    /**\n    Creates an inline decoration, which adds the given attributes to\n    each inline node between `from` and `to`.\n    */\n    static inline(from, to, attrs, spec) {\n        return new Decoration(from, to, new InlineType(attrs, spec));\n    }\n    /**\n    Creates a node decoration. `from` and `to` should point precisely\n    before and after a node in the document. That node, and only that\n    node, will receive the given attributes.\n    */\n    static node(from, to, attrs, spec) {\n        return new Decoration(from, to, new NodeType(attrs, spec));\n    }\n    /**\n    The spec provided when creating this decoration. Can be useful\n    if you've stored extra information in that object.\n    */\n    get spec() { return this.type.spec; }\n    /**\n    @internal\n    */\n    get inline() { return this.type instanceof InlineType; }\n    /**\n    @internal\n    */\n    get widget() { return this.type instanceof WidgetType; }\n}\nconst none = [], noSpec = {};\n/**\nA collection of [decorations](https://prosemirror.net/docs/ref/#view.Decoration), organized in such\na way that the drawing algorithm can efficiently use and compare\nthem. This is a persistent data structure—it is not modified,\nupdates create a new value.\n*/\nclass DecorationSet {\n    /**\n    @internal\n    */\n    constructor(local, children) {\n        this.local = local.length ? local : none;\n        this.children = children.length ? children : none;\n    }\n    /**\n    Create a set of decorations, using the structure of the given\n    document. This will consume (modify) the `decorations` array, so\n    you must make a copy if you want need to preserve that.\n    */\n    static create(doc, decorations) {\n        return decorations.length ? buildTree(decorations, doc, 0, noSpec) : empty;\n    }\n    /**\n    Find all decorations in this set which touch the given range\n    (including decorations that start or end directly at the\n    boundaries) and match the given predicate on their spec. When\n    `start` and `end` are omitted, all decorations in the set are\n    considered. When `predicate` isn't given, all decorations are\n    assumed to match.\n    */\n    find(start, end, predicate) {\n        let result = [];\n        this.findInner(start == null ? 0 : start, end == null ? 1e9 : end, result, 0, predicate);\n        return result;\n    }\n    findInner(start, end, result, offset, predicate) {\n        for (let i = 0; i < this.local.length; i++) {\n            let span = this.local[i];\n            if (span.from <= end && span.to >= start && (!predicate || predicate(span.spec)))\n                result.push(span.copy(span.from + offset, span.to + offset));\n        }\n        for (let i = 0; i < this.children.length; i += 3) {\n            if (this.children[i] < end && this.children[i + 1] > start) {\n                let childOff = this.children[i] + 1;\n                this.children[i + 2].findInner(start - childOff, end - childOff, result, offset + childOff, predicate);\n            }\n        }\n    }\n    /**\n    Map the set of decorations in response to a change in the\n    document.\n    */\n    map(mapping, doc, options) {\n        if (this == empty || mapping.maps.length == 0)\n            return this;\n        return this.mapInner(mapping, doc, 0, 0, options || noSpec);\n    }\n    /**\n    @internal\n    */\n    mapInner(mapping, node, offset, oldOffset, options) {\n        let newLocal;\n        for (let i = 0; i < this.local.length; i++) {\n            let mapped = this.local[i].map(mapping, offset, oldOffset);\n            if (mapped && mapped.type.valid(node, mapped))\n                (newLocal || (newLocal = [])).push(mapped);\n            else if (options.onRemove)\n                options.onRemove(this.local[i].spec);\n        }\n        if (this.children.length)\n            return mapChildren(this.children, newLocal || [], mapping, node, offset, oldOffset, options);\n        else\n            return newLocal ? new DecorationSet(newLocal.sort(byPos), none) : empty;\n    }\n    /**\n    Add the given array of decorations to the ones in the set,\n    producing a new set. Consumes the `decorations` array. Needs\n    access to the current document to create the appropriate tree\n    structure.\n    */\n    add(doc, decorations) {\n        if (!decorations.length)\n            return this;\n        if (this == empty)\n            return DecorationSet.create(doc, decorations);\n        return this.addInner(doc, decorations, 0);\n    }\n    addInner(doc, decorations, offset) {\n        let children, childIndex = 0;\n        doc.forEach((childNode, childOffset) => {\n            let baseOffset = childOffset + offset, found;\n            if (!(found = takeSpansForNode(decorations, childNode, baseOffset)))\n                return;\n            if (!children)\n                children = this.children.slice();\n            while (childIndex < children.length && children[childIndex] < childOffset)\n                childIndex += 3;\n            if (children[childIndex] == childOffset)\n                children[childIndex + 2] = children[childIndex + 2].addInner(childNode, found, baseOffset + 1);\n            else\n                children.splice(childIndex, 0, childOffset, childOffset + childNode.nodeSize, buildTree(found, childNode, baseOffset + 1, noSpec));\n            childIndex += 3;\n        });\n        let local = moveSpans(childIndex ? withoutNulls(decorations) : decorations, -offset);\n        for (let i = 0; i < local.length; i++)\n            if (!local[i].type.valid(doc, local[i]))\n                local.splice(i--, 1);\n        return new DecorationSet(local.length ? this.local.concat(local).sort(byPos) : this.local, children || this.children);\n    }\n    /**\n    Create a new set that contains the decorations in this set, minus\n    the ones in the given array.\n    */\n    remove(decorations) {\n        if (decorations.length == 0 || this == empty)\n            return this;\n        return this.removeInner(decorations, 0);\n    }\n    removeInner(decorations, offset) {\n        let children = this.children, local = this.local;\n        for (let i = 0; i < children.length; i += 3) {\n            let found;\n            let from = children[i] + offset, to = children[i + 1] + offset;\n            for (let j = 0, span; j < decorations.length; j++)\n                if (span = decorations[j]) {\n                    if (span.from > from && span.to < to) {\n                        decorations[j] = null;\n                        (found || (found = [])).push(span);\n                    }\n                }\n            if (!found)\n                continue;\n            if (children == this.children)\n                children = this.children.slice();\n            let removed = children[i + 2].removeInner(found, from + 1);\n            if (removed != empty) {\n                children[i + 2] = removed;\n            }\n            else {\n                children.splice(i, 3);\n                i -= 3;\n            }\n        }\n        if (local.length)\n            for (let i = 0, span; i < decorations.length; i++)\n                if (span = decorations[i]) {\n                    for (let j = 0; j < local.length; j++)\n                        if (local[j].eq(span, offset)) {\n                            if (local == this.local)\n                                local = this.local.slice();\n                            local.splice(j--, 1);\n                        }\n                }\n        if (children == this.children && local == this.local)\n            return this;\n        return local.length || children.length ? new DecorationSet(local, children) : empty;\n    }\n    /**\n    @internal\n    */\n    forChild(offset, node) {\n        if (this == empty)\n            return this;\n        if (node.isLeaf)\n            return DecorationSet.empty;\n        let child, local;\n        for (let i = 0; i < this.children.length; i += 3)\n            if (this.children[i] >= offset) {\n                if (this.children[i] == offset)\n                    child = this.children[i + 2];\n                break;\n            }\n        let start = offset + 1, end = start + node.content.size;\n        for (let i = 0; i < this.local.length; i++) {\n            let dec = this.local[i];\n            if (dec.from < end && dec.to > start && (dec.type instanceof InlineType)) {\n                let from = Math.max(start, dec.from) - start, to = Math.min(end, dec.to) - start;\n                if (from < to)\n                    (local || (local = [])).push(dec.copy(from, to));\n            }\n        }\n        if (local) {\n            let localSet = new DecorationSet(local.sort(byPos), none);\n            return child ? new DecorationGroup([localSet, child]) : localSet;\n        }\n        return child || empty;\n    }\n    /**\n    @internal\n    */\n    eq(other) {\n        if (this == other)\n            return true;\n        if (!(other instanceof DecorationSet) ||\n            this.local.length != other.local.length ||\n            this.children.length != other.children.length)\n            return false;\n        for (let i = 0; i < this.local.length; i++)\n            if (!this.local[i].eq(other.local[i]))\n                return false;\n        for (let i = 0; i < this.children.length; i += 3)\n            if (this.children[i] != other.children[i] ||\n                this.children[i + 1] != other.children[i + 1] ||\n                !this.children[i + 2].eq(other.children[i + 2]))\n                return false;\n        return true;\n    }\n    /**\n    @internal\n    */\n    locals(node) {\n        return removeOverlap(this.localsInner(node));\n    }\n    /**\n    @internal\n    */\n    localsInner(node) {\n        if (this == empty)\n            return none;\n        if (node.inlineContent || !this.local.some(InlineType.is))\n            return this.local;\n        let result = [];\n        for (let i = 0; i < this.local.length; i++) {\n            if (!(this.local[i].type instanceof InlineType))\n                result.push(this.local[i]);\n        }\n        return result;\n    }\n}\n/**\nThe empty set of decorations.\n*/\nDecorationSet.empty = new DecorationSet([], []);\n/**\n@internal\n*/\nDecorationSet.removeOverlap = removeOverlap;\nconst empty = DecorationSet.empty;\n// An abstraction that allows the code dealing with decorations to\n// treat multiple DecorationSet objects as if it were a single object\n// with (a subset of) the same interface.\nclass DecorationGroup {\n    constructor(members) {\n        this.members = members;\n    }\n    map(mapping, doc) {\n        const mappedDecos = this.members.map(member => member.map(mapping, doc, noSpec));\n        return DecorationGroup.from(mappedDecos);\n    }\n    forChild(offset, child) {\n        if (child.isLeaf)\n            return DecorationSet.empty;\n        let found = [];\n        for (let i = 0; i < this.members.length; i++) {\n            let result = this.members[i].forChild(offset, child);\n            if (result == empty)\n                continue;\n            if (result instanceof DecorationGroup)\n                found = found.concat(result.members);\n            else\n                found.push(result);\n        }\n        return DecorationGroup.from(found);\n    }\n    eq(other) {\n        if (!(other instanceof DecorationGroup) ||\n            other.members.length != this.members.length)\n            return false;\n        for (let i = 0; i < this.members.length; i++)\n            if (!this.members[i].eq(other.members[i]))\n                return false;\n        return true;\n    }\n    locals(node) {\n        let result, sorted = true;\n        for (let i = 0; i < this.members.length; i++) {\n            let locals = this.members[i].localsInner(node);\n            if (!locals.length)\n                continue;\n            if (!result) {\n                result = locals;\n            }\n            else {\n                if (sorted) {\n                    result = result.slice();\n                    sorted = false;\n                }\n                for (let j = 0; j < locals.length; j++)\n                    result.push(locals[j]);\n            }\n        }\n        return result ? removeOverlap(sorted ? result : result.sort(byPos)) : none;\n    }\n    // Create a group for the given array of decoration sets, or return\n    // a single set when possible.\n    static from(members) {\n        switch (members.length) {\n            case 0: return empty;\n            case 1: return members[0];\n            default: return new DecorationGroup(members.every(m => m instanceof DecorationSet) ? members :\n                members.reduce((r, m) => r.concat(m instanceof DecorationSet ? m : m.members), []));\n        }\n    }\n}\nfunction mapChildren(oldChildren, newLocal, mapping, node, offset, oldOffset, options) {\n    let children = oldChildren.slice();\n    // Mark the children that are directly touched by changes, and\n    // move those that are after the changes.\n    for (let i = 0, baseOffset = oldOffset; i < mapping.maps.length; i++) {\n        let moved = 0;\n        mapping.maps[i].forEach((oldStart, oldEnd, newStart, newEnd) => {\n            let dSize = (newEnd - newStart) - (oldEnd - oldStart);\n            for (let i = 0; i < children.length; i += 3) {\n                let end = children[i + 1];\n                if (end < 0 || oldStart > end + baseOffset - moved)\n                    continue;\n                let start = children[i] + baseOffset - moved;\n                if (oldEnd >= start) {\n                    children[i + 1] = oldStart <= start ? -2 : -1;\n                }\n                else if (oldStart >= baseOffset && dSize) {\n                    children[i] += dSize;\n                    children[i + 1] += dSize;\n                }\n            }\n            moved += dSize;\n        });\n        baseOffset = mapping.maps[i].map(baseOffset, -1);\n    }\n    // Find the child nodes that still correspond to a single node,\n    // recursively call mapInner on them and update their positions.\n    let mustRebuild = false;\n    for (let i = 0; i < children.length; i += 3)\n        if (children[i + 1] < 0) { // Touched nodes\n            if (children[i + 1] == -2) {\n                mustRebuild = true;\n                children[i + 1] = -1;\n                continue;\n            }\n            let from = mapping.map(oldChildren[i] + oldOffset), fromLocal = from - offset;\n            if (fromLocal < 0 || fromLocal >= node.content.size) {\n                mustRebuild = true;\n                continue;\n            }\n            // Must read oldChildren because children was tagged with -1\n            let to = mapping.map(oldChildren[i + 1] + oldOffset, -1), toLocal = to - offset;\n            let { index, offset: childOffset } = node.content.findIndex(fromLocal);\n            let childNode = node.maybeChild(index);\n            if (childNode && childOffset == fromLocal && childOffset + childNode.nodeSize == toLocal) {\n                let mapped = children[i + 2]\n                    .mapInner(mapping, childNode, from + 1, oldChildren[i] + oldOffset + 1, options);\n                if (mapped != empty) {\n                    children[i] = fromLocal;\n                    children[i + 1] = toLocal;\n                    children[i + 2] = mapped;\n                }\n                else {\n                    children[i + 1] = -2;\n                    mustRebuild = true;\n                }\n            }\n            else {\n                mustRebuild = true;\n            }\n        }\n    // Remaining children must be collected and rebuilt into the appropriate structure\n    if (mustRebuild) {\n        let decorations = mapAndGatherRemainingDecorations(children, oldChildren, newLocal, mapping, offset, oldOffset, options);\n        let built = buildTree(decorations, node, 0, options);\n        newLocal = built.local;\n        for (let i = 0; i < children.length; i += 3)\n            if (children[i + 1] < 0) {\n                children.splice(i, 3);\n                i -= 3;\n            }\n        for (let i = 0, j = 0; i < built.children.length; i += 3) {\n            let from = built.children[i];\n            while (j < children.length && children[j] < from)\n                j += 3;\n            children.splice(j, 0, built.children[i], built.children[i + 1], built.children[i + 2]);\n        }\n    }\n    return new DecorationSet(newLocal.sort(byPos), children);\n}\nfunction moveSpans(spans, offset) {\n    if (!offset || !spans.length)\n        return spans;\n    let result = [];\n    for (let i = 0; i < spans.length; i++) {\n        let span = spans[i];\n        result.push(new Decoration(span.from + offset, span.to + offset, span.type));\n    }\n    return result;\n}\nfunction mapAndGatherRemainingDecorations(children, oldChildren, decorations, mapping, offset, oldOffset, options) {\n    // Gather all decorations from the remaining marked children\n    function gather(set, oldOffset) {\n        for (let i = 0; i < set.local.length; i++) {\n            let mapped = set.local[i].map(mapping, offset, oldOffset);\n            if (mapped)\n                decorations.push(mapped);\n            else if (options.onRemove)\n                options.onRemove(set.local[i].spec);\n        }\n        for (let i = 0; i < set.children.length; i += 3)\n            gather(set.children[i + 2], set.children[i] + oldOffset + 1);\n    }\n    for (let i = 0; i < children.length; i += 3)\n        if (children[i + 1] == -1)\n            gather(children[i + 2], oldChildren[i] + oldOffset + 1);\n    return decorations;\n}\nfunction takeSpansForNode(spans, node, offset) {\n    if (node.isLeaf)\n        return null;\n    let end = offset + node.nodeSize, found = null;\n    for (let i = 0, span; i < spans.length; i++) {\n        if ((span = spans[i]) && span.from > offset && span.to < end) {\n            (found || (found = [])).push(span);\n            spans[i] = null;\n        }\n    }\n    return found;\n}\nfunction withoutNulls(array) {\n    let result = [];\n    for (let i = 0; i < array.length; i++)\n        if (array[i] != null)\n            result.push(array[i]);\n    return result;\n}\n// Build up a tree that corresponds to a set of decorations. `offset`\n// is a base offset that should be subtracted from the `from` and `to`\n// positions in the spans (so that we don't have to allocate new spans\n// for recursive calls).\nfunction buildTree(spans, node, offset, options) {\n    let children = [], hasNulls = false;\n    node.forEach((childNode, localStart) => {\n        let found = takeSpansForNode(spans, childNode, localStart + offset);\n        if (found) {\n            hasNulls = true;\n            let subtree = buildTree(found, childNode, offset + localStart + 1, options);\n            if (subtree != empty)\n                children.push(localStart, localStart + childNode.nodeSize, subtree);\n        }\n    });\n    let locals = moveSpans(hasNulls ? withoutNulls(spans) : spans, -offset).sort(byPos);\n    for (let i = 0; i < locals.length; i++)\n        if (!locals[i].type.valid(node, locals[i])) {\n            if (options.onRemove)\n                options.onRemove(locals[i].spec);\n            locals.splice(i--, 1);\n        }\n    return locals.length || children.length ? new DecorationSet(locals, children) : empty;\n}\n// Used to sort decorations so that ones with a low start position\n// come first, and within a set with the same start position, those\n// with an smaller end position come first.\nfunction byPos(a, b) {\n    return a.from - b.from || a.to - b.to;\n}\n// Scan a sorted array of decorations for partially overlapping spans,\n// and split those so that only fully overlapping spans are left (to\n// make subsequent rendering easier). Will return the input array if\n// no partially overlapping spans are found (the common case).\nfunction removeOverlap(spans) {\n    let working = spans;\n    for (let i = 0; i < working.length - 1; i++) {\n        let span = working[i];\n        if (span.from != span.to)\n            for (let j = i + 1; j < working.length; j++) {\n                let next = working[j];\n                if (next.from == span.from) {\n                    if (next.to != span.to) {\n                        if (working == spans)\n                            working = spans.slice();\n                        // Followed by a partially overlapping larger span. Split that\n                        // span.\n                        working[j] = next.copy(next.from, span.to);\n                        insertAhead(working, j + 1, next.copy(span.to, next.to));\n                    }\n                    continue;\n                }\n                else {\n                    if (next.from < span.to) {\n                        if (working == spans)\n                            working = spans.slice();\n                        // The end of this one overlaps with a subsequent span. Split\n                        // this one.\n                        working[i] = span.copy(span.from, next.from);\n                        insertAhead(working, j, span.copy(next.from, span.to));\n                    }\n                    break;\n                }\n            }\n    }\n    return working;\n}\nfunction insertAhead(array, i, deco) {\n    while (i < array.length && byPos(deco, array[i]) > 0)\n        i++;\n    array.splice(i, 0, deco);\n}\n// Get the decorations associated with the current props of a view.\nfunction viewDecorations(view) {\n    let found = [];\n    view.someProp(\"decorations\", f => {\n        let result = f(view.state);\n        if (result && result != empty)\n            found.push(result);\n    });\n    if (view.cursorWrapper)\n        found.push(DecorationSet.create(view.state.doc, [view.cursorWrapper.deco]));\n    return DecorationGroup.from(found);\n}\n\nconst observeOptions = {\n    childList: true,\n    characterData: true,\n    characterDataOldValue: true,\n    attributes: true,\n    attributeOldValue: true,\n    subtree: true\n};\n// IE11 has very broken mutation observers, so we also listen to DOMCharacterDataModified\nconst useCharData = ie && ie_version <= 11;\nclass SelectionState {\n    constructor() {\n        this.anchorNode = null;\n        this.anchorOffset = 0;\n        this.focusNode = null;\n        this.focusOffset = 0;\n    }\n    set(sel) {\n        this.anchorNode = sel.anchorNode;\n        this.anchorOffset = sel.anchorOffset;\n        this.focusNode = sel.focusNode;\n        this.focusOffset = sel.focusOffset;\n    }\n    clear() {\n        this.anchorNode = this.focusNode = null;\n    }\n    eq(sel) {\n        return sel.anchorNode == this.anchorNode && sel.anchorOffset == this.anchorOffset &&\n            sel.focusNode == this.focusNode && sel.focusOffset == this.focusOffset;\n    }\n}\nclass DOMObserver {\n    constructor(view, handleDOMChange) {\n        this.view = view;\n        this.handleDOMChange = handleDOMChange;\n        this.queue = [];\n        this.flushingSoon = -1;\n        this.observer = null;\n        this.currentSelection = new SelectionState;\n        this.onCharData = null;\n        this.suppressingSelectionUpdates = false;\n        this.observer = window.MutationObserver &&\n            new window.MutationObserver(mutations => {\n                for (let i = 0; i < mutations.length; i++)\n                    this.queue.push(mutations[i]);\n                // IE11 will sometimes (on backspacing out a single character\n                // text node after a BR node) call the observer callback\n                // before actually updating the DOM, which will cause\n                // ProseMirror to miss the change (see #930)\n                if (ie && ie_version <= 11 && mutations.some(m => m.type == \"childList\" && m.removedNodes.length ||\n                    m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length))\n                    this.flushSoon();\n                else\n                    this.flush();\n            });\n        if (useCharData) {\n            this.onCharData = e => {\n                this.queue.push({ target: e.target, type: \"characterData\", oldValue: e.prevValue });\n                this.flushSoon();\n            };\n        }\n        this.onSelectionChange = this.onSelectionChange.bind(this);\n    }\n    flushSoon() {\n        if (this.flushingSoon < 0)\n            this.flushingSoon = window.setTimeout(() => { this.flushingSoon = -1; this.flush(); }, 20);\n    }\n    forceFlush() {\n        if (this.flushingSoon > -1) {\n            window.clearTimeout(this.flushingSoon);\n            this.flushingSoon = -1;\n            this.flush();\n        }\n    }\n    start() {\n        if (this.observer) {\n            this.observer.takeRecords();\n            this.observer.observe(this.view.dom, observeOptions);\n        }\n        if (this.onCharData)\n            this.view.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.connectSelection();\n    }\n    stop() {\n        if (this.observer) {\n            let take = this.observer.takeRecords();\n            if (take.length) {\n                for (let i = 0; i < take.length; i++)\n                    this.queue.push(take[i]);\n                window.setTimeout(() => this.flush(), 20);\n            }\n            this.observer.disconnect();\n        }\n        if (this.onCharData)\n            this.view.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.disconnectSelection();\n    }\n    connectSelection() {\n        this.view.dom.ownerDocument.addEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    disconnectSelection() {\n        this.view.dom.ownerDocument.removeEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    suppressSelectionUpdates() {\n        this.suppressingSelectionUpdates = true;\n        setTimeout(() => this.suppressingSelectionUpdates = false, 50);\n    }\n    onSelectionChange() {\n        if (!hasFocusAndSelection(this.view))\n            return;\n        if (this.suppressingSelectionUpdates)\n            return selectionToDOM(this.view);\n        // Deletions on IE11 fire their events in the wrong order, giving\n        // us a selection change event before the DOM changes are\n        // reported.\n        if (ie && ie_version <= 11 && !this.view.state.selection.empty) {\n            let sel = this.view.domSelectionRange();\n            // Selection.isCollapsed isn't reliable on IE\n            if (sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset))\n                return this.flushSoon();\n        }\n        this.flush();\n    }\n    setCurSelection() {\n        this.currentSelection.set(this.view.domSelectionRange());\n    }\n    ignoreSelectionChange(sel) {\n        if (!sel.focusNode)\n            return true;\n        let ancestors = new Set, container;\n        for (let scan = sel.focusNode; scan; scan = parentNode(scan))\n            ancestors.add(scan);\n        for (let scan = sel.anchorNode; scan; scan = parentNode(scan))\n            if (ancestors.has(scan)) {\n                container = scan;\n                break;\n            }\n        let desc = container && this.view.docView.nearestDesc(container);\n        if (desc && desc.ignoreMutation({\n            type: \"selection\",\n            target: container.nodeType == 3 ? container.parentNode : container\n        })) {\n            this.setCurSelection();\n            return true;\n        }\n    }\n    pendingRecords() {\n        if (this.observer)\n            for (let mut of this.observer.takeRecords())\n                this.queue.push(mut);\n        return this.queue;\n    }\n    flush() {\n        let { view } = this;\n        if (!view.docView || this.flushingSoon > -1)\n            return;\n        let mutations = this.pendingRecords();\n        if (mutations.length)\n            this.queue = [];\n        let sel = view.domSelectionRange();\n        let newSel = !this.suppressingSelectionUpdates && !this.currentSelection.eq(sel) && hasFocusAndSelection(view) && !this.ignoreSelectionChange(sel);\n        let from = -1, to = -1, typeOver = false, added = [];\n        if (view.editable) {\n            for (let i = 0; i < mutations.length; i++) {\n                let result = this.registerMutation(mutations[i], added);\n                if (result) {\n                    from = from < 0 ? result.from : Math.min(result.from, from);\n                    to = to < 0 ? result.to : Math.max(result.to, to);\n                    if (result.typeOver)\n                        typeOver = true;\n                }\n            }\n        }\n        if (gecko && added.length > 1) {\n            let brs = added.filter(n => n.nodeName == \"BR\");\n            if (brs.length == 2) {\n                let a = brs[0], b = brs[1];\n                if (a.parentNode && a.parentNode.parentNode == b.parentNode)\n                    b.remove();\n                else\n                    a.remove();\n            }\n        }\n        let readSel = null;\n        // If it looks like the browser has reset the selection to the\n        // start of the document after focus, restore the selection from\n        // the state\n        if (from < 0 && newSel && view.input.lastFocus > Date.now() - 200 &&\n            Math.max(view.input.lastTouch, view.input.lastClick.time) < Date.now() - 300 &&\n            selectionCollapsed(sel) && (readSel = selectionFromDOM(view)) &&\n            readSel.eq(Selection.near(view.state.doc.resolve(0), 1))) {\n            view.input.lastFocus = 0;\n            selectionToDOM(view);\n            this.currentSelection.set(sel);\n            view.scrollToSelection();\n        }\n        else if (from > -1 || newSel) {\n            if (from > -1) {\n                view.docView.markDirty(from, to);\n                checkCSS(view);\n            }\n            this.handleDOMChange(from, to, typeOver, added);\n            if (view.docView && view.docView.dirty)\n                view.updateState(view.state);\n            else if (!this.currentSelection.eq(sel))\n                selectionToDOM(view);\n            this.currentSelection.set(sel);\n        }\n    }\n    registerMutation(mut, added) {\n        // Ignore mutations inside nodes that were already noted as inserted\n        if (added.indexOf(mut.target) > -1)\n            return null;\n        let desc = this.view.docView.nearestDesc(mut.target);\n        if (mut.type == \"attributes\" &&\n            (desc == this.view.docView || mut.attributeName == \"contenteditable\" ||\n                // Firefox sometimes fires spurious events for null/empty styles\n                (mut.attributeName == \"style\" && !mut.oldValue && !mut.target.getAttribute(\"style\"))))\n            return null;\n        if (!desc || desc.ignoreMutation(mut))\n            return null;\n        if (mut.type == \"childList\") {\n            for (let i = 0; i < mut.addedNodes.length; i++)\n                added.push(mut.addedNodes[i]);\n            if (desc.contentDOM && desc.contentDOM != desc.dom && !desc.contentDOM.contains(mut.target))\n                return { from: desc.posBefore, to: desc.posAfter };\n            let prev = mut.previousSibling, next = mut.nextSibling;\n            if (ie && ie_version <= 11 && mut.addedNodes.length) {\n                // IE11 gives us incorrect next/prev siblings for some\n                // insertions, so if there are added nodes, recompute those\n                for (let i = 0; i < mut.addedNodes.length; i++) {\n                    let { previousSibling, nextSibling } = mut.addedNodes[i];\n                    if (!previousSibling || Array.prototype.indexOf.call(mut.addedNodes, previousSibling) < 0)\n                        prev = previousSibling;\n                    if (!nextSibling || Array.prototype.indexOf.call(mut.addedNodes, nextSibling) < 0)\n                        next = nextSibling;\n                }\n            }\n            let fromOffset = prev && prev.parentNode == mut.target\n                ? domIndex(prev) + 1 : 0;\n            let from = desc.localPosFromDOM(mut.target, fromOffset, -1);\n            let toOffset = next && next.parentNode == mut.target\n                ? domIndex(next) : mut.target.childNodes.length;\n            let to = desc.localPosFromDOM(mut.target, toOffset, 1);\n            return { from, to };\n        }\n        else if (mut.type == \"attributes\") {\n            return { from: desc.posAtStart - desc.border, to: desc.posAtEnd + desc.border };\n        }\n        else { // \"characterData\"\n            return {\n                from: desc.posAtStart,\n                to: desc.posAtEnd,\n                // An event was generated for a text change that didn't change\n                // any text. Mark the dom change to fall back to assuming the\n                // selection was typed over with an identical value if it can't\n                // find another change.\n                typeOver: mut.target.nodeValue == mut.oldValue\n            };\n        }\n    }\n}\nlet cssChecked = new WeakMap();\nlet cssCheckWarned = false;\nfunction checkCSS(view) {\n    if (cssChecked.has(view))\n        return;\n    cssChecked.set(view, null);\n    if (['normal', 'nowrap', 'pre-line'].indexOf(getComputedStyle(view.dom).whiteSpace) !== -1) {\n        view.requiresGeckoHackNode = gecko;\n        if (cssCheckWarned)\n            return;\n        console[\"warn\"](\"ProseMirror expects the CSS white-space property to be set, preferably to 'pre-wrap'. It is recommended to load style/prosemirror.css from the prosemirror-view package.\");\n        cssCheckWarned = true;\n    }\n}\n// Used to work around a Safari Selection/shadow DOM bug\n// Based on https://github.com/codemirror/dev/issues/414 fix\nfunction safariShadowSelectionRange(view) {\n    let found;\n    function read(event) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        found = event.getTargetRanges()[0];\n    }\n    // Because Safari (at least in 2018-2022) doesn't provide regular\n    // access to the selection inside a shadowRoot, we have to perform a\n    // ridiculous hack to get at it—using `execCommand` to trigger a\n    // `beforeInput` event so that we can read the target range from the\n    // event.\n    view.dom.addEventListener(\"beforeinput\", read, true);\n    document.execCommand(\"indent\");\n    view.dom.removeEventListener(\"beforeinput\", read, true);\n    let anchorNode = found.startContainer, anchorOffset = found.startOffset;\n    let focusNode = found.endContainer, focusOffset = found.endOffset;\n    let currentAnchor = view.domAtPos(view.state.selection.anchor);\n    // Since such a range doesn't distinguish between anchor and head,\n    // use a heuristic that flips it around if its end matches the\n    // current anchor.\n    if (isEquivalentPosition(currentAnchor.node, currentAnchor.offset, focusNode, focusOffset))\n        [anchorNode, anchorOffset, focusNode, focusOffset] = [focusNode, focusOffset, anchorNode, anchorOffset];\n    return { anchorNode, anchorOffset, focusNode, focusOffset };\n}\n\n// Note that all referencing and parsing is done with the\n// start-of-operation selection and document, since that's the one\n// that the DOM represents. If any changes came in in the meantime,\n// the modification is mapped over those before it is applied, in\n// readDOMChange.\nfunction parseBetween(view, from_, to_) {\n    let { node: parent, fromOffset, toOffset, from, to } = view.docView.parseRange(from_, to_);\n    let domSel = view.domSelectionRange();\n    let find;\n    let anchor = domSel.anchorNode;\n    if (anchor && view.dom.contains(anchor.nodeType == 1 ? anchor : anchor.parentNode)) {\n        find = [{ node: anchor, offset: domSel.anchorOffset }];\n        if (!selectionCollapsed(domSel))\n            find.push({ node: domSel.focusNode, offset: domSel.focusOffset });\n    }\n    // Work around issue in Chrome where backspacing sometimes replaces\n    // the deleted content with a random BR node (issues #799, #831)\n    if (chrome && view.input.lastKeyCode === 8) {\n        for (let off = toOffset; off > fromOffset; off--) {\n            let node = parent.childNodes[off - 1], desc = node.pmViewDesc;\n            if (node.nodeName == \"BR\" && !desc) {\n                toOffset = off;\n                break;\n            }\n            if (!desc || desc.size)\n                break;\n        }\n    }\n    let startDoc = view.state.doc;\n    let parser = view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema);\n    let $from = startDoc.resolve(from);\n    let sel = null, doc = parser.parse(parent, {\n        topNode: $from.parent,\n        topMatch: $from.parent.contentMatchAt($from.index()),\n        topOpen: true,\n        from: fromOffset,\n        to: toOffset,\n        preserveWhitespace: $from.parent.type.whitespace == \"pre\" ? \"full\" : true,\n        findPositions: find,\n        ruleFromNode,\n        context: $from\n    });\n    if (find && find[0].pos != null) {\n        let anchor = find[0].pos, head = find[1] && find[1].pos;\n        if (head == null)\n            head = anchor;\n        sel = { anchor: anchor + from, head: head + from };\n    }\n    return { doc, sel, from, to };\n}\nfunction ruleFromNode(dom) {\n    let desc = dom.pmViewDesc;\n    if (desc) {\n        return desc.parseRule();\n    }\n    else if (dom.nodeName == \"BR\" && dom.parentNode) {\n        // Safari replaces the list item or table cell with a BR\n        // directly in the list node (?!) if you delete the last\n        // character in a list item or table cell (#708, #862)\n        if (safari && /^(ul|ol)$/i.test(dom.parentNode.nodeName)) {\n            let skip = document.createElement(\"div\");\n            skip.appendChild(document.createElement(\"li\"));\n            return { skip };\n        }\n        else if (dom.parentNode.lastChild == dom || safari && /^(tr|table)$/i.test(dom.parentNode.nodeName)) {\n            return { ignore: true };\n        }\n    }\n    else if (dom.nodeName == \"IMG\" && dom.getAttribute(\"mark-placeholder\")) {\n        return { ignore: true };\n    }\n    return null;\n}\nconst isInline = /^(a|abbr|acronym|b|bd[io]|big|br|button|cite|code|data(list)?|del|dfn|em|i|ins|kbd|label|map|mark|meter|output|q|ruby|s|samp|small|span|strong|su[bp]|time|u|tt|var)$/i;\nfunction readDOMChange(view, from, to, typeOver, addedNodes) {\n    let compositionID = view.input.compositionPendingChanges || (view.composing ? view.input.compositionID : 0);\n    view.input.compositionPendingChanges = 0;\n    if (from < 0) {\n        let origin = view.input.lastSelectionTime > Date.now() - 50 ? view.input.lastSelectionOrigin : null;\n        let newSel = selectionFromDOM(view, origin);\n        if (newSel && !view.state.selection.eq(newSel)) {\n            if (chrome && android &&\n                view.input.lastKeyCode === 13 && Date.now() - 100 < view.input.lastKeyCodeTime &&\n                view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\"))))\n                return;\n            let tr = view.state.tr.setSelection(newSel);\n            if (origin == \"pointer\")\n                tr.setMeta(\"pointer\", true);\n            else if (origin == \"key\")\n                tr.scrollIntoView();\n            if (compositionID)\n                tr.setMeta(\"composition\", compositionID);\n            view.dispatch(tr);\n        }\n        return;\n    }\n    let $before = view.state.doc.resolve(from);\n    let shared = $before.sharedDepth(to);\n    from = $before.before(shared + 1);\n    to = view.state.doc.resolve(to).after(shared + 1);\n    let sel = view.state.selection;\n    let parse = parseBetween(view, from, to);\n    let doc = view.state.doc, compare = doc.slice(parse.from, parse.to);\n    let preferredPos, preferredSide;\n    // Prefer anchoring to end when Backspace is pressed\n    if (view.input.lastKeyCode === 8 && Date.now() - 100 < view.input.lastKeyCodeTime) {\n        preferredPos = view.state.selection.to;\n        preferredSide = \"end\";\n    }\n    else {\n        preferredPos = view.state.selection.from;\n        preferredSide = \"start\";\n    }\n    view.input.lastKeyCode = null;\n    let change = findDiff(compare.content, parse.doc.content, parse.from, preferredPos, preferredSide);\n    if ((ios && view.input.lastIOSEnter > Date.now() - 225 || android) &&\n        addedNodes.some(n => n.nodeType == 1 && !isInline.test(n.nodeName)) &&\n        (!change || change.endA >= change.endB) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n        view.input.lastIOSEnter = 0;\n        return;\n    }\n    if (!change) {\n        if (typeOver && sel instanceof TextSelection && !sel.empty && sel.$head.sameParent(sel.$anchor) &&\n            !view.composing && !(parse.sel && parse.sel.anchor != parse.sel.head)) {\n            change = { start: sel.from, endA: sel.to, endB: sel.to };\n        }\n        else {\n            if (parse.sel) {\n                let sel = resolveSelection(view, view.state.doc, parse.sel);\n                if (sel && !sel.eq(view.state.selection)) {\n                    let tr = view.state.tr.setSelection(sel);\n                    if (compositionID)\n                        tr.setMeta(\"composition\", compositionID);\n                    view.dispatch(tr);\n                }\n            }\n            return;\n        }\n    }\n    // Chrome sometimes leaves the cursor before the inserted text when\n    // composing after a cursor wrapper. This moves it forward.\n    if (chrome && view.cursorWrapper && parse.sel && parse.sel.anchor == view.cursorWrapper.deco.from &&\n        parse.sel.head == parse.sel.anchor) {\n        let size = change.endB - change.start;\n        parse.sel = { anchor: parse.sel.anchor + size, head: parse.sel.anchor + size };\n    }\n    view.input.domChangeCount++;\n    // Handle the case where overwriting a selection by typing matches\n    // the start or end of the selected content, creating a change\n    // that's smaller than what was actually overwritten.\n    if (view.state.selection.from < view.state.selection.to &&\n        change.start == change.endB &&\n        view.state.selection instanceof TextSelection) {\n        if (change.start > view.state.selection.from && change.start <= view.state.selection.from + 2 &&\n            view.state.selection.from >= parse.from) {\n            change.start = view.state.selection.from;\n        }\n        else if (change.endA < view.state.selection.to && change.endA >= view.state.selection.to - 2 &&\n            view.state.selection.to <= parse.to) {\n            change.endB += (view.state.selection.to - change.endA);\n            change.endA = view.state.selection.to;\n        }\n    }\n    // IE11 will insert a non-breaking space _ahead_ of the space after\n    // the cursor space when adding a space before another space. When\n    // that happened, adjust the change to cover the space instead.\n    if (ie && ie_version <= 11 && change.endB == change.start + 1 &&\n        change.endA == change.start && change.start > parse.from &&\n        parse.doc.textBetween(change.start - parse.from - 1, change.start - parse.from + 1) == \" \\u00a0\") {\n        change.start--;\n        change.endA--;\n        change.endB--;\n    }\n    let $from = parse.doc.resolveNoCache(change.start - parse.from);\n    let $to = parse.doc.resolveNoCache(change.endB - parse.from);\n    let $fromA = doc.resolve(change.start);\n    let inlineChange = $from.sameParent($to) && $from.parent.inlineContent && $fromA.end() >= change.endA;\n    let nextSel;\n    // If this looks like the effect of pressing Enter (or was recorded\n    // as being an iOS enter press), just dispatch an Enter key instead.\n    if (((ios && view.input.lastIOSEnter > Date.now() - 225 &&\n        (!inlineChange || addedNodes.some(n => n.nodeName == \"DIV\" || n.nodeName == \"P\"))) ||\n        (!inlineChange && $from.pos < parse.doc.content.size && !$from.sameParent($to) &&\n            (nextSel = Selection.findFrom(parse.doc.resolve($from.pos + 1), 1, true)) &&\n            nextSel.head == $to.pos)) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n        view.input.lastIOSEnter = 0;\n        return;\n    }\n    // Same for backspace\n    if (view.state.selection.anchor > change.start &&\n        looksLikeJoin(doc, change.start, change.endA, $from, $to) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\")))) {\n        if (android && chrome)\n            view.domObserver.suppressSelectionUpdates(); // #820\n        return;\n    }\n    // Chrome Android will occasionally, during composition, delete the\n    // entire composition and then immediately insert it again. This is\n    // used to detect that situation.\n    if (chrome && android && change.endB == change.start)\n        view.input.lastAndroidDelete = Date.now();\n    // This tries to detect Android virtual keyboard\n    // enter-and-pick-suggestion action. That sometimes (see issue\n    // #1059) first fires a DOM mutation, before moving the selection to\n    // the newly created block. And then, because ProseMirror cleans up\n    // the DOM selection, it gives up moving the selection entirely,\n    // leaving the cursor in the wrong place. When that happens, we drop\n    // the new paragraph from the initial change, and fire a simulated\n    // enter key afterwards.\n    if (android && !inlineChange && $from.start() != $to.start() && $to.parentOffset == 0 && $from.depth == $to.depth &&\n        parse.sel && parse.sel.anchor == parse.sel.head && parse.sel.head == change.endA) {\n        change.endB -= 2;\n        $to = parse.doc.resolveNoCache(change.endB - parse.from);\n        setTimeout(() => {\n            view.someProp(\"handleKeyDown\", function (f) { return f(view, keyEvent(13, \"Enter\")); });\n        }, 20);\n    }\n    let chFrom = change.start, chTo = change.endA;\n    let tr, storedMarks, markChange;\n    if (inlineChange) {\n        if ($from.pos == $to.pos) { // Deletion\n            // IE11 sometimes weirdly moves the DOM selection around after\n            // backspacing out the first element in a textblock\n            if (ie && ie_version <= 11 && $from.parentOffset == 0) {\n                view.domObserver.suppressSelectionUpdates();\n                setTimeout(() => selectionToDOM(view), 20);\n            }\n            tr = view.state.tr.delete(chFrom, chTo);\n            storedMarks = doc.resolve(change.start).marksAcross(doc.resolve(change.endA));\n        }\n        else if ( // Adding or removing a mark\n        change.endA == change.endB &&\n            (markChange = isMarkChange($from.parent.content.cut($from.parentOffset, $to.parentOffset), $fromA.parent.content.cut($fromA.parentOffset, change.endA - $fromA.start())))) {\n            tr = view.state.tr;\n            if (markChange.type == \"add\")\n                tr.addMark(chFrom, chTo, markChange.mark);\n            else\n                tr.removeMark(chFrom, chTo, markChange.mark);\n        }\n        else if ($from.parent.child($from.index()).isText && $from.index() == $to.index() - ($to.textOffset ? 0 : 1)) {\n            // Both positions in the same text node -- simply insert text\n            let text = $from.parent.textBetween($from.parentOffset, $to.parentOffset);\n            if (view.someProp(\"handleTextInput\", f => f(view, chFrom, chTo, text)))\n                return;\n            tr = view.state.tr.insertText(text, chFrom, chTo);\n        }\n    }\n    if (!tr)\n        tr = view.state.tr.replace(chFrom, chTo, parse.doc.slice(change.start - parse.from, change.endB - parse.from));\n    if (parse.sel) {\n        let sel = resolveSelection(view, tr.doc, parse.sel);\n        // Chrome Android will sometimes, during composition, report the\n        // selection in the wrong place. If it looks like that is\n        // happening, don't update the selection.\n        // Edge just doesn't move the cursor forward when you start typing\n        // in an empty block or between br nodes.\n        if (sel && !(chrome && android && view.composing && sel.empty &&\n            (change.start != change.endB || view.input.lastAndroidDelete < Date.now() - 100) &&\n            (sel.head == chFrom || sel.head == tr.mapping.map(chTo) - 1) ||\n            ie && sel.empty && sel.head == chFrom))\n            tr.setSelection(sel);\n    }\n    if (storedMarks)\n        tr.ensureMarks(storedMarks);\n    if (compositionID)\n        tr.setMeta(\"composition\", compositionID);\n    view.dispatch(tr.scrollIntoView());\n}\nfunction resolveSelection(view, doc, parsedSel) {\n    if (Math.max(parsedSel.anchor, parsedSel.head) > doc.content.size)\n        return null;\n    return selectionBetween(view, doc.resolve(parsedSel.anchor), doc.resolve(parsedSel.head));\n}\n// Given two same-length, non-empty fragments of inline content,\n// determine whether the first could be created from the second by\n// removing or adding a single mark type.\nfunction isMarkChange(cur, prev) {\n    let curMarks = cur.firstChild.marks, prevMarks = prev.firstChild.marks;\n    let added = curMarks, removed = prevMarks, type, mark, update;\n    for (let i = 0; i < prevMarks.length; i++)\n        added = prevMarks[i].removeFromSet(added);\n    for (let i = 0; i < curMarks.length; i++)\n        removed = curMarks[i].removeFromSet(removed);\n    if (added.length == 1 && removed.length == 0) {\n        mark = added[0];\n        type = \"add\";\n        update = (node) => node.mark(mark.addToSet(node.marks));\n    }\n    else if (added.length == 0 && removed.length == 1) {\n        mark = removed[0];\n        type = \"remove\";\n        update = (node) => node.mark(mark.removeFromSet(node.marks));\n    }\n    else {\n        return null;\n    }\n    let updated = [];\n    for (let i = 0; i < prev.childCount; i++)\n        updated.push(update(prev.child(i)));\n    if (Fragment.from(updated).eq(cur))\n        return { mark, type };\n}\nfunction looksLikeJoin(old, start, end, $newStart, $newEnd) {\n    if (!$newStart.parent.isTextblock ||\n        // The content must have shrunk\n        end - start <= $newEnd.pos - $newStart.pos ||\n        // newEnd must point directly at or after the end of the block that newStart points into\n        skipClosingAndOpening($newStart, true, false) < $newEnd.pos)\n        return false;\n    let $start = old.resolve(start);\n    // Start must be at the end of a block\n    if ($start.parentOffset < $start.parent.content.size || !$start.parent.isTextblock)\n        return false;\n    let $next = old.resolve(skipClosingAndOpening($start, true, true));\n    // The next textblock must start before end and end near it\n    if (!$next.parent.isTextblock || $next.pos > end ||\n        skipClosingAndOpening($next, true, false) < end)\n        return false;\n    // The fragments after the join point must match\n    return $newStart.parent.content.cut($newStart.parentOffset).eq($next.parent.content);\n}\nfunction skipClosingAndOpening($pos, fromEnd, mayOpen) {\n    let depth = $pos.depth, end = fromEnd ? $pos.end() : $pos.pos;\n    while (depth > 0 && (fromEnd || $pos.indexAfter(depth) == $pos.node(depth).childCount)) {\n        depth--;\n        end++;\n        fromEnd = false;\n    }\n    if (mayOpen) {\n        let next = $pos.node(depth).maybeChild($pos.indexAfter(depth));\n        while (next && !next.isLeaf) {\n            next = next.firstChild;\n            end++;\n        }\n    }\n    return end;\n}\nfunction findDiff(a, b, pos, preferredPos, preferredSide) {\n    let start = a.findDiffStart(b, pos);\n    if (start == null)\n        return null;\n    let { a: endA, b: endB } = a.findDiffEnd(b, pos + a.size, pos + b.size);\n    if (preferredSide == \"end\") {\n        let adjust = Math.max(0, start - Math.min(endA, endB));\n        preferredPos -= endA + adjust - start;\n    }\n    if (endA < start && a.size < b.size) {\n        let move = preferredPos <= start && preferredPos >= endA ? start - preferredPos : 0;\n        start -= move;\n        if (start && start < b.size && isSurrogatePair(b.textBetween(start - 1, start + 1)))\n            start += move ? 1 : -1;\n        endB = start + (endB - endA);\n        endA = start;\n    }\n    else if (endB < start) {\n        let move = preferredPos <= start && preferredPos >= endB ? start - preferredPos : 0;\n        start -= move;\n        if (start && start < a.size && isSurrogatePair(a.textBetween(start - 1, start + 1)))\n            start += move ? 1 : -1;\n        endA = start + (endA - endB);\n        endB = start;\n    }\n    return { start, endA, endB };\n}\nfunction isSurrogatePair(str) {\n    if (str.length != 2)\n        return false;\n    let a = str.charCodeAt(0), b = str.charCodeAt(1);\n    return a >= 0xDC00 && a <= 0xDFFF && b >= 0xD800 && b <= 0xDBFF;\n}\n\n/**\n@internal\n*/\nconst __serializeForClipboard = serializeForClipboard;\n/**\n@internal\n*/\nconst __parseFromClipboard = parseFromClipboard;\n/**\n@internal\n*/\nconst __endComposition = endComposition;\n/**\nAn editor view manages the DOM structure that represents an\neditable document. Its state and behavior are determined by its\n[props](https://prosemirror.net/docs/ref/#view.DirectEditorProps).\n*/\nclass EditorView {\n    /**\n    Create a view. `place` may be a DOM node that the editor should\n    be appended to, a function that will place it into the document,\n    or an object whose `mount` property holds the node to use as the\n    document container. If it is `null`, the editor will not be\n    added to the document.\n    */\n    constructor(place, props) {\n        this._root = null;\n        /**\n        @internal\n        */\n        this.focused = false;\n        /**\n        Kludge used to work around a Chrome bug @internal\n        */\n        this.trackWrites = null;\n        this.mounted = false;\n        /**\n        @internal\n        */\n        this.markCursor = null;\n        /**\n        @internal\n        */\n        this.cursorWrapper = null;\n        /**\n        @internal\n        */\n        this.lastSelectedViewDesc = undefined;\n        /**\n        @internal\n        */\n        this.input = new InputState;\n        this.prevDirectPlugins = [];\n        this.pluginViews = [];\n        /**\n        Holds `true` when a hack node is needed in Firefox to prevent the\n        [space is eaten issue](https://github.com/ProseMirror/prosemirror/issues/651)\n        @internal\n        */\n        this.requiresGeckoHackNode = false;\n        /**\n        When editor content is being dragged, this object contains\n        information about the dragged slice and whether it is being\n        copied or moved. At any other time, it is null.\n        */\n        this.dragging = null;\n        this._props = props;\n        this.state = props.state;\n        this.directPlugins = props.plugins || [];\n        this.directPlugins.forEach(checkStateComponent);\n        this.dispatch = this.dispatch.bind(this);\n        this.dom = (place && place.mount) || document.createElement(\"div\");\n        if (place) {\n            if (place.appendChild)\n                place.appendChild(this.dom);\n            else if (typeof place == \"function\")\n                place(this.dom);\n            else if (place.mount)\n                this.mounted = true;\n        }\n        this.editable = getEditable(this);\n        updateCursorWrapper(this);\n        this.nodeViews = buildNodeViews(this);\n        this.docView = docViewDesc(this.state.doc, computeDocDeco(this), viewDecorations(this), this.dom, this);\n        this.domObserver = new DOMObserver(this, (from, to, typeOver, added) => readDOMChange(this, from, to, typeOver, added));\n        this.domObserver.start();\n        initInput(this);\n        this.updatePluginViews();\n    }\n    /**\n    Holds `true` when a\n    [composition](https://w3c.github.io/uievents/#events-compositionevents)\n    is active.\n    */\n    get composing() { return this.input.composing; }\n    /**\n    The view's current [props](https://prosemirror.net/docs/ref/#view.EditorProps).\n    */\n    get props() {\n        if (this._props.state != this.state) {\n            let prev = this._props;\n            this._props = {};\n            for (let name in prev)\n                this._props[name] = prev[name];\n            this._props.state = this.state;\n        }\n        return this._props;\n    }\n    /**\n    Update the view's props. Will immediately cause an update to\n    the DOM.\n    */\n    update(props) {\n        if (props.handleDOMEvents != this._props.handleDOMEvents)\n            ensureListeners(this);\n        let prevProps = this._props;\n        this._props = props;\n        if (props.plugins) {\n            props.plugins.forEach(checkStateComponent);\n            this.directPlugins = props.plugins;\n        }\n        this.updateStateInner(props.state, prevProps);\n    }\n    /**\n    Update the view by updating existing props object with the object\n    given as argument. Equivalent to `view.update(Object.assign({},\n    view.props, props))`.\n    */\n    setProps(props) {\n        let updated = {};\n        for (let name in this._props)\n            updated[name] = this._props[name];\n        updated.state = this.state;\n        for (let name in props)\n            updated[name] = props[name];\n        this.update(updated);\n    }\n    /**\n    Update the editor's `state` prop, without touching any of the\n    other props.\n    */\n    updateState(state) {\n        this.updateStateInner(state, this._props);\n    }\n    updateStateInner(state, prevProps) {\n        var _a;\n        let prev = this.state, redraw = false, updateSel = false;\n        // When stored marks are added, stop composition, so that they can\n        // be displayed.\n        if (state.storedMarks && this.composing) {\n            clearComposition(this);\n            updateSel = true;\n        }\n        this.state = state;\n        let pluginsChanged = prev.plugins != state.plugins || this._props.plugins != prevProps.plugins;\n        if (pluginsChanged || this._props.plugins != prevProps.plugins || this._props.nodeViews != prevProps.nodeViews) {\n            let nodeViews = buildNodeViews(this);\n            if (changedNodeViews(nodeViews, this.nodeViews)) {\n                this.nodeViews = nodeViews;\n                redraw = true;\n            }\n        }\n        if (pluginsChanged || prevProps.handleDOMEvents != this._props.handleDOMEvents) {\n            ensureListeners(this);\n        }\n        this.editable = getEditable(this);\n        updateCursorWrapper(this);\n        let innerDeco = viewDecorations(this), outerDeco = computeDocDeco(this);\n        let scroll = prev.plugins != state.plugins && !prev.doc.eq(state.doc) ? \"reset\"\n            : state.scrollToSelection > prev.scrollToSelection ? \"to selection\" : \"preserve\";\n        let updateDoc = redraw || !this.docView.matchesNode(state.doc, outerDeco, innerDeco);\n        if (updateDoc || !state.selection.eq(prev.selection))\n            updateSel = true;\n        let oldScrollPos = scroll == \"preserve\" && updateSel && this.dom.style.overflowAnchor == null && storeScrollPos(this);\n        if (updateSel) {\n            this.domObserver.stop();\n            // Work around an issue in Chrome, IE, and Edge where changing\n            // the DOM around an active selection puts it into a broken\n            // state where the thing the user sees differs from the\n            // selection reported by the Selection object (#710, #973,\n            // #1011, #1013, #1035).\n            let forceSelUpdate = updateDoc && (ie || chrome) && !this.composing &&\n                !prev.selection.empty && !state.selection.empty && selectionContextChanged(prev.selection, state.selection);\n            if (updateDoc) {\n                // If the node that the selection points into is written to,\n                // Chrome sometimes starts misreporting the selection, so this\n                // tracks that and forces a selection reset when our update\n                // did write to the node.\n                let chromeKludge = chrome ? (this.trackWrites = this.domSelectionRange().focusNode) : null;\n                if (redraw || !this.docView.update(state.doc, outerDeco, innerDeco, this)) {\n                    this.docView.updateOuterDeco([]);\n                    this.docView.destroy();\n                    this.docView = docViewDesc(state.doc, outerDeco, innerDeco, this.dom, this);\n                }\n                if (chromeKludge && !this.trackWrites)\n                    forceSelUpdate = true;\n            }\n            // Work around for an issue where an update arriving right between\n            // a DOM selection change and the \"selectionchange\" event for it\n            // can cause a spurious DOM selection update, disrupting mouse\n            // drag selection.\n            if (forceSelUpdate ||\n                !(this.input.mouseDown && this.domObserver.currentSelection.eq(this.domSelectionRange()) &&\n                    anchorInRightPlace(this))) {\n                selectionToDOM(this, forceSelUpdate);\n            }\n            else {\n                syncNodeSelection(this, state.selection);\n                this.domObserver.setCurSelection();\n            }\n            this.domObserver.start();\n        }\n        this.updatePluginViews(prev);\n        if (((_a = this.dragging) === null || _a === void 0 ? void 0 : _a.node) && !prev.doc.eq(state.doc))\n            this.updateDraggedNode(this.dragging, prev);\n        if (scroll == \"reset\") {\n            this.dom.scrollTop = 0;\n        }\n        else if (scroll == \"to selection\") {\n            this.scrollToSelection();\n        }\n        else if (oldScrollPos) {\n            resetScrollPos(oldScrollPos);\n        }\n    }\n    /**\n    @internal\n    */\n    scrollToSelection() {\n        let startDOM = this.domSelectionRange().focusNode;\n        if (this.someProp(\"handleScrollToSelection\", f => f(this))) ;\n        else if (this.state.selection instanceof NodeSelection) {\n            let target = this.docView.domAfterPos(this.state.selection.from);\n            if (target.nodeType == 1)\n                scrollRectIntoView(this, target.getBoundingClientRect(), startDOM);\n        }\n        else {\n            scrollRectIntoView(this, this.coordsAtPos(this.state.selection.head, 1), startDOM);\n        }\n    }\n    destroyPluginViews() {\n        let view;\n        while (view = this.pluginViews.pop())\n            if (view.destroy)\n                view.destroy();\n    }\n    updatePluginViews(prevState) {\n        if (!prevState || prevState.plugins != this.state.plugins || this.directPlugins != this.prevDirectPlugins) {\n            this.prevDirectPlugins = this.directPlugins;\n            this.destroyPluginViews();\n            for (let i = 0; i < this.directPlugins.length; i++) {\n                let plugin = this.directPlugins[i];\n                if (plugin.spec.view)\n                    this.pluginViews.push(plugin.spec.view(this));\n            }\n            for (let i = 0; i < this.state.plugins.length; i++) {\n                let plugin = this.state.plugins[i];\n                if (plugin.spec.view)\n                    this.pluginViews.push(plugin.spec.view(this));\n            }\n        }\n        else {\n            for (let i = 0; i < this.pluginViews.length; i++) {\n                let pluginView = this.pluginViews[i];\n                if (pluginView.update)\n                    pluginView.update(this, prevState);\n            }\n        }\n    }\n    updateDraggedNode(dragging, prev) {\n        let sel = dragging.node, found = -1;\n        if (this.state.doc.nodeAt(sel.from) == sel.node) {\n            found = sel.from;\n        }\n        else {\n            let movedPos = sel.from + (this.state.doc.content.size - prev.doc.content.size);\n            let moved = movedPos > 0 && this.state.doc.nodeAt(movedPos);\n            if (moved == sel.node)\n                found = movedPos;\n        }\n        this.dragging = new Dragging(dragging.slice, dragging.move, found < 0 ? undefined : NodeSelection.create(this.state.doc, found));\n    }\n    someProp(propName, f) {\n        let prop = this._props && this._props[propName], value;\n        if (prop != null && (value = f ? f(prop) : prop))\n            return value;\n        for (let i = 0; i < this.directPlugins.length; i++) {\n            let prop = this.directPlugins[i].props[propName];\n            if (prop != null && (value = f ? f(prop) : prop))\n                return value;\n        }\n        let plugins = this.state.plugins;\n        if (plugins)\n            for (let i = 0; i < plugins.length; i++) {\n                let prop = plugins[i].props[propName];\n                if (prop != null && (value = f ? f(prop) : prop))\n                    return value;\n            }\n    }\n    /**\n    Query whether the view has focus.\n    */\n    hasFocus() {\n        // Work around IE not handling focus correctly if resize handles are shown.\n        // If the cursor is inside an element with resize handles, activeElement\n        // will be that element instead of this.dom.\n        if (ie) {\n            // If activeElement is within this.dom, and there are no other elements\n            // setting `contenteditable` to false in between, treat it as focused.\n            let node = this.root.activeElement;\n            if (node == this.dom)\n                return true;\n            if (!node || !this.dom.contains(node))\n                return false;\n            while (node && this.dom != node && this.dom.contains(node)) {\n                if (node.contentEditable == 'false')\n                    return false;\n                node = node.parentElement;\n            }\n            return true;\n        }\n        return this.root.activeElement == this.dom;\n    }\n    /**\n    Focus the editor.\n    */\n    focus() {\n        this.domObserver.stop();\n        if (this.editable)\n            focusPreventScroll(this.dom);\n        selectionToDOM(this);\n        this.domObserver.start();\n    }\n    /**\n    Get the document root in which the editor exists. This will\n    usually be the top-level `document`, but might be a [shadow\n    DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM)\n    root if the editor is inside one.\n    */\n    get root() {\n        let cached = this._root;\n        if (cached == null)\n            for (let search = this.dom.parentNode; search; search = search.parentNode) {\n                if (search.nodeType == 9 || (search.nodeType == 11 && search.host)) {\n                    if (!search.getSelection)\n                        Object.getPrototypeOf(search).getSelection = () => search.ownerDocument.getSelection();\n                    return this._root = search;\n                }\n            }\n        return cached || document;\n    }\n    /**\n    When an existing editor view is moved to a new document or\n    shadow tree, call this to make it recompute its root.\n    */\n    updateRoot() {\n        this._root = null;\n    }\n    /**\n    Given a pair of viewport coordinates, return the document\n    position that corresponds to them. May return null if the given\n    coordinates aren't inside of the editor. When an object is\n    returned, its `pos` property is the position nearest to the\n    coordinates, and its `inside` property holds the position of the\n    inner node that the position falls inside of, or -1 if it is at\n    the top level, not in any node.\n    */\n    posAtCoords(coords) {\n        return posAtCoords(this, coords);\n    }\n    /**\n    Returns the viewport rectangle at a given document position.\n    `left` and `right` will be the same number, as this returns a\n    flat cursor-ish rectangle. If the position is between two things\n    that aren't directly adjacent, `side` determines which element\n    is used. When < 0, the element before the position is used,\n    otherwise the element after.\n    */\n    coordsAtPos(pos, side = 1) {\n        return coordsAtPos(this, pos, side);\n    }\n    /**\n    Find the DOM position that corresponds to the given document\n    position. When `side` is negative, find the position as close as\n    possible to the content before the position. When positive,\n    prefer positions close to the content after the position. When\n    zero, prefer as shallow a position as possible.\n    \n    Note that you should **not** mutate the editor's internal DOM,\n    only inspect it (and even that is usually not necessary).\n    */\n    domAtPos(pos, side = 0) {\n        return this.docView.domFromPos(pos, side);\n    }\n    /**\n    Find the DOM node that represents the document node after the\n    given position. May return `null` when the position doesn't point\n    in front of a node or if the node is inside an opaque node view.\n    \n    This is intended to be able to call things like\n    `getBoundingClientRect` on that DOM node. Do **not** mutate the\n    editor DOM directly, or add styling this way, since that will be\n    immediately overriden by the editor as it redraws the node.\n    */\n    nodeDOM(pos) {\n        let desc = this.docView.descAt(pos);\n        return desc ? desc.nodeDOM : null;\n    }\n    /**\n    Find the document position that corresponds to a given DOM\n    position. (Whenever possible, it is preferable to inspect the\n    document structure directly, rather than poking around in the\n    DOM, but sometimes—for example when interpreting an event\n    target—you don't have a choice.)\n    \n    The `bias` parameter can be used to influence which side of a DOM\n    node to use when the position is inside a leaf node.\n    */\n    posAtDOM(node, offset, bias = -1) {\n        let pos = this.docView.posFromDOM(node, offset, bias);\n        if (pos == null)\n            throw new RangeError(\"DOM position not inside the editor\");\n        return pos;\n    }\n    /**\n    Find out whether the selection is at the end of a textblock when\n    moving in a given direction. When, for example, given `\"left\"`,\n    it will return true if moving left from the current cursor\n    position would leave that position's parent textblock. Will apply\n    to the view's current state by default, but it is possible to\n    pass a different state.\n    */\n    endOfTextblock(dir, state) {\n        return endOfTextblock(this, state || this.state, dir);\n    }\n    /**\n    Run the editor's paste logic with the given HTML string. The\n    `event`, if given, will be passed to the\n    [`handlePaste`](https://prosemirror.net/docs/ref/#view.EditorProps.handlePaste) hook.\n    */\n    pasteHTML(html, event) {\n        return doPaste(this, \"\", html, false, event || new ClipboardEvent(\"paste\"));\n    }\n    /**\n    Run the editor's paste logic with the given plain-text input.\n    */\n    pasteText(text, event) {\n        return doPaste(this, text, null, true, event || new ClipboardEvent(\"paste\"));\n    }\n    /**\n    Removes the editor from the DOM and destroys all [node\n    views](https://prosemirror.net/docs/ref/#view.NodeView).\n    */\n    destroy() {\n        if (!this.docView)\n            return;\n        destroyInput(this);\n        this.destroyPluginViews();\n        if (this.mounted) {\n            this.docView.update(this.state.doc, [], viewDecorations(this), this);\n            this.dom.textContent = \"\";\n        }\n        else if (this.dom.parentNode) {\n            this.dom.parentNode.removeChild(this.dom);\n        }\n        this.docView.destroy();\n        this.docView = null;\n    }\n    /**\n    This is true when the view has been\n    [destroyed](https://prosemirror.net/docs/ref/#view.EditorView.destroy) (and thus should not be\n    used anymore).\n    */\n    get isDestroyed() {\n        return this.docView == null;\n    }\n    /**\n    Used for testing.\n    */\n    dispatchEvent(event) {\n        return dispatchEvent(this, event);\n    }\n    /**\n    Dispatch a transaction. Will call\n    [`dispatchTransaction`](https://prosemirror.net/docs/ref/#view.DirectEditorProps.dispatchTransaction)\n    when given, and otherwise defaults to applying the transaction to\n    the current state and calling\n    [`updateState`](https://prosemirror.net/docs/ref/#view.EditorView.updateState) with the result.\n    This method is bound to the view instance, so that it can be\n    easily passed around.\n    */\n    dispatch(tr) {\n        let dispatchTransaction = this._props.dispatchTransaction;\n        if (dispatchTransaction)\n            dispatchTransaction.call(this, tr);\n        else\n            this.updateState(this.state.apply(tr));\n    }\n    /**\n    @internal\n    */\n    domSelectionRange() {\n        return safari && this.root.nodeType === 11 && deepActiveElement(this.dom.ownerDocument) == this.dom\n            ? safariShadowSelectionRange(this) : this.domSelection();\n    }\n    /**\n    @internal\n    */\n    domSelection() {\n        return this.root.getSelection();\n    }\n}\nfunction computeDocDeco(view) {\n    let attrs = Object.create(null);\n    attrs.class = \"ProseMirror\";\n    attrs.contenteditable = String(view.editable);\n    view.someProp(\"attributes\", value => {\n        if (typeof value == \"function\")\n            value = value(view.state);\n        if (value)\n            for (let attr in value) {\n                if (attr == \"class\")\n                    attrs.class += \" \" + value[attr];\n                else if (attr == \"style\")\n                    attrs.style = (attrs.style ? attrs.style + \";\" : \"\") + value[attr];\n                else if (!attrs[attr] && attr != \"contenteditable\" && attr != \"nodeName\")\n                    attrs[attr] = String(value[attr]);\n            }\n    });\n    if (!attrs.translate)\n        attrs.translate = \"no\";\n    return [Decoration.node(0, view.state.doc.content.size, attrs)];\n}\nfunction updateCursorWrapper(view) {\n    if (view.markCursor) {\n        let dom = document.createElement(\"img\");\n        dom.className = \"ProseMirror-separator\";\n        dom.setAttribute(\"mark-placeholder\", \"true\");\n        dom.setAttribute(\"alt\", \"\");\n        view.cursorWrapper = { dom, deco: Decoration.widget(view.state.selection.head, dom, { raw: true, marks: view.markCursor }) };\n    }\n    else {\n        view.cursorWrapper = null;\n    }\n}\nfunction getEditable(view) {\n    return !view.someProp(\"editable\", value => value(view.state) === false);\n}\nfunction selectionContextChanged(sel1, sel2) {\n    let depth = Math.min(sel1.$anchor.sharedDepth(sel1.head), sel2.$anchor.sharedDepth(sel2.head));\n    return sel1.$anchor.start(depth) != sel2.$anchor.start(depth);\n}\nfunction buildNodeViews(view) {\n    let result = Object.create(null);\n    function add(obj) {\n        for (let prop in obj)\n            if (!Object.prototype.hasOwnProperty.call(result, prop))\n                result[prop] = obj[prop];\n    }\n    view.someProp(\"nodeViews\", add);\n    view.someProp(\"markViews\", add);\n    return result;\n}\nfunction changedNodeViews(a, b) {\n    let nA = 0, nB = 0;\n    for (let prop in a) {\n        if (a[prop] != b[prop])\n            return true;\n        nA++;\n    }\n    for (let _ in b)\n        nB++;\n    return nA != nB;\n}\nfunction checkStateComponent(plugin) {\n    if (plugin.spec.state || plugin.spec.filterTransaction || plugin.spec.appendTransaction)\n        throw new RangeError(\"Plugins passed directly to the view must not have a state component\");\n}\n\nexport { Decoration, DecorationSet, EditorView, __endComposition, __parseFromClipboard, __serializeForClipboard };\n","export var base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\"\n}\n\nexport var shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \":\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\"\n}\n\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform)\nvar ie = typeof navigator != \"undefined\" && /MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32)\n  shift[i] = String.fromCharCode(i)\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]\n\nexport function keyName(event) {\n  // On macOS, keys held with Shift and Cmd don't reflect the effect of Shift in `.key`.\n  // On IE, shift effect is never included in `.key`.\n  var ignoreKey = mac && event.metaKey && event.shiftKey && !event.ctrlKey && !event.altKey ||\n      ie && event.shiftKey && event.key && event.key.length == 1 ||\n      event.key == \"Unidentified\"\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\"\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\"\n  if (name == \"Del\") name = \"Delete\"\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\"\n  if (name == \"Up\") name = \"ArrowUp\"\n  if (name == \"Right\") name = \"ArrowRight\"\n  if (name == \"Down\") name = \"ArrowDown\"\n  return name\n}\n","import { keyName, base } from 'w3c-keyname';\nimport { Plugin } from 'prosemirror-state';\n\nconst mac = typeof navigator != \"undefined\" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform) : false;\nfunction normalizeKeyName(name) {\n    let parts = name.split(/-(?!$)/), result = parts[parts.length - 1];\n    if (result == \"Space\")\n        result = \" \";\n    let alt, ctrl, shift, meta;\n    for (let i = 0; i < parts.length - 1; i++) {\n        let mod = parts[i];\n        if (/^(cmd|meta|m)$/i.test(mod))\n            meta = true;\n        else if (/^a(lt)?$/i.test(mod))\n            alt = true;\n        else if (/^(c|ctrl|control)$/i.test(mod))\n            ctrl = true;\n        else if (/^s(hift)?$/i.test(mod))\n            shift = true;\n        else if (/^mod$/i.test(mod)) {\n            if (mac)\n                meta = true;\n            else\n                ctrl = true;\n        }\n        else\n            throw new Error(\"Unrecognized modifier name: \" + mod);\n    }\n    if (alt)\n        result = \"Alt-\" + result;\n    if (ctrl)\n        result = \"Ctrl-\" + result;\n    if (meta)\n        result = \"Meta-\" + result;\n    if (shift)\n        result = \"Shift-\" + result;\n    return result;\n}\nfunction normalize(map) {\n    let copy = Object.create(null);\n    for (let prop in map)\n        copy[normalizeKeyName(prop)] = map[prop];\n    return copy;\n}\nfunction modifiers(name, event, shift = true) {\n    if (event.altKey)\n        name = \"Alt-\" + name;\n    if (event.ctrlKey)\n        name = \"Ctrl-\" + name;\n    if (event.metaKey)\n        name = \"Meta-\" + name;\n    if (shift && event.shiftKey)\n        name = \"Shift-\" + name;\n    return name;\n}\n/**\nCreate a keymap plugin for the given set of bindings.\n\nBindings should map key names to [command](https://prosemirror.net/docs/ref/#commands)-style\nfunctions, which will be called with `(EditorState, dispatch,\nEditorView)` arguments, and should return true when they've handled\nthe key. Note that the view argument isn't part of the command\nprotocol, but can be used as an escape hatch if a binding needs to\ndirectly interact with the UI.\n\nKey names may be strings like `\"Shift-Ctrl-Enter\"`—a key\nidentifier prefixed with zero or more modifiers. Key identifiers\nare based on the strings that can appear in\n[`KeyEvent.key`](https:developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key).\nUse lowercase letters to refer to letter keys (or uppercase letters\nif you want shift to be held). You may use `\"Space\"` as an alias\nfor the `\" \"` name.\n\nModifiers can be given in any order. `Shift-` (or `s-`), `Alt-` (or\n`a-`), `Ctrl-` (or `c-` or `Control-`) and `Cmd-` (or `m-` or\n`Meta-`) are recognized. For characters that are created by holding\nshift, the `Shift-` prefix is implied, and should not be added\nexplicitly.\n\nYou can use `Mod-` as a shorthand for `Cmd-` on Mac and `Ctrl-` on\nother platforms.\n\nYou can add multiple keymap plugins to an editor. The order in\nwhich they appear determines their precedence (the ones early in\nthe array get to dispatch first).\n*/\nfunction keymap(bindings) {\n    return new Plugin({ props: { handleKeyDown: keydownHandler(bindings) } });\n}\n/**\nGiven a set of bindings (using the same format as\n[`keymap`](https://prosemirror.net/docs/ref/#keymap.keymap)), return a [keydown\nhandler](https://prosemirror.net/docs/ref/#view.EditorProps.handleKeyDown) that handles them.\n*/\nfunction keydownHandler(bindings) {\n    let map = normalize(bindings);\n    return function (view, event) {\n        let name = keyName(event), baseName, direct = map[modifiers(name, event)];\n        if (direct && direct(view.state, view.dispatch, view))\n            return true;\n        // A character key\n        if (name.length == 1 && name != \" \") {\n            if (event.shiftKey) {\n                // In case the name was already modified by shift, try looking\n                // it up without its shift modifier\n                let noShift = map[modifiers(name, event, false)];\n                if (noShift && noShift(view.state, view.dispatch, view))\n                    return true;\n            }\n            if ((event.shiftKey || event.altKey || event.metaKey || name.charCodeAt(0) > 127) &&\n                (baseName = base[event.keyCode]) && baseName != name) {\n                // Try falling back to the keyCode when there's a modifier\n                // active or the character produced isn't ASCII, and our table\n                // produces a different name from the the keyCode. See #668,\n                // #1060\n                let fromCode = map[modifiers(baseName, event)];\n                if (fromCode && fromCode(view.state, view.dispatch, view))\n                    return true;\n            }\n        }\n        return false;\n    };\n}\n\nexport { keydownHandler, keymap };\n","import { liftTarget, replaceStep, ReplaceStep, canJoin, joinPoint, canSplit, ReplaceAroundStep, findWrapping } from 'prosemirror-transform';\nimport { Slice, Fragment } from 'prosemirror-model';\nimport { NodeSelection, Selection, TextSelection, AllSelection } from 'prosemirror-state';\n\n/**\nDelete the selection, if there is one.\n*/\nconst deleteSelection = (state, dispatch) => {\n    if (state.selection.empty)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.deleteSelection().scrollIntoView());\n    return true;\n};\nfunction atBlockStart(state, view) {\n    let { $cursor } = state.selection;\n    if (!$cursor || (view ? !view.endOfTextblock(\"backward\", state)\n        : $cursor.parentOffset > 0))\n        return null;\n    return $cursor;\n}\n/**\nIf the selection is empty and at the start of a textblock, try to\nreduce the distance between that block and the one before it—if\nthere's a block directly before it that can be joined, join them.\nIf not, try to move the selected block closer to the next one in\nthe document structure by lifting it out of its parent or moving it\ninto a parent of the previous block. Will use the view for accurate\n(bidi-aware) start-of-textblock detection if given.\n*/\nconst joinBackward = (state, dispatch, view) => {\n    let $cursor = atBlockStart(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutBefore($cursor);\n    // If there is no node before this, try to lift\n    if (!$cut) {\n        let range = $cursor.blockRange(), target = range && liftTarget(range);\n        if (target == null)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.lift(range, target).scrollIntoView());\n        return true;\n    }\n    let before = $cut.nodeBefore;\n    // Apply the joining algorithm\n    if (!before.type.spec.isolating && deleteBarrier(state, $cut, dispatch))\n        return true;\n    // If the node below has no content and the node above is\n    // selectable, delete the node below and select the one above.\n    if ($cursor.parent.content.size == 0 &&\n        (textblockAt(before, \"end\") || NodeSelection.isSelectable(before))) {\n        let delStep = replaceStep(state.doc, $cursor.before(), $cursor.after(), Slice.empty);\n        if (delStep && delStep.slice.size < delStep.to - delStep.from) {\n            if (dispatch) {\n                let tr = state.tr.step(delStep);\n                tr.setSelection(textblockAt(before, \"end\") ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos, -1)), -1)\n                    : NodeSelection.create(tr.doc, $cut.pos - before.nodeSize));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n    }\n    // If the node before is an atom, delete it\n    if (before.isAtom && $cut.depth == $cursor.depth - 1) {\n        if (dispatch)\n            dispatch(state.tr.delete($cut.pos - before.nodeSize, $cut.pos).scrollIntoView());\n        return true;\n    }\n    return false;\n};\n/**\nA more limited form of [`joinBackward`]($commands.joinBackward)\nthat only tries to join the current textblock to the one before\nit, if the cursor is at the start of a textblock.\n*/\nconst joinTextblockBackward = (state, dispatch, view) => {\n    let $cursor = atBlockStart(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutBefore($cursor);\n    return $cut ? joinTextblocksAround(state, $cut, dispatch) : false;\n};\n/**\nA more limited form of [`joinForward`]($commands.joinForward)\nthat only tries to join the current textblock to the one after\nit, if the cursor is at the end of a textblock.\n*/\nconst joinTextblockForward = (state, dispatch, view) => {\n    let $cursor = atBlockEnd(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutAfter($cursor);\n    return $cut ? joinTextblocksAround(state, $cut, dispatch) : false;\n};\nfunction joinTextblocksAround(state, $cut, dispatch) {\n    let before = $cut.nodeBefore, beforeText = before, beforePos = $cut.pos - 1;\n    for (; !beforeText.isTextblock; beforePos--) {\n        if (beforeText.type.spec.isolating)\n            return false;\n        let child = beforeText.lastChild;\n        if (!child)\n            return false;\n        beforeText = child;\n    }\n    let after = $cut.nodeAfter, afterText = after, afterPos = $cut.pos + 1;\n    for (; !afterText.isTextblock; afterPos++) {\n        if (afterText.type.spec.isolating)\n            return false;\n        let child = afterText.firstChild;\n        if (!child)\n            return false;\n        afterText = child;\n    }\n    let step = replaceStep(state.doc, beforePos, afterPos, Slice.empty);\n    if (!step || step.from != beforePos ||\n        step instanceof ReplaceStep && step.slice.size >= afterPos - beforePos)\n        return false;\n    if (dispatch) {\n        let tr = state.tr.step(step);\n        tr.setSelection(TextSelection.create(tr.doc, beforePos));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n}\nfunction textblockAt(node, side, only = false) {\n    for (let scan = node; scan; scan = (side == \"start\" ? scan.firstChild : scan.lastChild)) {\n        if (scan.isTextblock)\n            return true;\n        if (only && scan.childCount != 1)\n            return false;\n    }\n    return false;\n}\n/**\nWhen the selection is empty and at the start of a textblock, select\nthe node before that textblock, if possible. This is intended to be\nbound to keys like backspace, after\n[`joinBackward`](https://prosemirror.net/docs/ref/#commands.joinBackward) or other deleting\ncommands, as a fall-back behavior when the schema doesn't allow\ndeletion at the selected point.\n*/\nconst selectNodeBackward = (state, dispatch, view) => {\n    let { $head, empty } = state.selection, $cut = $head;\n    if (!empty)\n        return false;\n    if ($head.parent.isTextblock) {\n        if (view ? !view.endOfTextblock(\"backward\", state) : $head.parentOffset > 0)\n            return false;\n        $cut = findCutBefore($head);\n    }\n    let node = $cut && $cut.nodeBefore;\n    if (!node || !NodeSelection.isSelectable(node))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos - node.nodeSize)).scrollIntoView());\n    return true;\n};\nfunction findCutBefore($pos) {\n    if (!$pos.parent.type.spec.isolating)\n        for (let i = $pos.depth - 1; i >= 0; i--) {\n            if ($pos.index(i) > 0)\n                return $pos.doc.resolve($pos.before(i + 1));\n            if ($pos.node(i).type.spec.isolating)\n                break;\n        }\n    return null;\n}\nfunction atBlockEnd(state, view) {\n    let { $cursor } = state.selection;\n    if (!$cursor || (view ? !view.endOfTextblock(\"forward\", state)\n        : $cursor.parentOffset < $cursor.parent.content.size))\n        return null;\n    return $cursor;\n}\n/**\nIf the selection is empty and the cursor is at the end of a\ntextblock, try to reduce or remove the boundary between that block\nand the one after it, either by joining them or by moving the other\nblock closer to this one in the tree structure. Will use the view\nfor accurate start-of-textblock detection if given.\n*/\nconst joinForward = (state, dispatch, view) => {\n    let $cursor = atBlockEnd(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutAfter($cursor);\n    // If there is no node after this, there's nothing to do\n    if (!$cut)\n        return false;\n    let after = $cut.nodeAfter;\n    // Try the joining algorithm\n    if (deleteBarrier(state, $cut, dispatch))\n        return true;\n    // If the node above has no content and the node below is\n    // selectable, delete the node above and select the one below.\n    if ($cursor.parent.content.size == 0 &&\n        (textblockAt(after, \"start\") || NodeSelection.isSelectable(after))) {\n        let delStep = replaceStep(state.doc, $cursor.before(), $cursor.after(), Slice.empty);\n        if (delStep && delStep.slice.size < delStep.to - delStep.from) {\n            if (dispatch) {\n                let tr = state.tr.step(delStep);\n                tr.setSelection(textblockAt(after, \"start\") ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos)), 1)\n                    : NodeSelection.create(tr.doc, tr.mapping.map($cut.pos)));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n    }\n    // If the next node is an atom, delete it\n    if (after.isAtom && $cut.depth == $cursor.depth - 1) {\n        if (dispatch)\n            dispatch(state.tr.delete($cut.pos, $cut.pos + after.nodeSize).scrollIntoView());\n        return true;\n    }\n    return false;\n};\n/**\nWhen the selection is empty and at the end of a textblock, select\nthe node coming after that textblock, if possible. This is intended\nto be bound to keys like delete, after\n[`joinForward`](https://prosemirror.net/docs/ref/#commands.joinForward) and similar deleting\ncommands, to provide a fall-back behavior when the schema doesn't\nallow deletion at the selected point.\n*/\nconst selectNodeForward = (state, dispatch, view) => {\n    let { $head, empty } = state.selection, $cut = $head;\n    if (!empty)\n        return false;\n    if ($head.parent.isTextblock) {\n        if (view ? !view.endOfTextblock(\"forward\", state) : $head.parentOffset < $head.parent.content.size)\n            return false;\n        $cut = findCutAfter($head);\n    }\n    let node = $cut && $cut.nodeAfter;\n    if (!node || !NodeSelection.isSelectable(node))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos)).scrollIntoView());\n    return true;\n};\nfunction findCutAfter($pos) {\n    if (!$pos.parent.type.spec.isolating)\n        for (let i = $pos.depth - 1; i >= 0; i--) {\n            let parent = $pos.node(i);\n            if ($pos.index(i) + 1 < parent.childCount)\n                return $pos.doc.resolve($pos.after(i + 1));\n            if (parent.type.spec.isolating)\n                break;\n        }\n    return null;\n}\n/**\nJoin the selected block or, if there is a text selection, the\nclosest ancestor block of the selection that can be joined, with\nthe sibling above it.\n*/\nconst joinUp = (state, dispatch) => {\n    let sel = state.selection, nodeSel = sel instanceof NodeSelection, point;\n    if (nodeSel) {\n        if (sel.node.isTextblock || !canJoin(state.doc, sel.from))\n            return false;\n        point = sel.from;\n    }\n    else {\n        point = joinPoint(state.doc, sel.from, -1);\n        if (point == null)\n            return false;\n    }\n    if (dispatch) {\n        let tr = state.tr.join(point);\n        if (nodeSel)\n            tr.setSelection(NodeSelection.create(tr.doc, point - state.doc.resolve(point).nodeBefore.nodeSize));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nJoin the selected block, or the closest ancestor of the selection\nthat can be joined, with the sibling after it.\n*/\nconst joinDown = (state, dispatch) => {\n    let sel = state.selection, point;\n    if (sel instanceof NodeSelection) {\n        if (sel.node.isTextblock || !canJoin(state.doc, sel.to))\n            return false;\n        point = sel.to;\n    }\n    else {\n        point = joinPoint(state.doc, sel.to, 1);\n        if (point == null)\n            return false;\n    }\n    if (dispatch)\n        dispatch(state.tr.join(point).scrollIntoView());\n    return true;\n};\n/**\nLift the selected block, or the closest ancestor block of the\nselection that can be lifted, out of its parent node.\n*/\nconst lift = (state, dispatch) => {\n    let { $from, $to } = state.selection;\n    let range = $from.blockRange($to), target = range && liftTarget(range);\n    if (target == null)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.lift(range, target).scrollIntoView());\n    return true;\n};\n/**\nIf the selection is in a node whose type has a truthy\n[`code`](https://prosemirror.net/docs/ref/#model.NodeSpec.code) property in its spec, replace the\nselection with a newline character.\n*/\nconst newlineInCode = (state, dispatch) => {\n    let { $head, $anchor } = state.selection;\n    if (!$head.parent.type.spec.code || !$head.sameParent($anchor))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.insertText(\"\\n\").scrollIntoView());\n    return true;\n};\nfunction defaultBlockAt(match) {\n    for (let i = 0; i < match.edgeCount; i++) {\n        let { type } = match.edge(i);\n        if (type.isTextblock && !type.hasRequiredAttrs())\n            return type;\n    }\n    return null;\n}\n/**\nWhen the selection is in a node with a truthy\n[`code`](https://prosemirror.net/docs/ref/#model.NodeSpec.code) property in its spec, create a\ndefault block after the code block, and move the cursor there.\n*/\nconst exitCode = (state, dispatch) => {\n    let { $head, $anchor } = state.selection;\n    if (!$head.parent.type.spec.code || !$head.sameParent($anchor))\n        return false;\n    let above = $head.node(-1), after = $head.indexAfter(-1), type = defaultBlockAt(above.contentMatchAt(after));\n    if (!type || !above.canReplaceWith(after, after, type))\n        return false;\n    if (dispatch) {\n        let pos = $head.after(), tr = state.tr.replaceWith(pos, pos, type.createAndFill());\n        tr.setSelection(Selection.near(tr.doc.resolve(pos), 1));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nIf a block node is selected, create an empty paragraph before (if\nit is its parent's first child) or after it.\n*/\nconst createParagraphNear = (state, dispatch) => {\n    let sel = state.selection, { $from, $to } = sel;\n    if (sel instanceof AllSelection || $from.parent.inlineContent || $to.parent.inlineContent)\n        return false;\n    let type = defaultBlockAt($to.parent.contentMatchAt($to.indexAfter()));\n    if (!type || !type.isTextblock)\n        return false;\n    if (dispatch) {\n        let side = (!$from.parentOffset && $to.index() < $to.parent.childCount ? $from : $to).pos;\n        let tr = state.tr.insert(side, type.createAndFill());\n        tr.setSelection(TextSelection.create(tr.doc, side + 1));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nIf the cursor is in an empty textblock that can be lifted, lift the\nblock.\n*/\nconst liftEmptyBlock = (state, dispatch) => {\n    let { $cursor } = state.selection;\n    if (!$cursor || $cursor.parent.content.size)\n        return false;\n    if ($cursor.depth > 1 && $cursor.after() != $cursor.end(-1)) {\n        let before = $cursor.before();\n        if (canSplit(state.doc, before)) {\n            if (dispatch)\n                dispatch(state.tr.split(before).scrollIntoView());\n            return true;\n        }\n    }\n    let range = $cursor.blockRange(), target = range && liftTarget(range);\n    if (target == null)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.lift(range, target).scrollIntoView());\n    return true;\n};\n/**\nCreate a variant of [`splitBlock`](https://prosemirror.net/docs/ref/#commands.splitBlock) that uses\na custom function to determine the type of the newly split off block.\n*/\nfunction splitBlockAs(splitNode) {\n    return (state, dispatch) => {\n        let { $from, $to } = state.selection;\n        if (state.selection instanceof NodeSelection && state.selection.node.isBlock) {\n            if (!$from.parentOffset || !canSplit(state.doc, $from.pos))\n                return false;\n            if (dispatch)\n                dispatch(state.tr.split($from.pos).scrollIntoView());\n            return true;\n        }\n        if (!$from.parent.isBlock)\n            return false;\n        if (dispatch) {\n            let atEnd = $to.parentOffset == $to.parent.content.size;\n            let tr = state.tr;\n            if (state.selection instanceof TextSelection || state.selection instanceof AllSelection)\n                tr.deleteSelection();\n            let deflt = $from.depth == 0 ? null : defaultBlockAt($from.node(-1).contentMatchAt($from.indexAfter(-1)));\n            let splitType = splitNode && splitNode($to.parent, atEnd);\n            let types = splitType ? [splitType] : atEnd && deflt ? [{ type: deflt }] : undefined;\n            let can = canSplit(tr.doc, tr.mapping.map($from.pos), 1, types);\n            if (!types && !can && canSplit(tr.doc, tr.mapping.map($from.pos), 1, deflt ? [{ type: deflt }] : undefined)) {\n                if (deflt)\n                    types = [{ type: deflt }];\n                can = true;\n            }\n            if (can) {\n                tr.split(tr.mapping.map($from.pos), 1, types);\n                if (!atEnd && !$from.parentOffset && $from.parent.type != deflt) {\n                    let first = tr.mapping.map($from.before()), $first = tr.doc.resolve(first);\n                    if (deflt && $from.node(-1).canReplaceWith($first.index(), $first.index() + 1, deflt))\n                        tr.setNodeMarkup(tr.mapping.map($from.before()), deflt);\n                }\n            }\n            dispatch(tr.scrollIntoView());\n        }\n        return true;\n    };\n}\n/**\nSplit the parent block of the selection. If the selection is a text\nselection, also delete its content.\n*/\nconst splitBlock = splitBlockAs();\n/**\nActs like [`splitBlock`](https://prosemirror.net/docs/ref/#commands.splitBlock), but without\nresetting the set of active marks at the cursor.\n*/\nconst splitBlockKeepMarks = (state, dispatch) => {\n    return splitBlock(state, dispatch && (tr => {\n        let marks = state.storedMarks || (state.selection.$to.parentOffset && state.selection.$from.marks());\n        if (marks)\n            tr.ensureMarks(marks);\n        dispatch(tr);\n    }));\n};\n/**\nMove the selection to the node wrapping the current selection, if\nany. (Will not select the document node.)\n*/\nconst selectParentNode = (state, dispatch) => {\n    let { $from, to } = state.selection, pos;\n    let same = $from.sharedDepth(to);\n    if (same == 0)\n        return false;\n    pos = $from.before(same);\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, pos)));\n    return true;\n};\n/**\nSelect the whole document.\n*/\nconst selectAll = (state, dispatch) => {\n    if (dispatch)\n        dispatch(state.tr.setSelection(new AllSelection(state.doc)));\n    return true;\n};\nfunction joinMaybeClear(state, $pos, dispatch) {\n    let before = $pos.nodeBefore, after = $pos.nodeAfter, index = $pos.index();\n    if (!before || !after || !before.type.compatibleContent(after.type))\n        return false;\n    if (!before.content.size && $pos.parent.canReplace(index - 1, index)) {\n        if (dispatch)\n            dispatch(state.tr.delete($pos.pos - before.nodeSize, $pos.pos).scrollIntoView());\n        return true;\n    }\n    if (!$pos.parent.canReplace(index, index + 1) || !(after.isTextblock || canJoin(state.doc, $pos.pos)))\n        return false;\n    if (dispatch)\n        dispatch(state.tr\n            .clearIncompatible($pos.pos, before.type, before.contentMatchAt(before.childCount))\n            .join($pos.pos)\n            .scrollIntoView());\n    return true;\n}\nfunction deleteBarrier(state, $cut, dispatch) {\n    let before = $cut.nodeBefore, after = $cut.nodeAfter, conn, match;\n    if (before.type.spec.isolating || after.type.spec.isolating)\n        return false;\n    if (joinMaybeClear(state, $cut, dispatch))\n        return true;\n    let canDelAfter = $cut.parent.canReplace($cut.index(), $cut.index() + 1);\n    if (canDelAfter &&\n        (conn = (match = before.contentMatchAt(before.childCount)).findWrapping(after.type)) &&\n        match.matchType(conn[0] || after.type).validEnd) {\n        if (dispatch) {\n            let end = $cut.pos + after.nodeSize, wrap = Fragment.empty;\n            for (let i = conn.length - 1; i >= 0; i--)\n                wrap = Fragment.from(conn[i].create(null, wrap));\n            wrap = Fragment.from(before.copy(wrap));\n            let tr = state.tr.step(new ReplaceAroundStep($cut.pos - 1, end, $cut.pos, end, new Slice(wrap, 1, 0), conn.length, true));\n            let joinAt = end + 2 * conn.length;\n            if (canJoin(tr.doc, joinAt))\n                tr.join(joinAt);\n            dispatch(tr.scrollIntoView());\n        }\n        return true;\n    }\n    let selAfter = Selection.findFrom($cut, 1);\n    let range = selAfter && selAfter.$from.blockRange(selAfter.$to), target = range && liftTarget(range);\n    if (target != null && target >= $cut.depth) {\n        if (dispatch)\n            dispatch(state.tr.lift(range, target).scrollIntoView());\n        return true;\n    }\n    if (canDelAfter && textblockAt(after, \"start\", true) && textblockAt(before, \"end\")) {\n        let at = before, wrap = [];\n        for (;;) {\n            wrap.push(at);\n            if (at.isTextblock)\n                break;\n            at = at.lastChild;\n        }\n        let afterText = after, afterDepth = 1;\n        for (; !afterText.isTextblock; afterText = afterText.firstChild)\n            afterDepth++;\n        if (at.canReplace(at.childCount, at.childCount, afterText.content)) {\n            if (dispatch) {\n                let end = Fragment.empty;\n                for (let i = wrap.length - 1; i >= 0; i--)\n                    end = Fragment.from(wrap[i].copy(end));\n                let tr = state.tr.step(new ReplaceAroundStep($cut.pos - wrap.length, $cut.pos + after.nodeSize, $cut.pos + afterDepth, $cut.pos + after.nodeSize - afterDepth, new Slice(end, wrap.length, 0), 0, true));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction selectTextblockSide(side) {\n    return function (state, dispatch) {\n        let sel = state.selection, $pos = side < 0 ? sel.$from : sel.$to;\n        let depth = $pos.depth;\n        while ($pos.node(depth).isInline) {\n            if (!depth)\n                return false;\n            depth--;\n        }\n        if (!$pos.node(depth).isTextblock)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.setSelection(TextSelection.create(state.doc, side < 0 ? $pos.start(depth) : $pos.end(depth))));\n        return true;\n    };\n}\n/**\nMoves the cursor to the start of current text block.\n*/\nconst selectTextblockStart = selectTextblockSide(-1);\n/**\nMoves the cursor to the end of current text block.\n*/\nconst selectTextblockEnd = selectTextblockSide(1);\n// Parameterized commands\n/**\nWrap the selection in a node of the given type with the given\nattributes.\n*/\nfunction wrapIn(nodeType, attrs = null) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to), wrapping = range && findWrapping(range, nodeType, attrs);\n        if (!wrapping)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.wrap(range, wrapping).scrollIntoView());\n        return true;\n    };\n}\n/**\nReturns a command that tries to set the selected textblocks to the\ngiven node type with the given attributes.\n*/\nfunction setBlockType(nodeType, attrs = null) {\n    return function (state, dispatch) {\n        let applicable = false;\n        for (let i = 0; i < state.selection.ranges.length && !applicable; i++) {\n            let { $from: { pos: from }, $to: { pos: to } } = state.selection.ranges[i];\n            state.doc.nodesBetween(from, to, (node, pos) => {\n                if (applicable)\n                    return false;\n                if (!node.isTextblock || node.hasMarkup(nodeType, attrs))\n                    return;\n                if (node.type == nodeType) {\n                    applicable = true;\n                }\n                else {\n                    let $pos = state.doc.resolve(pos), index = $pos.index();\n                    applicable = $pos.parent.canReplaceWith(index, index + 1, nodeType);\n                }\n            });\n        }\n        if (!applicable)\n            return false;\n        if (dispatch) {\n            let tr = state.tr;\n            for (let i = 0; i < state.selection.ranges.length; i++) {\n                let { $from: { pos: from }, $to: { pos: to } } = state.selection.ranges[i];\n                tr.setBlockType(from, to, nodeType, attrs);\n            }\n            dispatch(tr.scrollIntoView());\n        }\n        return true;\n    };\n}\nfunction markApplies(doc, ranges, type) {\n    for (let i = 0; i < ranges.length; i++) {\n        let { $from, $to } = ranges[i];\n        let can = $from.depth == 0 ? doc.inlineContent && doc.type.allowsMarkType(type) : false;\n        doc.nodesBetween($from.pos, $to.pos, node => {\n            if (can)\n                return false;\n            can = node.inlineContent && node.type.allowsMarkType(type);\n        });\n        if (can)\n            return true;\n    }\n    return false;\n}\n/**\nCreate a command function that toggles the given mark with the\ngiven attributes. Will return `false` when the current selection\ndoesn't support that mark. This will remove the mark if any marks\nof that type exist in the selection, or add it otherwise. If the\nselection is empty, this applies to the [stored\nmarks](https://prosemirror.net/docs/ref/#state.EditorState.storedMarks) instead of a range of the\ndocument.\n*/\nfunction toggleMark(markType, attrs = null) {\n    return function (state, dispatch) {\n        let { empty, $cursor, ranges } = state.selection;\n        if ((empty && !$cursor) || !markApplies(state.doc, ranges, markType))\n            return false;\n        if (dispatch) {\n            if ($cursor) {\n                if (markType.isInSet(state.storedMarks || $cursor.marks()))\n                    dispatch(state.tr.removeStoredMark(markType));\n                else\n                    dispatch(state.tr.addStoredMark(markType.create(attrs)));\n            }\n            else {\n                let has = false, tr = state.tr;\n                for (let i = 0; !has && i < ranges.length; i++) {\n                    let { $from, $to } = ranges[i];\n                    has = state.doc.rangeHasMark($from.pos, $to.pos, markType);\n                }\n                for (let i = 0; i < ranges.length; i++) {\n                    let { $from, $to } = ranges[i];\n                    if (has) {\n                        tr.removeMark($from.pos, $to.pos, markType);\n                    }\n                    else {\n                        let from = $from.pos, to = $to.pos, start = $from.nodeAfter, end = $to.nodeBefore;\n                        let spaceStart = start && start.isText ? /^\\s*/.exec(start.text)[0].length : 0;\n                        let spaceEnd = end && end.isText ? /\\s*$/.exec(end.text)[0].length : 0;\n                        if (from + spaceStart < to) {\n                            from += spaceStart;\n                            to -= spaceEnd;\n                        }\n                        tr.addMark(from, to, markType.create(attrs));\n                    }\n                }\n                dispatch(tr.scrollIntoView());\n            }\n        }\n        return true;\n    };\n}\nfunction wrapDispatchForJoin(dispatch, isJoinable) {\n    return (tr) => {\n        if (!tr.isGeneric)\n            return dispatch(tr);\n        let ranges = [];\n        for (let i = 0; i < tr.mapping.maps.length; i++) {\n            let map = tr.mapping.maps[i];\n            for (let j = 0; j < ranges.length; j++)\n                ranges[j] = map.map(ranges[j]);\n            map.forEach((_s, _e, from, to) => ranges.push(from, to));\n        }\n        // Figure out which joinable points exist inside those ranges,\n        // by checking all node boundaries in their parent nodes.\n        let joinable = [];\n        for (let i = 0; i < ranges.length; i += 2) {\n            let from = ranges[i], to = ranges[i + 1];\n            let $from = tr.doc.resolve(from), depth = $from.sharedDepth(to), parent = $from.node(depth);\n            for (let index = $from.indexAfter(depth), pos = $from.after(depth + 1); pos <= to; ++index) {\n                let after = parent.maybeChild(index);\n                if (!after)\n                    break;\n                if (index && joinable.indexOf(pos) == -1) {\n                    let before = parent.child(index - 1);\n                    if (before.type == after.type && isJoinable(before, after))\n                        joinable.push(pos);\n                }\n                pos += after.nodeSize;\n            }\n        }\n        // Join the joinable points\n        joinable.sort((a, b) => a - b);\n        for (let i = joinable.length - 1; i >= 0; i--) {\n            if (canJoin(tr.doc, joinable[i]))\n                tr.join(joinable[i]);\n        }\n        dispatch(tr);\n    };\n}\n/**\nWrap a command so that, when it produces a transform that causes\ntwo joinable nodes to end up next to each other, those are joined.\nNodes are considered joinable when they are of the same type and\nwhen the `isJoinable` predicate returns true for them or, if an\narray of strings was passed, if their node type name is in that\narray.\n*/\nfunction autoJoin(command, isJoinable) {\n    let canJoin = Array.isArray(isJoinable) ? (node) => isJoinable.indexOf(node.type.name) > -1\n        : isJoinable;\n    return (state, dispatch, view) => command(state, dispatch && wrapDispatchForJoin(dispatch, canJoin), view);\n}\n/**\nCombine a number of command functions into a single function (which\ncalls them one by one until one returns true).\n*/\nfunction chainCommands(...commands) {\n    return function (state, dispatch, view) {\n        for (let i = 0; i < commands.length; i++)\n            if (commands[i](state, dispatch, view))\n                return true;\n        return false;\n    };\n}\nlet backspace = chainCommands(deleteSelection, joinBackward, selectNodeBackward);\nlet del = chainCommands(deleteSelection, joinForward, selectNodeForward);\n/**\nA basic keymap containing bindings not specific to any schema.\nBinds the following keys (when multiple commands are listed, they\nare chained with [`chainCommands`](https://prosemirror.net/docs/ref/#commands.chainCommands)):\n\n* **Enter** to `newlineInCode`, `createParagraphNear`, `liftEmptyBlock`, `splitBlock`\n* **Mod-Enter** to `exitCode`\n* **Backspace** and **Mod-Backspace** to `deleteSelection`, `joinBackward`, `selectNodeBackward`\n* **Delete** and **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n* **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n* **Mod-a** to `selectAll`\n*/\nconst pcBaseKeymap = {\n    \"Enter\": chainCommands(newlineInCode, createParagraphNear, liftEmptyBlock, splitBlock),\n    \"Mod-Enter\": exitCode,\n    \"Backspace\": backspace,\n    \"Mod-Backspace\": backspace,\n    \"Shift-Backspace\": backspace,\n    \"Delete\": del,\n    \"Mod-Delete\": del,\n    \"Mod-a\": selectAll\n};\n/**\nA copy of `pcBaseKeymap` that also binds **Ctrl-h** like Backspace,\n**Ctrl-d** like Delete, **Alt-Backspace** like Ctrl-Backspace, and\n**Ctrl-Alt-Backspace**, **Alt-Delete**, and **Alt-d** like\nCtrl-Delete.\n*/\nconst macBaseKeymap = {\n    \"Ctrl-h\": pcBaseKeymap[\"Backspace\"],\n    \"Alt-Backspace\": pcBaseKeymap[\"Mod-Backspace\"],\n    \"Ctrl-d\": pcBaseKeymap[\"Delete\"],\n    \"Ctrl-Alt-Backspace\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Alt-Delete\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Alt-d\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Ctrl-a\": selectTextblockStart,\n    \"Ctrl-e\": selectTextblockEnd\n};\nfor (let key in pcBaseKeymap)\n    macBaseKeymap[key] = pcBaseKeymap[key];\nconst mac = typeof navigator != \"undefined\" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform)\n    // @ts-ignore\n    : typeof os != \"undefined\" && os.platform ? os.platform() == \"darwin\" : false;\n/**\nDepending on the detected platform, this will hold\n[`pcBasekeymap`](https://prosemirror.net/docs/ref/#commands.pcBaseKeymap) or\n[`macBaseKeymap`](https://prosemirror.net/docs/ref/#commands.macBaseKeymap).\n*/\nconst baseKeymap = mac ? macBaseKeymap : pcBaseKeymap;\n\nexport { autoJoin, baseKeymap, chainCommands, createParagraphNear, deleteSelection, exitCode, joinBackward, joinDown, joinForward, joinTextblockBackward, joinTextblockForward, joinUp, lift, liftEmptyBlock, macBaseKeymap, newlineInCode, pcBaseKeymap, selectAll, selectNodeBackward, selectNodeForward, selectParentNode, selectTextblockEnd, selectTextblockStart, setBlockType, splitBlock, splitBlockAs, splitBlockKeepMarks, toggleMark, wrapIn };\n","import { findWrapping, ReplaceAroundStep, canSplit, liftTarget, canJoin } from 'prosemirror-transform';\nimport { NodeRange, Fragment, Slice } from 'prosemirror-model';\nimport { Selection } from 'prosemirror-state';\n\nconst olDOM = [\"ol\", 0], ulDOM = [\"ul\", 0], liDOM = [\"li\", 0];\n/**\nAn ordered list [node spec](https://prosemirror.net/docs/ref/#model.NodeSpec). Has a single\nattribute, `order`, which determines the number at which the list\nstarts counting, and defaults to 1. Represented as an `<ol>`\nelement.\n*/\nconst orderedList = {\n    attrs: { order: { default: 1 } },\n    parseDOM: [{ tag: \"ol\", getAttrs(dom) {\n                return { order: dom.hasAttribute(\"start\") ? +dom.getAttribute(\"start\") : 1 };\n            } }],\n    toDOM(node) {\n        return node.attrs.order == 1 ? olDOM : [\"ol\", { start: node.attrs.order }, 0];\n    }\n};\n/**\nA bullet list node spec, represented in the DOM as `<ul>`.\n*/\nconst bulletList = {\n    parseDOM: [{ tag: \"ul\" }],\n    toDOM() { return ulDOM; }\n};\n/**\nA list item (`<li>`) spec.\n*/\nconst listItem = {\n    parseDOM: [{ tag: \"li\" }],\n    toDOM() { return liDOM; },\n    defining: true\n};\nfunction add(obj, props) {\n    let copy = {};\n    for (let prop in obj)\n        copy[prop] = obj[prop];\n    for (let prop in props)\n        copy[prop] = props[prop];\n    return copy;\n}\n/**\nConvenience function for adding list-related node types to a map\nspecifying the nodes for a schema. Adds\n[`orderedList`](https://prosemirror.net/docs/ref/#schema-list.orderedList) as `\"ordered_list\"`,\n[`bulletList`](https://prosemirror.net/docs/ref/#schema-list.bulletList) as `\"bullet_list\"`, and\n[`listItem`](https://prosemirror.net/docs/ref/#schema-list.listItem) as `\"list_item\"`.\n\n`itemContent` determines the content expression for the list items.\nIf you want the commands defined in this module to apply to your\nlist structure, it should have a shape like `\"paragraph block*\"` or\n`\"paragraph (ordered_list | bullet_list)*\"`. `listGroup` can be\ngiven to assign a group name to the list node types, for example\n`\"block\"`.\n*/\nfunction addListNodes(nodes, itemContent, listGroup) {\n    return nodes.append({\n        ordered_list: add(orderedList, { content: \"list_item+\", group: listGroup }),\n        bullet_list: add(bulletList, { content: \"list_item+\", group: listGroup }),\n        list_item: add(listItem, { content: itemContent })\n    });\n}\n/**\nReturns a command function that wraps the selection in a list with\nthe given type an attributes. If `dispatch` is null, only return a\nvalue to indicate whether this is possible, but don't actually\nperform the change.\n*/\nfunction wrapInList(listType, attrs = null) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to), doJoin = false, outerRange = range;\n        if (!range)\n            return false;\n        // This is at the top of an existing list item\n        if (range.depth >= 2 && $from.node(range.depth - 1).type.compatibleContent(listType) && range.startIndex == 0) {\n            // Don't do anything if this is the top of the list\n            if ($from.index(range.depth - 1) == 0)\n                return false;\n            let $insert = state.doc.resolve(range.start - 2);\n            outerRange = new NodeRange($insert, $insert, range.depth);\n            if (range.endIndex < range.parent.childCount)\n                range = new NodeRange($from, state.doc.resolve($to.end(range.depth)), range.depth);\n            doJoin = true;\n        }\n        let wrap = findWrapping(outerRange, listType, attrs, range);\n        if (!wrap)\n            return false;\n        if (dispatch)\n            dispatch(doWrapInList(state.tr, range, wrap, doJoin, listType).scrollIntoView());\n        return true;\n    };\n}\nfunction doWrapInList(tr, range, wrappers, joinBefore, listType) {\n    let content = Fragment.empty;\n    for (let i = wrappers.length - 1; i >= 0; i--)\n        content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content));\n    tr.step(new ReplaceAroundStep(range.start - (joinBefore ? 2 : 0), range.end, range.start, range.end, new Slice(content, 0, 0), wrappers.length, true));\n    let found = 0;\n    for (let i = 0; i < wrappers.length; i++)\n        if (wrappers[i].type == listType)\n            found = i + 1;\n    let splitDepth = wrappers.length - found;\n    let splitPos = range.start + wrappers.length - (joinBefore ? 2 : 0), parent = range.parent;\n    for (let i = range.startIndex, e = range.endIndex, first = true; i < e; i++, first = false) {\n        if (!first && canSplit(tr.doc, splitPos, splitDepth)) {\n            tr.split(splitPos, splitDepth);\n            splitPos += 2 * splitDepth;\n        }\n        splitPos += parent.child(i).nodeSize;\n    }\n    return tr;\n}\n/**\nBuild a command that splits a non-empty textblock at the top level\nof a list item by also splitting that list item.\n*/\nfunction splitListItem(itemType, itemAttrs) {\n    return function (state, dispatch) {\n        let { $from, $to, node } = state.selection;\n        if ((node && node.isBlock) || $from.depth < 2 || !$from.sameParent($to))\n            return false;\n        let grandParent = $from.node(-1);\n        if (grandParent.type != itemType)\n            return false;\n        if ($from.parent.content.size == 0 && $from.node(-1).childCount == $from.indexAfter(-1)) {\n            // In an empty block. If this is a nested list, the wrapping\n            // list item should be split. Otherwise, bail out and let next\n            // command handle lifting.\n            if ($from.depth == 3 || $from.node(-3).type != itemType ||\n                $from.index(-2) != $from.node(-2).childCount - 1)\n                return false;\n            if (dispatch) {\n                let wrap = Fragment.empty;\n                let depthBefore = $from.index(-1) ? 1 : $from.index(-2) ? 2 : 3;\n                // Build a fragment containing empty versions of the structure\n                // from the outer list item to the parent node of the cursor\n                for (let d = $from.depth - depthBefore; d >= $from.depth - 3; d--)\n                    wrap = Fragment.from($from.node(d).copy(wrap));\n                let depthAfter = $from.indexAfter(-1) < $from.node(-2).childCount ? 1\n                    : $from.indexAfter(-2) < $from.node(-3).childCount ? 2 : 3;\n                // Add a second list item with an empty default start node\n                wrap = wrap.append(Fragment.from(itemType.createAndFill()));\n                let start = $from.before($from.depth - (depthBefore - 1));\n                let tr = state.tr.replace(start, $from.after(-depthAfter), new Slice(wrap, 4 - depthBefore, 0));\n                let sel = -1;\n                tr.doc.nodesBetween(start, tr.doc.content.size, (node, pos) => {\n                    if (sel > -1)\n                        return false;\n                    if (node.isTextblock && node.content.size == 0)\n                        sel = pos + 1;\n                });\n                if (sel > -1)\n                    tr.setSelection(Selection.near(tr.doc.resolve(sel)));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n        let nextType = $to.pos == $from.end() ? grandParent.contentMatchAt(0).defaultType : null;\n        let tr = state.tr.delete($from.pos, $to.pos);\n        let types = nextType ? [itemAttrs ? { type: itemType, attrs: itemAttrs } : null, { type: nextType }] : undefined;\n        if (!canSplit(tr.doc, $from.pos, 2, types))\n            return false;\n        if (dispatch)\n            dispatch(tr.split($from.pos, 2, types).scrollIntoView());\n        return true;\n    };\n}\n/**\nCreate a command to lift the list item around the selection up into\na wrapping list.\n*/\nfunction liftListItem(itemType) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to, node => node.childCount > 0 && node.firstChild.type == itemType);\n        if (!range)\n            return false;\n        if (!dispatch)\n            return true;\n        if ($from.node(range.depth - 1).type == itemType) // Inside a parent list\n            return liftToOuterList(state, dispatch, itemType, range);\n        else // Outer list node\n            return liftOutOfList(state, dispatch, range);\n    };\n}\nfunction liftToOuterList(state, dispatch, itemType, range) {\n    let tr = state.tr, end = range.end, endOfList = range.$to.end(range.depth);\n    if (end < endOfList) {\n        // There are siblings after the lifted items, which must become\n        // children of the last item\n        tr.step(new ReplaceAroundStep(end - 1, endOfList, end, endOfList, new Slice(Fragment.from(itemType.create(null, range.parent.copy())), 1, 0), 1, true));\n        range = new NodeRange(tr.doc.resolve(range.$from.pos), tr.doc.resolve(endOfList), range.depth);\n    }\n    const target = liftTarget(range);\n    if (target == null)\n        return false;\n    tr.lift(range, target);\n    let after = tr.mapping.map(end, -1) - 1;\n    if (canJoin(tr.doc, after))\n        tr.join(after);\n    dispatch(tr.scrollIntoView());\n    return true;\n}\nfunction liftOutOfList(state, dispatch, range) {\n    let tr = state.tr, list = range.parent;\n    // Merge the list items into a single big item\n    for (let pos = range.end, i = range.endIndex - 1, e = range.startIndex; i > e; i--) {\n        pos -= list.child(i).nodeSize;\n        tr.delete(pos - 1, pos + 1);\n    }\n    let $start = tr.doc.resolve(range.start), item = $start.nodeAfter;\n    if (tr.mapping.map(range.end) != range.start + $start.nodeAfter.nodeSize)\n        return false;\n    let atStart = range.startIndex == 0, atEnd = range.endIndex == list.childCount;\n    let parent = $start.node(-1), indexBefore = $start.index(-1);\n    if (!parent.canReplace(indexBefore + (atStart ? 0 : 1), indexBefore + 1, item.content.append(atEnd ? Fragment.empty : Fragment.from(list))))\n        return false;\n    let start = $start.pos, end = start + item.nodeSize;\n    // Strip off the surrounding list. At the sides where we're not at\n    // the end of the list, the existing list is closed. At sides where\n    // this is the end, it is overwritten to its end.\n    tr.step(new ReplaceAroundStep(start - (atStart ? 1 : 0), end + (atEnd ? 1 : 0), start + 1, end - 1, new Slice((atStart ? Fragment.empty : Fragment.from(list.copy(Fragment.empty)))\n        .append(atEnd ? Fragment.empty : Fragment.from(list.copy(Fragment.empty))), atStart ? 0 : 1, atEnd ? 0 : 1), atStart ? 0 : 1));\n    dispatch(tr.scrollIntoView());\n    return true;\n}\n/**\nCreate a command to sink the list item around the selection down\ninto an inner list.\n*/\nfunction sinkListItem(itemType) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to, node => node.childCount > 0 && node.firstChild.type == itemType);\n        if (!range)\n            return false;\n        let startIndex = range.startIndex;\n        if (startIndex == 0)\n            return false;\n        let parent = range.parent, nodeBefore = parent.child(startIndex - 1);\n        if (nodeBefore.type != itemType)\n            return false;\n        if (dispatch) {\n            let nestedBefore = nodeBefore.lastChild && nodeBefore.lastChild.type == parent.type;\n            let inner = Fragment.from(nestedBefore ? itemType.create() : null);\n            let slice = new Slice(Fragment.from(itemType.create(null, Fragment.from(parent.type.create(null, inner)))), nestedBefore ? 3 : 1, 0);\n            let before = range.start, after = range.end;\n            dispatch(state.tr.step(new ReplaceAroundStep(before - (nestedBefore ? 3 : 1), after, before, after, slice, 1, true))\n                .scrollIntoView());\n        }\n        return true;\n    };\n}\n\nexport { addListNodes, bulletList, liftListItem, listItem, orderedList, sinkListItem, splitListItem, wrapInList };\n","import { Plugin, PluginKey, TextSelection, Selection, NodeSelection, EditorState } from '@tiptap/pm/state';\nimport { EditorView } from '@tiptap/pm/view';\nimport { keymap } from '@tiptap/pm/keymap';\nimport { Schema, Fragment, DOMParser, DOMSerializer, Node as Node$1, Slice } from '@tiptap/pm/model';\nimport { liftTarget, ReplaceStep, ReplaceAroundStep, joinPoint, Transform, canSplit, canJoin, findWrapping } from '@tiptap/pm/transform';\nimport { createParagraphNear as createParagraphNear$1, deleteSelection as deleteSelection$1, exitCode as exitCode$1, joinUp as joinUp$1, joinDown as joinDown$1, joinBackward as joinBackward$1, joinForward as joinForward$1, lift as lift$1, liftEmptyBlock as liftEmptyBlock$1, newlineInCode as newlineInCode$1, selectNodeBackward as selectNodeBackward$1, selectNodeForward as selectNodeForward$1, selectParentNode as selectParentNode$1, selectTextblockEnd as selectTextblockEnd$1, selectTextblockStart as selectTextblockStart$1, setBlockType, wrapIn as wrapIn$1 } from '@tiptap/pm/commands';\nimport { liftListItem as liftListItem$1, sinkListItem as sinkListItem$1, wrapInList as wrapInList$1 } from '@tiptap/pm/schema-list';\n\nfunction createChainableState(config) {\r\n    const { state, transaction } = config;\r\n    let { selection } = transaction;\r\n    let { doc } = transaction;\r\n    let { storedMarks } = transaction;\r\n    return {\r\n        ...state,\r\n        apply: state.apply.bind(state),\r\n        applyTransaction: state.applyTransaction.bind(state),\r\n        filterTransaction: state.filterTransaction,\r\n        plugins: state.plugins,\r\n        schema: state.schema,\r\n        reconfigure: state.reconfigure.bind(state),\r\n        toJSON: state.toJSON.bind(state),\r\n        get storedMarks() {\r\n            return storedMarks;\r\n        },\r\n        get selection() {\r\n            return selection;\r\n        },\r\n        get doc() {\r\n            return doc;\r\n        },\r\n        get tr() {\r\n            selection = transaction.selection;\r\n            doc = transaction.doc;\r\n            storedMarks = transaction.storedMarks;\r\n            return transaction;\r\n        },\r\n    };\r\n}\n\nclass CommandManager {\r\n    constructor(props) {\r\n        this.editor = props.editor;\r\n        this.rawCommands = this.editor.extensionManager.commands;\r\n        this.customState = props.state;\r\n    }\r\n    get hasCustomState() {\r\n        return !!this.customState;\r\n    }\r\n    get state() {\r\n        return this.customState || this.editor.state;\r\n    }\r\n    get commands() {\r\n        const { rawCommands, editor, state } = this;\r\n        const { view } = editor;\r\n        const { tr } = state;\r\n        const props = this.buildProps(tr);\r\n        return Object.fromEntries(Object.entries(rawCommands).map(([name, command]) => {\r\n            const method = (...args) => {\r\n                const callback = command(...args)(props);\r\n                if (!tr.getMeta('preventDispatch') && !this.hasCustomState) {\r\n                    view.dispatch(tr);\r\n                }\r\n                return callback;\r\n            };\r\n            return [name, method];\r\n        }));\r\n    }\r\n    get chain() {\r\n        return () => this.createChain();\r\n    }\r\n    get can() {\r\n        return () => this.createCan();\r\n    }\r\n    createChain(startTr, shouldDispatch = true) {\r\n        const { rawCommands, editor, state } = this;\r\n        const { view } = editor;\r\n        const callbacks = [];\r\n        const hasStartTransaction = !!startTr;\r\n        const tr = startTr || state.tr;\r\n        const run = () => {\r\n            if (!hasStartTransaction\r\n                && shouldDispatch\r\n                && !tr.getMeta('preventDispatch')\r\n                && !this.hasCustomState) {\r\n                view.dispatch(tr);\r\n            }\r\n            return callbacks.every(callback => callback === true);\r\n        };\r\n        const chain = {\r\n            ...Object.fromEntries(Object.entries(rawCommands).map(([name, command]) => {\r\n                const chainedCommand = (...args) => {\r\n                    const props = this.buildProps(tr, shouldDispatch);\r\n                    const callback = command(...args)(props);\r\n                    callbacks.push(callback);\r\n                    return chain;\r\n                };\r\n                return [name, chainedCommand];\r\n            })),\r\n            run,\r\n        };\r\n        return chain;\r\n    }\r\n    createCan(startTr) {\r\n        const { rawCommands, state } = this;\r\n        const dispatch = false;\r\n        const tr = startTr || state.tr;\r\n        const props = this.buildProps(tr, dispatch);\r\n        const formattedCommands = Object.fromEntries(Object.entries(rawCommands).map(([name, command]) => {\r\n            return [name, (...args) => command(...args)({ ...props, dispatch: undefined })];\r\n        }));\r\n        return {\r\n            ...formattedCommands,\r\n            chain: () => this.createChain(tr, dispatch),\r\n        };\r\n    }\r\n    buildProps(tr, shouldDispatch = true) {\r\n        const { rawCommands, editor, state } = this;\r\n        const { view } = editor;\r\n        const props = {\r\n            tr,\r\n            editor,\r\n            view,\r\n            state: createChainableState({\r\n                state,\r\n                transaction: tr,\r\n            }),\r\n            dispatch: shouldDispatch ? () => undefined : undefined,\r\n            chain: () => this.createChain(tr, shouldDispatch),\r\n            can: () => this.createCan(tr),\r\n            get commands() {\r\n                return Object.fromEntries(Object.entries(rawCommands).map(([name, command]) => {\r\n                    return [name, (...args) => command(...args)(props)];\r\n                }));\r\n            },\r\n        };\r\n        return props;\r\n    }\r\n}\n\nclass EventEmitter {\r\n    constructor() {\r\n        this.callbacks = {};\r\n    }\r\n    on(event, fn) {\r\n        if (!this.callbacks[event]) {\r\n            this.callbacks[event] = [];\r\n        }\r\n        this.callbacks[event].push(fn);\r\n        return this;\r\n    }\r\n    emit(event, ...args) {\r\n        const callbacks = this.callbacks[event];\r\n        if (callbacks) {\r\n            callbacks.forEach(callback => callback.apply(this, args));\r\n        }\r\n        return this;\r\n    }\r\n    off(event, fn) {\r\n        const callbacks = this.callbacks[event];\r\n        if (callbacks) {\r\n            if (fn) {\r\n                this.callbacks[event] = callbacks.filter(callback => callback !== fn);\r\n            }\r\n            else {\r\n                delete this.callbacks[event];\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    removeAllListeners() {\r\n        this.callbacks = {};\r\n    }\r\n}\n\nfunction getExtensionField(extension, field, context) {\r\n    if (extension.config[field] === undefined && extension.parent) {\r\n        return getExtensionField(extension.parent, field, context);\r\n    }\r\n    if (typeof extension.config[field] === 'function') {\r\n        const value = extension.config[field].bind({\r\n            ...context,\r\n            parent: extension.parent\r\n                ? getExtensionField(extension.parent, field, context)\r\n                : null,\r\n        });\r\n        return value;\r\n    }\r\n    return extension.config[field];\r\n}\n\nfunction splitExtensions(extensions) {\r\n    const baseExtensions = extensions.filter(extension => extension.type === 'extension');\r\n    const nodeExtensions = extensions.filter(extension => extension.type === 'node');\r\n    const markExtensions = extensions.filter(extension => extension.type === 'mark');\r\n    return {\r\n        baseExtensions,\r\n        nodeExtensions,\r\n        markExtensions,\r\n    };\r\n}\n\n/**\r\n * Get a list of all extension attributes defined in `addAttribute` and `addGlobalAttribute`.\r\n * @param extensions List of extensions\r\n */\r\nfunction getAttributesFromExtensions(extensions) {\r\n    const extensionAttributes = [];\r\n    const { nodeExtensions, markExtensions } = splitExtensions(extensions);\r\n    const nodeAndMarkExtensions = [...nodeExtensions, ...markExtensions];\r\n    const defaultAttribute = {\r\n        default: null,\r\n        rendered: true,\r\n        renderHTML: null,\r\n        parseHTML: null,\r\n        keepOnSplit: true,\r\n        isRequired: false,\r\n    };\r\n    extensions.forEach(extension => {\r\n        const context = {\r\n            name: extension.name,\r\n            options: extension.options,\r\n            storage: extension.storage,\r\n        };\r\n        const addGlobalAttributes = getExtensionField(extension, 'addGlobalAttributes', context);\r\n        if (!addGlobalAttributes) {\r\n            return;\r\n        }\r\n        // TODO: remove `as GlobalAttributes`\r\n        const globalAttributes = addGlobalAttributes();\r\n        globalAttributes.forEach(globalAttribute => {\r\n            globalAttribute.types.forEach(type => {\r\n                Object\r\n                    .entries(globalAttribute.attributes)\r\n                    .forEach(([name, attribute]) => {\r\n                    extensionAttributes.push({\r\n                        type,\r\n                        name,\r\n                        attribute: {\r\n                            ...defaultAttribute,\r\n                            ...attribute,\r\n                        },\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    });\r\n    nodeAndMarkExtensions.forEach(extension => {\r\n        const context = {\r\n            name: extension.name,\r\n            options: extension.options,\r\n            storage: extension.storage,\r\n        };\r\n        const addAttributes = getExtensionField(extension, 'addAttributes', context);\r\n        if (!addAttributes) {\r\n            return;\r\n        }\r\n        // TODO: remove `as Attributes`\r\n        const attributes = addAttributes();\r\n        Object\r\n            .entries(attributes)\r\n            .forEach(([name, attribute]) => {\r\n            const mergedAttr = {\r\n                ...defaultAttribute,\r\n                ...attribute,\r\n            };\r\n            if (typeof (mergedAttr === null || mergedAttr === void 0 ? void 0 : mergedAttr.default) === 'function') {\r\n                mergedAttr.default = mergedAttr.default();\r\n            }\r\n            if ((mergedAttr === null || mergedAttr === void 0 ? void 0 : mergedAttr.isRequired) && (mergedAttr === null || mergedAttr === void 0 ? void 0 : mergedAttr.default) === undefined) {\r\n                delete mergedAttr.default;\r\n            }\r\n            extensionAttributes.push({\r\n                type: extension.name,\r\n                name,\r\n                attribute: mergedAttr,\r\n            });\r\n        });\r\n    });\r\n    return extensionAttributes;\r\n}\n\nfunction getNodeType(nameOrType, schema) {\r\n    if (typeof nameOrType === 'string') {\r\n        if (!schema.nodes[nameOrType]) {\r\n            throw Error(`There is no node type named '${nameOrType}'. Maybe you forgot to add the extension?`);\r\n        }\r\n        return schema.nodes[nameOrType];\r\n    }\r\n    return nameOrType;\r\n}\n\nfunction mergeAttributes(...objects) {\r\n    return objects\r\n        .filter(item => !!item)\r\n        .reduce((items, item) => {\r\n        const mergedAttributes = { ...items };\r\n        Object.entries(item).forEach(([key, value]) => {\r\n            const exists = mergedAttributes[key];\r\n            if (!exists) {\r\n                mergedAttributes[key] = value;\r\n                return;\r\n            }\r\n            if (key === 'class') {\r\n                const valueClasses = value ? value.split(' ') : [];\r\n                const existingClasses = mergedAttributes[key] ? mergedAttributes[key].split(' ') : [];\r\n                const insertClasses = valueClasses.filter(valueClass => !existingClasses.includes(valueClass));\r\n                mergedAttributes[key] = [...existingClasses, ...insertClasses].join(' ');\r\n            }\r\n            else if (key === 'style') {\r\n                mergedAttributes[key] = [mergedAttributes[key], value].join('; ');\r\n            }\r\n            else {\r\n                mergedAttributes[key] = value;\r\n            }\r\n        });\r\n        return mergedAttributes;\r\n    }, {});\r\n}\n\nfunction getRenderedAttributes(nodeOrMark, extensionAttributes) {\r\n    return extensionAttributes\r\n        .filter(item => item.attribute.rendered)\r\n        .map(item => {\r\n        if (!item.attribute.renderHTML) {\r\n            return {\r\n                [item.name]: nodeOrMark.attrs[item.name],\r\n            };\r\n        }\r\n        return item.attribute.renderHTML(nodeOrMark.attrs) || {};\r\n    })\r\n        .reduce((attributes, attribute) => mergeAttributes(attributes, attribute), {});\r\n}\n\nfunction isFunction(value) {\r\n    return typeof value === 'function';\r\n}\n\n/**\r\n * Optionally calls `value` as a function.\r\n * Otherwise it is returned directly.\r\n * @param value Function or any value.\r\n * @param context Optional context to bind to function.\r\n * @param props Optional props to pass to function.\r\n */\r\nfunction callOrReturn(value, context = undefined, ...props) {\r\n    if (isFunction(value)) {\r\n        if (context) {\r\n            return value.bind(context)(...props);\r\n        }\r\n        return value(...props);\r\n    }\r\n    return value;\r\n}\n\nfunction isEmptyObject(value = {}) {\r\n    return Object.keys(value).length === 0 && value.constructor === Object;\r\n}\n\nfunction fromString(value) {\r\n    if (typeof value !== 'string') {\r\n        return value;\r\n    }\r\n    if (value.match(/^[+-]?(?:\\d*\\.)?\\d+$/)) {\r\n        return Number(value);\r\n    }\r\n    if (value === 'true') {\r\n        return true;\r\n    }\r\n    if (value === 'false') {\r\n        return false;\r\n    }\r\n    return value;\r\n}\n\n/**\r\n * This function merges extension attributes into parserule attributes (`attrs` or `getAttrs`).\r\n * Cancels when `getAttrs` returned `false`.\r\n * @param parseRule ProseMirror ParseRule\r\n * @param extensionAttributes List of attributes to inject\r\n */\r\nfunction injectExtensionAttributesToParseRule(parseRule, extensionAttributes) {\r\n    if (parseRule.style) {\r\n        return parseRule;\r\n    }\r\n    return {\r\n        ...parseRule,\r\n        getAttrs: node => {\r\n            const oldAttributes = parseRule.getAttrs ? parseRule.getAttrs(node) : parseRule.attrs;\r\n            if (oldAttributes === false) {\r\n                return false;\r\n            }\r\n            const newAttributes = extensionAttributes.reduce((items, item) => {\r\n                const value = item.attribute.parseHTML\r\n                    ? item.attribute.parseHTML(node)\r\n                    : fromString(node.getAttribute(item.name));\r\n                if (value === null || value === undefined) {\r\n                    return items;\r\n                }\r\n                return {\r\n                    ...items,\r\n                    [item.name]: value,\r\n                };\r\n            }, {});\r\n            return { ...oldAttributes, ...newAttributes };\r\n        },\r\n    };\r\n}\n\nfunction cleanUpSchemaItem(data) {\r\n    return Object.fromEntries(\r\n    // @ts-ignore\r\n    Object.entries(data).filter(([key, value]) => {\r\n        if (key === 'attrs' && isEmptyObject(value)) {\r\n            return false;\r\n        }\r\n        return value !== null && value !== undefined;\r\n    }));\r\n}\r\nfunction getSchemaByResolvedExtensions(extensions, editor) {\r\n    var _a;\r\n    const allAttributes = getAttributesFromExtensions(extensions);\r\n    const { nodeExtensions, markExtensions } = splitExtensions(extensions);\r\n    const topNode = (_a = nodeExtensions.find(extension => getExtensionField(extension, 'topNode'))) === null || _a === void 0 ? void 0 : _a.name;\r\n    const nodes = Object.fromEntries(nodeExtensions.map(extension => {\r\n        const extensionAttributes = allAttributes.filter(attribute => attribute.type === extension.name);\r\n        const context = {\r\n            name: extension.name,\r\n            options: extension.options,\r\n            storage: extension.storage,\r\n            editor,\r\n        };\r\n        const extraNodeFields = extensions.reduce((fields, e) => {\r\n            const extendNodeSchema = getExtensionField(e, 'extendNodeSchema', context);\r\n            return {\r\n                ...fields,\r\n                ...(extendNodeSchema ? extendNodeSchema(extension) : {}),\r\n            };\r\n        }, {});\r\n        const schema = cleanUpSchemaItem({\r\n            ...extraNodeFields,\r\n            content: callOrReturn(getExtensionField(extension, 'content', context)),\r\n            marks: callOrReturn(getExtensionField(extension, 'marks', context)),\r\n            group: callOrReturn(getExtensionField(extension, 'group', context)),\r\n            inline: callOrReturn(getExtensionField(extension, 'inline', context)),\r\n            atom: callOrReturn(getExtensionField(extension, 'atom', context)),\r\n            selectable: callOrReturn(getExtensionField(extension, 'selectable', context)),\r\n            draggable: callOrReturn(getExtensionField(extension, 'draggable', context)),\r\n            code: callOrReturn(getExtensionField(extension, 'code', context)),\r\n            defining: callOrReturn(getExtensionField(extension, 'defining', context)),\r\n            isolating: callOrReturn(getExtensionField(extension, 'isolating', context)),\r\n            attrs: Object.fromEntries(extensionAttributes.map(extensionAttribute => {\r\n                var _a;\r\n                return [extensionAttribute.name, { default: (_a = extensionAttribute === null || extensionAttribute === void 0 ? void 0 : extensionAttribute.attribute) === null || _a === void 0 ? void 0 : _a.default }];\r\n            })),\r\n        });\r\n        const parseHTML = callOrReturn(getExtensionField(extension, 'parseHTML', context));\r\n        if (parseHTML) {\r\n            schema.parseDOM = parseHTML.map(parseRule => injectExtensionAttributesToParseRule(parseRule, extensionAttributes));\r\n        }\r\n        const renderHTML = getExtensionField(extension, 'renderHTML', context);\r\n        if (renderHTML) {\r\n            schema.toDOM = node => renderHTML({\r\n                node,\r\n                HTMLAttributes: getRenderedAttributes(node, extensionAttributes),\r\n            });\r\n        }\r\n        const renderText = getExtensionField(extension, 'renderText', context);\r\n        if (renderText) {\r\n            schema.toText = renderText;\r\n        }\r\n        return [extension.name, schema];\r\n    }));\r\n    const marks = Object.fromEntries(markExtensions.map(extension => {\r\n        const extensionAttributes = allAttributes.filter(attribute => attribute.type === extension.name);\r\n        const context = {\r\n            name: extension.name,\r\n            options: extension.options,\r\n            storage: extension.storage,\r\n            editor,\r\n        };\r\n        const extraMarkFields = extensions.reduce((fields, e) => {\r\n            const extendMarkSchema = getExtensionField(e, 'extendMarkSchema', context);\r\n            return {\r\n                ...fields,\r\n                ...(extendMarkSchema ? extendMarkSchema(extension) : {}),\r\n            };\r\n        }, {});\r\n        const schema = cleanUpSchemaItem({\r\n            ...extraMarkFields,\r\n            inclusive: callOrReturn(getExtensionField(extension, 'inclusive', context)),\r\n            excludes: callOrReturn(getExtensionField(extension, 'excludes', context)),\r\n            group: callOrReturn(getExtensionField(extension, 'group', context)),\r\n            spanning: callOrReturn(getExtensionField(extension, 'spanning', context)),\r\n            code: callOrReturn(getExtensionField(extension, 'code', context)),\r\n            attrs: Object.fromEntries(extensionAttributes.map(extensionAttribute => {\r\n                var _a;\r\n                return [extensionAttribute.name, { default: (_a = extensionAttribute === null || extensionAttribute === void 0 ? void 0 : extensionAttribute.attribute) === null || _a === void 0 ? void 0 : _a.default }];\r\n            })),\r\n        });\r\n        const parseHTML = callOrReturn(getExtensionField(extension, 'parseHTML', context));\r\n        if (parseHTML) {\r\n            schema.parseDOM = parseHTML.map(parseRule => injectExtensionAttributesToParseRule(parseRule, extensionAttributes));\r\n        }\r\n        const renderHTML = getExtensionField(extension, 'renderHTML', context);\r\n        if (renderHTML) {\r\n            schema.toDOM = mark => renderHTML({\r\n                mark,\r\n                HTMLAttributes: getRenderedAttributes(mark, extensionAttributes),\r\n            });\r\n        }\r\n        return [extension.name, schema];\r\n    }));\r\n    return new Schema({\r\n        topNode,\r\n        nodes,\r\n        marks,\r\n    });\r\n}\n\nfunction getSchemaTypeByName(name, schema) {\r\n    return schema.nodes[name] || schema.marks[name] || null;\r\n}\n\nfunction isExtensionRulesEnabled(extension, enabled) {\r\n    if (Array.isArray(enabled)) {\r\n        return enabled.some(enabledExtension => {\r\n            const name = typeof enabledExtension === 'string'\r\n                ? enabledExtension\r\n                : enabledExtension.name;\r\n            return name === extension.name;\r\n        });\r\n    }\r\n    return enabled;\r\n}\n\nconst getTextContentFromNodes = ($from, maxMatch = 500) => {\r\n    let textBefore = '';\r\n    const sliceEndPos = $from.parentOffset;\r\n    $from.parent.nodesBetween(Math.max(0, sliceEndPos - maxMatch), sliceEndPos, (node, pos, parent, index) => {\r\n        var _a, _b;\r\n        const chunk = ((_b = (_a = node.type.spec).toText) === null || _b === void 0 ? void 0 : _b.call(_a, {\r\n            node,\r\n            pos,\r\n            parent,\r\n            index,\r\n        }))\r\n            || node.textContent\r\n            || '%leaf%';\r\n        textBefore += chunk.slice(0, Math.max(0, sliceEndPos - pos));\r\n    });\r\n    return textBefore;\r\n};\n\nfunction isRegExp(value) {\r\n    return Object.prototype.toString.call(value) === '[object RegExp]';\r\n}\n\nclass InputRule {\r\n    constructor(config) {\r\n        this.find = config.find;\r\n        this.handler = config.handler;\r\n    }\r\n}\r\nconst inputRuleMatcherHandler = (text, find) => {\r\n    if (isRegExp(find)) {\r\n        return find.exec(text);\r\n    }\r\n    const inputRuleMatch = find(text);\r\n    if (!inputRuleMatch) {\r\n        return null;\r\n    }\r\n    const result = [inputRuleMatch.text];\r\n    result.index = inputRuleMatch.index;\r\n    result.input = text;\r\n    result.data = inputRuleMatch.data;\r\n    if (inputRuleMatch.replaceWith) {\r\n        if (!inputRuleMatch.text.includes(inputRuleMatch.replaceWith)) {\r\n            console.warn('[tiptap warn]: \"inputRuleMatch.replaceWith\" must be part of \"inputRuleMatch.text\".');\r\n        }\r\n        result.push(inputRuleMatch.replaceWith);\r\n    }\r\n    return result;\r\n};\r\nfunction run$1(config) {\r\n    var _a;\r\n    const { editor, from, to, text, rules, plugin, } = config;\r\n    const { view } = editor;\r\n    if (view.composing) {\r\n        return false;\r\n    }\r\n    const $from = view.state.doc.resolve(from);\r\n    if (\r\n    // check for code node\r\n    $from.parent.type.spec.code\r\n        // check for code mark\r\n        || !!((_a = ($from.nodeBefore || $from.nodeAfter)) === null || _a === void 0 ? void 0 : _a.marks.find(mark => mark.type.spec.code))) {\r\n        return false;\r\n    }\r\n    let matched = false;\r\n    const textBefore = getTextContentFromNodes($from) + text;\r\n    rules.forEach(rule => {\r\n        if (matched) {\r\n            return;\r\n        }\r\n        const match = inputRuleMatcherHandler(textBefore, rule.find);\r\n        if (!match) {\r\n            return;\r\n        }\r\n        const tr = view.state.tr;\r\n        const state = createChainableState({\r\n            state: view.state,\r\n            transaction: tr,\r\n        });\r\n        const range = {\r\n            from: from - (match[0].length - text.length),\r\n            to,\r\n        };\r\n        const { commands, chain, can } = new CommandManager({\r\n            editor,\r\n            state,\r\n        });\r\n        const handler = rule.handler({\r\n            state,\r\n            range,\r\n            match,\r\n            commands,\r\n            chain,\r\n            can,\r\n        });\r\n        // stop if there are no changes\r\n        if (handler === null || !tr.steps.length) {\r\n            return;\r\n        }\r\n        // store transform as meta data\r\n        // so we can undo input rules within the `undoInputRules` command\r\n        tr.setMeta(plugin, {\r\n            transform: tr,\r\n            from,\r\n            to,\r\n            text,\r\n        });\r\n        view.dispatch(tr);\r\n        matched = true;\r\n    });\r\n    return matched;\r\n}\r\n/**\r\n * Create an input rules plugin. When enabled, it will cause text\r\n * input that matches any of the given rules to trigger the rule’s\r\n * action.\r\n */\r\nfunction inputRulesPlugin(props) {\r\n    const { editor, rules } = props;\r\n    const plugin = new Plugin({\r\n        state: {\r\n            init() {\r\n                return null;\r\n            },\r\n            apply(tr, prev) {\r\n                const stored = tr.getMeta(plugin);\r\n                if (stored) {\r\n                    return stored;\r\n                }\r\n                return tr.selectionSet || tr.docChanged ? null : prev;\r\n            },\r\n        },\r\n        props: {\r\n            handleTextInput(view, from, to, text) {\r\n                return run$1({\r\n                    editor,\r\n                    from,\r\n                    to,\r\n                    text,\r\n                    rules,\r\n                    plugin,\r\n                });\r\n            },\r\n            handleDOMEvents: {\r\n                compositionend: view => {\r\n                    setTimeout(() => {\r\n                        const { $cursor } = view.state.selection;\r\n                        if ($cursor) {\r\n                            run$1({\r\n                                editor,\r\n                                from: $cursor.pos,\r\n                                to: $cursor.pos,\r\n                                text: '',\r\n                                rules,\r\n                                plugin,\r\n                            });\r\n                        }\r\n                    });\r\n                    return false;\r\n                },\r\n            },\r\n            // add support for input rules to trigger on enter\r\n            // this is useful for example for code blocks\r\n            handleKeyDown(view, event) {\r\n                if (event.key !== 'Enter') {\r\n                    return false;\r\n                }\r\n                const { $cursor } = view.state.selection;\r\n                if ($cursor) {\r\n                    return run$1({\r\n                        editor,\r\n                        from: $cursor.pos,\r\n                        to: $cursor.pos,\r\n                        text: '\\n',\r\n                        rules,\r\n                        plugin,\r\n                    });\r\n                }\r\n                return false;\r\n            },\r\n        },\r\n        // @ts-ignore\r\n        isInputRules: true,\r\n    });\r\n    return plugin;\r\n}\n\nfunction isNumber(value) {\r\n    return typeof value === 'number';\r\n}\n\nclass PasteRule {\r\n    constructor(config) {\r\n        this.find = config.find;\r\n        this.handler = config.handler;\r\n    }\r\n}\r\nconst pasteRuleMatcherHandler = (text, find) => {\r\n    if (isRegExp(find)) {\r\n        return [...text.matchAll(find)];\r\n    }\r\n    const matches = find(text);\r\n    if (!matches) {\r\n        return [];\r\n    }\r\n    return matches.map(pasteRuleMatch => {\r\n        const result = [pasteRuleMatch.text];\r\n        result.index = pasteRuleMatch.index;\r\n        result.input = text;\r\n        result.data = pasteRuleMatch.data;\r\n        if (pasteRuleMatch.replaceWith) {\r\n            if (!pasteRuleMatch.text.includes(pasteRuleMatch.replaceWith)) {\r\n                console.warn('[tiptap warn]: \"pasteRuleMatch.replaceWith\" must be part of \"pasteRuleMatch.text\".');\r\n            }\r\n            result.push(pasteRuleMatch.replaceWith);\r\n        }\r\n        return result;\r\n    });\r\n};\r\nfunction run(config) {\r\n    const { editor, state, from, to, rule, pasteEvent, dropEvent, } = config;\r\n    const { commands, chain, can } = new CommandManager({\r\n        editor,\r\n        state,\r\n    });\r\n    const handlers = [];\r\n    state.doc.nodesBetween(from, to, (node, pos) => {\r\n        if (!node.isTextblock || node.type.spec.code) {\r\n            return;\r\n        }\r\n        const resolvedFrom = Math.max(from, pos);\r\n        const resolvedTo = Math.min(to, pos + node.content.size);\r\n        const textToMatch = node.textBetween(resolvedFrom - pos, resolvedTo - pos, undefined, '\\ufffc');\r\n        const matches = pasteRuleMatcherHandler(textToMatch, rule.find);\r\n        matches.forEach(match => {\r\n            if (match.index === undefined) {\r\n                return;\r\n            }\r\n            const start = resolvedFrom + match.index + 1;\r\n            const end = start + match[0].length;\r\n            const range = {\r\n                from: state.tr.mapping.map(start),\r\n                to: state.tr.mapping.map(end),\r\n            };\r\n            const handler = rule.handler({\r\n                state,\r\n                range,\r\n                match,\r\n                commands,\r\n                chain,\r\n                can,\r\n                pasteEvent,\r\n                dropEvent,\r\n            });\r\n            handlers.push(handler);\r\n        });\r\n    });\r\n    const success = handlers.every(handler => handler !== null);\r\n    return success;\r\n}\r\n/**\r\n * Create an paste rules plugin. When enabled, it will cause pasted\r\n * text that matches any of the given rules to trigger the rule’s\r\n * action.\r\n */\r\nfunction pasteRulesPlugin(props) {\r\n    const { editor, rules } = props;\r\n    let dragSourceElement = null;\r\n    let isPastedFromProseMirror = false;\r\n    let isDroppedFromProseMirror = false;\r\n    let pasteEvent = new ClipboardEvent('paste');\r\n    let dropEvent = new DragEvent('drop');\r\n    const plugins = rules.map(rule => {\r\n        return new Plugin({\r\n            // we register a global drag handler to track the current drag source element\r\n            view(view) {\r\n                const handleDragstart = (event) => {\r\n                    var _a;\r\n                    dragSourceElement = ((_a = view.dom.parentElement) === null || _a === void 0 ? void 0 : _a.contains(event.target))\r\n                        ? view.dom.parentElement\r\n                        : null;\r\n                };\r\n                window.addEventListener('dragstart', handleDragstart);\r\n                return {\r\n                    destroy() {\r\n                        window.removeEventListener('dragstart', handleDragstart);\r\n                    },\r\n                };\r\n            },\r\n            props: {\r\n                handleDOMEvents: {\r\n                    drop: (view, event) => {\r\n                        isDroppedFromProseMirror = dragSourceElement === view.dom.parentElement;\r\n                        dropEvent = event;\r\n                        return false;\r\n                    },\r\n                    paste: (_view, event) => {\r\n                        var _a;\r\n                        const html = (_a = event.clipboardData) === null || _a === void 0 ? void 0 : _a.getData('text/html');\r\n                        pasteEvent = event;\r\n                        isPastedFromProseMirror = !!(html === null || html === void 0 ? void 0 : html.includes('data-pm-slice'));\r\n                        return false;\r\n                    },\r\n                },\r\n            },\r\n            appendTransaction: (transactions, oldState, state) => {\r\n                const transaction = transactions[0];\r\n                const isPaste = transaction.getMeta('uiEvent') === 'paste' && !isPastedFromProseMirror;\r\n                const isDrop = transaction.getMeta('uiEvent') === 'drop' && !isDroppedFromProseMirror;\r\n                if (!isPaste && !isDrop) {\r\n                    return;\r\n                }\r\n                // stop if there is no changed range\r\n                const from = oldState.doc.content.findDiffStart(state.doc.content);\r\n                const to = oldState.doc.content.findDiffEnd(state.doc.content);\r\n                if (!isNumber(from) || !to || from === to.b) {\r\n                    return;\r\n                }\r\n                // build a chainable state\r\n                // so we can use a single transaction for all paste rules\r\n                const tr = state.tr;\r\n                const chainableState = createChainableState({\r\n                    state,\r\n                    transaction: tr,\r\n                });\r\n                const handler = run({\r\n                    editor,\r\n                    state: chainableState,\r\n                    from: Math.max(from - 1, 0),\r\n                    to: to.b - 1,\r\n                    rule,\r\n                    pasteEvent,\r\n                    dropEvent,\r\n                });\r\n                // stop if there are no changes\r\n                if (!handler || !tr.steps.length) {\r\n                    return;\r\n                }\r\n                dropEvent = new DragEvent('drop');\r\n                pasteEvent = new ClipboardEvent('paste');\r\n                return tr;\r\n            },\r\n        });\r\n    });\r\n    return plugins;\r\n}\n\nfunction findDuplicates(items) {\r\n    const filtered = items.filter((el, index) => items.indexOf(el) !== index);\r\n    return [...new Set(filtered)];\r\n}\n\nclass ExtensionManager {\r\n    constructor(extensions, editor) {\r\n        this.splittableMarks = [];\r\n        this.editor = editor;\r\n        this.extensions = ExtensionManager.resolve(extensions);\r\n        this.schema = getSchemaByResolvedExtensions(this.extensions, editor);\r\n        this.extensions.forEach(extension => {\r\n            var _a;\r\n            // store extension storage in editor\r\n            this.editor.extensionStorage[extension.name] = extension.storage;\r\n            const context = {\r\n                name: extension.name,\r\n                options: extension.options,\r\n                storage: extension.storage,\r\n                editor: this.editor,\r\n                type: getSchemaTypeByName(extension.name, this.schema),\r\n            };\r\n            if (extension.type === 'mark') {\r\n                const keepOnSplit = (_a = callOrReturn(getExtensionField(extension, 'keepOnSplit', context))) !== null && _a !== void 0 ? _a : true;\r\n                if (keepOnSplit) {\r\n                    this.splittableMarks.push(extension.name);\r\n                }\r\n            }\r\n            const onBeforeCreate = getExtensionField(extension, 'onBeforeCreate', context);\r\n            if (onBeforeCreate) {\r\n                this.editor.on('beforeCreate', onBeforeCreate);\r\n            }\r\n            const onCreate = getExtensionField(extension, 'onCreate', context);\r\n            if (onCreate) {\r\n                this.editor.on('create', onCreate);\r\n            }\r\n            const onUpdate = getExtensionField(extension, 'onUpdate', context);\r\n            if (onUpdate) {\r\n                this.editor.on('update', onUpdate);\r\n            }\r\n            const onSelectionUpdate = getExtensionField(extension, 'onSelectionUpdate', context);\r\n            if (onSelectionUpdate) {\r\n                this.editor.on('selectionUpdate', onSelectionUpdate);\r\n            }\r\n            const onTransaction = getExtensionField(extension, 'onTransaction', context);\r\n            if (onTransaction) {\r\n                this.editor.on('transaction', onTransaction);\r\n            }\r\n            const onFocus = getExtensionField(extension, 'onFocus', context);\r\n            if (onFocus) {\r\n                this.editor.on('focus', onFocus);\r\n            }\r\n            const onBlur = getExtensionField(extension, 'onBlur', context);\r\n            if (onBlur) {\r\n                this.editor.on('blur', onBlur);\r\n            }\r\n            const onDestroy = getExtensionField(extension, 'onDestroy', context);\r\n            if (onDestroy) {\r\n                this.editor.on('destroy', onDestroy);\r\n            }\r\n        });\r\n    }\r\n    static resolve(extensions) {\r\n        const resolvedExtensions = ExtensionManager.sort(ExtensionManager.flatten(extensions));\r\n        const duplicatedNames = findDuplicates(resolvedExtensions.map(extension => extension.name));\r\n        if (duplicatedNames.length) {\r\n            console.warn(`[tiptap warn]: Duplicate extension names found: [${duplicatedNames\r\n                .map(item => `'${item}'`)\r\n                .join(', ')}]. This can lead to issues.`);\r\n        }\r\n        return resolvedExtensions;\r\n    }\r\n    static flatten(extensions) {\r\n        return (extensions\r\n            .map(extension => {\r\n            const context = {\r\n                name: extension.name,\r\n                options: extension.options,\r\n                storage: extension.storage,\r\n            };\r\n            const addExtensions = getExtensionField(extension, 'addExtensions', context);\r\n            if (addExtensions) {\r\n                return [extension, ...this.flatten(addExtensions())];\r\n            }\r\n            return extension;\r\n        })\r\n            // `Infinity` will break TypeScript so we set a number that is probably high enough\r\n            .flat(10));\r\n    }\r\n    static sort(extensions) {\r\n        const defaultPriority = 100;\r\n        return extensions.sort((a, b) => {\r\n            const priorityA = getExtensionField(a, 'priority') || defaultPriority;\r\n            const priorityB = getExtensionField(b, 'priority') || defaultPriority;\r\n            if (priorityA > priorityB) {\r\n                return -1;\r\n            }\r\n            if (priorityA < priorityB) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n    get commands() {\r\n        return this.extensions.reduce((commands, extension) => {\r\n            const context = {\r\n                name: extension.name,\r\n                options: extension.options,\r\n                storage: extension.storage,\r\n                editor: this.editor,\r\n                type: getSchemaTypeByName(extension.name, this.schema),\r\n            };\r\n            const addCommands = getExtensionField(extension, 'addCommands', context);\r\n            if (!addCommands) {\r\n                return commands;\r\n            }\r\n            return {\r\n                ...commands,\r\n                ...addCommands(),\r\n            };\r\n        }, {});\r\n    }\r\n    get plugins() {\r\n        const { editor } = this;\r\n        // With ProseMirror, first plugins within an array are executed first.\r\n        // In Tiptap, we provide the ability to override plugins,\r\n        // so it feels more natural to run plugins at the end of an array first.\r\n        // That’s why we have to reverse the `extensions` array and sort again\r\n        // based on the `priority` option.\r\n        const extensions = ExtensionManager.sort([...this.extensions].reverse());\r\n        const inputRules = [];\r\n        const pasteRules = [];\r\n        const allPlugins = extensions\r\n            .map(extension => {\r\n            const context = {\r\n                name: extension.name,\r\n                options: extension.options,\r\n                storage: extension.storage,\r\n                editor,\r\n                type: getSchemaTypeByName(extension.name, this.schema),\r\n            };\r\n            const plugins = [];\r\n            const addKeyboardShortcuts = getExtensionField(extension, 'addKeyboardShortcuts', context);\r\n            let defaultBindings = {};\r\n            // bind exit handling\r\n            if (extension.type === 'mark' && extension.config.exitable) {\r\n                defaultBindings.ArrowRight = () => Mark.handleExit({ editor, mark: extension });\r\n            }\r\n            if (addKeyboardShortcuts) {\r\n                const bindings = Object.fromEntries(Object.entries(addKeyboardShortcuts()).map(([shortcut, method]) => {\r\n                    return [shortcut, () => method({ editor })];\r\n                }));\r\n                defaultBindings = { ...defaultBindings, ...bindings };\r\n            }\r\n            const keyMapPlugin = keymap(defaultBindings);\r\n            plugins.push(keyMapPlugin);\r\n            const addInputRules = getExtensionField(extension, 'addInputRules', context);\r\n            if (isExtensionRulesEnabled(extension, editor.options.enableInputRules) && addInputRules) {\r\n                inputRules.push(...addInputRules());\r\n            }\r\n            const addPasteRules = getExtensionField(extension, 'addPasteRules', context);\r\n            if (isExtensionRulesEnabled(extension, editor.options.enablePasteRules) && addPasteRules) {\r\n                pasteRules.push(...addPasteRules());\r\n            }\r\n            const addProseMirrorPlugins = getExtensionField(extension, 'addProseMirrorPlugins', context);\r\n            if (addProseMirrorPlugins) {\r\n                const proseMirrorPlugins = addProseMirrorPlugins();\r\n                plugins.push(...proseMirrorPlugins);\r\n            }\r\n            return plugins;\r\n        })\r\n            .flat();\r\n        return [\r\n            inputRulesPlugin({\r\n                editor,\r\n                rules: inputRules,\r\n            }),\r\n            ...pasteRulesPlugin({\r\n                editor,\r\n                rules: pasteRules,\r\n            }),\r\n            ...allPlugins,\r\n        ];\r\n    }\r\n    get attributes() {\r\n        return getAttributesFromExtensions(this.extensions);\r\n    }\r\n    get nodeViews() {\r\n        const { editor } = this;\r\n        const { nodeExtensions } = splitExtensions(this.extensions);\r\n        return Object.fromEntries(nodeExtensions\r\n            .filter(extension => !!getExtensionField(extension, 'addNodeView'))\r\n            .map(extension => {\r\n            const extensionAttributes = this.attributes.filter(attribute => attribute.type === extension.name);\r\n            const context = {\r\n                name: extension.name,\r\n                options: extension.options,\r\n                storage: extension.storage,\r\n                editor,\r\n                type: getNodeType(extension.name, this.schema),\r\n            };\r\n            const addNodeView = getExtensionField(extension, 'addNodeView', context);\r\n            if (!addNodeView) {\r\n                return [];\r\n            }\r\n            const nodeview = (node, view, getPos, decorations) => {\r\n                const HTMLAttributes = getRenderedAttributes(node, extensionAttributes);\r\n                return addNodeView()({\r\n                    editor,\r\n                    node,\r\n                    getPos,\r\n                    decorations,\r\n                    HTMLAttributes,\r\n                    extension,\r\n                });\r\n            };\r\n            return [extension.name, nodeview];\r\n        }));\r\n    }\r\n}\n\n// see: https://github.com/mesqueeb/is-what/blob/88d6e4ca92fb2baab6003c54e02eedf4e729e5ab/src/index.ts\r\nfunction getType(value) {\r\n    return Object.prototype.toString.call(value).slice(8, -1);\r\n}\r\nfunction isPlainObject(value) {\r\n    if (getType(value) !== 'Object') {\r\n        return false;\r\n    }\r\n    return value.constructor === Object && Object.getPrototypeOf(value) === Object.prototype;\r\n}\n\nfunction mergeDeep(target, source) {\r\n    const output = { ...target };\r\n    if (isPlainObject(target) && isPlainObject(source)) {\r\n        Object.keys(source).forEach(key => {\r\n            if (isPlainObject(source[key])) {\r\n                if (!(key in target)) {\r\n                    Object.assign(output, { [key]: source[key] });\r\n                }\r\n                else {\r\n                    output[key] = mergeDeep(target[key], source[key]);\r\n                }\r\n            }\r\n            else {\r\n                Object.assign(output, { [key]: source[key] });\r\n            }\r\n        });\r\n    }\r\n    return output;\r\n}\n\nclass Extension {\r\n    constructor(config = {}) {\r\n        this.type = 'extension';\r\n        this.name = 'extension';\r\n        this.parent = null;\r\n        this.child = null;\r\n        this.config = {\r\n            name: this.name,\r\n            defaultOptions: {},\r\n        };\r\n        this.config = {\r\n            ...this.config,\r\n            ...config,\r\n        };\r\n        this.name = this.config.name;\r\n        if (config.defaultOptions) {\r\n            console.warn(`[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${this.name}\".`);\r\n        }\r\n        // TODO: remove `addOptions` fallback\r\n        this.options = this.config.defaultOptions;\r\n        if (this.config.addOptions) {\r\n            this.options = callOrReturn(getExtensionField(this, 'addOptions', {\r\n                name: this.name,\r\n            }));\r\n        }\r\n        this.storage = callOrReturn(getExtensionField(this, 'addStorage', {\r\n            name: this.name,\r\n            options: this.options,\r\n        })) || {};\r\n    }\r\n    static create(config = {}) {\r\n        return new Extension(config);\r\n    }\r\n    configure(options = {}) {\r\n        // return a new instance so we can use the same extension\r\n        // with different calls of `configure`\r\n        const extension = this.extend();\r\n        extension.options = mergeDeep(this.options, options);\r\n        extension.storage = callOrReturn(getExtensionField(extension, 'addStorage', {\r\n            name: extension.name,\r\n            options: extension.options,\r\n        }));\r\n        return extension;\r\n    }\r\n    extend(extendedConfig = {}) {\r\n        const extension = new Extension(extendedConfig);\r\n        extension.parent = this;\r\n        this.child = extension;\r\n        extension.name = extendedConfig.name ? extendedConfig.name : extension.parent.name;\r\n        if (extendedConfig.defaultOptions) {\r\n            console.warn(`[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${extension.name}\".`);\r\n        }\r\n        extension.options = callOrReturn(getExtensionField(extension, 'addOptions', {\r\n            name: extension.name,\r\n        }));\r\n        extension.storage = callOrReturn(getExtensionField(extension, 'addStorage', {\r\n            name: extension.name,\r\n            options: extension.options,\r\n        }));\r\n        return extension;\r\n    }\r\n}\n\nfunction getTextBetween(startNode, range, options) {\r\n    const { from, to } = range;\r\n    const { blockSeparator = '\\n\\n', textSerializers = {} } = options || {};\r\n    let text = '';\r\n    let separated = true;\r\n    startNode.nodesBetween(from, to, (node, pos, parent, index) => {\r\n        var _a;\r\n        const textSerializer = textSerializers === null || textSerializers === void 0 ? void 0 : textSerializers[node.type.name];\r\n        if (textSerializer) {\r\n            if (node.isBlock && !separated) {\r\n                text += blockSeparator;\r\n                separated = true;\r\n            }\r\n            if (parent) {\r\n                text += textSerializer({\r\n                    node,\r\n                    pos,\r\n                    parent,\r\n                    index,\r\n                    range,\r\n                });\r\n            }\r\n        }\r\n        else if (node.isText) {\r\n            text += (_a = node === null || node === void 0 ? void 0 : node.text) === null || _a === void 0 ? void 0 : _a.slice(Math.max(from, pos) - pos, to - pos); // eslint-disable-line\r\n            separated = false;\r\n        }\r\n        else if (node.isBlock && !separated) {\r\n            text += blockSeparator;\r\n            separated = true;\r\n        }\r\n    });\r\n    return text;\r\n}\n\nfunction getTextSerializersFromSchema(schema) {\r\n    return Object.fromEntries(Object.entries(schema.nodes)\r\n        .filter(([, node]) => node.spec.toText)\r\n        .map(([name, node]) => [name, node.spec.toText]));\r\n}\n\nconst ClipboardTextSerializer = Extension.create({\r\n    name: 'clipboardTextSerializer',\r\n    addProseMirrorPlugins() {\r\n        return [\r\n            new Plugin({\r\n                key: new PluginKey('clipboardTextSerializer'),\r\n                props: {\r\n                    clipboardTextSerializer: () => {\r\n                        const { editor } = this;\r\n                        const { state, schema } = editor;\r\n                        const { doc, selection } = state;\r\n                        const { ranges } = selection;\r\n                        const from = Math.min(...ranges.map(range => range.$from.pos));\r\n                        const to = Math.max(...ranges.map(range => range.$to.pos));\r\n                        const textSerializers = getTextSerializersFromSchema(schema);\r\n                        const range = { from, to };\r\n                        return getTextBetween(doc, range, {\r\n                            textSerializers,\r\n                        });\r\n                    },\r\n                },\r\n            }),\r\n        ];\r\n    },\r\n});\n\nconst blur = () => ({ editor, view }) => {\r\n    requestAnimationFrame(() => {\r\n        var _a;\r\n        if (!editor.isDestroyed) {\r\n            view.dom.blur();\r\n            // Browsers should remove the caret on blur but safari does not.\r\n            // See: https://github.com/ueberdosis/tiptap/issues/2405\r\n            (_a = window === null || window === void 0 ? void 0 : window.getSelection()) === null || _a === void 0 ? void 0 : _a.removeAllRanges();\r\n        }\r\n    });\r\n    return true;\r\n};\n\nconst clearContent = (emitUpdate = false) => ({ commands }) => {\r\n    return commands.setContent('', emitUpdate);\r\n};\n\nconst clearNodes = () => ({ state, tr, dispatch }) => {\r\n    const { selection } = tr;\r\n    const { ranges } = selection;\r\n    if (!dispatch) {\r\n        return true;\r\n    }\r\n    ranges.forEach(({ $from, $to }) => {\r\n        state.doc.nodesBetween($from.pos, $to.pos, (node, pos) => {\r\n            if (node.type.isText) {\r\n                return;\r\n            }\r\n            const { doc, mapping } = tr;\r\n            const $mappedFrom = doc.resolve(mapping.map(pos));\r\n            const $mappedTo = doc.resolve(mapping.map(pos + node.nodeSize));\r\n            const nodeRange = $mappedFrom.blockRange($mappedTo);\r\n            if (!nodeRange) {\r\n                return;\r\n            }\r\n            const targetLiftDepth = liftTarget(nodeRange);\r\n            if (node.type.isTextblock) {\r\n                const { defaultType } = $mappedFrom.parent.contentMatchAt($mappedFrom.index());\r\n                tr.setNodeMarkup(nodeRange.start, defaultType);\r\n            }\r\n            if (targetLiftDepth || targetLiftDepth === 0) {\r\n                tr.lift(nodeRange, targetLiftDepth);\r\n            }\r\n        });\r\n    });\r\n    return true;\r\n};\n\nconst command = fn => props => {\r\n    return fn(props);\r\n};\n\nconst createParagraphNear = () => ({ state, dispatch }) => {\r\n    return createParagraphNear$1(state, dispatch);\r\n};\n\nconst cut = (originRange, targetPos) => ({ editor, tr }) => {\r\n    const { state } = editor;\r\n    const contentSlice = state.doc.slice(originRange.from, originRange.to);\r\n    tr.deleteRange(originRange.from, originRange.to);\r\n    const newPos = tr.mapping.map(targetPos);\r\n    tr.insert(newPos, contentSlice.content);\r\n    tr.setSelection(new TextSelection(tr.doc.resolve(newPos - 1)));\r\n    return true;\r\n};\n\nconst deleteCurrentNode = () => ({ tr, dispatch }) => {\r\n    const { selection } = tr;\r\n    const currentNode = selection.$anchor.node();\r\n    // if there is content inside the current node, break out of this command\r\n    if (currentNode.content.size > 0) {\r\n        return false;\r\n    }\r\n    const $pos = tr.selection.$anchor;\r\n    for (let depth = $pos.depth; depth > 0; depth -= 1) {\r\n        const node = $pos.node(depth);\r\n        if (node.type === currentNode.type) {\r\n            if (dispatch) {\r\n                const from = $pos.before(depth);\r\n                const to = $pos.after(depth);\r\n                tr.delete(from, to).scrollIntoView();\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\n\nconst deleteNode = typeOrName => ({ tr, state, dispatch }) => {\r\n    const type = getNodeType(typeOrName, state.schema);\r\n    const $pos = tr.selection.$anchor;\r\n    for (let depth = $pos.depth; depth > 0; depth -= 1) {\r\n        const node = $pos.node(depth);\r\n        if (node.type === type) {\r\n            if (dispatch) {\r\n                const from = $pos.before(depth);\r\n                const to = $pos.after(depth);\r\n                tr.delete(from, to).scrollIntoView();\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\n\nconst deleteRange = range => ({ tr, dispatch }) => {\r\n    const { from, to } = range;\r\n    if (dispatch) {\r\n        tr.delete(from, to);\r\n    }\r\n    return true;\r\n};\n\nconst deleteSelection = () => ({ state, dispatch }) => {\r\n    return deleteSelection$1(state, dispatch);\r\n};\n\nconst enter = () => ({ commands }) => {\r\n    return commands.keyboardShortcut('Enter');\r\n};\n\nconst exitCode = () => ({ state, dispatch }) => {\r\n    return exitCode$1(state, dispatch);\r\n};\n\n/**\r\n * Check if object1 includes object2\r\n * @param object1 Object\r\n * @param object2 Object\r\n */\r\nfunction objectIncludes(object1, object2, options = { strict: true }) {\r\n    const keys = Object.keys(object2);\r\n    if (!keys.length) {\r\n        return true;\r\n    }\r\n    return keys.every(key => {\r\n        if (options.strict) {\r\n            return object2[key] === object1[key];\r\n        }\r\n        if (isRegExp(object2[key])) {\r\n            return object2[key].test(object1[key]);\r\n        }\r\n        return object2[key] === object1[key];\r\n    });\r\n}\n\nfunction findMarkInSet(marks, type, attributes = {}) {\r\n    return marks.find(item => {\r\n        return item.type === type && objectIncludes(item.attrs, attributes);\r\n    });\r\n}\r\nfunction isMarkInSet(marks, type, attributes = {}) {\r\n    return !!findMarkInSet(marks, type, attributes);\r\n}\r\nfunction getMarkRange($pos, type, attributes = {}) {\r\n    if (!$pos || !type) {\r\n        return;\r\n    }\r\n    let start = $pos.parent.childAfter($pos.parentOffset);\r\n    if ($pos.parentOffset === start.offset && start.offset !== 0) {\r\n        start = $pos.parent.childBefore($pos.parentOffset);\r\n    }\r\n    if (!start.node) {\r\n        return;\r\n    }\r\n    const mark = findMarkInSet([...start.node.marks], type, attributes);\r\n    if (!mark) {\r\n        return;\r\n    }\r\n    let startIndex = start.index;\r\n    let startPos = $pos.start() + start.offset;\r\n    let endIndex = startIndex + 1;\r\n    let endPos = startPos + start.node.nodeSize;\r\n    findMarkInSet([...start.node.marks], type, attributes);\r\n    while (startIndex > 0 && mark.isInSet($pos.parent.child(startIndex - 1).marks)) {\r\n        startIndex -= 1;\r\n        startPos -= $pos.parent.child(startIndex).nodeSize;\r\n    }\r\n    while (endIndex < $pos.parent.childCount\r\n        && isMarkInSet([...$pos.parent.child(endIndex).marks], type, attributes)) {\r\n        endPos += $pos.parent.child(endIndex).nodeSize;\r\n        endIndex += 1;\r\n    }\r\n    return {\r\n        from: startPos,\r\n        to: endPos,\r\n    };\r\n}\n\nfunction getMarkType(nameOrType, schema) {\r\n    if (typeof nameOrType === 'string') {\r\n        if (!schema.marks[nameOrType]) {\r\n            throw Error(`There is no mark type named '${nameOrType}'. Maybe you forgot to add the extension?`);\r\n        }\r\n        return schema.marks[nameOrType];\r\n    }\r\n    return nameOrType;\r\n}\n\nconst extendMarkRange = (typeOrName, attributes = {}) => ({ tr, state, dispatch }) => {\r\n    const type = getMarkType(typeOrName, state.schema);\r\n    const { doc, selection } = tr;\r\n    const { $from, from, to } = selection;\r\n    if (dispatch) {\r\n        const range = getMarkRange($from, type, attributes);\r\n        if (range && range.from <= from && range.to >= to) {\r\n            const newSelection = TextSelection.create(doc, range.from, range.to);\r\n            tr.setSelection(newSelection);\r\n        }\r\n    }\r\n    return true;\r\n};\n\nconst first = commands => props => {\r\n    const items = typeof commands === 'function'\r\n        ? commands(props)\r\n        : commands;\r\n    for (let i = 0; i < items.length; i += 1) {\r\n        if (items[i](props)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\n\nfunction isTextSelection(value) {\r\n    return value instanceof TextSelection;\r\n}\n\nfunction minMax(value = 0, min = 0, max = 0) {\r\n    return Math.min(Math.max(value, min), max);\r\n}\n\nfunction resolveFocusPosition(doc, position = null) {\r\n    if (!position) {\r\n        return null;\r\n    }\r\n    const selectionAtStart = Selection.atStart(doc);\r\n    const selectionAtEnd = Selection.atEnd(doc);\r\n    if (position === 'start' || position === true) {\r\n        return selectionAtStart;\r\n    }\r\n    if (position === 'end') {\r\n        return selectionAtEnd;\r\n    }\r\n    const minPos = selectionAtStart.from;\r\n    const maxPos = selectionAtEnd.to;\r\n    if (position === 'all') {\r\n        return TextSelection.create(doc, minMax(0, minPos, maxPos), minMax(doc.content.size, minPos, maxPos));\r\n    }\r\n    return TextSelection.create(doc, minMax(position, minPos, maxPos), minMax(position, minPos, maxPos));\r\n}\n\nfunction isiOS() {\r\n    return [\r\n        'iPad Simulator',\r\n        'iPhone Simulator',\r\n        'iPod Simulator',\r\n        'iPad',\r\n        'iPhone',\r\n        'iPod',\r\n    ].includes(navigator.platform)\r\n        // iPad on iOS 13 detection\r\n        || (navigator.userAgent.includes('Mac') && 'ontouchend' in document);\r\n}\n\nconst focus = (position = null, options = {}) => ({ editor, view, tr, dispatch, }) => {\r\n    options = {\r\n        scrollIntoView: true,\r\n        ...options,\r\n    };\r\n    const delayedFocus = () => {\r\n        // focus within `requestAnimationFrame` breaks focus on iOS\r\n        // so we have to call this\r\n        if (isiOS()) {\r\n            view.dom.focus();\r\n        }\r\n        // For React we have to focus asynchronously. Otherwise wild things happen.\r\n        // see: https://github.com/ueberdosis/tiptap/issues/1520\r\n        requestAnimationFrame(() => {\r\n            if (!editor.isDestroyed) {\r\n                view.focus();\r\n                if (options === null || options === void 0 ? void 0 : options.scrollIntoView) {\r\n                    editor.commands.scrollIntoView();\r\n                }\r\n            }\r\n        });\r\n    };\r\n    if ((view.hasFocus() && position === null) || position === false) {\r\n        return true;\r\n    }\r\n    // we don’t try to resolve a NodeSelection or CellSelection\r\n    if (dispatch && position === null && !isTextSelection(editor.state.selection)) {\r\n        delayedFocus();\r\n        return true;\r\n    }\r\n    // pass through tr.doc instead of editor.state.doc\r\n    // since transactions could change the editors state before this command has been run\r\n    const selection = resolveFocusPosition(tr.doc, position) || editor.state.selection;\r\n    const isSameSelection = editor.state.selection.eq(selection);\r\n    if (dispatch) {\r\n        if (!isSameSelection) {\r\n            tr.setSelection(selection);\r\n        }\r\n        // `tr.setSelection` resets the stored marks\r\n        // so we’ll restore them if the selection is the same as before\r\n        if (isSameSelection && tr.storedMarks) {\r\n            tr.setStoredMarks(tr.storedMarks);\r\n        }\r\n        delayedFocus();\r\n    }\r\n    return true;\r\n};\n\nconst forEach = (items, fn) => props => {\r\n    return items.every((item, index) => fn(item, { ...props, index }));\r\n};\n\nconst insertContent = (value, options) => ({ tr, commands }) => {\r\n    return commands.insertContentAt({ from: tr.selection.from, to: tr.selection.to }, value, options);\r\n};\n\nfunction elementFromString(value) {\r\n    // add a wrapper to preserve leading and trailing whitespace\r\n    const wrappedValue = `<body>${value}</body>`;\r\n    return new window.DOMParser().parseFromString(wrappedValue, 'text/html').body;\r\n}\n\nfunction createNodeFromContent(content, schema, options) {\r\n    options = {\r\n        slice: true,\r\n        parseOptions: {},\r\n        ...options,\r\n    };\r\n    if (typeof content === 'object' && content !== null) {\r\n        try {\r\n            if (Array.isArray(content) && content.length > 0) {\r\n                return Fragment.fromArray(content.map(item => schema.nodeFromJSON(item)));\r\n            }\r\n            return schema.nodeFromJSON(content);\r\n        }\r\n        catch (error) {\r\n            console.warn('[tiptap warn]: Invalid content.', 'Passed value:', content, 'Error:', error);\r\n            return createNodeFromContent('', schema, options);\r\n        }\r\n    }\r\n    if (typeof content === 'string') {\r\n        const parser = DOMParser.fromSchema(schema);\r\n        return options.slice\r\n            ? parser.parseSlice(elementFromString(content), options.parseOptions).content\r\n            : parser.parse(elementFromString(content), options.parseOptions);\r\n    }\r\n    return createNodeFromContent('', schema, options);\r\n}\n\n// source: https://github.com/ProseMirror/prosemirror-state/blob/master/src/selection.js#L466\r\nfunction selectionToInsertionEnd(tr, startLen, bias) {\r\n    const last = tr.steps.length - 1;\r\n    if (last < startLen) {\r\n        return;\r\n    }\r\n    const step = tr.steps[last];\r\n    if (!(step instanceof ReplaceStep || step instanceof ReplaceAroundStep)) {\r\n        return;\r\n    }\r\n    const map = tr.mapping.maps[last];\r\n    let end = 0;\r\n    map.forEach((_from, _to, _newFrom, newTo) => {\r\n        if (end === 0) {\r\n            end = newTo;\r\n        }\r\n    });\r\n    tr.setSelection(Selection.near(tr.doc.resolve(end), bias));\r\n}\n\nconst isFragment = (nodeOrFragment) => {\r\n    return nodeOrFragment.toString().startsWith('<');\r\n};\r\nconst insertContentAt = (position, value, options) => ({ tr, dispatch, editor }) => {\r\n    if (dispatch) {\r\n        options = {\r\n            parseOptions: {},\r\n            updateSelection: true,\r\n            ...options,\r\n        };\r\n        const content = createNodeFromContent(value, editor.schema, {\r\n            parseOptions: {\r\n                preserveWhitespace: 'full',\r\n                ...options.parseOptions,\r\n            },\r\n        });\r\n        // don’t dispatch an empty fragment because this can lead to strange errors\r\n        if (content.toString() === '<>') {\r\n            return true;\r\n        }\r\n        let { from, to } = typeof position === 'number' ? { from: position, to: position } : { from: position.from, to: position.to };\r\n        let isOnlyTextContent = true;\r\n        let isOnlyBlockContent = true;\r\n        const nodes = isFragment(content) ? content : [content];\r\n        nodes.forEach(node => {\r\n            // check if added node is valid\r\n            node.check();\r\n            isOnlyTextContent = isOnlyTextContent ? node.isText && node.marks.length === 0 : false;\r\n            isOnlyBlockContent = isOnlyBlockContent ? node.isBlock : false;\r\n        });\r\n        // check if we can replace the wrapping node by\r\n        // the newly inserted content\r\n        // example:\r\n        // replace an empty paragraph by an inserted image\r\n        // instead of inserting the image below the paragraph\r\n        if (from === to && isOnlyBlockContent) {\r\n            const { parent } = tr.doc.resolve(from);\r\n            const isEmptyTextBlock = parent.isTextblock && !parent.type.spec.code && !parent.childCount;\r\n            if (isEmptyTextBlock) {\r\n                from -= 1;\r\n                to += 1;\r\n            }\r\n        }\r\n        // if there is only plain text we have to use `insertText`\r\n        // because this will keep the current marks\r\n        if (isOnlyTextContent) {\r\n            // if value is string, we can use it directly\r\n            // otherwise if it is an array, we have to join it\r\n            if (Array.isArray(value)) {\r\n                tr.insertText(value.map(v => v.text || '').join(''), from, to);\r\n            }\r\n            else if (typeof value === 'object' && !!value && !!value.text) {\r\n                tr.insertText(value.text, from, to);\r\n            }\r\n            else {\r\n                tr.insertText(value, from, to);\r\n            }\r\n        }\r\n        else {\r\n            tr.replaceWith(from, to, content);\r\n        }\r\n        // set cursor at end of inserted content\r\n        if (options.updateSelection) {\r\n            selectionToInsertionEnd(tr, tr.steps.length - 1, -1);\r\n        }\r\n    }\r\n    return true;\r\n};\n\nconst joinUp = () => ({ state, dispatch }) => {\r\n    return joinUp$1(state, dispatch);\r\n};\r\nconst joinDown = () => ({ state, dispatch }) => {\r\n    return joinDown$1(state, dispatch);\r\n};\r\nconst joinBackward = () => ({ state, dispatch }) => {\r\n    return joinBackward$1(state, dispatch);\r\n};\r\nconst joinForward = () => ({ state, dispatch }) => {\r\n    return joinForward$1(state, dispatch);\r\n};\n\nconst joinItemBackward = () => ({ tr, state, dispatch, }) => {\r\n    try {\r\n        const point = joinPoint(state.doc, state.selection.$from.pos, -1);\r\n        if (point === null || point === undefined) {\r\n            return false;\r\n        }\r\n        tr.join(point, 2);\r\n        if (dispatch) {\r\n            dispatch(tr);\r\n        }\r\n        return true;\r\n    }\r\n    catch {\r\n        return false;\r\n    }\r\n};\n\nconst joinItemForward = () => ({ state, dispatch, tr, }) => {\r\n    try {\r\n        const point = joinPoint(state.doc, state.selection.$from.pos, +1);\r\n        if (point === null || point === undefined) {\r\n            return false;\r\n        }\r\n        tr.join(point, 2);\r\n        if (dispatch) {\r\n            dispatch(tr);\r\n        }\r\n        return true;\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n};\n\nfunction isMacOS() {\r\n    return typeof navigator !== 'undefined'\r\n        ? /Mac/.test(navigator.platform)\r\n        : false;\r\n}\n\nfunction normalizeKeyName(name) {\r\n    const parts = name.split(/-(?!$)/);\r\n    let result = parts[parts.length - 1];\r\n    if (result === 'Space') {\r\n        result = ' ';\r\n    }\r\n    let alt;\r\n    let ctrl;\r\n    let shift;\r\n    let meta;\r\n    for (let i = 0; i < parts.length - 1; i += 1) {\r\n        const mod = parts[i];\r\n        if (/^(cmd|meta|m)$/i.test(mod)) {\r\n            meta = true;\r\n        }\r\n        else if (/^a(lt)?$/i.test(mod)) {\r\n            alt = true;\r\n        }\r\n        else if (/^(c|ctrl|control)$/i.test(mod)) {\r\n            ctrl = true;\r\n        }\r\n        else if (/^s(hift)?$/i.test(mod)) {\r\n            shift = true;\r\n        }\r\n        else if (/^mod$/i.test(mod)) {\r\n            if (isiOS() || isMacOS()) {\r\n                meta = true;\r\n            }\r\n            else {\r\n                ctrl = true;\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(`Unrecognized modifier name: ${mod}`);\r\n        }\r\n    }\r\n    if (alt) {\r\n        result = `Alt-${result}`;\r\n    }\r\n    if (ctrl) {\r\n        result = `Ctrl-${result}`;\r\n    }\r\n    if (meta) {\r\n        result = `Meta-${result}`;\r\n    }\r\n    if (shift) {\r\n        result = `Shift-${result}`;\r\n    }\r\n    return result;\r\n}\r\nconst keyboardShortcut = name => ({ editor, view, tr, dispatch, }) => {\r\n    const keys = normalizeKeyName(name).split(/-(?!$)/);\r\n    const key = keys.find(item => !['Alt', 'Ctrl', 'Meta', 'Shift'].includes(item));\r\n    const event = new KeyboardEvent('keydown', {\r\n        key: key === 'Space'\r\n            ? ' '\r\n            : key,\r\n        altKey: keys.includes('Alt'),\r\n        ctrlKey: keys.includes('Ctrl'),\r\n        metaKey: keys.includes('Meta'),\r\n        shiftKey: keys.includes('Shift'),\r\n        bubbles: true,\r\n        cancelable: true,\r\n    });\r\n    const capturedTransaction = editor.captureTransaction(() => {\r\n        view.someProp('handleKeyDown', f => f(view, event));\r\n    });\r\n    capturedTransaction === null || capturedTransaction === void 0 ? void 0 : capturedTransaction.steps.forEach(step => {\r\n        const newStep = step.map(tr.mapping);\r\n        if (newStep && dispatch) {\r\n            tr.maybeStep(newStep);\r\n        }\r\n    });\r\n    return true;\r\n};\n\nfunction isNodeActive(state, typeOrName, attributes = {}) {\r\n    const { from, to, empty } = state.selection;\r\n    const type = typeOrName ? getNodeType(typeOrName, state.schema) : null;\r\n    const nodeRanges = [];\r\n    state.doc.nodesBetween(from, to, (node, pos) => {\r\n        if (node.isText) {\r\n            return;\r\n        }\r\n        const relativeFrom = Math.max(from, pos);\r\n        const relativeTo = Math.min(to, pos + node.nodeSize);\r\n        nodeRanges.push({\r\n            node,\r\n            from: relativeFrom,\r\n            to: relativeTo,\r\n        });\r\n    });\r\n    const selectionRange = to - from;\r\n    const matchedNodeRanges = nodeRanges\r\n        .filter(nodeRange => {\r\n        if (!type) {\r\n            return true;\r\n        }\r\n        return type.name === nodeRange.node.type.name;\r\n    })\r\n        .filter(nodeRange => objectIncludes(nodeRange.node.attrs, attributes, { strict: false }));\r\n    if (empty) {\r\n        return !!matchedNodeRanges.length;\r\n    }\r\n    const range = matchedNodeRanges.reduce((sum, nodeRange) => sum + nodeRange.to - nodeRange.from, 0);\r\n    return range >= selectionRange;\r\n}\n\nconst lift = (typeOrName, attributes = {}) => ({ state, dispatch }) => {\r\n    const type = getNodeType(typeOrName, state.schema);\r\n    const isActive = isNodeActive(state, type, attributes);\r\n    if (!isActive) {\r\n        return false;\r\n    }\r\n    return lift$1(state, dispatch);\r\n};\n\nconst liftEmptyBlock = () => ({ state, dispatch }) => {\r\n    return liftEmptyBlock$1(state, dispatch);\r\n};\n\nconst liftListItem = typeOrName => ({ state, dispatch }) => {\r\n    const type = getNodeType(typeOrName, state.schema);\r\n    return liftListItem$1(type)(state, dispatch);\r\n};\n\nconst newlineInCode = () => ({ state, dispatch }) => {\r\n    return newlineInCode$1(state, dispatch);\r\n};\n\nfunction getSchemaTypeNameByName(name, schema) {\r\n    if (schema.nodes[name]) {\r\n        return 'node';\r\n    }\r\n    if (schema.marks[name]) {\r\n        return 'mark';\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * Remove a property or an array of properties from an object\r\n * @param obj Object\r\n * @param key Key to remove\r\n */\r\nfunction deleteProps(obj, propOrProps) {\r\n    const props = typeof propOrProps === 'string'\r\n        ? [propOrProps]\r\n        : propOrProps;\r\n    return Object\r\n        .keys(obj)\r\n        .reduce((newObj, prop) => {\r\n        if (!props.includes(prop)) {\r\n            newObj[prop] = obj[prop];\r\n        }\r\n        return newObj;\r\n    }, {});\r\n}\n\nconst resetAttributes = (typeOrName, attributes) => ({ tr, state, dispatch }) => {\r\n    let nodeType = null;\r\n    let markType = null;\r\n    const schemaType = getSchemaTypeNameByName(typeof typeOrName === 'string' ? typeOrName : typeOrName.name, state.schema);\r\n    if (!schemaType) {\r\n        return false;\r\n    }\r\n    if (schemaType === 'node') {\r\n        nodeType = getNodeType(typeOrName, state.schema);\r\n    }\r\n    if (schemaType === 'mark') {\r\n        markType = getMarkType(typeOrName, state.schema);\r\n    }\r\n    if (dispatch) {\r\n        tr.selection.ranges.forEach(range => {\r\n            state.doc.nodesBetween(range.$from.pos, range.$to.pos, (node, pos) => {\r\n                if (nodeType && nodeType === node.type) {\r\n                    tr.setNodeMarkup(pos, undefined, deleteProps(node.attrs, attributes));\r\n                }\r\n                if (markType && node.marks.length) {\r\n                    node.marks.forEach(mark => {\r\n                        if (markType === mark.type) {\r\n                            tr.addMark(pos, pos + node.nodeSize, markType.create(deleteProps(mark.attrs, attributes)));\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n    return true;\r\n};\n\nconst scrollIntoView = () => ({ tr, dispatch }) => {\r\n    if (dispatch) {\r\n        tr.scrollIntoView();\r\n    }\r\n    return true;\r\n};\n\nconst selectAll = () => ({ tr, commands }) => {\r\n    return commands.setTextSelection({\r\n        from: 0,\r\n        to: tr.doc.content.size,\r\n    });\r\n};\n\nconst selectNodeBackward = () => ({ state, dispatch }) => {\r\n    return selectNodeBackward$1(state, dispatch);\r\n};\n\nconst selectNodeForward = () => ({ state, dispatch }) => {\r\n    return selectNodeForward$1(state, dispatch);\r\n};\n\nconst selectParentNode = () => ({ state, dispatch }) => {\r\n    return selectParentNode$1(state, dispatch);\r\n};\n\n// @ts-ignore\r\nconst selectTextblockEnd = () => ({ state, dispatch }) => {\r\n    return selectTextblockEnd$1(state, dispatch);\r\n};\n\n// @ts-ignore\r\nconst selectTextblockStart = () => ({ state, dispatch }) => {\r\n    return selectTextblockStart$1(state, dispatch);\r\n};\n\nfunction createDocument(content, schema, parseOptions = {}) {\r\n    return createNodeFromContent(content, schema, { slice: false, parseOptions });\r\n}\n\nconst setContent = (content, emitUpdate = false, parseOptions = {}) => ({ tr, editor, dispatch }) => {\r\n    const { doc } = tr;\r\n    const document = createDocument(content, editor.schema, parseOptions);\r\n    if (dispatch) {\r\n        tr.replaceWith(0, doc.content.size, document).setMeta('preventUpdate', !emitUpdate);\r\n    }\r\n    return true;\r\n};\n\nfunction getMarkAttributes(state, typeOrName) {\r\n    const type = getMarkType(typeOrName, state.schema);\r\n    const { from, to, empty } = state.selection;\r\n    const marks = [];\r\n    if (empty) {\r\n        if (state.storedMarks) {\r\n            marks.push(...state.storedMarks);\r\n        }\r\n        marks.push(...state.selection.$head.marks());\r\n    }\r\n    else {\r\n        state.doc.nodesBetween(from, to, node => {\r\n            marks.push(...node.marks);\r\n        });\r\n    }\r\n    const mark = marks.find(markItem => markItem.type.name === type.name);\r\n    if (!mark) {\r\n        return {};\r\n    }\r\n    return { ...mark.attrs };\r\n}\n\n/**\r\n * Returns a new `Transform` based on all steps of the passed transactions.\r\n */\r\nfunction combineTransactionSteps(oldDoc, transactions) {\r\n    const transform = new Transform(oldDoc);\r\n    transactions.forEach(transaction => {\r\n        transaction.steps.forEach(step => {\r\n            transform.step(step);\r\n        });\r\n    });\r\n    return transform;\r\n}\n\nfunction defaultBlockAt(match) {\r\n    for (let i = 0; i < match.edgeCount; i += 1) {\r\n        const { type } = match.edge(i);\r\n        if (type.isTextblock && !type.hasRequiredAttrs()) {\r\n            return type;\r\n        }\r\n    }\r\n    return null;\r\n}\n\nfunction findChildren(node, predicate) {\r\n    const nodesWithPos = [];\r\n    node.descendants((child, pos) => {\r\n        if (predicate(child)) {\r\n            nodesWithPos.push({\r\n                node: child,\r\n                pos,\r\n            });\r\n        }\r\n    });\r\n    return nodesWithPos;\r\n}\n\n/**\r\n * Same as `findChildren` but searches only within a `range`.\r\n */\r\nfunction findChildrenInRange(node, range, predicate) {\r\n    const nodesWithPos = [];\r\n    // if (range.from === range.to) {\r\n    //   const nodeAt = node.nodeAt(range.from)\r\n    //   if (nodeAt) {\r\n    //     nodesWithPos.push({\r\n    //       node: nodeAt,\r\n    //       pos: range.from,\r\n    //     })\r\n    //   }\r\n    // }\r\n    node.nodesBetween(range.from, range.to, (child, pos) => {\r\n        if (predicate(child)) {\r\n            nodesWithPos.push({\r\n                node: child,\r\n                pos,\r\n            });\r\n        }\r\n    });\r\n    return nodesWithPos;\r\n}\n\nfunction findParentNodeClosestToPos($pos, predicate) {\r\n    for (let i = $pos.depth; i > 0; i -= 1) {\r\n        const node = $pos.node(i);\r\n        if (predicate(node)) {\r\n            return {\r\n                pos: i > 0 ? $pos.before(i) : 0,\r\n                start: $pos.start(i),\r\n                depth: i,\r\n                node,\r\n            };\r\n        }\r\n    }\r\n}\n\nfunction findParentNode(predicate) {\r\n    return (selection) => findParentNodeClosestToPos(selection.$from, predicate);\r\n}\n\nfunction getHTMLFromFragment(fragment, schema) {\r\n    const documentFragment = DOMSerializer.fromSchema(schema).serializeFragment(fragment);\r\n    const temporaryDocument = document.implementation.createHTMLDocument();\r\n    const container = temporaryDocument.createElement('div');\r\n    container.appendChild(documentFragment);\r\n    return container.innerHTML;\r\n}\n\nfunction getSchema(extensions, editor) {\r\n    const resolvedExtensions = ExtensionManager.resolve(extensions);\r\n    return getSchemaByResolvedExtensions(resolvedExtensions, editor);\r\n}\n\nfunction generateHTML(doc, extensions) {\r\n    const schema = getSchema(extensions);\r\n    const contentNode = Node$1.fromJSON(schema, doc);\r\n    return getHTMLFromFragment(contentNode.content, schema);\r\n}\n\nfunction generateJSON(html, extensions) {\r\n    const schema = getSchema(extensions);\r\n    const dom = elementFromString(html);\r\n    return DOMParser.fromSchema(schema).parse(dom).toJSON();\r\n}\n\nfunction getText(node, options) {\r\n    const range = {\r\n        from: 0,\r\n        to: node.content.size,\r\n    };\r\n    return getTextBetween(node, range, options);\r\n}\n\nfunction generateText(doc, extensions, options) {\r\n    const { blockSeparator = '\\n\\n', textSerializers = {} } = options || {};\r\n    const schema = getSchema(extensions);\r\n    const contentNode = Node$1.fromJSON(schema, doc);\r\n    return getText(contentNode, {\r\n        blockSeparator,\r\n        textSerializers: {\r\n            ...getTextSerializersFromSchema(schema),\r\n            ...textSerializers,\r\n        },\r\n    });\r\n}\n\nfunction getNodeAttributes(state, typeOrName) {\r\n    const type = getNodeType(typeOrName, state.schema);\r\n    const { from, to } = state.selection;\r\n    const nodes = [];\r\n    state.doc.nodesBetween(from, to, node => {\r\n        nodes.push(node);\r\n    });\r\n    const node = nodes.reverse().find(nodeItem => nodeItem.type.name === type.name);\r\n    if (!node) {\r\n        return {};\r\n    }\r\n    return { ...node.attrs };\r\n}\n\nfunction getAttributes(state, typeOrName) {\r\n    const schemaType = getSchemaTypeNameByName(typeof typeOrName === 'string' ? typeOrName : typeOrName.name, state.schema);\r\n    if (schemaType === 'node') {\r\n        return getNodeAttributes(state, typeOrName);\r\n    }\r\n    if (schemaType === 'mark') {\r\n        return getMarkAttributes(state, typeOrName);\r\n    }\r\n    return {};\r\n}\n\n/**\r\n * Removes duplicated values within an array.\r\n * Supports numbers, strings and objects.\r\n */\r\nfunction removeDuplicates(array, by = JSON.stringify) {\r\n    const seen = {};\r\n    return array.filter(item => {\r\n        const key = by(item);\r\n        return Object.prototype.hasOwnProperty.call(seen, key)\r\n            ? false\r\n            : (seen[key] = true);\r\n    });\r\n}\n\n/**\r\n * Removes duplicated ranges and ranges that are\r\n * fully captured by other ranges.\r\n */\r\nfunction simplifyChangedRanges(changes) {\r\n    const uniqueChanges = removeDuplicates(changes);\r\n    return uniqueChanges.length === 1\r\n        ? uniqueChanges\r\n        : uniqueChanges.filter((change, index) => {\r\n            const rest = uniqueChanges.filter((_, i) => i !== index);\r\n            return !rest.some(otherChange => {\r\n                return change.oldRange.from >= otherChange.oldRange.from\r\n                    && change.oldRange.to <= otherChange.oldRange.to\r\n                    && change.newRange.from >= otherChange.newRange.from\r\n                    && change.newRange.to <= otherChange.newRange.to;\r\n            });\r\n        });\r\n}\r\n/**\r\n * Returns a list of changed ranges\r\n * based on the first and last state of all steps.\r\n */\r\nfunction getChangedRanges(transform) {\r\n    const { mapping, steps } = transform;\r\n    const changes = [];\r\n    mapping.maps.forEach((stepMap, index) => {\r\n        const ranges = [];\r\n        // This accounts for step changes where no range was actually altered\r\n        // e.g. when setting a mark, node attribute, etc.\r\n        // @ts-ignore\r\n        if (!stepMap.ranges.length) {\r\n            const { from, to } = steps[index];\r\n            if (from === undefined || to === undefined) {\r\n                return;\r\n            }\r\n            ranges.push({ from, to });\r\n        }\r\n        else {\r\n            stepMap.forEach((from, to) => {\r\n                ranges.push({ from, to });\r\n            });\r\n        }\r\n        ranges.forEach(({ from, to }) => {\r\n            const newStart = mapping.slice(index).map(from, -1);\r\n            const newEnd = mapping.slice(index).map(to);\r\n            const oldStart = mapping.invert().map(newStart, -1);\r\n            const oldEnd = mapping.invert().map(newEnd);\r\n            changes.push({\r\n                oldRange: {\r\n                    from: oldStart,\r\n                    to: oldEnd,\r\n                },\r\n                newRange: {\r\n                    from: newStart,\r\n                    to: newEnd,\r\n                },\r\n            });\r\n        });\r\n    });\r\n    return simplifyChangedRanges(changes);\r\n}\n\nfunction getDebugJSON(node, startOffset = 0) {\r\n    const isTopNode = node.type === node.type.schema.topNodeType;\r\n    const increment = isTopNode ? 0 : 1;\r\n    const from = startOffset;\r\n    const to = from + node.nodeSize;\r\n    const marks = node.marks.map(mark => {\r\n        const output = {\r\n            type: mark.type.name,\r\n        };\r\n        if (Object.keys(mark.attrs).length) {\r\n            output.attrs = { ...mark.attrs };\r\n        }\r\n        return output;\r\n    });\r\n    const attrs = { ...node.attrs };\r\n    const output = {\r\n        type: node.type.name,\r\n        from,\r\n        to,\r\n    };\r\n    if (Object.keys(attrs).length) {\r\n        output.attrs = attrs;\r\n    }\r\n    if (marks.length) {\r\n        output.marks = marks;\r\n    }\r\n    if (node.content.childCount) {\r\n        output.content = [];\r\n        node.forEach((child, offset) => {\r\n            var _a;\r\n            (_a = output.content) === null || _a === void 0 ? void 0 : _a.push(getDebugJSON(child, startOffset + offset + increment));\r\n        });\r\n    }\r\n    if (node.text) {\r\n        output.text = node.text;\r\n    }\r\n    return output;\r\n}\n\nfunction getMarksBetween(from, to, doc) {\r\n    const marks = [];\r\n    // get all inclusive marks on empty selection\r\n    if (from === to) {\r\n        doc\r\n            .resolve(from)\r\n            .marks()\r\n            .forEach(mark => {\r\n            const $pos = doc.resolve(from - 1);\r\n            const range = getMarkRange($pos, mark.type);\r\n            if (!range) {\r\n                return;\r\n            }\r\n            marks.push({\r\n                mark,\r\n                ...range,\r\n            });\r\n        });\r\n    }\r\n    else {\r\n        doc.nodesBetween(from, to, (node, pos) => {\r\n            marks.push(...node.marks.map(mark => ({\r\n                from: pos,\r\n                to: pos + node.nodeSize,\r\n                mark,\r\n            })));\r\n        });\r\n    }\r\n    return marks;\r\n}\n\n/**\r\n * Finds the first node of a given type or name in the current selection.\r\n * @param state The editor state.\r\n * @param typeOrName The node type or name.\r\n * @param pos The position to start searching from.\r\n * @param maxDepth The maximum depth to search.\r\n * @returns The node and the depth as an array.\r\n */\r\nconst getNodeAtPosition = (state, typeOrName, pos, maxDepth = 20) => {\r\n    const $pos = state.doc.resolve(pos);\r\n    let currentDepth = maxDepth;\r\n    let node = null;\r\n    while (currentDepth > 0 && node === null) {\r\n        const currentNode = $pos.node(currentDepth);\r\n        if ((currentNode === null || currentNode === void 0 ? void 0 : currentNode.type.name) === typeOrName) {\r\n            node = currentNode;\r\n        }\r\n        else {\r\n            currentDepth -= 1;\r\n        }\r\n    }\r\n    return [node, currentDepth];\r\n};\n\nfunction getSplittedAttributes(extensionAttributes, typeName, attributes) {\r\n    return Object.fromEntries(Object\r\n        .entries(attributes)\r\n        .filter(([name]) => {\r\n        const extensionAttribute = extensionAttributes.find(item => {\r\n            return item.type === typeName && item.name === name;\r\n        });\r\n        if (!extensionAttribute) {\r\n            return false;\r\n        }\r\n        return extensionAttribute.attribute.keepOnSplit;\r\n    }));\r\n}\n\nfunction isMarkActive(state, typeOrName, attributes = {}) {\r\n    const { empty, ranges } = state.selection;\r\n    const type = typeOrName ? getMarkType(typeOrName, state.schema) : null;\r\n    if (empty) {\r\n        return !!(state.storedMarks || state.selection.$from.marks())\r\n            .filter(mark => {\r\n            if (!type) {\r\n                return true;\r\n            }\r\n            return type.name === mark.type.name;\r\n        })\r\n            .find(mark => objectIncludes(mark.attrs, attributes, { strict: false }));\r\n    }\r\n    let selectionRange = 0;\r\n    const markRanges = [];\r\n    ranges.forEach(({ $from, $to }) => {\r\n        const from = $from.pos;\r\n        const to = $to.pos;\r\n        state.doc.nodesBetween(from, to, (node, pos) => {\r\n            if (!node.isText && !node.marks.length) {\r\n                return;\r\n            }\r\n            const relativeFrom = Math.max(from, pos);\r\n            const relativeTo = Math.min(to, pos + node.nodeSize);\r\n            const range = relativeTo - relativeFrom;\r\n            selectionRange += range;\r\n            markRanges.push(...node.marks.map(mark => ({\r\n                mark,\r\n                from: relativeFrom,\r\n                to: relativeTo,\r\n            })));\r\n        });\r\n    });\r\n    if (selectionRange === 0) {\r\n        return false;\r\n    }\r\n    // calculate range of matched mark\r\n    const matchedRange = markRanges\r\n        .filter(markRange => {\r\n        if (!type) {\r\n            return true;\r\n        }\r\n        return type.name === markRange.mark.type.name;\r\n    })\r\n        .filter(markRange => objectIncludes(markRange.mark.attrs, attributes, { strict: false }))\r\n        .reduce((sum, markRange) => sum + markRange.to - markRange.from, 0);\r\n    // calculate range of marks that excludes the searched mark\r\n    // for example `code` doesn’t allow any other marks\r\n    const excludedRange = markRanges\r\n        .filter(markRange => {\r\n        if (!type) {\r\n            return true;\r\n        }\r\n        return markRange.mark.type !== type && markRange.mark.type.excludes(type);\r\n    })\r\n        .reduce((sum, markRange) => sum + markRange.to - markRange.from, 0);\r\n    // we only include the result of `excludedRange`\r\n    // if there is a match at all\r\n    const range = matchedRange > 0 ? matchedRange + excludedRange : matchedRange;\r\n    return range >= selectionRange;\r\n}\n\nfunction isActive(state, name, attributes = {}) {\r\n    if (!name) {\r\n        return isNodeActive(state, null, attributes) || isMarkActive(state, null, attributes);\r\n    }\r\n    const schemaType = getSchemaTypeNameByName(name, state.schema);\r\n    if (schemaType === 'node') {\r\n        return isNodeActive(state, name, attributes);\r\n    }\r\n    if (schemaType === 'mark') {\r\n        return isMarkActive(state, name, attributes);\r\n    }\r\n    return false;\r\n}\n\nconst isAtEndOfNode = (state, nodeType) => {\r\n    const { $from, $to, $anchor } = state.selection;\r\n    if (nodeType) {\r\n        const parentNode = findParentNode(node => node.type.name === nodeType)(state.selection);\r\n        if (!parentNode) {\r\n            return false;\r\n        }\r\n        const $parentPos = state.doc.resolve(parentNode.pos + 1);\r\n        if ($anchor.pos + 1 === $parentPos.end()) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    if ($to.parentOffset < $to.parent.nodeSize - 2 || $from.pos !== $to.pos) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\n\nconst isAtStartOfNode = (state) => {\r\n    const { $from, $to } = state.selection;\r\n    if ($from.parentOffset > 0 || $from.pos !== $to.pos) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\n\nfunction isList(name, extensions) {\r\n    const { nodeExtensions } = splitExtensions(extensions);\r\n    const extension = nodeExtensions.find(item => item.name === name);\r\n    if (!extension) {\r\n        return false;\r\n    }\r\n    const context = {\r\n        name: extension.name,\r\n        options: extension.options,\r\n        storage: extension.storage,\r\n    };\r\n    const group = callOrReturn(getExtensionField(extension, 'group', context));\r\n    if (typeof group !== 'string') {\r\n        return false;\r\n    }\r\n    return group.split(' ').includes('list');\r\n}\n\nfunction isNodeEmpty(node) {\r\n    var _a;\r\n    const defaultContent = (_a = node.type.createAndFill()) === null || _a === void 0 ? void 0 : _a.toJSON();\r\n    const content = node.toJSON();\r\n    return JSON.stringify(defaultContent) === JSON.stringify(content);\r\n}\n\nfunction isNodeSelection(value) {\r\n    return value instanceof NodeSelection;\r\n}\n\nfunction posToDOMRect(view, from, to) {\r\n    const minPos = 0;\r\n    const maxPos = view.state.doc.content.size;\r\n    const resolvedFrom = minMax(from, minPos, maxPos);\r\n    const resolvedEnd = minMax(to, minPos, maxPos);\r\n    const start = view.coordsAtPos(resolvedFrom);\r\n    const end = view.coordsAtPos(resolvedEnd, -1);\r\n    const top = Math.min(start.top, end.top);\r\n    const bottom = Math.max(start.bottom, end.bottom);\r\n    const left = Math.min(start.left, end.left);\r\n    const right = Math.max(start.right, end.right);\r\n    const width = right - left;\r\n    const height = bottom - top;\r\n    const x = left;\r\n    const y = top;\r\n    const data = {\r\n        top,\r\n        bottom,\r\n        left,\r\n        right,\r\n        width,\r\n        height,\r\n        x,\r\n        y,\r\n    };\r\n    return {\r\n        ...data,\r\n        toJSON: () => data,\r\n    };\r\n}\n\nfunction canSetMark(state, tr, newMarkType) {\r\n    var _a;\r\n    const { selection } = tr;\r\n    let cursor = null;\r\n    if (isTextSelection(selection)) {\r\n        cursor = selection.$cursor;\r\n    }\r\n    if (cursor) {\r\n        const currentMarks = (_a = state.storedMarks) !== null && _a !== void 0 ? _a : cursor.marks();\r\n        // There can be no current marks that exclude the new mark\r\n        return (!!newMarkType.isInSet(currentMarks)\r\n            || !currentMarks.some(mark => mark.type.excludes(newMarkType)));\r\n    }\r\n    const { ranges } = selection;\r\n    return ranges.some(({ $from, $to }) => {\r\n        let someNodeSupportsMark = $from.depth === 0\r\n            ? state.doc.inlineContent && state.doc.type.allowsMarkType(newMarkType)\r\n            : false;\r\n        state.doc.nodesBetween($from.pos, $to.pos, (node, _pos, parent) => {\r\n            // If we already found a mark that we can enable, return false to bypass the remaining search\r\n            if (someNodeSupportsMark) {\r\n                return false;\r\n            }\r\n            if (node.isInline) {\r\n                const parentAllowsMarkType = !parent || parent.type.allowsMarkType(newMarkType);\r\n                const currentMarksAllowMarkType = !!newMarkType.isInSet(node.marks)\r\n                    || !node.marks.some(otherMark => otherMark.type.excludes(newMarkType));\r\n                someNodeSupportsMark = parentAllowsMarkType && currentMarksAllowMarkType;\r\n            }\r\n            return !someNodeSupportsMark;\r\n        });\r\n        return someNodeSupportsMark;\r\n    });\r\n}\r\nconst setMark = (typeOrName, attributes = {}) => ({ tr, state, dispatch }) => {\r\n    const { selection } = tr;\r\n    const { empty, ranges } = selection;\r\n    const type = getMarkType(typeOrName, state.schema);\r\n    if (dispatch) {\r\n        if (empty) {\r\n            const oldAttributes = getMarkAttributes(state, type);\r\n            tr.addStoredMark(type.create({\r\n                ...oldAttributes,\r\n                ...attributes,\r\n            }));\r\n        }\r\n        else {\r\n            ranges.forEach(range => {\r\n                const from = range.$from.pos;\r\n                const to = range.$to.pos;\r\n                state.doc.nodesBetween(from, to, (node, pos) => {\r\n                    const trimmedFrom = Math.max(pos, from);\r\n                    const trimmedTo = Math.min(pos + node.nodeSize, to);\r\n                    const someHasMark = node.marks.find(mark => mark.type === type);\r\n                    // if there is already a mark of this type\r\n                    // we know that we have to merge its attributes\r\n                    // otherwise we add a fresh new mark\r\n                    if (someHasMark) {\r\n                        node.marks.forEach(mark => {\r\n                            if (type === mark.type) {\r\n                                tr.addMark(trimmedFrom, trimmedTo, type.create({\r\n                                    ...mark.attrs,\r\n                                    ...attributes,\r\n                                }));\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        tr.addMark(trimmedFrom, trimmedTo, type.create(attributes));\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n    return canSetMark(state, tr, type);\r\n};\n\nconst setMeta = (key, value) => ({ tr }) => {\r\n    tr.setMeta(key, value);\r\n    return true;\r\n};\n\nconst setNode = (typeOrName, attributes = {}) => ({ state, dispatch, chain }) => {\r\n    const type = getNodeType(typeOrName, state.schema);\r\n    // TODO: use a fallback like insertContent?\r\n    if (!type.isTextblock) {\r\n        console.warn('[tiptap warn]: Currently \"setNode()\" only supports text block nodes.');\r\n        return false;\r\n    }\r\n    return (chain()\r\n        // try to convert node to default node if needed\r\n        .command(({ commands }) => {\r\n        const canSetBlock = setBlockType(type, attributes)(state);\r\n        if (canSetBlock) {\r\n            return true;\r\n        }\r\n        return commands.clearNodes();\r\n    })\r\n        .command(({ state: updatedState }) => {\r\n        return setBlockType(type, attributes)(updatedState, dispatch);\r\n    })\r\n        .run());\r\n};\n\nconst setNodeSelection = position => ({ tr, dispatch }) => {\r\n    if (dispatch) {\r\n        const { doc } = tr;\r\n        const from = minMax(position, 0, doc.content.size);\r\n        const selection = NodeSelection.create(doc, from);\r\n        tr.setSelection(selection);\r\n    }\r\n    return true;\r\n};\n\nconst setTextSelection = position => ({ tr, dispatch }) => {\r\n    if (dispatch) {\r\n        const { doc } = tr;\r\n        const { from, to } = typeof position === 'number' ? { from: position, to: position } : position;\r\n        const minPos = TextSelection.atStart(doc).from;\r\n        const maxPos = TextSelection.atEnd(doc).to;\r\n        const resolvedFrom = minMax(from, minPos, maxPos);\r\n        const resolvedEnd = minMax(to, minPos, maxPos);\r\n        const selection = TextSelection.create(doc, resolvedFrom, resolvedEnd);\r\n        tr.setSelection(selection);\r\n    }\r\n    return true;\r\n};\n\nconst sinkListItem = typeOrName => ({ state, dispatch }) => {\r\n    const type = getNodeType(typeOrName, state.schema);\r\n    return sinkListItem$1(type)(state, dispatch);\r\n};\n\nfunction ensureMarks(state, splittableMarks) {\r\n    const marks = state.storedMarks || (state.selection.$to.parentOffset && state.selection.$from.marks());\r\n    if (marks) {\r\n        const filteredMarks = marks.filter(mark => splittableMarks === null || splittableMarks === void 0 ? void 0 : splittableMarks.includes(mark.type.name));\r\n        state.tr.ensureMarks(filteredMarks);\r\n    }\r\n}\r\nconst splitBlock = ({ keepMarks = true } = {}) => ({ tr, state, dispatch, editor, }) => {\r\n    const { selection, doc } = tr;\r\n    const { $from, $to } = selection;\r\n    const extensionAttributes = editor.extensionManager.attributes;\r\n    const newAttributes = getSplittedAttributes(extensionAttributes, $from.node().type.name, $from.node().attrs);\r\n    if (selection instanceof NodeSelection && selection.node.isBlock) {\r\n        if (!$from.parentOffset || !canSplit(doc, $from.pos)) {\r\n            return false;\r\n        }\r\n        if (dispatch) {\r\n            if (keepMarks) {\r\n                ensureMarks(state, editor.extensionManager.splittableMarks);\r\n            }\r\n            tr.split($from.pos).scrollIntoView();\r\n        }\r\n        return true;\r\n    }\r\n    if (!$from.parent.isBlock) {\r\n        return false;\r\n    }\r\n    if (dispatch) {\r\n        const atEnd = $to.parentOffset === $to.parent.content.size;\r\n        if (selection instanceof TextSelection) {\r\n            tr.deleteSelection();\r\n        }\r\n        const deflt = $from.depth === 0\r\n            ? undefined\r\n            : defaultBlockAt($from.node(-1).contentMatchAt($from.indexAfter(-1)));\r\n        let types = atEnd && deflt\r\n            ? [\r\n                {\r\n                    type: deflt,\r\n                    attrs: newAttributes,\r\n                },\r\n            ]\r\n            : undefined;\r\n        let can = canSplit(tr.doc, tr.mapping.map($from.pos), 1, types);\r\n        if (!types\r\n            && !can\r\n            && canSplit(tr.doc, tr.mapping.map($from.pos), 1, deflt ? [{ type: deflt }] : undefined)) {\r\n            can = true;\r\n            types = deflt\r\n                ? [\r\n                    {\r\n                        type: deflt,\r\n                        attrs: newAttributes,\r\n                    },\r\n                ]\r\n                : undefined;\r\n        }\r\n        if (can) {\r\n            tr.split(tr.mapping.map($from.pos), 1, types);\r\n            if (deflt && !atEnd && !$from.parentOffset && $from.parent.type !== deflt) {\r\n                const first = tr.mapping.map($from.before());\r\n                const $first = tr.doc.resolve(first);\r\n                if ($from.node(-1).canReplaceWith($first.index(), $first.index() + 1, deflt)) {\r\n                    tr.setNodeMarkup(tr.mapping.map($from.before()), deflt);\r\n                }\r\n            }\r\n        }\r\n        if (keepMarks) {\r\n            ensureMarks(state, editor.extensionManager.splittableMarks);\r\n        }\r\n        tr.scrollIntoView();\r\n    }\r\n    return true;\r\n};\n\nconst splitListItem = typeOrName => ({ tr, state, dispatch, editor, }) => {\r\n    var _a;\r\n    const type = getNodeType(typeOrName, state.schema);\r\n    const { $from, $to } = state.selection;\r\n    // @ts-ignore\r\n    // eslint-disable-next-line\r\n    const node = state.selection.node;\r\n    if ((node && node.isBlock) || $from.depth < 2 || !$from.sameParent($to)) {\r\n        return false;\r\n    }\r\n    const grandParent = $from.node(-1);\r\n    if (grandParent.type !== type) {\r\n        return false;\r\n    }\r\n    const extensionAttributes = editor.extensionManager.attributes;\r\n    if ($from.parent.content.size === 0 && $from.node(-1).childCount === $from.indexAfter(-1)) {\r\n        // In an empty block. If this is a nested list, the wrapping\r\n        // list item should be split. Otherwise, bail out and let next\r\n        // command handle lifting.\r\n        if ($from.depth === 2\r\n            || $from.node(-3).type !== type\r\n            || $from.index(-2) !== $from.node(-2).childCount - 1) {\r\n            return false;\r\n        }\r\n        if (dispatch) {\r\n            let wrap = Fragment.empty;\r\n            // eslint-disable-next-line\r\n            const depthBefore = $from.index(-1) ? 1 : $from.index(-2) ? 2 : 3;\r\n            // Build a fragment containing empty versions of the structure\r\n            // from the outer list item to the parent node of the cursor\r\n            for (let d = $from.depth - depthBefore; d >= $from.depth - 3; d -= 1) {\r\n                wrap = Fragment.from($from.node(d).copy(wrap));\r\n            }\r\n            // eslint-disable-next-line\r\n            const depthAfter = $from.indexAfter(-1) < $from.node(-2).childCount ? 1 : $from.indexAfter(-2) < $from.node(-3).childCount ? 2 : 3;\r\n            // Add a second list item with an empty default start node\r\n            const newNextTypeAttributes = getSplittedAttributes(extensionAttributes, $from.node().type.name, $from.node().attrs);\r\n            const nextType = ((_a = type.contentMatch.defaultType) === null || _a === void 0 ? void 0 : _a.createAndFill(newNextTypeAttributes)) || undefined;\r\n            wrap = wrap.append(Fragment.from(type.createAndFill(null, nextType) || undefined));\r\n            const start = $from.before($from.depth - (depthBefore - 1));\r\n            tr.replace(start, $from.after(-depthAfter), new Slice(wrap, 4 - depthBefore, 0));\r\n            let sel = -1;\r\n            tr.doc.nodesBetween(start, tr.doc.content.size, (n, pos) => {\r\n                if (sel > -1) {\r\n                    return false;\r\n                }\r\n                if (n.isTextblock && n.content.size === 0) {\r\n                    sel = pos + 1;\r\n                }\r\n            });\r\n            if (sel > -1) {\r\n                tr.setSelection(TextSelection.near(tr.doc.resolve(sel)));\r\n            }\r\n            tr.scrollIntoView();\r\n        }\r\n        return true;\r\n    }\r\n    const nextType = $to.pos === $from.end() ? grandParent.contentMatchAt(0).defaultType : null;\r\n    const newTypeAttributes = getSplittedAttributes(extensionAttributes, grandParent.type.name, grandParent.attrs);\r\n    const newNextTypeAttributes = getSplittedAttributes(extensionAttributes, $from.node().type.name, $from.node().attrs);\r\n    tr.delete($from.pos, $to.pos);\r\n    const types = nextType\r\n        ? [\r\n            { type, attrs: newTypeAttributes },\r\n            { type: nextType, attrs: newNextTypeAttributes },\r\n        ]\r\n        : [{ type, attrs: newTypeAttributes }];\r\n    if (!canSplit(tr.doc, $from.pos, 2)) {\r\n        return false;\r\n    }\r\n    if (dispatch) {\r\n        const { selection, storedMarks } = state;\r\n        const { splittableMarks } = editor.extensionManager;\r\n        const marks = storedMarks || (selection.$to.parentOffset && selection.$from.marks());\r\n        tr.split($from.pos, 2, types).scrollIntoView();\r\n        if (!marks || !dispatch) {\r\n            return true;\r\n        }\r\n        const filteredMarks = marks.filter(mark => splittableMarks.includes(mark.type.name));\r\n        tr.ensureMarks(filteredMarks);\r\n    }\r\n    return true;\r\n};\n\nconst joinListBackwards = (tr, listType) => {\r\n    const list = findParentNode(node => node.type === listType)(tr.selection);\r\n    if (!list) {\r\n        return true;\r\n    }\r\n    const before = tr.doc.resolve(Math.max(0, list.pos - 1)).before(list.depth);\r\n    if (before === undefined) {\r\n        return true;\r\n    }\r\n    const nodeBefore = tr.doc.nodeAt(before);\r\n    const canJoinBackwards = list.node.type === (nodeBefore === null || nodeBefore === void 0 ? void 0 : nodeBefore.type) && canJoin(tr.doc, list.pos);\r\n    if (!canJoinBackwards) {\r\n        return true;\r\n    }\r\n    tr.join(list.pos);\r\n    return true;\r\n};\r\nconst joinListForwards = (tr, listType) => {\r\n    const list = findParentNode(node => node.type === listType)(tr.selection);\r\n    if (!list) {\r\n        return true;\r\n    }\r\n    const after = tr.doc.resolve(list.start).after(list.depth);\r\n    if (after === undefined) {\r\n        return true;\r\n    }\r\n    const nodeAfter = tr.doc.nodeAt(after);\r\n    const canJoinForwards = list.node.type === (nodeAfter === null || nodeAfter === void 0 ? void 0 : nodeAfter.type) && canJoin(tr.doc, after);\r\n    if (!canJoinForwards) {\r\n        return true;\r\n    }\r\n    tr.join(after);\r\n    return true;\r\n};\r\nconst toggleList = (listTypeOrName, itemTypeOrName, keepMarks, attributes = {}) => ({ editor, tr, state, dispatch, chain, commands, can, }) => {\r\n    const { extensions, splittableMarks } = editor.extensionManager;\r\n    const listType = getNodeType(listTypeOrName, state.schema);\r\n    const itemType = getNodeType(itemTypeOrName, state.schema);\r\n    const { selection, storedMarks } = state;\r\n    const { $from, $to } = selection;\r\n    const range = $from.blockRange($to);\r\n    const marks = storedMarks || (selection.$to.parentOffset && selection.$from.marks());\r\n    if (!range) {\r\n        return false;\r\n    }\r\n    const parentList = findParentNode(node => isList(node.type.name, extensions))(selection);\r\n    if (range.depth >= 1 && parentList && range.depth - parentList.depth <= 1) {\r\n        // remove list\r\n        if (parentList.node.type === listType) {\r\n            return commands.liftListItem(itemType);\r\n        }\r\n        // change list type\r\n        if (isList(parentList.node.type.name, extensions)\r\n            && listType.validContent(parentList.node.content)\r\n            && dispatch) {\r\n            return chain()\r\n                .command(() => {\r\n                tr.setNodeMarkup(parentList.pos, listType);\r\n                return true;\r\n            })\r\n                .command(() => joinListBackwards(tr, listType))\r\n                .command(() => joinListForwards(tr, listType))\r\n                .run();\r\n        }\r\n    }\r\n    if (!keepMarks || !marks || !dispatch) {\r\n        return chain()\r\n            // try to convert node to default node if needed\r\n            .command(() => {\r\n            const canWrapInList = can().wrapInList(listType, attributes);\r\n            if (canWrapInList) {\r\n                return true;\r\n            }\r\n            return commands.clearNodes();\r\n        })\r\n            .wrapInList(listType, attributes)\r\n            .command(() => joinListBackwards(tr, listType))\r\n            .command(() => joinListForwards(tr, listType))\r\n            .run();\r\n    }\r\n    return (chain()\r\n        // try to convert node to default node if needed\r\n        .command(() => {\r\n        const canWrapInList = can().wrapInList(listType, attributes);\r\n        const filteredMarks = marks.filter(mark => splittableMarks.includes(mark.type.name));\r\n        tr.ensureMarks(filteredMarks);\r\n        if (canWrapInList) {\r\n            return true;\r\n        }\r\n        return commands.clearNodes();\r\n    })\r\n        .wrapInList(listType, attributes)\r\n        .command(() => joinListBackwards(tr, listType))\r\n        .command(() => joinListForwards(tr, listType))\r\n        .run());\r\n};\n\nconst toggleMark = (typeOrName, attributes = {}, options = {}) => ({ state, commands }) => {\r\n    const { extendEmptyMarkRange = false } = options;\r\n    const type = getMarkType(typeOrName, state.schema);\r\n    const isActive = isMarkActive(state, type, attributes);\r\n    if (isActive) {\r\n        return commands.unsetMark(type, { extendEmptyMarkRange });\r\n    }\r\n    return commands.setMark(type, attributes);\r\n};\n\nconst toggleNode = (typeOrName, toggleTypeOrName, attributes = {}) => ({ state, commands }) => {\r\n    const type = getNodeType(typeOrName, state.schema);\r\n    const toggleType = getNodeType(toggleTypeOrName, state.schema);\r\n    const isActive = isNodeActive(state, type, attributes);\r\n    if (isActive) {\r\n        return commands.setNode(toggleType);\r\n    }\r\n    return commands.setNode(type, attributes);\r\n};\n\nconst toggleWrap = (typeOrName, attributes = {}) => ({ state, commands }) => {\r\n    const type = getNodeType(typeOrName, state.schema);\r\n    const isActive = isNodeActive(state, type, attributes);\r\n    if (isActive) {\r\n        return commands.lift(type);\r\n    }\r\n    return commands.wrapIn(type, attributes);\r\n};\n\nconst undoInputRule = () => ({ state, dispatch }) => {\r\n    const plugins = state.plugins;\r\n    for (let i = 0; i < plugins.length; i += 1) {\r\n        const plugin = plugins[i];\r\n        let undoable;\r\n        // @ts-ignore\r\n        // eslint-disable-next-line\r\n        if (plugin.spec.isInputRules && (undoable = plugin.getState(state))) {\r\n            if (dispatch) {\r\n                const tr = state.tr;\r\n                const toUndo = undoable.transform;\r\n                for (let j = toUndo.steps.length - 1; j >= 0; j -= 1) {\r\n                    tr.step(toUndo.steps[j].invert(toUndo.docs[j]));\r\n                }\r\n                if (undoable.text) {\r\n                    const marks = tr.doc.resolve(undoable.from).marks();\r\n                    tr.replaceWith(undoable.from, undoable.to, state.schema.text(undoable.text, marks));\r\n                }\r\n                else {\r\n                    tr.delete(undoable.from, undoable.to);\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\n\nconst unsetAllMarks = () => ({ tr, dispatch }) => {\r\n    const { selection } = tr;\r\n    const { empty, ranges } = selection;\r\n    if (empty) {\r\n        return true;\r\n    }\r\n    if (dispatch) {\r\n        ranges.forEach(range => {\r\n            tr.removeMark(range.$from.pos, range.$to.pos);\r\n        });\r\n    }\r\n    return true;\r\n};\n\nconst unsetMark = (typeOrName, options = {}) => ({ tr, state, dispatch }) => {\r\n    var _a;\r\n    const { extendEmptyMarkRange = false } = options;\r\n    const { selection } = tr;\r\n    const type = getMarkType(typeOrName, state.schema);\r\n    const { $from, empty, ranges } = selection;\r\n    if (!dispatch) {\r\n        return true;\r\n    }\r\n    if (empty && extendEmptyMarkRange) {\r\n        let { from, to } = selection;\r\n        const attrs = (_a = $from.marks().find(mark => mark.type === type)) === null || _a === void 0 ? void 0 : _a.attrs;\r\n        const range = getMarkRange($from, type, attrs);\r\n        if (range) {\r\n            from = range.from;\r\n            to = range.to;\r\n        }\r\n        tr.removeMark(from, to, type);\r\n    }\r\n    else {\r\n        ranges.forEach(range => {\r\n            tr.removeMark(range.$from.pos, range.$to.pos, type);\r\n        });\r\n    }\r\n    tr.removeStoredMark(type);\r\n    return true;\r\n};\n\nconst updateAttributes = (typeOrName, attributes = {}) => ({ tr, state, dispatch }) => {\r\n    let nodeType = null;\r\n    let markType = null;\r\n    const schemaType = getSchemaTypeNameByName(typeof typeOrName === 'string' ? typeOrName : typeOrName.name, state.schema);\r\n    if (!schemaType) {\r\n        return false;\r\n    }\r\n    if (schemaType === 'node') {\r\n        nodeType = getNodeType(typeOrName, state.schema);\r\n    }\r\n    if (schemaType === 'mark') {\r\n        markType = getMarkType(typeOrName, state.schema);\r\n    }\r\n    if (dispatch) {\r\n        tr.selection.ranges.forEach(range => {\r\n            const from = range.$from.pos;\r\n            const to = range.$to.pos;\r\n            state.doc.nodesBetween(from, to, (node, pos) => {\r\n                if (nodeType && nodeType === node.type) {\r\n                    tr.setNodeMarkup(pos, undefined, {\r\n                        ...node.attrs,\r\n                        ...attributes,\r\n                    });\r\n                }\r\n                if (markType && node.marks.length) {\r\n                    node.marks.forEach(mark => {\r\n                        if (markType === mark.type) {\r\n                            const trimmedFrom = Math.max(pos, from);\r\n                            const trimmedTo = Math.min(pos + node.nodeSize, to);\r\n                            tr.addMark(trimmedFrom, trimmedTo, markType.create({\r\n                                ...mark.attrs,\r\n                                ...attributes,\r\n                            }));\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n    return true;\r\n};\n\nconst wrapIn = (typeOrName, attributes = {}) => ({ state, dispatch }) => {\r\n    const type = getNodeType(typeOrName, state.schema);\r\n    return wrapIn$1(type, attributes)(state, dispatch);\r\n};\n\nconst wrapInList = (typeOrName, attributes = {}) => ({ state, dispatch }) => {\r\n    const type = getNodeType(typeOrName, state.schema);\r\n    return wrapInList$1(type, attributes)(state, dispatch);\r\n};\n\nvar commands = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  blur: blur,\n  clearContent: clearContent,\n  clearNodes: clearNodes,\n  command: command,\n  createParagraphNear: createParagraphNear,\n  cut: cut,\n  deleteCurrentNode: deleteCurrentNode,\n  deleteNode: deleteNode,\n  deleteRange: deleteRange,\n  deleteSelection: deleteSelection,\n  enter: enter,\n  exitCode: exitCode,\n  extendMarkRange: extendMarkRange,\n  first: first,\n  focus: focus,\n  forEach: forEach,\n  insertContent: insertContent,\n  insertContentAt: insertContentAt,\n  joinUp: joinUp,\n  joinDown: joinDown,\n  joinBackward: joinBackward,\n  joinForward: joinForward,\n  joinItemBackward: joinItemBackward,\n  joinItemForward: joinItemForward,\n  keyboardShortcut: keyboardShortcut,\n  lift: lift,\n  liftEmptyBlock: liftEmptyBlock,\n  liftListItem: liftListItem,\n  newlineInCode: newlineInCode,\n  resetAttributes: resetAttributes,\n  scrollIntoView: scrollIntoView,\n  selectAll: selectAll,\n  selectNodeBackward: selectNodeBackward,\n  selectNodeForward: selectNodeForward,\n  selectParentNode: selectParentNode,\n  selectTextblockEnd: selectTextblockEnd,\n  selectTextblockStart: selectTextblockStart,\n  setContent: setContent,\n  setMark: setMark,\n  setMeta: setMeta,\n  setNode: setNode,\n  setNodeSelection: setNodeSelection,\n  setTextSelection: setTextSelection,\n  sinkListItem: sinkListItem,\n  splitBlock: splitBlock,\n  splitListItem: splitListItem,\n  toggleList: toggleList,\n  toggleMark: toggleMark,\n  toggleNode: toggleNode,\n  toggleWrap: toggleWrap,\n  undoInputRule: undoInputRule,\n  unsetAllMarks: unsetAllMarks,\n  unsetMark: unsetMark,\n  updateAttributes: updateAttributes,\n  wrapIn: wrapIn,\n  wrapInList: wrapInList\n});\n\nconst Commands = Extension.create({\r\n    name: 'commands',\r\n    addCommands() {\r\n        return {\r\n            ...commands,\r\n        };\r\n    },\r\n});\n\nconst Editable = Extension.create({\r\n    name: 'editable',\r\n    addProseMirrorPlugins() {\r\n        return [\r\n            new Plugin({\r\n                key: new PluginKey('editable'),\r\n                props: {\r\n                    editable: () => this.editor.options.editable,\r\n                },\r\n            }),\r\n        ];\r\n    },\r\n});\n\nconst FocusEvents = Extension.create({\r\n    name: 'focusEvents',\r\n    addProseMirrorPlugins() {\r\n        const { editor } = this;\r\n        return [\r\n            new Plugin({\r\n                key: new PluginKey('focusEvents'),\r\n                props: {\r\n                    handleDOMEvents: {\r\n                        focus: (view, event) => {\r\n                            editor.isFocused = true;\r\n                            const transaction = editor.state.tr\r\n                                .setMeta('focus', { event })\r\n                                .setMeta('addToHistory', false);\r\n                            view.dispatch(transaction);\r\n                            return false;\r\n                        },\r\n                        blur: (view, event) => {\r\n                            editor.isFocused = false;\r\n                            const transaction = editor.state.tr\r\n                                .setMeta('blur', { event })\r\n                                .setMeta('addToHistory', false);\r\n                            view.dispatch(transaction);\r\n                            return false;\r\n                        },\r\n                    },\r\n                },\r\n            }),\r\n        ];\r\n    },\r\n});\n\nconst Keymap = Extension.create({\r\n    name: 'keymap',\r\n    addKeyboardShortcuts() {\r\n        const handleBackspace = () => this.editor.commands.first(({ commands }) => [\r\n            () => commands.undoInputRule(),\r\n            // maybe convert first text block node to default node\r\n            () => commands.command(({ tr }) => {\r\n                const { selection, doc } = tr;\r\n                const { empty, $anchor } = selection;\r\n                const { pos, parent } = $anchor;\r\n                const $parentPos = $anchor.parent.isTextblock ? tr.doc.resolve(pos - 1) : $anchor;\r\n                const parentIsIsolating = $parentPos.parent.type.spec.isolating;\r\n                const parentPos = $anchor.pos - $anchor.parentOffset;\r\n                const isAtStart = (parentIsIsolating && $parentPos.parent.childCount === 1)\r\n                    ? parentPos === $anchor.pos\r\n                    : Selection.atStart(doc).from === pos;\r\n                if (!empty || !isAtStart || !parent.type.isTextblock || parent.textContent.length) {\r\n                    return false;\r\n                }\r\n                return commands.clearNodes();\r\n            }),\r\n            () => commands.deleteSelection(),\r\n            () => commands.joinBackward(),\r\n            () => commands.selectNodeBackward(),\r\n        ]);\r\n        const handleDelete = () => this.editor.commands.first(({ commands }) => [\r\n            () => commands.deleteSelection(),\r\n            () => commands.deleteCurrentNode(),\r\n            () => commands.joinForward(),\r\n            () => commands.selectNodeForward(),\r\n        ]);\r\n        const handleEnter = () => this.editor.commands.first(({ commands }) => [\r\n            () => commands.newlineInCode(),\r\n            () => commands.createParagraphNear(),\r\n            () => commands.liftEmptyBlock(),\r\n            () => commands.splitBlock(),\r\n        ]);\r\n        const baseKeymap = {\r\n            Enter: handleEnter,\r\n            'Mod-Enter': () => this.editor.commands.exitCode(),\r\n            Backspace: handleBackspace,\r\n            'Mod-Backspace': handleBackspace,\r\n            'Shift-Backspace': handleBackspace,\r\n            Delete: handleDelete,\r\n            'Mod-Delete': handleDelete,\r\n            'Mod-a': () => this.editor.commands.selectAll(),\r\n        };\r\n        const pcKeymap = {\r\n            ...baseKeymap,\r\n        };\r\n        const macKeymap = {\r\n            ...baseKeymap,\r\n            'Ctrl-h': handleBackspace,\r\n            'Alt-Backspace': handleBackspace,\r\n            'Ctrl-d': handleDelete,\r\n            'Ctrl-Alt-Backspace': handleDelete,\r\n            'Alt-Delete': handleDelete,\r\n            'Alt-d': handleDelete,\r\n            'Ctrl-a': () => this.editor.commands.selectTextblockStart(),\r\n            'Ctrl-e': () => this.editor.commands.selectTextblockEnd(),\r\n        };\r\n        if (isiOS() || isMacOS()) {\r\n            return macKeymap;\r\n        }\r\n        return pcKeymap;\r\n    },\r\n    addProseMirrorPlugins() {\r\n        return [\r\n            // With this plugin we check if the whole document was selected and deleted.\r\n            // In this case we will additionally call `clearNodes()` to convert e.g. a heading\r\n            // to a paragraph if necessary.\r\n            // This is an alternative to ProseMirror's `AllSelection`, which doesn’t work well\r\n            // with many other commands.\r\n            new Plugin({\r\n                key: new PluginKey('clearDocument'),\r\n                appendTransaction: (transactions, oldState, newState) => {\r\n                    const docChanges = transactions.some(transaction => transaction.docChanged)\r\n                        && !oldState.doc.eq(newState.doc);\r\n                    if (!docChanges) {\r\n                        return;\r\n                    }\r\n                    const { empty, from, to } = oldState.selection;\r\n                    const allFrom = Selection.atStart(oldState.doc).from;\r\n                    const allEnd = Selection.atEnd(oldState.doc).to;\r\n                    const allWasSelected = from === allFrom && to === allEnd;\r\n                    if (empty || !allWasSelected) {\r\n                        return;\r\n                    }\r\n                    const isEmpty = newState.doc.textBetween(0, newState.doc.content.size, ' ', ' ').length === 0;\r\n                    if (!isEmpty) {\r\n                        return;\r\n                    }\r\n                    const tr = newState.tr;\r\n                    const state = createChainableState({\r\n                        state: newState,\r\n                        transaction: tr,\r\n                    });\r\n                    const { commands } = new CommandManager({\r\n                        editor: this.editor,\r\n                        state,\r\n                    });\r\n                    commands.clearNodes();\r\n                    if (!tr.steps.length) {\r\n                        return;\r\n                    }\r\n                    return tr;\r\n                },\r\n            }),\r\n        ];\r\n    },\r\n});\n\nconst Tabindex = Extension.create({\r\n    name: 'tabindex',\r\n    addProseMirrorPlugins() {\r\n        return [\r\n            new Plugin({\r\n                key: new PluginKey('tabindex'),\r\n                props: {\r\n                    attributes: this.editor.isEditable ? { tabindex: '0' } : {},\r\n                },\r\n            }),\r\n        ];\r\n    },\r\n});\n\nvar extensions = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ClipboardTextSerializer: ClipboardTextSerializer,\n  Commands: Commands,\n  Editable: Editable,\n  FocusEvents: FocusEvents,\n  Keymap: Keymap,\n  Tabindex: Tabindex\n});\n\nconst style = `.ProseMirror {\n  position: relative;\n}\n\n.ProseMirror {\n  word-wrap: break-word;\n  white-space: pre-wrap;\n  white-space: break-spaces;\n  -webkit-font-variant-ligatures: none;\n  font-variant-ligatures: none;\n  font-feature-settings: \"liga\" 0; /* the above doesn't seem to work in Edge */\n}\n\n.ProseMirror [contenteditable=\"false\"] {\n  white-space: normal;\n}\n\n.ProseMirror [contenteditable=\"false\"] [contenteditable=\"true\"] {\n  white-space: pre-wrap;\n}\n\n.ProseMirror pre {\n  white-space: pre-wrap;\n}\n\nimg.ProseMirror-separator {\n  display: inline !important;\n  border: none !important;\n  margin: 0 !important;\n  width: 1px !important;\n  height: 1px !important;\n}\n\n.ProseMirror-gapcursor {\n  display: none;\n  pointer-events: none;\n  position: absolute;\n  margin: 0;\n}\n\n.ProseMirror-gapcursor:after {\n  content: \"\";\n  display: block;\n  position: absolute;\n  top: -2px;\n  width: 20px;\n  border-top: 1px solid black;\n  animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;\n}\n\n@keyframes ProseMirror-cursor-blink {\n  to {\n    visibility: hidden;\n  }\n}\n\n.ProseMirror-hideselection *::selection {\n  background: transparent;\n}\n\n.ProseMirror-hideselection *::-moz-selection {\n  background: transparent;\n}\n\n.ProseMirror-hideselection * {\n  caret-color: transparent;\n}\n\n.ProseMirror-focused .ProseMirror-gapcursor {\n  display: block;\n}\n\n.tippy-box[data-animation=fade][data-state=hidden] {\n  opacity: 0\n}`;\n\nfunction createStyleTag(style, nonce, suffix) {\r\n    const tiptapStyleTag = document.querySelector(`style[data-tiptap-style${suffix ? `-${suffix}` : ''}]`);\r\n    if (tiptapStyleTag !== null) {\r\n        return tiptapStyleTag;\r\n    }\r\n    const styleNode = document.createElement('style');\r\n    if (nonce) {\r\n        styleNode.setAttribute('nonce', nonce);\r\n    }\r\n    styleNode.setAttribute(`data-tiptap-style${suffix ? `-${suffix}` : ''}`, '');\r\n    styleNode.innerHTML = style;\r\n    document.getElementsByTagName('head')[0].appendChild(styleNode);\r\n    return styleNode;\r\n}\n\nclass Editor extends EventEmitter {\r\n    constructor(options = {}) {\r\n        super();\r\n        this.isFocused = false;\r\n        this.extensionStorage = {};\r\n        this.options = {\r\n            element: document.createElement('div'),\r\n            content: '',\r\n            injectCSS: true,\r\n            injectNonce: undefined,\r\n            extensions: [],\r\n            autofocus: false,\r\n            editable: true,\r\n            editorProps: {},\r\n            parseOptions: {},\r\n            enableInputRules: true,\r\n            enablePasteRules: true,\r\n            enableCoreExtensions: true,\r\n            onBeforeCreate: () => null,\r\n            onCreate: () => null,\r\n            onUpdate: () => null,\r\n            onSelectionUpdate: () => null,\r\n            onTransaction: () => null,\r\n            onFocus: () => null,\r\n            onBlur: () => null,\r\n            onDestroy: () => null,\r\n        };\r\n        this.isCapturingTransaction = false;\r\n        this.capturedTransaction = null;\r\n        this.setOptions(options);\r\n        this.createExtensionManager();\r\n        this.createCommandManager();\r\n        this.createSchema();\r\n        this.on('beforeCreate', this.options.onBeforeCreate);\r\n        this.emit('beforeCreate', { editor: this });\r\n        this.createView();\r\n        this.injectCSS();\r\n        this.on('create', this.options.onCreate);\r\n        this.on('update', this.options.onUpdate);\r\n        this.on('selectionUpdate', this.options.onSelectionUpdate);\r\n        this.on('transaction', this.options.onTransaction);\r\n        this.on('focus', this.options.onFocus);\r\n        this.on('blur', this.options.onBlur);\r\n        this.on('destroy', this.options.onDestroy);\r\n        window.setTimeout(() => {\r\n            if (this.isDestroyed) {\r\n                return;\r\n            }\r\n            this.commands.focus(this.options.autofocus);\r\n            this.emit('create', { editor: this });\r\n        }, 0);\r\n    }\r\n    /**\r\n     * Returns the editor storage.\r\n     */\r\n    get storage() {\r\n        return this.extensionStorage;\r\n    }\r\n    /**\r\n     * An object of all registered commands.\r\n     */\r\n    get commands() {\r\n        return this.commandManager.commands;\r\n    }\r\n    /**\r\n     * Create a command chain to call multiple commands at once.\r\n     */\r\n    chain() {\r\n        return this.commandManager.chain();\r\n    }\r\n    /**\r\n     * Check if a command or a command chain can be executed. Without executing it.\r\n     */\r\n    can() {\r\n        return this.commandManager.can();\r\n    }\r\n    /**\r\n     * Inject CSS styles.\r\n     */\r\n    injectCSS() {\r\n        if (this.options.injectCSS && document) {\r\n            this.css = createStyleTag(style, this.options.injectNonce);\r\n        }\r\n    }\r\n    /**\r\n     * Update editor options.\r\n     *\r\n     * @param options A list of options\r\n     */\r\n    setOptions(options = {}) {\r\n        this.options = {\r\n            ...this.options,\r\n            ...options,\r\n        };\r\n        if (!this.view || !this.state || this.isDestroyed) {\r\n            return;\r\n        }\r\n        if (this.options.editorProps) {\r\n            this.view.setProps(this.options.editorProps);\r\n        }\r\n        this.view.updateState(this.state);\r\n    }\r\n    /**\r\n     * Update editable state of the editor.\r\n     */\r\n    setEditable(editable, emitUpdate = true) {\r\n        this.setOptions({ editable });\r\n        if (emitUpdate) {\r\n            this.emit('update', { editor: this, transaction: this.state.tr });\r\n        }\r\n    }\r\n    /**\r\n     * Returns whether the editor is editable.\r\n     */\r\n    get isEditable() {\r\n        // since plugins are applied after creating the view\r\n        // `editable` is always `true` for one tick.\r\n        // that’s why we also have to check for `options.editable`\r\n        return this.options.editable && this.view && this.view.editable;\r\n    }\r\n    /**\r\n     * Returns the editor state.\r\n     */\r\n    get state() {\r\n        return this.view.state;\r\n    }\r\n    /**\r\n     * Register a ProseMirror plugin.\r\n     *\r\n     * @param plugin A ProseMirror plugin\r\n     * @param handlePlugins Control how to merge the plugin into the existing plugins.\r\n     */\r\n    registerPlugin(plugin, handlePlugins) {\r\n        const plugins = isFunction(handlePlugins)\r\n            ? handlePlugins(plugin, [...this.state.plugins])\r\n            : [...this.state.plugins, plugin];\r\n        const state = this.state.reconfigure({ plugins });\r\n        this.view.updateState(state);\r\n    }\r\n    /**\r\n     * Unregister a ProseMirror plugin.\r\n     *\r\n     * @param nameOrPluginKey The plugins name\r\n     */\r\n    unregisterPlugin(nameOrPluginKey) {\r\n        if (this.isDestroyed) {\r\n            return;\r\n        }\r\n        // @ts-ignore\r\n        const name = typeof nameOrPluginKey === 'string' ? `${nameOrPluginKey}$` : nameOrPluginKey.key;\r\n        const state = this.state.reconfigure({\r\n            // @ts-ignore\r\n            plugins: this.state.plugins.filter(plugin => !plugin.key.startsWith(name)),\r\n        });\r\n        this.view.updateState(state);\r\n    }\r\n    /**\r\n     * Creates an extension manager.\r\n     */\r\n    createExtensionManager() {\r\n        const coreExtensions = this.options.enableCoreExtensions ? Object.values(extensions) : [];\r\n        const allExtensions = [...coreExtensions, ...this.options.extensions].filter(extension => {\r\n            return ['extension', 'node', 'mark'].includes(extension === null || extension === void 0 ? void 0 : extension.type);\r\n        });\r\n        this.extensionManager = new ExtensionManager(allExtensions, this);\r\n    }\r\n    /**\r\n     * Creates an command manager.\r\n     */\r\n    createCommandManager() {\r\n        this.commandManager = new CommandManager({\r\n            editor: this,\r\n        });\r\n    }\r\n    /**\r\n     * Creates a ProseMirror schema.\r\n     */\r\n    createSchema() {\r\n        this.schema = this.extensionManager.schema;\r\n    }\r\n    /**\r\n     * Creates a ProseMirror view.\r\n     */\r\n    createView() {\r\n        const doc = createDocument(this.options.content, this.schema, this.options.parseOptions);\r\n        const selection = resolveFocusPosition(doc, this.options.autofocus);\r\n        this.view = new EditorView(this.options.element, {\r\n            ...this.options.editorProps,\r\n            dispatchTransaction: this.dispatchTransaction.bind(this),\r\n            state: EditorState.create({\r\n                doc,\r\n                selection: selection || undefined,\r\n            }),\r\n        });\r\n        // `editor.view` is not yet available at this time.\r\n        // Therefore we will add all plugins and node views directly afterwards.\r\n        const newState = this.state.reconfigure({\r\n            plugins: this.extensionManager.plugins,\r\n        });\r\n        this.view.updateState(newState);\r\n        this.createNodeViews();\r\n        this.prependClass();\r\n        // Let’s store the editor instance in the DOM element.\r\n        // So we’ll have access to it for tests.\r\n        const dom = this.view.dom;\r\n        dom.editor = this;\r\n    }\r\n    /**\r\n     * Creates all node views.\r\n     */\r\n    createNodeViews() {\r\n        this.view.setProps({\r\n            nodeViews: this.extensionManager.nodeViews,\r\n        });\r\n    }\r\n    /**\r\n     * Prepend class name to element.\r\n     */\r\n    prependClass() {\r\n        this.view.dom.className = `tiptap ${this.view.dom.className}`;\r\n    }\r\n    captureTransaction(fn) {\r\n        this.isCapturingTransaction = true;\r\n        fn();\r\n        this.isCapturingTransaction = false;\r\n        const tr = this.capturedTransaction;\r\n        this.capturedTransaction = null;\r\n        return tr;\r\n    }\r\n    /**\r\n     * The callback over which to send transactions (state updates) produced by the view.\r\n     *\r\n     * @param transaction An editor state transaction\r\n     */\r\n    dispatchTransaction(transaction) {\r\n        // if the editor / the view of the editor was destroyed\r\n        // the transaction should not be dispatched as there is no view anymore.\r\n        if (this.view.isDestroyed) {\r\n            return;\r\n        }\r\n        if (this.isCapturingTransaction) {\r\n            if (!this.capturedTransaction) {\r\n                this.capturedTransaction = transaction;\r\n                return;\r\n            }\r\n            transaction.steps.forEach(step => { var _a; return (_a = this.capturedTransaction) === null || _a === void 0 ? void 0 : _a.step(step); });\r\n            return;\r\n        }\r\n        const state = this.state.apply(transaction);\r\n        const selectionHasChanged = !this.state.selection.eq(state.selection);\r\n        this.view.updateState(state);\r\n        this.emit('transaction', {\r\n            editor: this,\r\n            transaction,\r\n        });\r\n        if (selectionHasChanged) {\r\n            this.emit('selectionUpdate', {\r\n                editor: this,\r\n                transaction,\r\n            });\r\n        }\r\n        const focus = transaction.getMeta('focus');\r\n        const blur = transaction.getMeta('blur');\r\n        if (focus) {\r\n            this.emit('focus', {\r\n                editor: this,\r\n                event: focus.event,\r\n                transaction,\r\n            });\r\n        }\r\n        if (blur) {\r\n            this.emit('blur', {\r\n                editor: this,\r\n                event: blur.event,\r\n                transaction,\r\n            });\r\n        }\r\n        if (!transaction.docChanged || transaction.getMeta('preventUpdate')) {\r\n            return;\r\n        }\r\n        this.emit('update', {\r\n            editor: this,\r\n            transaction,\r\n        });\r\n    }\r\n    /**\r\n     * Get attributes of the currently selected node or mark.\r\n     */\r\n    getAttributes(nameOrType) {\r\n        return getAttributes(this.state, nameOrType);\r\n    }\r\n    isActive(nameOrAttributes, attributesOrUndefined) {\r\n        const name = typeof nameOrAttributes === 'string' ? nameOrAttributes : null;\r\n        const attributes = typeof nameOrAttributes === 'string' ? attributesOrUndefined : nameOrAttributes;\r\n        return isActive(this.state, name, attributes);\r\n    }\r\n    /**\r\n     * Get the document as JSON.\r\n     */\r\n    getJSON() {\r\n        return this.state.doc.toJSON();\r\n    }\r\n    /**\r\n     * Get the document as HTML.\r\n     */\r\n    getHTML() {\r\n        return getHTMLFromFragment(this.state.doc.content, this.schema);\r\n    }\r\n    /**\r\n     * Get the document as text.\r\n     */\r\n    getText(options) {\r\n        const { blockSeparator = '\\n\\n', textSerializers = {} } = options || {};\r\n        return getText(this.state.doc, {\r\n            blockSeparator,\r\n            textSerializers: {\r\n                ...getTextSerializersFromSchema(this.schema),\r\n                ...textSerializers,\r\n            },\r\n        });\r\n    }\r\n    /**\r\n     * Check if there is no content.\r\n     */\r\n    get isEmpty() {\r\n        return isNodeEmpty(this.state.doc);\r\n    }\r\n    /**\r\n     * Get the number of characters for the current document.\r\n     *\r\n     * @deprecated\r\n     */\r\n    getCharacterCount() {\r\n        console.warn('[tiptap warn]: \"editor.getCharacterCount()\" is deprecated. Please use \"editor.storage.characterCount.characters()\" instead.');\r\n        return this.state.doc.content.size - 2;\r\n    }\r\n    /**\r\n     * Destroy the editor.\r\n     */\r\n    destroy() {\r\n        this.emit('destroy');\r\n        if (this.view) {\r\n            this.view.destroy();\r\n        }\r\n        this.removeAllListeners();\r\n    }\r\n    /**\r\n     * Check if the editor is already destroyed.\r\n     */\r\n    get isDestroyed() {\r\n        var _a;\r\n        // @ts-ignore\r\n        return !((_a = this.view) === null || _a === void 0 ? void 0 : _a.docView);\r\n    }\r\n}\n\n/**\r\n * Build an input rule that adds a mark when the\r\n * matched text is typed into it.\r\n */\r\nfunction markInputRule(config) {\r\n    return new InputRule({\r\n        find: config.find,\r\n        handler: ({ state, range, match }) => {\r\n            const attributes = callOrReturn(config.getAttributes, undefined, match);\r\n            if (attributes === false || attributes === null) {\r\n                return null;\r\n            }\r\n            const { tr } = state;\r\n            const captureGroup = match[match.length - 1];\r\n            const fullMatch = match[0];\r\n            if (captureGroup) {\r\n                const startSpaces = fullMatch.search(/\\S/);\r\n                const textStart = range.from + fullMatch.indexOf(captureGroup);\r\n                const textEnd = textStart + captureGroup.length;\r\n                const excludedMarks = getMarksBetween(range.from, range.to, state.doc)\r\n                    .filter(item => {\r\n                    // @ts-ignore\r\n                    const excluded = item.mark.type.excluded;\r\n                    return excluded.find(type => type === config.type && type !== item.mark.type);\r\n                })\r\n                    .filter(item => item.to > textStart);\r\n                if (excludedMarks.length) {\r\n                    return null;\r\n                }\r\n                if (textEnd < range.to) {\r\n                    tr.delete(textEnd, range.to);\r\n                }\r\n                if (textStart > range.from) {\r\n                    tr.delete(range.from + startSpaces, textStart);\r\n                }\r\n                const markEnd = range.from + startSpaces + captureGroup.length;\r\n                tr.addMark(range.from + startSpaces, markEnd, config.type.create(attributes || {}));\r\n                tr.removeStoredMark(config.type);\r\n            }\r\n        },\r\n    });\r\n}\n\n/**\r\n * Build an input rule that adds a node when the\r\n * matched text is typed into it.\r\n */\r\nfunction nodeInputRule(config) {\r\n    return new InputRule({\r\n        find: config.find,\r\n        handler: ({ state, range, match }) => {\r\n            const attributes = callOrReturn(config.getAttributes, undefined, match) || {};\r\n            const { tr } = state;\r\n            const start = range.from;\r\n            let end = range.to;\r\n            const newNode = config.type.create(attributes);\r\n            if (match[1]) {\r\n                const offset = match[0].lastIndexOf(match[1]);\r\n                let matchStart = start + offset;\r\n                if (matchStart > end) {\r\n                    matchStart = end;\r\n                }\r\n                else {\r\n                    end = matchStart + match[1].length;\r\n                }\r\n                // insert last typed character\r\n                const lastChar = match[0][match[0].length - 1];\r\n                tr.insertText(lastChar, start + match[0].length - 1);\r\n                // insert node from input rule\r\n                tr.replaceWith(matchStart, end, newNode);\r\n            }\r\n            else if (match[0]) {\r\n                tr.insert(start - 1, config.type.create(attributes)).delete(tr.mapping.map(start), tr.mapping.map(end));\r\n            }\r\n            tr.scrollIntoView();\r\n        },\r\n    });\r\n}\n\n/**\r\n * Build an input rule that changes the type of a textblock when the\r\n * matched text is typed into it. When using a regular expresion you’ll\r\n * probably want the regexp to start with `^`, so that the pattern can\r\n * only occur at the start of a textblock.\r\n */\r\nfunction textblockTypeInputRule(config) {\r\n    return new InputRule({\r\n        find: config.find,\r\n        handler: ({ state, range, match }) => {\r\n            const $start = state.doc.resolve(range.from);\r\n            const attributes = callOrReturn(config.getAttributes, undefined, match) || {};\r\n            if (!$start.node(-1).canReplaceWith($start.index(-1), $start.indexAfter(-1), config.type)) {\r\n                return null;\r\n            }\r\n            state.tr\r\n                .delete(range.from, range.to)\r\n                .setBlockType(range.from, range.from, config.type, attributes);\r\n        },\r\n    });\r\n}\n\n/**\r\n * Build an input rule that replaces text when the\r\n * matched text is typed into it.\r\n */\r\nfunction textInputRule(config) {\r\n    return new InputRule({\r\n        find: config.find,\r\n        handler: ({ state, range, match }) => {\r\n            let insert = config.replace;\r\n            let start = range.from;\r\n            const end = range.to;\r\n            if (match[1]) {\r\n                const offset = match[0].lastIndexOf(match[1]);\r\n                insert += match[0].slice(offset + match[1].length);\r\n                start += offset;\r\n                const cutOff = start - end;\r\n                if (cutOff > 0) {\r\n                    insert = match[0].slice(offset - cutOff, offset) + insert;\r\n                    start = end;\r\n                }\r\n            }\r\n            state.tr.insertText(insert, start, end);\r\n        },\r\n    });\r\n}\n\n/**\r\n * Build an input rule for automatically wrapping a textblock when a\r\n * given string is typed. When using a regular expresion you’ll\r\n * probably want the regexp to start with `^`, so that the pattern can\r\n * only occur at the start of a textblock.\r\n *\r\n * `type` is the type of node to wrap in.\r\n *\r\n * By default, if there’s a node with the same type above the newly\r\n * wrapped node, the rule will try to join those\r\n * two nodes. You can pass a join predicate, which takes a regular\r\n * expression match and the node before the wrapped node, and can\r\n * return a boolean to indicate whether a join should happen.\r\n */\r\nfunction wrappingInputRule(config) {\r\n    return new InputRule({\r\n        find: config.find,\r\n        handler: ({ state, range, match, chain, }) => {\r\n            const attributes = callOrReturn(config.getAttributes, undefined, match) || {};\r\n            const tr = state.tr.delete(range.from, range.to);\r\n            const $start = tr.doc.resolve(range.from);\r\n            const blockRange = $start.blockRange();\r\n            const wrapping = blockRange && findWrapping(blockRange, config.type, attributes);\r\n            if (!wrapping) {\r\n                return null;\r\n            }\r\n            tr.wrap(blockRange, wrapping);\r\n            if (config.keepMarks && config.editor) {\r\n                const { selection, storedMarks } = state;\r\n                const { splittableMarks } = config.editor.extensionManager;\r\n                const marks = storedMarks || (selection.$to.parentOffset && selection.$from.marks());\r\n                if (marks) {\r\n                    const filteredMarks = marks.filter(mark => splittableMarks.includes(mark.type.name));\r\n                    tr.ensureMarks(filteredMarks);\r\n                }\r\n            }\r\n            if (config.keepAttributes) {\r\n                /** If the nodeType is `bulletList` or `orderedList` set the `nodeType` as `listItem` */\r\n                const nodeType = config.type.name === 'bulletList' || config.type.name === 'orderedList' ? 'listItem' : 'taskList';\r\n                chain().updateAttributes(nodeType, attributes).run();\r\n            }\r\n            const before = tr.doc.resolve(range.from - 1).nodeBefore;\r\n            if (before\r\n                && before.type === config.type\r\n                && canJoin(tr.doc, range.from - 1)\r\n                && (!config.joinPredicate || config.joinPredicate(match, before))) {\r\n                tr.join(range.from - 1);\r\n            }\r\n        },\r\n    });\r\n}\n\nclass Mark {\r\n    constructor(config = {}) {\r\n        this.type = 'mark';\r\n        this.name = 'mark';\r\n        this.parent = null;\r\n        this.child = null;\r\n        this.config = {\r\n            name: this.name,\r\n            defaultOptions: {},\r\n        };\r\n        this.config = {\r\n            ...this.config,\r\n            ...config,\r\n        };\r\n        this.name = this.config.name;\r\n        if (config.defaultOptions) {\r\n            console.warn(`[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${this.name}\".`);\r\n        }\r\n        // TODO: remove `addOptions` fallback\r\n        this.options = this.config.defaultOptions;\r\n        if (this.config.addOptions) {\r\n            this.options = callOrReturn(getExtensionField(this, 'addOptions', {\r\n                name: this.name,\r\n            }));\r\n        }\r\n        this.storage = callOrReturn(getExtensionField(this, 'addStorage', {\r\n            name: this.name,\r\n            options: this.options,\r\n        })) || {};\r\n    }\r\n    static create(config = {}) {\r\n        return new Mark(config);\r\n    }\r\n    configure(options = {}) {\r\n        // return a new instance so we can use the same extension\r\n        // with different calls of `configure`\r\n        const extension = this.extend();\r\n        extension.options = mergeDeep(this.options, options);\r\n        extension.storage = callOrReturn(getExtensionField(extension, 'addStorage', {\r\n            name: extension.name,\r\n            options: extension.options,\r\n        }));\r\n        return extension;\r\n    }\r\n    extend(extendedConfig = {}) {\r\n        const extension = new Mark(extendedConfig);\r\n        extension.parent = this;\r\n        this.child = extension;\r\n        extension.name = extendedConfig.name ? extendedConfig.name : extension.parent.name;\r\n        if (extendedConfig.defaultOptions) {\r\n            console.warn(`[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${extension.name}\".`);\r\n        }\r\n        extension.options = callOrReturn(getExtensionField(extension, 'addOptions', {\r\n            name: extension.name,\r\n        }));\r\n        extension.storage = callOrReturn(getExtensionField(extension, 'addStorage', {\r\n            name: extension.name,\r\n            options: extension.options,\r\n        }));\r\n        return extension;\r\n    }\r\n    static handleExit({ editor, mark }) {\r\n        const { tr } = editor.state;\r\n        const currentPos = editor.state.selection.$from;\r\n        const isAtEnd = currentPos.pos === currentPos.end();\r\n        if (isAtEnd) {\r\n            const currentMarks = currentPos.marks();\r\n            const isInMark = !!currentMarks.find(m => (m === null || m === void 0 ? void 0 : m.type.name) === mark.name);\r\n            if (!isInMark) {\r\n                return false;\r\n            }\r\n            const removeMark = currentMarks.find(m => (m === null || m === void 0 ? void 0 : m.type.name) === mark.name);\r\n            if (removeMark) {\r\n                tr.removeStoredMark(removeMark);\r\n            }\r\n            tr.insertText(' ', currentPos.pos);\r\n            editor.view.dispatch(tr);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\n\nclass Node {\r\n    constructor(config = {}) {\r\n        this.type = 'node';\r\n        this.name = 'node';\r\n        this.parent = null;\r\n        this.child = null;\r\n        this.config = {\r\n            name: this.name,\r\n            defaultOptions: {},\r\n        };\r\n        this.config = {\r\n            ...this.config,\r\n            ...config,\r\n        };\r\n        this.name = this.config.name;\r\n        if (config.defaultOptions) {\r\n            console.warn(`[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${this.name}\".`);\r\n        }\r\n        // TODO: remove `addOptions` fallback\r\n        this.options = this.config.defaultOptions;\r\n        if (this.config.addOptions) {\r\n            this.options = callOrReturn(getExtensionField(this, 'addOptions', {\r\n                name: this.name,\r\n            }));\r\n        }\r\n        this.storage = callOrReturn(getExtensionField(this, 'addStorage', {\r\n            name: this.name,\r\n            options: this.options,\r\n        })) || {};\r\n    }\r\n    static create(config = {}) {\r\n        return new Node(config);\r\n    }\r\n    configure(options = {}) {\r\n        // return a new instance so we can use the same extension\r\n        // with different calls of `configure`\r\n        const extension = this.extend();\r\n        extension.options = mergeDeep(this.options, options);\r\n        extension.storage = callOrReturn(getExtensionField(extension, 'addStorage', {\r\n            name: extension.name,\r\n            options: extension.options,\r\n        }));\r\n        return extension;\r\n    }\r\n    extend(extendedConfig = {}) {\r\n        const extension = new Node(extendedConfig);\r\n        extension.parent = this;\r\n        this.child = extension;\r\n        extension.name = extendedConfig.name ? extendedConfig.name : extension.parent.name;\r\n        if (extendedConfig.defaultOptions) {\r\n            console.warn(`[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${extension.name}\".`);\r\n        }\r\n        extension.options = callOrReturn(getExtensionField(extension, 'addOptions', {\r\n            name: extension.name,\r\n        }));\r\n        extension.storage = callOrReturn(getExtensionField(extension, 'addStorage', {\r\n            name: extension.name,\r\n            options: extension.options,\r\n        }));\r\n        return extension;\r\n    }\r\n}\n\nfunction isAndroid() {\r\n    return navigator.platform === 'Android' || /android/i.test(navigator.userAgent);\r\n}\n\nclass NodeView {\r\n    constructor(component, props, options) {\r\n        this.isDragging = false;\r\n        this.component = component;\r\n        this.editor = props.editor;\r\n        this.options = {\r\n            stopEvent: null,\r\n            ignoreMutation: null,\r\n            ...options,\r\n        };\r\n        this.extension = props.extension;\r\n        this.node = props.node;\r\n        this.decorations = props.decorations;\r\n        this.getPos = props.getPos;\r\n        this.mount();\r\n    }\r\n    mount() {\r\n        // eslint-disable-next-line\r\n        return;\r\n    }\r\n    get dom() {\r\n        return this.editor.view.dom;\r\n    }\r\n    get contentDOM() {\r\n        return null;\r\n    }\r\n    onDragStart(event) {\r\n        var _a, _b, _c, _d, _e, _f, _g;\r\n        const { view } = this.editor;\r\n        const target = event.target;\r\n        // get the drag handle element\r\n        // `closest` is not available for text nodes so we may have to use its parent\r\n        const dragHandle = target.nodeType === 3\r\n            ? (_a = target.parentElement) === null || _a === void 0 ? void 0 : _a.closest('[data-drag-handle]')\r\n            : target.closest('[data-drag-handle]');\r\n        if (!this.dom || ((_b = this.contentDOM) === null || _b === void 0 ? void 0 : _b.contains(target)) || !dragHandle) {\r\n            return;\r\n        }\r\n        let x = 0;\r\n        let y = 0;\r\n        // calculate offset for drag element if we use a different drag handle element\r\n        if (this.dom !== dragHandle) {\r\n            const domBox = this.dom.getBoundingClientRect();\r\n            const handleBox = dragHandle.getBoundingClientRect();\r\n            // In React, we have to go through nativeEvent to reach offsetX/offsetY.\r\n            const offsetX = (_c = event.offsetX) !== null && _c !== void 0 ? _c : (_d = event.nativeEvent) === null || _d === void 0 ? void 0 : _d.offsetX;\r\n            const offsetY = (_e = event.offsetY) !== null && _e !== void 0 ? _e : (_f = event.nativeEvent) === null || _f === void 0 ? void 0 : _f.offsetY;\r\n            x = handleBox.x - domBox.x + offsetX;\r\n            y = handleBox.y - domBox.y + offsetY;\r\n        }\r\n        (_g = event.dataTransfer) === null || _g === void 0 ? void 0 : _g.setDragImage(this.dom, x, y);\r\n        // we need to tell ProseMirror that we want to move the whole node\r\n        // so we create a NodeSelection\r\n        const selection = NodeSelection.create(view.state.doc, this.getPos());\r\n        const transaction = view.state.tr.setSelection(selection);\r\n        view.dispatch(transaction);\r\n    }\r\n    stopEvent(event) {\r\n        var _a;\r\n        if (!this.dom) {\r\n            return false;\r\n        }\r\n        if (typeof this.options.stopEvent === 'function') {\r\n            return this.options.stopEvent({ event });\r\n        }\r\n        const target = event.target;\r\n        const isInElement = this.dom.contains(target) && !((_a = this.contentDOM) === null || _a === void 0 ? void 0 : _a.contains(target));\r\n        // any event from child nodes should be handled by ProseMirror\r\n        if (!isInElement) {\r\n            return false;\r\n        }\r\n        const isDragEvent = event.type.startsWith('drag');\r\n        const isDropEvent = event.type === 'drop';\r\n        const isInput = ['INPUT', 'BUTTON', 'SELECT', 'TEXTAREA'].includes(target.tagName) || target.isContentEditable;\r\n        // any input event within node views should be ignored by ProseMirror\r\n        if (isInput && !isDropEvent && !isDragEvent) {\r\n            return true;\r\n        }\r\n        const { isEditable } = this.editor;\r\n        const { isDragging } = this;\r\n        const isDraggable = !!this.node.type.spec.draggable;\r\n        const isSelectable = NodeSelection.isSelectable(this.node);\r\n        const isCopyEvent = event.type === 'copy';\r\n        const isPasteEvent = event.type === 'paste';\r\n        const isCutEvent = event.type === 'cut';\r\n        const isClickEvent = event.type === 'mousedown';\r\n        // ProseMirror tries to drag selectable nodes\r\n        // even if `draggable` is set to `false`\r\n        // this fix prevents that\r\n        if (!isDraggable && isSelectable && isDragEvent) {\r\n            event.preventDefault();\r\n        }\r\n        if (isDraggable && isDragEvent && !isDragging) {\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n        // we have to store that dragging started\r\n        if (isDraggable && isEditable && !isDragging && isClickEvent) {\r\n            const dragHandle = target.closest('[data-drag-handle]');\r\n            const isValidDragHandle = dragHandle && (this.dom === dragHandle || this.dom.contains(dragHandle));\r\n            if (isValidDragHandle) {\r\n                this.isDragging = true;\r\n                document.addEventListener('dragend', () => {\r\n                    this.isDragging = false;\r\n                }, { once: true });\r\n                document.addEventListener('drop', () => {\r\n                    this.isDragging = false;\r\n                }, { once: true });\r\n                document.addEventListener('mouseup', () => {\r\n                    this.isDragging = false;\r\n                }, { once: true });\r\n            }\r\n        }\r\n        // these events are handled by prosemirror\r\n        if (isDragging\r\n            || isDropEvent\r\n            || isCopyEvent\r\n            || isPasteEvent\r\n            || isCutEvent\r\n            || (isClickEvent && isSelectable)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    ignoreMutation(mutation) {\r\n        if (!this.dom || !this.contentDOM) {\r\n            return true;\r\n        }\r\n        if (typeof this.options.ignoreMutation === 'function') {\r\n            return this.options.ignoreMutation({ mutation });\r\n        }\r\n        // a leaf/atom node is like a black box for ProseMirror\r\n        // and should be fully handled by the node view\r\n        if (this.node.isLeaf || this.node.isAtom) {\r\n            return true;\r\n        }\r\n        // ProseMirror should handle any selections\r\n        if (mutation.type === 'selection') {\r\n            return false;\r\n        }\r\n        // try to prevent a bug on iOS and Android that will break node views on enter\r\n        // this is because ProseMirror can’t preventDispatch on enter\r\n        // this will lead to a re-render of the node view on enter\r\n        // see: https://github.com/ueberdosis/tiptap/issues/1214\r\n        // see: https://github.com/ueberdosis/tiptap/issues/2534\r\n        if (this.dom.contains(mutation.target)\r\n            && mutation.type === 'childList'\r\n            && (isiOS() || isAndroid())\r\n            && this.editor.isFocused) {\r\n            const changedNodes = [\r\n                ...Array.from(mutation.addedNodes),\r\n                ...Array.from(mutation.removedNodes),\r\n            ];\r\n            // we’ll check if every changed node is contentEditable\r\n            // to make sure it’s probably mutated by ProseMirror\r\n            if (changedNodes.every(node => node.isContentEditable)) {\r\n                return false;\r\n            }\r\n        }\r\n        // we will allow mutation contentDOM with attributes\r\n        // so we can for example adding classes within our node view\r\n        if (this.contentDOM === mutation.target && mutation.type === 'attributes') {\r\n            return true;\r\n        }\r\n        // ProseMirror should handle any changes within contentDOM\r\n        if (this.contentDOM.contains(mutation.target)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    updateAttributes(attributes) {\r\n        this.editor.commands.command(({ tr }) => {\r\n            const pos = this.getPos();\r\n            tr.setNodeMarkup(pos, undefined, {\r\n                ...this.node.attrs,\r\n                ...attributes,\r\n            });\r\n            return true;\r\n        });\r\n    }\r\n    deleteNode() {\r\n        const from = this.getPos();\r\n        const to = from + this.node.nodeSize;\r\n        this.editor.commands.deleteRange({ from, to });\r\n    }\r\n}\n\n/**\r\n * Build an paste rule that adds a mark when the\r\n * matched text is pasted into it.\r\n */\r\nfunction markPasteRule(config) {\r\n    return new PasteRule({\r\n        find: config.find,\r\n        handler: ({ state, range, match, pasteEvent, }) => {\r\n            const attributes = callOrReturn(config.getAttributes, undefined, match, pasteEvent);\r\n            if (attributes === false || attributes === null) {\r\n                return null;\r\n            }\r\n            const { tr } = state;\r\n            const captureGroup = match[match.length - 1];\r\n            const fullMatch = match[0];\r\n            let markEnd = range.to;\r\n            if (captureGroup) {\r\n                const startSpaces = fullMatch.search(/\\S/);\r\n                const textStart = range.from + fullMatch.indexOf(captureGroup);\r\n                const textEnd = textStart + captureGroup.length;\r\n                const excludedMarks = getMarksBetween(range.from, range.to, state.doc)\r\n                    .filter(item => {\r\n                    // @ts-ignore\r\n                    const excluded = item.mark.type.excluded;\r\n                    return excluded.find(type => type === config.type && type !== item.mark.type);\r\n                })\r\n                    .filter(item => item.to > textStart);\r\n                if (excludedMarks.length) {\r\n                    return null;\r\n                }\r\n                if (textEnd < range.to) {\r\n                    tr.delete(textEnd, range.to);\r\n                }\r\n                if (textStart > range.from) {\r\n                    tr.delete(range.from + startSpaces, textStart);\r\n                }\r\n                markEnd = range.from + startSpaces + captureGroup.length;\r\n                tr.addMark(range.from + startSpaces, markEnd, config.type.create(attributes || {}));\r\n                tr.removeStoredMark(config.type);\r\n            }\r\n        },\r\n    });\r\n}\n\n// source: https://stackoverflow.com/a/6969486\r\nfunction escapeForRegEx(string) {\r\n    return string.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n}\n\nfunction isString(value) {\r\n    return typeof value === 'string';\r\n}\n\n/**\r\n * Build an paste rule that adds a node when the\r\n * matched text is pasted into it.\r\n */\r\nfunction nodePasteRule(config) {\r\n    return new PasteRule({\r\n        find: config.find,\r\n        handler({ match, chain, range, pasteEvent, }) {\r\n            const attributes = callOrReturn(config.getAttributes, undefined, match, pasteEvent);\r\n            if (attributes === false || attributes === null) {\r\n                return null;\r\n            }\r\n            if (match.input) {\r\n                chain().deleteRange(range).insertContentAt(range.from, {\r\n                    type: config.type.name,\r\n                    attrs: attributes,\r\n                });\r\n            }\r\n        },\r\n    });\r\n}\n\n/**\r\n * Build an paste rule that replaces text when the\r\n * matched text is pasted into it.\r\n */\r\nfunction textPasteRule(config) {\r\n    return new PasteRule({\r\n        find: config.find,\r\n        handler: ({ state, range, match }) => {\r\n            let insert = config.replace;\r\n            let start = range.from;\r\n            const end = range.to;\r\n            if (match[1]) {\r\n                const offset = match[0].lastIndexOf(match[1]);\r\n                insert += match[0].slice(offset + match[1].length);\r\n                start += offset;\r\n                const cutOff = start - end;\r\n                if (cutOff > 0) {\r\n                    insert = match[0].slice(offset - cutOff, offset) + insert;\r\n                    start = end;\r\n                }\r\n            }\r\n            state.tr.insertText(insert, start, end);\r\n        },\r\n    });\r\n}\n\nclass Tracker {\r\n    constructor(transaction) {\r\n        this.transaction = transaction;\r\n        this.currentStep = this.transaction.steps.length;\r\n    }\r\n    map(position) {\r\n        let deleted = false;\r\n        const mappedPosition = this.transaction.steps\r\n            .slice(this.currentStep)\r\n            .reduce((newPosition, step) => {\r\n            const mapResult = step.getMap().mapResult(newPosition);\r\n            if (mapResult.deleted) {\r\n                deleted = true;\r\n            }\r\n            return mapResult.pos;\r\n        }, position);\r\n        return {\r\n            position: mappedPosition,\r\n            deleted,\r\n        };\r\n    }\r\n}\n\nexport { CommandManager, Editor, Extension, InputRule, Mark, Node, NodeView, PasteRule, Tracker, callOrReturn, combineTransactionSteps, createChainableState, createDocument, createNodeFromContent, createStyleTag, defaultBlockAt, deleteProps, elementFromString, escapeForRegEx, extensions, findChildren, findChildrenInRange, findDuplicates, findParentNode, findParentNodeClosestToPos, fromString, generateHTML, generateJSON, generateText, getAttributes, getAttributesFromExtensions, getChangedRanges, getDebugJSON, getExtensionField, getHTMLFromFragment, getMarkAttributes, getMarkRange, getMarkType, getMarksBetween, getNodeAtPosition, getNodeAttributes, getNodeType, getRenderedAttributes, getSchema, getSchemaByResolvedExtensions, getSchemaTypeByName, getSchemaTypeNameByName, getSplittedAttributes, getText, getTextBetween, getTextContentFromNodes, getTextSerializersFromSchema, injectExtensionAttributesToParseRule, inputRulesPlugin, isActive, isAtEndOfNode, isAtStartOfNode, isEmptyObject, isExtensionRulesEnabled, isFunction, isList, isMacOS, isMarkActive, isNodeActive, isNodeEmpty, isNodeSelection, isNumber, isPlainObject, isRegExp, isString, isTextSelection, isiOS, markInputRule, markPasteRule, mergeAttributes, mergeDeep, minMax, nodeInputRule, nodePasteRule, objectIncludes, pasteRulesPlugin, posToDOMRect, removeDuplicates, resolveFocusPosition, selectionToInsertionEnd, splitExtensions, textInputRule, textPasteRule, textblockTypeInputRule, wrappingInputRule };\n//# sourceMappingURL=index.js.map\n","import { Mark, mergeAttributes, markInputRule, markPasteRule } from '@tiptap/core';\n\nconst starInputRegex = /(?:^|\\s)((?:\\*\\*)((?:[^*]+))(?:\\*\\*))$/;\r\nconst starPasteRegex = /(?:^|\\s)((?:\\*\\*)((?:[^*]+))(?:\\*\\*))/g;\r\nconst underscoreInputRegex = /(?:^|\\s)((?:__)((?:[^__]+))(?:__))$/;\r\nconst underscorePasteRegex = /(?:^|\\s)((?:__)((?:[^__]+))(?:__))/g;\r\nconst Bold = Mark.create({\r\n    name: 'bold',\r\n    addOptions() {\r\n        return {\r\n            HTMLAttributes: {},\r\n        };\r\n    },\r\n    parseHTML() {\r\n        return [\r\n            {\r\n                tag: 'strong',\r\n            },\r\n            {\r\n                tag: 'b',\r\n                getAttrs: node => node.style.fontWeight !== 'normal' && null,\r\n            },\r\n            {\r\n                style: 'font-weight',\r\n                getAttrs: value => /^(bold(er)?|[5-9]\\d{2,})$/.test(value) && null,\r\n            },\r\n        ];\r\n    },\r\n    renderHTML({ HTMLAttributes }) {\r\n        return ['strong', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\r\n    },\r\n    addCommands() {\r\n        return {\r\n            setBold: () => ({ commands }) => {\r\n                return commands.setMark(this.name);\r\n            },\r\n            toggleBold: () => ({ commands }) => {\r\n                return commands.toggleMark(this.name);\r\n            },\r\n            unsetBold: () => ({ commands }) => {\r\n                return commands.unsetMark(this.name);\r\n            },\r\n        };\r\n    },\r\n    addKeyboardShortcuts() {\r\n        return {\r\n            'Mod-b': () => this.editor.commands.toggleBold(),\r\n            'Mod-B': () => this.editor.commands.toggleBold(),\r\n        };\r\n    },\r\n    addInputRules() {\r\n        return [\r\n            markInputRule({\r\n                find: starInputRegex,\r\n                type: this.type,\r\n            }),\r\n            markInputRule({\r\n                find: underscoreInputRegex,\r\n                type: this.type,\r\n            }),\r\n        ];\r\n    },\r\n    addPasteRules() {\r\n        return [\r\n            markPasteRule({\r\n                find: starPasteRegex,\r\n                type: this.type,\r\n            }),\r\n            markPasteRule({\r\n                find: underscorePasteRegex,\r\n                type: this.type,\r\n            }),\r\n        ];\r\n    },\r\n});\n\nexport { Bold, Bold as default, starInputRegex, starPasteRegex, underscoreInputRegex, underscorePasteRegex };\n//# sourceMappingURL=index.js.map\n","import { Mark, mergeAttributes, markInputRule, markPasteRule } from '@tiptap/core';\n\nconst inputRegex = /(?:^|\\s)((?:`)((?:[^`]+))(?:`))$/;\r\nconst pasteRegex = /(?:^|\\s)((?:`)((?:[^`]+))(?:`))/g;\r\nconst Code = Mark.create({\r\n    name: 'code',\r\n    addOptions() {\r\n        return {\r\n            HTMLAttributes: {},\r\n        };\r\n    },\r\n    excludes: '_',\r\n    code: true,\r\n    exitable: true,\r\n    parseHTML() {\r\n        return [\r\n            { tag: 'code' },\r\n        ];\r\n    },\r\n    renderHTML({ HTMLAttributes }) {\r\n        return ['code', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\r\n    },\r\n    addCommands() {\r\n        return {\r\n            setCode: () => ({ commands }) => {\r\n                return commands.setMark(this.name);\r\n            },\r\n            toggleCode: () => ({ commands }) => {\r\n                return commands.toggleMark(this.name);\r\n            },\r\n            unsetCode: () => ({ commands }) => {\r\n                return commands.unsetMark(this.name);\r\n            },\r\n        };\r\n    },\r\n    addKeyboardShortcuts() {\r\n        return {\r\n            'Mod-e': () => this.editor.commands.toggleCode(),\r\n        };\r\n    },\r\n    addInputRules() {\r\n        return [\r\n            markInputRule({\r\n                find: inputRegex,\r\n                type: this.type,\r\n            }),\r\n        ];\r\n    },\r\n    addPasteRules() {\r\n        return [\r\n            markPasteRule({\r\n                find: pasteRegex,\r\n                type: this.type,\r\n            }),\r\n        ];\r\n    },\r\n});\n\nexport { Code, Code as default, inputRegex, pasteRegex };\n//# sourceMappingURL=index.js.map\n","/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template K,V\n * @param {Map<K,V>} m\n * @return {Map<K,V>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template {Map<any, any>} MAP\n * @template {MAP extends Map<any,infer V> ? function():V : unknown} CF\n * @param {MAP} map\n * @param {MAP extends Map<infer K,any> ? K : unknown} key\n * @param {CF} createT\n * @return {ReturnType<CF>}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n","/**\n * Utility module to work with sets.\n *\n * @module set\n */\n\nexport const create = () => new Set()\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {Array<T>}\n */\nexport const toArray = set => Array.from(set)\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {T}\n */\nexport const first = set =>\n  set.values().next().value || undefined\n\n/**\n * @template T\n * @param {Iterable<T>} entries\n * @return {Set<T>}\n */\nexport const from = entries => new Set(entries)\n","/**\n * Utility module to work with Arrays.\n *\n * @module array\n */\n\nimport * as set from './set.js'\n\n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {ArrayLike<L>} arr\n * @return {L}\n */\nexport const last = arr => arr[arr.length - 1]\n\n/**\n * @template C\n * @return {Array<C>}\n */\nexport const create = () => /** @type {Array<C>} */ ([])\n\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\n\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */\nexport const appendTo = (dest, src) => {\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i])\n  }\n}\n\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */\nexport const from = Array.from\n\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template ITEM\n * @template {ArrayLike<ITEM>} ARR\n *\n * @param {ARR} arr\n * @param {function(ITEM, number, ARR):boolean} f\n * @return {boolean}\n */\nexport const every = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (!f(arr[i], i, arr)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template S\n * @template {ArrayLike<S>} ARR\n * @param {ARR} arr\n * @param {function(S, number, ARR):boolean} f\n * @return {boolean}\n */\nexport const some = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (f(arr[i], i, arr)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @template ELEM\n *\n * @param {ArrayLike<ELEM>} a\n * @param {ArrayLike<ELEM>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\n\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */\nexport const flatten = arr => fold(arr, /** @type {Array<ELEM>} */ ([]), (acc, val) => acc.concat(val))\n\n/**\n * @template T\n * @param {number} len\n * @param {function(number, Array<T>):T} f\n * @return {Array<T>}\n */\nexport const unfold = (len, f) => {\n  const array = new Array(len)\n  for (let i = 0; i < len; i++) {\n    array[i] = f(i, array)\n  }\n  return array\n}\n\n/**\n * @template T\n * @template RESULT\n * @param {Array<T>} arr\n * @param {RESULT} seed\n * @param {function(RESULT, T, number):RESULT} folder\n */\nexport const fold = (arr, seed, folder) => arr.reduce(folder, seed)\n\nexport const isArray = Array.isArray\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {Array<T>}\n */\nexport const unique = arr => from(set.from(arr))\n\n/**\n * @template T\n * @template M\n * @param {ArrayLike<T>} arr\n * @param {function(T):M} mapper\n * @return {Array<T>}\n */\nexport const uniqueBy = (arr, mapper) => {\n  /**\n   * @type {Set<M>}\n   */\n  const happened = set.create()\n  /**\n   * @type {Array<T>}\n   */\n  const result = []\n  for (let i = 0; i < arr.length; i++) {\n    const el = arr[i]\n    const mapped = mapper(el)\n    if (!happened.has(mapped)) {\n      happened.add(mapped)\n      result.push(el)\n    }\n  }\n  return result\n}\n\n/**\n * @template {ArrayLike<any>} ARR\n * @template {function(ARR extends ArrayLike<infer T> ? T : never, number, ARR):any} MAPPER\n * @param {ARR} arr\n * @param {MAPPER} mapper\n * @return {Array<MAPPER extends function(...any): infer M ? M : never>}\n */\nexport const map = (arr, mapper) => {\n  /**\n   * @type {Array<any>}\n   */\n  const res = Array(arr.length)\n  for (let i = 0; i < arr.length; i++) {\n    res[i] = mapper(/** @type {any} */ (arr[i]), i, /** @type {any} */ (arr))\n  }\n  return /** @type {any} */ (res)\n}\n","/**\n * Observable class prototype.\n *\n * @module observable\n */\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as array from './array.js'\n\n/**\n * Handles named events.\n * @experimental\n *\n * This is basically a (better typed) duplicate of Observable, which will replace Observable in the\n * next release.\n *\n * @template {{[key in keyof EVENTS]: function(...any):void}} EVENTS\n */\nexport class ObservableV2 {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<string, Set<any>>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, /** @type {string} */ (name), set.create).add(f)\n    return f\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, /** @type {any} */ (_f))\n      f(...args)\n    }\n    this.on(name, /** @type {any} */ (_f))\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name The event name.\n   * @param {Parameters<EVENTS[NAME]>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n\n/* c8 ignore start */\n/**\n * Handles named events.\n *\n * @deprecated\n * @template N\n */\nexport class Observable {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, name, set.create).add(f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, _f)\n      f(...args)\n    }\n    this.on(name, _f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n/* c8 ignore end */\n","/**\n * Common Math expressions.\n *\n * @module math\n */\n\nexport const floor = Math.floor\nexport const ceil = Math.ceil\nexport const abs = Math.abs\nexport const imul = Math.imul\nexport const round = Math.round\nexport const log10 = Math.log10\nexport const log2 = Math.log2\nexport const log = Math.log\nexport const sqrt = Math.sqrt\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nexport const add = (a, b) => a + b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nexport const min = (a, b) => a < b ? a : b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nexport const max = (a, b) => a > b ? a : b\n\nexport const isNaN = Number.isNaN\n\nexport const pow = Math.pow\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nexport const exp10 = exp => Math.pow(10, exp)\n\nexport const sign = Math.sign\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\n","/* eslint-env browser */\n\n/**\n * Binary data constants.\n *\n * @module binary\n */\n\n/**\n * n-th bit activated.\n *\n * @type {number}\n */\nexport const BIT1 = 1\nexport const BIT2 = 2\nexport const BIT3 = 4\nexport const BIT4 = 8\nexport const BIT5 = 16\nexport const BIT6 = 32\nexport const BIT7 = 64\nexport const BIT8 = 128\nexport const BIT9 = 256\nexport const BIT10 = 512\nexport const BIT11 = 1024\nexport const BIT12 = 2048\nexport const BIT13 = 4096\nexport const BIT14 = 8192\nexport const BIT15 = 16384\nexport const BIT16 = 32768\nexport const BIT17 = 65536\nexport const BIT18 = 1 << 17\nexport const BIT19 = 1 << 18\nexport const BIT20 = 1 << 19\nexport const BIT21 = 1 << 20\nexport const BIT22 = 1 << 21\nexport const BIT23 = 1 << 22\nexport const BIT24 = 1 << 23\nexport const BIT25 = 1 << 24\nexport const BIT26 = 1 << 25\nexport const BIT27 = 1 << 26\nexport const BIT28 = 1 << 27\nexport const BIT29 = 1 << 28\nexport const BIT30 = 1 << 29\nexport const BIT31 = 1 << 30\nexport const BIT32 = 1 << 31\n\n/**\n * First n bits activated.\n *\n * @type {number}\n */\nexport const BITS0 = 0\nexport const BITS1 = 1\nexport const BITS2 = 3\nexport const BITS3 = 7\nexport const BITS4 = 15\nexport const BITS5 = 31\nexport const BITS6 = 63\nexport const BITS7 = 127\nexport const BITS8 = 255\nexport const BITS9 = 511\nexport const BITS10 = 1023\nexport const BITS11 = 2047\nexport const BITS12 = 4095\nexport const BITS13 = 8191\nexport const BITS14 = 16383\nexport const BITS15 = 32767\nexport const BITS16 = 65535\nexport const BITS17 = BIT18 - 1\nexport const BITS18 = BIT19 - 1\nexport const BITS19 = BIT20 - 1\nexport const BITS20 = BIT21 - 1\nexport const BITS21 = BIT22 - 1\nexport const BITS22 = BIT23 - 1\nexport const BITS23 = BIT24 - 1\nexport const BITS24 = BIT25 - 1\nexport const BITS25 = BIT26 - 1\nexport const BITS26 = BIT27 - 1\nexport const BITS27 = BIT28 - 1\nexport const BITS28 = BIT29 - 1\nexport const BITS29 = BIT30 - 1\nexport const BITS30 = BIT31 - 1\n/**\n * @type {number}\n */\nexport const BITS31 = 0x7FFFFFFF\n/**\n * @type {number}\n */\nexport const BITS32 = 0xFFFFFFFF\n","/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\n\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\n\nexport const LOWEST_INT32 = 1 << 31\nexport const HIGHEST_INT32 = binary.BITS31\nexport const HIGHEST_UINT32 = binary.BITS32\n\n/* c8 ignore next */\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num)\nexport const isNaN = Number.isNaN\nexport const parseInt = Number.parseInt\n\n/**\n * Count the number of \"1\" bits in an unsigned 32bit number.\n *\n * Super fun bitcount algorithm by Brian Kernighan.\n *\n * @param {number} n\n */\nexport const countBits = n => {\n  n &= binary.BITS32\n  let count = 0\n  while (n) {\n    n &= (n - 1)\n    count++\n  }\n  return count\n}\n","import * as array from './array.js'\n\n/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nexport const fromCharCode = String.fromCharCode\nexport const fromCodePoint = String.fromCodePoint\n\n/**\n * The largest utf16 character.\n * Corresponds to Uint8Array([255, 255]) or charcodeof(2x2^8)\n */\nexport const MAX_UTF16_CHARACTER = fromCharCode(65535)\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase()\n\nconst trimLeftRegex = /^\\s*/g\n\n/**\n * @param {string} s\n * @return {string}\n */\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\n\nconst fromCamelCaseRegex = /([A-Z])/g\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  const buf = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\n  }\n  return buf\n}\n\n/* c8 ignore next */\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* c8 ignore next */\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length\n  let encodedString = ''\n  let bufPos = 0\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\n    bufPos += nextLen\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n    remainingLen -= nextLen\n  }\n  return decodeURIComponent(escape(encodedString))\n}\n\n/* c8 ignore next */\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\n\n/* c8 ignore start */\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* c8 ignore next */\n  utf8TextDecoder = null\n}\n/* c8 ignore stop */\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* c8 ignore next */\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\n\n/**\n * @param {string} str The initial string\n * @param {number} index Starting position\n * @param {number} remove Number of characters to remove\n * @param {string} insert New content to insert\n */\nexport const splice = (str, index, remove, insert = '') => str.slice(0, index) + insert + str.slice(index + remove)\n\n/**\n * @param {string} source\n * @param {number} n\n */\nexport const repeat = (source, n) => array.unfold(n, () => source).join('')\n","/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */\n\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as binary from './binary.js'\nimport * as string from './string.js'\nimport * as array from './array.js'\n\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */\nexport class Encoder {\n  constructor () {\n    this.cpos = 0\n    this.cbuf = new Uint8Array(100)\n    /**\n     * @type {Array<Uint8Array>}\n     */\n    this.bufs = []\n  }\n}\n\n/**\n * @function\n * @return {Encoder}\n */\nexport const createEncoder = () => new Encoder()\n\n/**\n * @param {function(Encoder):void} f\n */\nexport const encode = (f) => {\n  const encoder = createEncoder()\n  f(encoder)\n  return toUint8Array(encoder)\n}\n\n/**\n * The current length of the encoded data.\n *\n * @function\n * @param {Encoder} encoder\n * @return {number}\n */\nexport const length = encoder => {\n  let len = encoder.cpos\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    len += encoder.bufs[i].length\n  }\n  return len\n}\n\n/**\n * Check whether encoder is empty.\n *\n * @function\n * @param {Encoder} encoder\n * @return {boolean}\n */\nexport const hasContent = encoder => encoder.cpos > 0 || encoder.bufs.length > 0\n\n/**\n * Transform to Uint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @return {Uint8Array} The created ArrayBuffer.\n */\nexport const toUint8Array = encoder => {\n  const uint8arr = new Uint8Array(length(encoder))\n  let curPos = 0\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    const d = encoder.bufs[i]\n    uint8arr.set(d, curPos)\n    curPos += d.length\n  }\n  uint8arr.set(new Uint8Array(encoder.cbuf.buffer, 0, encoder.cpos), curPos)\n  return uint8arr\n}\n\n/**\n * Verify that it is possible to write `len` bytes wtihout checking. If\n * necessary, a new Buffer with the required length is attached.\n *\n * @param {Encoder} encoder\n * @param {number} len\n */\nexport const verifyLen = (encoder, len) => {\n  const bufferLen = encoder.cbuf.length\n  if (bufferLen - encoder.cpos < len) {\n    encoder.bufs.push(new Uint8Array(encoder.cbuf.buffer, 0, encoder.cpos))\n    encoder.cbuf = new Uint8Array(math.max(bufferLen, len) * 2)\n    encoder.cpos = 0\n  }\n}\n\n/**\n * Write one byte to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The byte that is to be encoded.\n */\nexport const write = (encoder, num) => {\n  const bufferLen = encoder.cbuf.length\n  if (encoder.cpos === bufferLen) {\n    encoder.bufs.push(encoder.cbuf)\n    encoder.cbuf = new Uint8Array(bufferLen * 2)\n    encoder.cpos = 0\n  }\n  encoder.cbuf[encoder.cpos++] = num\n}\n\n/**\n * Write one byte at a specific position.\n * Position must already be written (i.e. encoder.length > pos)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos Position to which to write data\n * @param {number} num Unsigned 8-bit integer\n */\nexport const set = (encoder, pos, num) => {\n  let buffer = null\n  // iterate all buffers and adjust position\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\n    const b = encoder.bufs[i]\n    if (pos < b.length) {\n      buffer = b // found buffer\n    } else {\n      pos -= b.length\n    }\n  }\n  if (buffer === null) {\n    // use current buffer\n    buffer = encoder.cbuf\n  }\n  buffer[pos] = num\n}\n\n/**\n * Write one byte as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint8 = write\n\n/**\n * Write one byte as an unsigned Integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint8 = set\n\n/**\n * Write two bytes as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint16 = (encoder, num) => {\n  write(encoder, num & binary.BITS8)\n  write(encoder, (num >>> 8) & binary.BITS8)\n}\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint16 = (encoder, pos, num) => {\n  set(encoder, pos, num & binary.BITS8)\n  set(encoder, pos + 1, (num >>> 8) & binary.BITS8)\n}\n\n/**\n * Write two bytes as an unsigned integer\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32 = (encoder, num) => {\n  for (let i = 0; i < 4; i++) {\n    write(encoder, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32BigEndian = (encoder, num) => {\n  for (let i = 3; i >= 0; i--) {\n    write(encoder, (num >>> (8 * i)) & binary.BITS8)\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint32 = (encoder, pos, num) => {\n  for (let i = 0; i < 4; i++) {\n    set(encoder, pos + i, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write a variable length unsigned integer. Max encodable integer is 2^53.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarUint = (encoder, num) => {\n  while (num > binary.BITS7) {\n    write(encoder, binary.BIT8 | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n  write(encoder, binary.BITS7 & num)\n}\n\n/**\n * Write a variable length integer.\n *\n * We use the 7th bit instead for signaling that this is a negative number.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarInt = (encoder, num) => {\n  const isNegative = math.isNegativeZero(num)\n  if (isNegative) {\n    num = -num\n  }\n  //             |- whether to continue reading         |- whether is negative     |- number\n  write(encoder, (num > binary.BITS6 ? binary.BIT8 : 0) | (isNegative ? binary.BIT7 : 0) | (binary.BITS6 & num))\n  num = math.floor(num / 64) // shift >>> 6\n  // We don't need to consider the case of num === 0 so we can use a different\n  // pattern here than above.\n  while (num > 0) {\n    write(encoder, (num > binary.BITS7 ? binary.BIT8 : 0) | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n}\n\n/**\n * A cache to store strings temporarily\n */\nconst _strBuffer = new Uint8Array(30000)\nconst _maxStrBSize = _strBuffer.length / 3\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringNative = (encoder, str) => {\n  if (str.length < _maxStrBSize) {\n    // We can encode the string into the existing buffer\n    /* c8 ignore next */\n    const written = string.utf8TextEncoder.encodeInto(str, _strBuffer).written || 0\n    writeVarUint(encoder, written)\n    for (let i = 0; i < written; i++) {\n      write(encoder, _strBuffer[i])\n    }\n  } else {\n    writeVarUint8Array(encoder, string.encodeUtf8(str))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringPolyfill = (encoder, str) => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    write(encoder, /** @type {number} */ (encodedString.codePointAt(i)))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\n/* c8 ignore next */\nexport const writeVarString = (string.utf8TextEncoder && /** @type {any} */ (string.utf8TextEncoder).encodeInto) ? _writeVarStringNative : _writeVarStringPolyfill\n\n/**\n * Write a string terminated by a special byte sequence. This is not very performant and is\n * generally discouraged. However, the resulting byte arrays are lexiographically ordered which\n * makes this a nice feature for databases.\n *\n * The string will be encoded using utf8 and then terminated and escaped using writeTerminatingUint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const writeTerminatedString = (encoder, str) =>\n  writeTerminatedUint8Array(encoder, string.encodeUtf8(str))\n\n/**\n * Write a terminating Uint8Array. Note that this is not performant and is generally\n * discouraged. There are few situations when this is needed.\n *\n * We use 0x0 as a terminating character. 0x1 serves as an escape character for 0x0 and 0x1.\n *\n * Example: [0,1,2] is encoded to [1,0,1,1,2,0]. 0x0, and 0x1 needed to be escaped using 0x1. Then\n * the result is terminated using the 0x0 character.\n *\n * This is basically how many systems implement null terminated strings. However, we use an escape\n * character 0x1 to avoid issues and potenial attacks on our database (if this is used as a key\n * encoder for NoSql databases).\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} buf The string that is to be encoded.\n */\nexport const writeTerminatedUint8Array = (encoder, buf) => {\n  for (let i = 0; i < buf.length; i++) {\n    const b = buf[i]\n    if (b === 0 || b === 1) {\n      write(encoder, 1)\n    }\n    write(encoder, buf[i])\n  }\n  write(encoder, 0)\n}\n\n/**\n * Write the content of another Encoder.\n *\n * @TODO: can be improved!\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\n *                Encoders start with a rather big initial buffer.\n *\n * @function\n * @param {Encoder} encoder The enUint8Arr\n * @param {Encoder} append The BinaryEncoder to be written.\n */\nexport const writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append))\n\n/**\n * Append fixed-length Uint8Array to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeUint8Array = (encoder, uint8Array) => {\n  const bufferLen = encoder.cbuf.length\n  const cpos = encoder.cpos\n  const leftCopyLen = math.min(bufferLen - cpos, uint8Array.length)\n  const rightCopyLen = uint8Array.length - leftCopyLen\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos)\n  encoder.cpos += leftCopyLen\n  if (rightCopyLen > 0) {\n    // Still something to write, write right half..\n    // Append new buffer\n    encoder.bufs.push(encoder.cbuf)\n    // must have at least size of remaining buffer\n    encoder.cbuf = new Uint8Array(math.max(bufferLen * 2, rightCopyLen))\n    // copy array\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen))\n    encoder.cpos = rightCopyLen\n  }\n}\n\n/**\n * Append an Uint8Array to Encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeVarUint8Array = (encoder, uint8Array) => {\n  writeVarUint(encoder, uint8Array.byteLength)\n  writeUint8Array(encoder, uint8Array)\n}\n\n/**\n * Create an DataView of the next `len` bytes. Use it to write data after\n * calling this function.\n *\n * ```js\n * // write float32 using DataView\n * const dv = writeOnDataView(encoder, 4)\n * dv.setFloat32(0, 1.1)\n * // read float32 using DataView\n * const dv = readFromDataView(encoder, 4)\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n * ```\n *\n * @param {Encoder} encoder\n * @param {number} len\n * @return {DataView}\n */\nexport const writeOnDataView = (encoder, len) => {\n  verifyLen(encoder, len)\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len)\n  encoder.cpos += len\n  return dview\n}\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigUint64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigUint64(0, num, false)\n\nconst floatTestBed = new DataView(new ArrayBuffer(4))\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */\nconst isFloat32 = num => {\n  floatTestBed.setFloat32(0, num)\n  return floatTestBed.getFloat32(0) === num\n}\n\n/**\n * Encode data with efficient binary format.\n *\n * Differences to JSON:\n * • Transforms data to a binary format (not to a string)\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n * • Numbers are efficiently encoded either as a variable length integer, as a\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n *\n * Encoding table:\n *\n * | Data Type           | Prefix   | Encoding Method    | Comment |\n * | ------------------- | -------- | ------------------ | ------- |\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n * | null                | 126      |                    | |\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n * | float32             | 124      | writeFloat32       | |\n * | float64             | 123      | writeFloat64       | |\n * | bigint              | 122      | writeBigInt64      | |\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n * | string              | 119      | writeVarString     | |\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n *\n * Reasons for the decreasing prefix:\n * We need the first bit for extendability (later we may want to encode the\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n * [0-30]   the beginning of the data range is used for custom purposes\n *          (defined by the function that uses this library)\n * [31-127] the end of the data range is used for data encoding by\n *          lib0/encoding.js\n *\n * @param {Encoder} encoder\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n */\nexport const writeAny = (encoder, data) => {\n  switch (typeof data) {\n    case 'string':\n      // TYPE 119: STRING\n      write(encoder, 119)\n      writeVarString(encoder, data)\n      break\n    case 'number':\n      if (number.isInteger(data) && math.abs(data) <= binary.BITS31) {\n        // TYPE 125: INTEGER\n        write(encoder, 125)\n        writeVarInt(encoder, data)\n      } else if (isFloat32(data)) {\n        // TYPE 124: FLOAT32\n        write(encoder, 124)\n        writeFloat32(encoder, data)\n      } else {\n        // TYPE 123: FLOAT64\n        write(encoder, 123)\n        writeFloat64(encoder, data)\n      }\n      break\n    case 'bigint':\n      // TYPE 122: BigInt\n      write(encoder, 122)\n      writeBigInt64(encoder, data)\n      break\n    case 'object':\n      if (data === null) {\n        // TYPE 126: null\n        write(encoder, 126)\n      } else if (array.isArray(data)) {\n        // TYPE 117: Array\n        write(encoder, 117)\n        writeVarUint(encoder, data.length)\n        for (let i = 0; i < data.length; i++) {\n          writeAny(encoder, data[i])\n        }\n      } else if (data instanceof Uint8Array) {\n        // TYPE 116: ArrayBuffer\n        write(encoder, 116)\n        writeVarUint8Array(encoder, data)\n      } else {\n        // TYPE 118: Object\n        write(encoder, 118)\n        const keys = Object.keys(data)\n        writeVarUint(encoder, keys.length)\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i]\n          writeVarString(encoder, key)\n          writeAny(encoder, data[key])\n        }\n      }\n      break\n    case 'boolean':\n      // TYPE 120/121: boolean (true/false)\n      write(encoder, data ? 120 : 121)\n      break\n    default:\n      // TYPE 127: undefined\n      write(encoder, 127)\n  }\n}\n\n/**\n * Now come a few stateful encoder that have their own classes.\n */\n\n/**\n * Basic Run Length Encoder - a basic compression implementation.\n *\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n *\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n *\n * @note T must not be null!\n *\n * @template T\n */\nexport class RleEncoder extends Encoder {\n  /**\n   * @param {function(Encoder, T):void} writer\n   */\n  constructor (writer) {\n    super()\n    /**\n     * The writer\n     */\n    this.w = writer\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  /**\n   * @param {T} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      this.w(this, v)\n      this.s = v\n    }\n  }\n}\n\n/**\n * Basic diff decoder using variable length encoding.\n *\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n */\nexport class IntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    writeVarInt(this, v - this.s)\n    this.s = v\n  }\n}\n\n/**\n * A combination of IntDiffEncoder and RleEncoder.\n *\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n *\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\n */\nexport class RleIntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v && this.count > 0) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      writeVarInt(this, v - this.s)\n      this.s = v\n    }\n  }\n}\n\n/**\n * @param {UintOptRleEncoder} encoder\n */\nconst flushUintOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set sign to positive\n    // case 2: write several values. set sign to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n *\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n *\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n */\nexport class UintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Increasing Uint Optimized RLE Encoder\n *\n * The RLE encoder counts the number of same occurences of the same value.\n * The IncUintOptRle encoder counts if the value increases.\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\n * as [1, 3, 5].\n */\nexport class IncUintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s + this.count === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * @param {IntDiffOptRleEncoder} encoder\n */\nconst flushIntDiffOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    //          31 bit making up the diff | wether to write the counter\n    // const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\n    const encodedDiff = encoder.diff * 2 + (encoder.count === 1 ? 0 : 1)\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set first bit to positive\n    // case 2: write several values. set first bit to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encodedDiff)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n *\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n *\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n *\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n * * 1 bit that denotes whether the next value is a count (LSB)\n * * 1 bit that denotes whether this value is negative (MSB - 1)\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n *\n * Therefore, only five bits remain to encode diff ranges.\n *\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n */\nexport class IntDiffOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.diff === v - this.s) {\n      this.s = v\n      this.count++\n    } else {\n      flushIntDiffOptRleEncoder(this)\n      this.count = 1\n      this.diff = v - this.s\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushIntDiffOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Optimized String Encoder.\n *\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n *\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n *\n * The lengths are encoded using a UintOptRleEncoder.\n */\nexport class StringEncoder {\n  constructor () {\n    /**\n     * @type {Array<string>}\n     */\n    this.sarr = []\n    this.s = ''\n    this.lensE = new UintOptRleEncoder()\n  }\n\n  /**\n   * @param {string} string\n   */\n  write (string) {\n    this.s += string\n    if (this.s.length > 19) {\n      this.sarr.push(this.s)\n      this.s = ''\n    }\n    this.lensE.write(string.length)\n  }\n\n  toUint8Array () {\n    const encoder = new Encoder()\n    this.sarr.push(this.s)\n    this.s = ''\n    writeVarString(encoder, this.sarr.join(''))\n    writeUint8Array(encoder, this.lensE.toUint8Array())\n    return toUint8Array(encoder)\n  }\n}\n","/**\n * Error helpers.\n *\n * @module error\n */\n\n/**\n * @param {string} s\n * @return {Error}\n */\n/* c8 ignore next */\nexport const create = s => new Error(s)\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const methodUnimplemented = () => {\n  throw create('Method unimplemented')\n}\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const unexpectedCase = () => {\n  throw create('Unexpected case')\n}\n","/* eslint-env browser */\n\nexport const subtle = crypto.subtle\nexport const getRandomValues = crypto.getRandomValues.bind(crypto)\n","/**\n * Isomorphic module for true random numbers / buffers / uuids.\n *\n * Attention: falls back to Math.random if the browser does not support crypto.\n *\n * @module random\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\nimport { getRandomValues } from 'lib0/webcrypto'\n\nexport const rand = Math.random\n\nexport const uint32 = () => getRandomValues(new Uint32Array(1))[0]\n\nexport const uint53 = () => {\n  const arr = getRandomValues(new Uint32Array(8))\n  return (arr[0] & binary.BITS21) * (binary.BITS32 + 1) + (arr[1] >>> 0)\n}\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {T}\n */\nexport const oneOf = arr => arr[math.floor(rand() * arr.length)]\n\n// @ts-ignore\nconst uuidv4Template = [1e7] + -1e3 + -4e3 + -8e3 + -1e11\n\n/**\n * @return {string}\n */\nexport const uuidv4 = () => uuidv4Template.replace(/[018]/g, /** @param {number} c */ c =>\n  (c ^ uint32() & 15 >> c / 4).toString(16)\n)\n","/**\n * Utility module to work with time.\n *\n * @module time\n */\n\nimport * as metric from './metric.js'\nimport * as math from './math.js'\n\n/**\n * Return current time.\n *\n * @return {Date}\n */\nexport const getDate = () => new Date()\n\n/**\n * Return current unix time.\n *\n * @return {number}\n */\nexport const getUnixTime = Date.now\n\n/**\n * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10μs.\n *\n * @param {number} d duration in milliseconds\n * @return {string} humanized approximation of time\n */\nexport const humanizeDuration = d => {\n  if (d < 60000) {\n    const p = metric.prefix(d, -1)\n    return math.round(p.n * 100) / 100 + p.prefix + 's'\n  }\n  d = math.floor(d / 1000)\n  const seconds = d % 60\n  const minutes = math.floor(d / 60) % 60\n  const hours = math.floor(d / 3600) % 24\n  const days = math.floor(d / 86400)\n  if (days > 0) {\n    return days + 'd' + ((hours > 0 || minutes > 30) ? ' ' + (minutes > 30 ? hours + 1 : hours) + 'h' : '')\n  }\n  if (hours > 0) {\n    /* c8 ignore next */\n    return hours + 'h' + ((minutes > 0 || seconds > 30) ? ' ' + (seconds > 30 ? minutes + 1 : minutes) + 'min' : '')\n  }\n  return minutes + 'min' + (seconds > 0 ? ' ' + seconds + 's' : '')\n}\n","/**\n * Utility helpers to work with promises.\n *\n * @module promise\n */\n\nimport * as time from './time.js'\n\n/**\n * @template T\n * @callback PromiseResolve\n * @param {T|PromiseLike<T>} [result]\n */\n\n/**\n * @template T\n * @param {function(PromiseResolve<T>,function(Error):void):any} f\n * @return {Promise<T>}\n */\nexport const create = f => /** @type {Promise<T>} */ (new Promise(f))\n\n/**\n * @param {function(function():void,function(Error):void):void} f\n * @return {Promise<void>}\n */\nexport const createEmpty = f => new Promise(f)\n\n/**\n * `Promise.all` wait for all promises in the array to resolve and return the result\n * @template {unknown[] | []} PS\n *\n * @param {PS} ps\n * @return {Promise<{ -readonly [P in keyof PS]: Awaited<PS[P]> }>}\n */\nexport const all = Promise.all.bind(Promise)\n\n/**\n * @param {Error} [reason]\n * @return {Promise<never>}\n */\nexport const reject = reason => Promise.reject(reason)\n\n/**\n * @template T\n * @param {T|void} res\n * @return {Promise<T|void>}\n */\nexport const resolve = res => Promise.resolve(res)\n\n/**\n * @template T\n * @param {T} res\n * @return {Promise<T>}\n */\nexport const resolveWith = res => Promise.resolve(res)\n\n/**\n * @todo Next version, reorder parameters: check, [timeout, [intervalResolution]]\n *\n * @param {number} timeout\n * @param {function():boolean} check\n * @param {number} [intervalResolution]\n * @return {Promise<void>}\n */\nexport const until = (timeout, check, intervalResolution = 10) => create((resolve, reject) => {\n  const startTime = time.getUnixTime()\n  const hasTimeout = timeout > 0\n  const untilInterval = () => {\n    if (check()) {\n      clearInterval(intervalHandle)\n      resolve()\n    } else if (hasTimeout) {\n      /* c8 ignore else */\n      if (time.getUnixTime() - startTime > timeout) {\n        clearInterval(intervalHandle)\n        reject(new Error('Timeout'))\n      }\n    }\n  }\n  const intervalHandle = setInterval(untilInterval, intervalResolution)\n})\n\n/**\n * @param {number} timeout\n * @return {Promise<undefined>}\n */\nexport const wait = timeout => create((resolve, reject) => setTimeout(resolve, timeout))\n\n/**\n * Checks if an object is a promise using ducktyping.\n *\n * Promises are often polyfilled, so it makes sense to add some additional guarantees if the user of this\n * library has some insane environment where global Promise objects are overwritten.\n *\n * @param {any} p\n * @return {boolean}\n */\nexport const isPromise = p => p instanceof Promise || (p && p.then && p.catch && p.finally)\n","/**\n * Often used conditions.\n *\n * @module conditions\n */\n\n/**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */\n/* c8 ignore next */\nexport const undefinedToNull = v => v === undefined ? null : v\n","/* eslint-env browser */\n\n/**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */\n\n/* c8 ignore start */\nclass VarStoragePolyfill {\n  constructor () {\n    this.map = new Map()\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} newValue\n   */\n  setItem (key, newValue) {\n    this.map.set(key, newValue)\n  }\n\n  /**\n   * @param {string} key\n   */\n  getItem (key) {\n    return this.map.get(key)\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @type {any}\n */\nlet _localStorage = new VarStoragePolyfill()\nlet usePolyfill = true\n\n/* c8 ignore start */\ntry {\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\n  if (typeof localStorage !== 'undefined' && localStorage) {\n    _localStorage = localStorage\n    usePolyfill = false\n  }\n} catch (e) { }\n/* c8 ignore stop */\n\n/**\n * This is basically localStorage in browser, or a polyfill in nodejs\n */\n/* c8 ignore next */\nexport const varStorage = _localStorage\n\n/**\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\n/* c8 ignore next */\nexport const onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler))\n\n/**\n * A polyfill for `removeEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\n/* c8 ignore next */\nexport const offChange = eventHandler => usePolyfill || removeEventListener('storage', /** @type {any} */ (eventHandler))\n","/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */\n\n/**\n * @return {Object<string,any>} obj\n */\nexport const create = () => Object.create(null)\n\n/**\n * Object.assign\n */\nexport const assign = Object.assign\n\n/**\n * @param {Object<string,any>} obj\n */\nexport const keys = Object.keys\n\n/**\n * @template V\n * @param {{[k:string]:V}} obj\n * @param {function(V,string):any} f\n */\nexport const forEach = (obj, f) => {\n  for (const key in obj) {\n    f(obj[key], key)\n  }\n}\n\n/**\n * @todo implement mapToArray & map\n *\n * @template R\n * @param {Object<string,any>} obj\n * @param {function(any,string):R} f\n * @return {Array<R>}\n */\nexport const map = (obj, f) => {\n  const results = []\n  for (const key in obj) {\n    results.push(f(obj[key], key))\n  }\n  return results\n}\n\n/**\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const length = obj => keys(obj).length\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const some = (obj, f) => {\n  for (const key in obj) {\n    if (f(obj[key], key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @param {Object|undefined} obj\n */\nexport const isEmpty = obj => {\n  // eslint-disable-next-line\n  for (const _k in obj) {\n    return false\n  }\n  return true\n}\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const every = (obj, f) => {\n  for (const key in obj) {\n    if (!f(obj[key], key)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Calls `Object.prototype.hasOwnProperty`.\n *\n * @param {any} obj\n * @param {string|symbol} key\n * @return {boolean}\n */\nexport const hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\n\n/**\n * @param {Object<string,any>} a\n * @param {Object<string,any>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a === b || (length(a) === length(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val))\n","/**\n * Common functions and function call helpers.\n *\n * @module function\n */\n\nimport * as array from './array.js'\nimport * as object from './object.js'\n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */\nexport const callAll = (fs, args, i = 0) => {\n  try {\n    for (; i < fs.length; i++) {\n      fs[i](...args)\n    }\n  } finally {\n    if (i < fs.length) {\n      callAll(fs, args, i + 1)\n    }\n  }\n}\n\nexport const nop = () => {}\n\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */\nexport const apply = f => f()\n\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */\nexport const id = a => a\n\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */\nexport const equalityStrict = (a, b) => a === b\n\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */\nexport const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((array.isArray(a) && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))))\n\n/* c8 ignore start */\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nexport const equalityDeep = (a, b) => {\n  if (a == null || b == null) {\n    return equalityStrict(a, b)\n  }\n  if (a.constructor !== b.constructor) {\n    return false\n  }\n  if (a === b) {\n    return true\n  }\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a)\n      b = new Uint8Array(b)\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false\n        }\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const value of a) {\n        if (!b.has(value)) {\n          return false\n        }\n      }\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const key of a.keys()) {\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n          return false\n        }\n      }\n      break\n    }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        return false\n      }\n      for (const key in a) {\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n          return false\n        }\n      }\n      break\n    case Array:\n      if (a.length !== b.length) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (!equalityDeep(a[i], b[i])) {\n          return false\n        }\n      }\n      break\n    default:\n      return false\n  }\n  return true\n}\n\n/**\n * @template V\n * @template {V} OPTS\n *\n * @param {V} value\n * @param {Array<OPTS>} options\n */\n// @ts-ignore\nexport const isOneOf = (value, options) => options.includes(value)\n/* c8 ignore stop */\n\nexport const isArray = array.isArray\n\n/**\n * @param {any} s\n * @return {s is String}\n */\nexport const isString = (s) => s && s.constructor === String\n\n/**\n * @param {any} n\n * @return {n is Number}\n */\nexport const isNumber = n => n != null && n.constructor === Number\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {any} n\n * @param {TYPE} T\n * @return {n is InstanceType<TYPE>}\n */\nexport const is = (n, T) => n && n.constructor === T\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {TYPE} T\n */\nexport const isTemplate = (T) =>\n  /**\n   * @param {any} n\n   * @return {n is InstanceType<TYPE>}\n   **/\n  n => n && n.constructor === T\n","/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module map\n */\n\nimport * as map from './map.js'\nimport * as string from './string.js'\nimport * as conditions from './conditions.js'\nimport * as storage from './storage.js'\nimport * as f from './function.js'\n\n/* c8 ignore next 2 */\n// @ts-ignore\nexport const isNode = typeof process !== 'undefined' && process.release && /node|io\\.js/.test(process.release.name) && Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n\n/* c8 ignore next */\nexport const isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && !isNode\n/* c8 ignore next 3 */\nexport const isMac = typeof navigator !== 'undefined'\n  ? /Mac/.test(navigator.platform)\n  : false\n\n/**\n * @type {Map<string,string>}\n */\nlet params\nconst args = []\n\n/* c8 ignore start */\nconst computeParams = () => {\n  if (params === undefined) {\n    if (isNode) {\n      params = map.create()\n      const pargs = process.argv\n      let currParamName = null\n      for (let i = 0; i < pargs.length; i++) {\n        const parg = pargs[i]\n        if (parg[0] === '-') {\n          if (currParamName !== null) {\n            params.set(currParamName, '')\n          }\n          currParamName = parg\n        } else {\n          if (currParamName !== null) {\n            params.set(currParamName, parg)\n            currParamName = null\n          } else {\n            args.push(parg)\n          }\n        }\n      }\n      if (currParamName !== null) {\n        params.set(currParamName, '')\n      }\n      // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n    } else if (typeof location === 'object') {\n      params = map.create(); // eslint-disable-next-line no-undef\n      (location.search || '?').slice(1).split('&').forEach((kv) => {\n        if (kv.length !== 0) {\n          const [key, value] = kv.split('=')\n          params.set(`--${string.fromCamelCase(key, '-')}`, value)\n          params.set(`-${string.fromCamelCase(key, '-')}`, value)\n        }\n      })\n    } else {\n      params = map.create()\n    }\n  }\n  return params\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next */\nexport const hasParam = (name) => computeParams().has(name)\n\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */\n/* c8 ignore next 2 */\nexport const getParam = (name, defaultVal) =>\n  computeParams().get(name) || defaultVal\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 4 */\nexport const getVariable = (name) =>\n  isNode\n    ? conditions.undefinedToNull(process.env[name.toUpperCase()])\n    : conditions.undefinedToNull(storage.varStorage.getItem(name))\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 2 */\nexport const getConf = (name) =>\n  computeParams().get('--' + name) || getVariable(name)\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next 2 */\nexport const hasConf = (name) =>\n  hasParam('--' + name) || getVariable(name) !== null\n\n/* c8 ignore next */\nexport const production = hasConf('production')\n\n/* c8 ignore next 2 */\nconst forceColor = isNode &&\n  f.isOneOf(process.env.FORCE_COLOR, ['true', '1', '2'])\n\n/* c8 ignore start */\nexport const supportsColor = !hasParam('no-colors') &&\n  (!isNode || process.stdout.isTTY || forceColor) && (\n  !isNode || hasParam('color') || forceColor ||\n    getVariable('COLORTERM') !== null ||\n    (getVariable('TERM') || '').includes('color')\n)\n/* c8 ignore stop */\n","/**\n * Working with value pairs.\n *\n * @module pair\n */\n\n/**\n * @template L,R\n */\nexport class Pair {\n  /**\n   * @param {L} left\n   * @param {R} right\n   */\n  constructor (left, right) {\n    this.left = left\n    this.right = right\n  }\n}\n\n/**\n * @template L,R\n * @param {L} left\n * @param {R} right\n * @return {Pair<L,R>}\n */\nexport const create = (left, right) => new Pair(left, right)\n\n/**\n * @template L,R\n * @param {R} right\n * @param {L} left\n * @return {Pair<L,R>}\n */\nexport const createReversed = (right, left) => new Pair(left, right)\n\n/**\n * @template L,R\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):any} f\n */\nexport const forEach = (arr, f) => arr.forEach(p => f(p.left, p.right))\n\n/**\n * @template L,R,X\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):X} f\n * @return {Array<X>}\n */\nexport const map = (arr, f) => arr.map(p => f(p.left, p.right))\n","/* eslint-env browser */\n\n/**\n * Utility module to work with the DOM.\n *\n * @module dom\n */\n\nimport * as pair from './pair.js'\nimport * as map from './map.js'\n\n/* c8 ignore start */\n/**\n * @type {Document}\n */\nexport const doc = /** @type {Document} */ (typeof document !== 'undefined' ? document : {})\n\n/**\n * @param {string} name\n * @return {HTMLElement}\n */\nexport const createElement = name => doc.createElement(name)\n\n/**\n * @return {DocumentFragment}\n */\nexport const createDocumentFragment = () => doc.createDocumentFragment()\n\n/**\n * @param {string} text\n * @return {Text}\n */\nexport const createTextNode = text => doc.createTextNode(text)\n\nexport const domParser = /** @type {DOMParser} */ (typeof DOMParser !== 'undefined' ? new DOMParser() : null)\n\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Object} opts\n */\nexport const emitCustomEvent = (el, name, opts) => el.dispatchEvent(new CustomEvent(name, opts))\n\n/**\n * @param {Element} el\n * @param {Array<pair.Pair<string,string|boolean>>} attrs Array of key-value pairs\n * @return {Element}\n */\nexport const setAttributes = (el, attrs) => {\n  pair.forEach(attrs, (key, value) => {\n    if (value === false) {\n      el.removeAttribute(key)\n    } else if (value === true) {\n      el.setAttribute(key, '')\n    } else {\n      // @ts-ignore\n      el.setAttribute(key, value)\n    }\n  })\n  return el\n}\n\n/**\n * @param {Element} el\n * @param {Map<string, string>} attrs Array of key-value pairs\n * @return {Element}\n */\nexport const setAttributesMap = (el, attrs) => {\n  attrs.forEach((value, key) => { el.setAttribute(key, value) })\n  return el\n}\n\n/**\n * @param {Array<Node>|HTMLCollection} children\n * @return {DocumentFragment}\n */\nexport const fragment = children => {\n  const fragment = createDocumentFragment()\n  for (let i = 0; i < children.length; i++) {\n    appendChild(fragment, children[i])\n  }\n  return fragment\n}\n\n/**\n * @param {Element} parent\n * @param {Array<Node>} nodes\n * @return {Element}\n */\nexport const append = (parent, nodes) => {\n  appendChild(parent, fragment(nodes))\n  return parent\n}\n\n/**\n * @param {HTMLElement} el\n */\nexport const remove = el => el.remove()\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\nexport const addEventListener = (el, name, f) => el.addEventListener(name, f)\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\nexport const removeEventListener = (el, name, f) => el.removeEventListener(name, f)\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\nexport const addEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => addEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\nexport const removeEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => removeEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {string} name\n * @param {Array<pair.Pair<string,string>|pair.Pair<string,boolean>>} attrs Array of key-value pairs\n * @param {Array<Node>} children\n * @return {Element}\n */\nexport const element = (name, attrs = [], children = []) =>\n  append(setAttributes(createElement(name), attrs), children)\n\n/**\n * @param {number} width\n * @param {number} height\n */\nexport const canvas = (width, height) => {\n  const c = /** @type {HTMLCanvasElement} */ (createElement('canvas'))\n  c.height = height\n  c.width = width\n  return c\n}\n\n/**\n * @param {string} t\n * @return {Text}\n */\nexport const text = createTextNode\n\n/**\n * @param {pair.Pair<string,string>} pair\n */\nexport const pairToStyleString = pair => `${pair.left}:${pair.right};`\n\n/**\n * @param {Array<pair.Pair<string,string>>} pairs\n * @return {string}\n */\nexport const pairsToStyleString = pairs => pairs.map(pairToStyleString).join('')\n\n/**\n * @param {Map<string,string>} m\n * @return {string}\n */\nexport const mapToStyleString = m => map.map(m, (value, key) => `${key}:${value};`).join('')\n\n/**\n * @todo should always query on a dom element\n *\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {HTMLElement | null}\n */\nexport const querySelector = (el, query) => el.querySelector(query)\n\n/**\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {NodeListOf<HTMLElement>}\n */\nexport const querySelectorAll = (el, query) => el.querySelectorAll(query)\n\n/**\n * @param {string} id\n * @return {HTMLElement}\n */\nexport const getElementById = id => /** @type {HTMLElement} */ (doc.getElementById(id))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\nconst _parse = html => domParser.parseFromString(`<html><body>${html}</body></html>`, 'text/html').body\n\n/**\n * @param {string} html\n * @return {DocumentFragment}\n */\nexport const parseFragment = html => fragment(/** @type {any} */ (_parse(html).childNodes))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\nexport const parseElement = html => /** @type HTMLElement */ (_parse(html).firstElementChild)\n\n/**\n * @param {HTMLElement} oldEl\n * @param {HTMLElement|DocumentFragment} newEl\n */\nexport const replaceWith = (oldEl, newEl) => oldEl.replaceWith(newEl)\n\n/**\n * @param {HTMLElement} parent\n * @param {HTMLElement} el\n * @param {Node|null} ref\n * @return {HTMLElement}\n */\nexport const insertBefore = (parent, el, ref) => parent.insertBefore(el, ref)\n\n/**\n * @param {Node} parent\n * @param {Node} child\n * @return {Node}\n */\nexport const appendChild = (parent, child) => parent.appendChild(child)\n\nexport const ELEMENT_NODE = doc.ELEMENT_NODE\nexport const TEXT_NODE = doc.TEXT_NODE\nexport const CDATA_SECTION_NODE = doc.CDATA_SECTION_NODE\nexport const COMMENT_NODE = doc.COMMENT_NODE\nexport const DOCUMENT_NODE = doc.DOCUMENT_NODE\nexport const DOCUMENT_TYPE_NODE = doc.DOCUMENT_TYPE_NODE\nexport const DOCUMENT_FRAGMENT_NODE = doc.DOCUMENT_FRAGMENT_NODE\n\n/**\n * @param {any} node\n * @param {number} type\n */\nexport const checkNodeType = (node, type) => node.nodeType === type\n\n/**\n * @param {Node} parent\n * @param {HTMLElement} child\n */\nexport const isParentOf = (parent, child) => {\n  let p = child.parentNode\n  while (p && p !== parent) {\n    p = p.parentNode\n  }\n  return p === parent\n}\n/* c8 ignore stop */\n","/* global requestIdleCallback, requestAnimationFrame, cancelIdleCallback, cancelAnimationFrame */\n\n/**\n * Utility module to work with EcmaScript's event loop.\n *\n * @module eventloop\n */\n\n/**\n * @type {Array<function>}\n */\nlet queue = []\n\nconst _runQueue = () => {\n  for (let i = 0; i < queue.length; i++) {\n    queue[i]()\n  }\n  queue = []\n}\n\n/**\n * @param {function():void} f\n */\nexport const enqueue = f => {\n  queue.push(f)\n  if (queue.length === 1) {\n    setTimeout(_runQueue, 0)\n  }\n}\n\n/**\n * @typedef {Object} TimeoutObject\n * @property {function} TimeoutObject.destroy\n */\n\n/**\n * @param {function(number):void} clearFunction\n */\nconst createTimeoutClass = clearFunction => class TT {\n  /**\n   * @param {number} timeoutId\n   */\n  constructor (timeoutId) {\n    this._ = timeoutId\n  }\n\n  destroy () {\n    clearFunction(this._)\n  }\n}\n\nconst Timeout = createTimeoutClass(clearTimeout)\n\n/**\n * @param {number} timeout\n * @param {function} callback\n * @return {TimeoutObject}\n */\nexport const timeout = (timeout, callback) => new Timeout(setTimeout(callback, timeout))\n\nconst Interval = createTimeoutClass(clearInterval)\n\n/**\n * @param {number} timeout\n * @param {function} callback\n * @return {TimeoutObject}\n */\nexport const interval = (timeout, callback) => new Interval(setInterval(callback, timeout))\n\n/* c8 ignore next */\nexport const Animation = createTimeoutClass(arg => typeof requestAnimationFrame !== 'undefined' && cancelAnimationFrame(arg))\n\n/**\n * @param {function(number):void} cb\n * @return {TimeoutObject}\n */\n/* c8 ignore next */\nexport const animationFrame = cb => typeof requestAnimationFrame === 'undefined' ? timeout(0, cb) : new Animation(requestAnimationFrame(cb))\n\n/* c8 ignore next */\n// @ts-ignore\nconst Idle = createTimeoutClass(arg => typeof cancelIdleCallback !== 'undefined' && cancelIdleCallback(arg))\n\n/**\n * Note: this is experimental and is probably only useful in browsers.\n *\n * @param {function} cb\n * @return {TimeoutObject}\n */\n/* c8 ignore next 2 */\n// @ts-ignore\nexport const idleCallback = cb => typeof requestIdleCallback !== 'undefined' ? new Idle(requestIdleCallback(cb)) : timeout(1000, cb)\n\n/**\n * @param {number} timeout Timeout of the debounce action\n * @return {function(function():void):void}\n */\nexport const createDebouncer = timeout => {\n  let timer = -1\n  return f => {\n    clearTimeout(timer)\n    if (f) {\n      timer = /** @type {any} */ (setTimeout(f, timeout))\n    }\n  }\n}\n","/**\n * Utility module to work with EcmaScript Symbols.\n *\n * @module symbol\n */\n\n/**\n * Return fresh symbol.\n *\n * @return {Symbol}\n */\nexport const create = Symbol\n\n/**\n * @param {any} s\n * @return {boolean}\n */\nexport const isSymbol = s => typeof s === 'symbol'\n","import * as symbol from './symbol.js'\nimport * as time from './time.js'\nimport * as env from './environment.js'\nimport * as func from './function.js'\n\nexport const BOLD = symbol.create()\nexport const UNBOLD = symbol.create()\nexport const BLUE = symbol.create()\nexport const GREY = symbol.create()\nexport const GREEN = symbol.create()\nexport const RED = symbol.create()\nexport const PURPLE = symbol.create()\nexport const ORANGE = symbol.create()\nexport const UNCOLOR = symbol.create()\n\n/* c8 ignore start */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nexport const computeNoColorLoggingArgs = args => {\n  const strBuilder = []\n  const logArgs = []\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    if (arg.constructor === String || arg.constructor === Number) {\n      strBuilder.push(arg)\n    } else if (arg.constructor === Object) {\n      logArgs.push(JSON.stringify(arg))\n    }\n  }\n  return logArgs\n}\n/* c8 ignore stop */\n\nconst loggingColors = [GREEN, PURPLE, ORANGE, BLUE]\nlet nextColor = 0\nlet lastLoggingTime = time.getUnixTime()\n\n/* c8 ignore start */\n/**\n * @param {function(...any):void} _print\n * @param {string} moduleName\n * @return {function(...any):void}\n */\nexport const createModuleLogger = (_print, moduleName) => {\n  const color = loggingColors[nextColor]\n  const debugRegexVar = env.getVariable('log')\n  const doLogging = debugRegexVar !== null &&\n    (debugRegexVar === '*' || debugRegexVar === 'true' ||\n      new RegExp(debugRegexVar, 'gi').test(moduleName))\n  nextColor = (nextColor + 1) % loggingColors.length\n  moduleName += ': '\n  return !doLogging\n    ? func.nop\n    : (...args) => {\n        const timeNow = time.getUnixTime()\n        const timeDiff = timeNow - lastLoggingTime\n        lastLoggingTime = timeNow\n        _print(\n          color,\n          moduleName,\n          UNCOLOR,\n          ...args.map((arg) =>\n            (typeof arg === 'string' || typeof arg === 'symbol')\n              ? arg\n              : JSON.stringify(arg)\n          ),\n          color,\n          ' +' + timeDiff + 'ms'\n        )\n      }\n}\n/* c8 ignore stop */\n","/**\n * Isomorphic logging module with support for colors!\n *\n * @module logging\n */\n\nimport * as env from './environment.js'\nimport * as set from './set.js'\nimport * as pair from './pair.js'\nimport * as dom from './dom.js'\nimport * as json from './json.js'\nimport * as map from './map.js'\nimport * as eventloop from './eventloop.js'\nimport * as math from './math.js'\nimport * as common from './logging.common.js'\n\nexport { BOLD, UNBOLD, BLUE, GREY, GREEN, RED, PURPLE, ORANGE, UNCOLOR } from './logging.common.js'\n\n/**\n * @type {Object<Symbol,pair.Pair<string,string>>}\n */\nconst _browserStyleMap = {\n  [common.BOLD]: pair.create('font-weight', 'bold'),\n  [common.UNBOLD]: pair.create('font-weight', 'normal'),\n  [common.BLUE]: pair.create('color', 'blue'),\n  [common.GREEN]: pair.create('color', 'green'),\n  [common.GREY]: pair.create('color', 'grey'),\n  [common.RED]: pair.create('color', 'red'),\n  [common.PURPLE]: pair.create('color', 'purple'),\n  [common.ORANGE]: pair.create('color', 'orange'), // not well supported in chrome when debugging node with inspector - TODO: deprecate\n  [common.UNCOLOR]: pair.create('color', 'black')\n}\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\n/* c8 ignore start */\nconst computeBrowserLoggingArgs = (args) => {\n  const strBuilder = []\n  const styles = []\n  const currentStyle = map.create()\n  /**\n   * @type {Array<string|Object|number>}\n   */\n  let logArgs = []\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        const style = dom.mapToStyleString(currentStyle)\n        if (i > 0 || style.length > 0) {\n          strBuilder.push('%c' + arg)\n          styles.push(style)\n        } else {\n          strBuilder.push(arg)\n        }\n      } else {\n        break\n      }\n    }\n  }\n  if (i > 0) {\n    // create logArgs with what we have so far\n    logArgs = styles\n    logArgs.unshift(strBuilder.join(''))\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg)\n    }\n  }\n  return logArgs\n}\n/* c8 ignore stop */\n\n/* c8 ignore start */\nconst computeLoggingArgs = env.supportsColor\n  ? computeBrowserLoggingArgs\n  : common.computeNoColorLoggingArgs\n/* c8 ignore stop */\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const print = (...args) => {\n  console.log(...computeLoggingArgs(args))\n  /* c8 ignore next */\n  vconsoles.forEach((vc) => vc.print(args))\n}\n\n/* c8 ignore start */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const warn = (...args) => {\n  console.warn(...computeLoggingArgs(args))\n  args.unshift(common.ORANGE)\n  vconsoles.forEach((vc) => vc.print(args))\n}\n/* c8 ignore stop */\n\n/**\n * @param {Error} err\n */\n/* c8 ignore start */\nexport const printError = (err) => {\n  console.error(err)\n  vconsoles.forEach((vc) => vc.printError(err))\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} url image location\n * @param {number} height height of the image in pixel\n */\n/* c8 ignore start */\nexport const printImg = (url, height) => {\n  if (env.isBrowser) {\n    console.log(\n      '%c                      ',\n      `font-size: ${height}px; background-size: contain; background-repeat: no-repeat; background-image: url(${url})`\n    )\n    // console.log('%c                ', `font-size: ${height}x; background: url(${url}) no-repeat;`)\n  }\n  vconsoles.forEach((vc) => vc.printImg(url, height))\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} base64\n * @param {number} height\n */\n/* c8 ignore next 2 */\nexport const printImgBase64 = (base64, height) =>\n  printImg(`data:image/gif;base64,${base64}`, height)\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const group = (...args) => {\n  console.group(...computeLoggingArgs(args))\n  /* c8 ignore next */\n  vconsoles.forEach((vc) => vc.group(args))\n}\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const groupCollapsed = (...args) => {\n  console.groupCollapsed(...computeLoggingArgs(args))\n  /* c8 ignore next */\n  vconsoles.forEach((vc) => vc.groupCollapsed(args))\n}\n\nexport const groupEnd = () => {\n  console.groupEnd()\n  /* c8 ignore next */\n  vconsoles.forEach((vc) => vc.groupEnd())\n}\n\n/**\n * @param {function():Node} createNode\n */\n/* c8 ignore next 2 */\nexport const printDom = (createNode) =>\n  vconsoles.forEach((vc) => vc.printDom(createNode()))\n\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {number} height\n */\n/* c8 ignore next 2 */\nexport const printCanvas = (canvas, height) =>\n  printImg(canvas.toDataURL(), height)\n\nexport const vconsoles = set.create()\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<Element>}\n */\n/* c8 ignore start */\nconst _computeLineSpans = (args) => {\n  const spans = []\n  const currentStyle = new Map()\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        // @ts-ignore\n        const span = dom.element('span', [\n          pair.create('style', dom.mapToStyleString(currentStyle))\n        ], [dom.text(arg.toString())])\n        if (span.innerHTML === '') {\n          span.innerHTML = '&nbsp;'\n        }\n        spans.push(span)\n      } else {\n        break\n      }\n    }\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    let content = args[i]\n    if (!(content instanceof Symbol)) {\n      if (content.constructor !== String && content.constructor !== Number) {\n        content = ' ' + json.stringify(content) + ' '\n      }\n      spans.push(\n        dom.element('span', [], [dom.text(/** @type {string} */ (content))])\n      )\n    }\n  }\n  return spans\n}\n/* c8 ignore stop */\n\nconst lineStyle =\n  'font-family:monospace;border-bottom:1px solid #e2e2e2;padding:2px;'\n\n/* c8 ignore start */\nexport class VConsole {\n  /**\n   * @param {Element} dom\n   */\n  constructor (dom) {\n    this.dom = dom\n    /**\n     * @type {Element}\n     */\n    this.ccontainer = this.dom\n    this.depth = 0\n    vconsoles.add(this)\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   * @param {boolean} collapsed\n   */\n  group (args, collapsed = false) {\n    eventloop.enqueue(() => {\n      const triangleDown = dom.element('span', [\n        pair.create('hidden', collapsed),\n        pair.create('style', 'color:grey;font-size:120%;')\n      ], [dom.text('▼')])\n      const triangleRight = dom.element('span', [\n        pair.create('hidden', !collapsed),\n        pair.create('style', 'color:grey;font-size:125%;')\n      ], [dom.text('▶')])\n      const content = dom.element(\n        'div',\n        [pair.create(\n          'style',\n          `${lineStyle};padding-left:${this.depth * 10}px`\n        )],\n        [triangleDown, triangleRight, dom.text(' ')].concat(\n          _computeLineSpans(args)\n        )\n      )\n      const nextContainer = dom.element('div', [\n        pair.create('hidden', collapsed)\n      ])\n      const nextLine = dom.element('div', [], [content, nextContainer])\n      dom.append(this.ccontainer, [nextLine])\n      this.ccontainer = nextContainer\n      this.depth++\n      // when header is clicked, collapse/uncollapse container\n      dom.addEventListener(content, 'click', (_event) => {\n        nextContainer.toggleAttribute('hidden')\n        triangleDown.toggleAttribute('hidden')\n        triangleRight.toggleAttribute('hidden')\n      })\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  groupCollapsed (args) {\n    this.group(args, true)\n  }\n\n  groupEnd () {\n    eventloop.enqueue(() => {\n      if (this.depth > 0) {\n        this.depth--\n        // @ts-ignore\n        this.ccontainer = this.ccontainer.parentElement.parentElement\n      }\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  print (args) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [\n        dom.element('div', [\n          pair.create(\n            'style',\n            `${lineStyle};padding-left:${this.depth * 10}px`\n          )\n        ], _computeLineSpans(args))\n      ])\n    })\n  }\n\n  /**\n   * @param {Error} err\n   */\n  printError (err) {\n    this.print([common.RED, common.BOLD, err.toString()])\n  }\n\n  /**\n   * @param {string} url\n   * @param {number} height\n   */\n  printImg (url, height) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [\n        dom.element('img', [\n          pair.create('src', url),\n          pair.create('height', `${math.round(height * 1.5)}px`)\n        ])\n      ])\n    })\n  }\n\n  /**\n   * @param {Node} node\n   */\n  printDom (node) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [node])\n    })\n  }\n\n  destroy () {\n    eventloop.enqueue(() => {\n      vconsoles.delete(this)\n    })\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @param {Element} dom\n */\n/* c8 ignore next */\nexport const createVConsole = (dom) => new VConsole(dom)\n\n/**\n * @param {string} moduleName\n * @return {function(...any):void}\n */\nexport const createModuleLogger = (moduleName) => common.createModuleLogger(print, moduleName)\n","/**\n * Utility module to create and manipulate Iterators.\n *\n * @module iterator\n */\n\n/**\n * @template T,R\n * @param {Iterator<T>} iterator\n * @param {function(T):R} f\n * @return {IterableIterator<R>}\n */\nexport const mapIterator = (iterator, f) => ({\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next () {\n    const r = iterator.next()\n    return { value: r.done ? undefined : f(r.value), done: r.done }\n  }\n})\n\n/**\n * @template T\n * @param {function():IteratorResult<T>} next\n * @return {IterableIterator<T>}\n */\nexport const createIterator = next => ({\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next\n})\n\n/**\n * @template T\n * @param {Iterator<T>} iterator\n * @param {function(T):boolean} filter\n */\nexport const iteratorFilter = (iterator, filter) => createIterator(() => {\n  let res\n  do {\n    res = iterator.next()\n  } while (!res.done && !filter(res.value))\n  return res\n})\n\n/**\n * @template T,M\n * @param {Iterator<T>} iterator\n * @param {function(T):M} fmap\n */\nexport const iteratorMap = (iterator, fmap) => createIterator(() => {\n  const { done, value } = iterator.next()\n  return { done, value: done ? undefined : fmap(value) }\n})\n","import { Observable } from 'lib0/observable';\nimport * as array from 'lib0/array';\nimport * as math from 'lib0/math';\nimport * as map from 'lib0/map';\nimport * as encoding from 'lib0/encoding';\nimport * as decoding from 'lib0/decoding';\nimport * as random from 'lib0/random';\nimport * as promise from 'lib0/promise';\nimport * as buffer from 'lib0/buffer';\nimport * as error from 'lib0/error';\nimport * as binary from 'lib0/binary';\nimport * as f from 'lib0/function';\nimport { callAll } from 'lib0/function';\nimport * as set from 'lib0/set';\nimport * as logging from 'lib0/logging';\nimport * as time from 'lib0/time';\nimport * as string from 'lib0/string';\nimport * as iterator from 'lib0/iterator';\nimport * as object from 'lib0/object';\n\n/**\n * This is an abstract interface that all Connectors should implement to keep them interchangeable.\n *\n * @note This interface is experimental and it is not advised to actually inherit this class.\n *       It just serves as typing information.\n *\n * @extends {Observable<any>}\n */\nclass AbstractConnector extends Observable {\n  /**\n   * @param {Doc} ydoc\n   * @param {any} awareness\n   */\n  constructor (ydoc, awareness) {\n    super();\n    this.doc = ydoc;\n    this.awareness = awareness;\n  }\n}\n\nclass DeleteItem {\n  /**\n   * @param {number} clock\n   * @param {number} len\n   */\n  constructor (clock, len) {\n    /**\n     * @type {number}\n     */\n    this.clock = clock;\n    /**\n     * @type {number}\n     */\n    this.len = len;\n  }\n}\n\n/**\n * We no longer maintain a DeleteStore. DeleteSet is a temporary object that is created when needed.\n * - When created in a transaction, it must only be accessed after sorting, and merging\n *   - This DeleteSet is send to other clients\n * - We do not create a DeleteSet when we send a sync message. The DeleteSet message is created directly from StructStore\n * - We read a DeleteSet as part of a sync/update message. In this case the DeleteSet is already sorted and merged.\n */\nclass DeleteSet {\n  constructor () {\n    /**\n     * @type {Map<number,Array<DeleteItem>>}\n     */\n    this.clients = new Map();\n  }\n}\n\n/**\n * Iterate over all structs that the DeleteSet gc's.\n *\n * @param {Transaction} transaction\n * @param {DeleteSet} ds\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nconst iterateDeletedStructs = (transaction, ds, f) =>\n  ds.clients.forEach((deletes, clientid) => {\n    const structs = /** @type {Array<GC|Item>} */ (transaction.doc.store.clients.get(clientid));\n    for (let i = 0; i < deletes.length; i++) {\n      const del = deletes[i];\n      iterateStructs(transaction, structs, del.clock, del.len, f);\n    }\n  });\n\n/**\n * @param {Array<DeleteItem>} dis\n * @param {number} clock\n * @return {number|null}\n *\n * @private\n * @function\n */\nconst findIndexDS = (dis, clock) => {\n  let left = 0;\n  let right = dis.length - 1;\n  while (left <= right) {\n    const midindex = math.floor((left + right) / 2);\n    const mid = dis[midindex];\n    const midclock = mid.clock;\n    if (midclock <= clock) {\n      if (clock < midclock + mid.len) {\n        return midindex\n      }\n      left = midindex + 1;\n    } else {\n      right = midindex - 1;\n    }\n  }\n  return null\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {ID} id\n * @return {boolean}\n *\n * @private\n * @function\n */\nconst isDeleted = (ds, id) => {\n  const dis = ds.clients.get(id.client);\n  return dis !== undefined && findIndexDS(dis, id.clock) !== null\n};\n\n/**\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nconst sortAndMergeDeleteSet = ds => {\n  ds.clients.forEach(dels => {\n    dels.sort((a, b) => a.clock - b.clock);\n    // merge items without filtering or splicing the array\n    // i is the current pointer\n    // j refers to the current insert position for the pointed item\n    // try to merge dels[i] into dels[j-1] or set dels[j]=dels[i]\n    let i, j;\n    for (i = 1, j = 1; i < dels.length; i++) {\n      const left = dels[j - 1];\n      const right = dels[i];\n      if (left.clock + left.len >= right.clock) {\n        left.len = math.max(left.len, right.clock + right.len - left.clock);\n      } else {\n        if (j < i) {\n          dels[j] = right;\n        }\n        j++;\n      }\n    }\n    dels.length = j;\n  });\n};\n\n/**\n * @param {Array<DeleteSet>} dss\n * @return {DeleteSet} A fresh DeleteSet\n */\nconst mergeDeleteSets = dss => {\n  const merged = new DeleteSet();\n  for (let dssI = 0; dssI < dss.length; dssI++) {\n    dss[dssI].clients.forEach((delsLeft, client) => {\n      if (!merged.clients.has(client)) {\n        // Write all missing keys from current ds and all following.\n        // If merged already contains `client` current ds has already been added.\n        /**\n         * @type {Array<DeleteItem>}\n         */\n        const dels = delsLeft.slice();\n        for (let i = dssI + 1; i < dss.length; i++) {\n          array.appendTo(dels, dss[i].clients.get(client) || []);\n        }\n        merged.clients.set(client, dels);\n      }\n    });\n  }\n  sortAndMergeDeleteSet(merged);\n  return merged\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {number} client\n * @param {number} clock\n * @param {number} length\n *\n * @private\n * @function\n */\nconst addToDeleteSet = (ds, client, clock, length) => {\n  map.setIfUndefined(ds.clients, client, () => /** @type {Array<DeleteItem>} */ ([])).push(new DeleteItem(clock, length));\n};\n\nconst createDeleteSet = () => new DeleteSet();\n\n/**\n * @param {StructStore} ss\n * @return {DeleteSet} Merged and sorted DeleteSet\n *\n * @private\n * @function\n */\nconst createDeleteSetFromStructStore = ss => {\n  const ds = createDeleteSet();\n  ss.clients.forEach((structs, client) => {\n    /**\n     * @type {Array<DeleteItem>}\n     */\n    const dsitems = [];\n    for (let i = 0; i < structs.length; i++) {\n      const struct = structs[i];\n      if (struct.deleted) {\n        const clock = struct.id.clock;\n        let len = struct.length;\n        if (i + 1 < structs.length) {\n          for (let next = structs[i + 1]; i + 1 < structs.length && next.deleted; next = structs[++i + 1]) {\n            len += next.length;\n          }\n        }\n        dsitems.push(new DeleteItem(clock, len));\n      }\n    }\n    if (dsitems.length > 0) {\n      ds.clients.set(client, dsitems);\n    }\n  });\n  return ds\n};\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nconst writeDeleteSet = (encoder, ds) => {\n  encoding.writeVarUint(encoder.restEncoder, ds.clients.size);\n\n  // Ensure that the delete set is written in a deterministic order\n  array.from(ds.clients.entries())\n    .sort((a, b) => b[0] - a[0])\n    .forEach(([client, dsitems]) => {\n      encoder.resetDsCurVal();\n      encoding.writeVarUint(encoder.restEncoder, client);\n      const len = dsitems.length;\n      encoding.writeVarUint(encoder.restEncoder, len);\n      for (let i = 0; i < len; i++) {\n        const item = dsitems[i];\n        encoder.writeDsClock(item.clock);\n        encoder.writeDsLen(item.len);\n      }\n    });\n};\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {DeleteSet}\n *\n * @private\n * @function\n */\nconst readDeleteSet = decoder => {\n  const ds = new DeleteSet();\n  const numClients = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal();\n    const client = decoding.readVarUint(decoder.restDecoder);\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder);\n    if (numberOfDeletes > 0) {\n      const dsField = map.setIfUndefined(ds.clients, client, () => /** @type {Array<DeleteItem>} */ ([]));\n      for (let i = 0; i < numberOfDeletes; i++) {\n        dsField.push(new DeleteItem(decoder.readDsClock(), decoder.readDsLen()));\n      }\n    }\n  }\n  return ds\n};\n\n/**\n * @todo YDecoder also contains references to String and other Decoders. Would make sense to exchange YDecoder.toUint8Array for YDecoder.DsToUint8Array()..\n */\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @return {Uint8Array|null} Returns a v2 update containing all deletes that couldn't be applied yet; or null if all deletes were applied successfully.\n *\n * @private\n * @function\n */\nconst readAndApplyDeleteSet = (decoder, transaction, store) => {\n  const unappliedDS = new DeleteSet();\n  const numClients = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal();\n    const client = decoding.readVarUint(decoder.restDecoder);\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder);\n    const structs = store.clients.get(client) || [];\n    const state = getState(store, client);\n    for (let i = 0; i < numberOfDeletes; i++) {\n      const clock = decoder.readDsClock();\n      const clockEnd = clock + decoder.readDsLen();\n      if (clock < state) {\n        if (state < clockEnd) {\n          addToDeleteSet(unappliedDS, client, state, clockEnd - state);\n        }\n        let index = findIndexSS(structs, clock);\n        /**\n         * We can ignore the case of GC and Delete structs, because we are going to skip them\n         * @type {Item}\n         */\n        // @ts-ignore\n        let struct = structs[index];\n        // split the first item if necessary\n        if (!struct.deleted && struct.id.clock < clock) {\n          structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock));\n          index++; // increase we now want to use the next struct\n        }\n        while (index < structs.length) {\n          // @ts-ignore\n          struct = structs[index++];\n          if (struct.id.clock < clockEnd) {\n            if (!struct.deleted) {\n              if (clockEnd < struct.id.clock + struct.length) {\n                structs.splice(index, 0, splitItem(transaction, struct, clockEnd - struct.id.clock));\n              }\n              struct.delete(transaction);\n            }\n          } else {\n            break\n          }\n        }\n      } else {\n        addToDeleteSet(unappliedDS, client, clock, clockEnd - clock);\n      }\n    }\n  }\n  if (unappliedDS.clients.size > 0) {\n    const ds = new UpdateEncoderV2();\n    encoding.writeVarUint(ds.restEncoder, 0); // encode 0 structs\n    writeDeleteSet(ds, unappliedDS);\n    return ds.toUint8Array()\n  }\n  return null\n};\n\n/**\n * @param {DeleteSet} ds1\n * @param {DeleteSet} ds2\n */\nconst equalDeleteSets = (ds1, ds2) => {\n  if (ds1.clients.size !== ds2.clients.size) return false\n  for (const [client, deleteItems1] of ds1.clients.entries()) {\n    const deleteItems2 = /** @type {Array<import('../internals.js').DeleteItem>} */ (ds2.clients.get(client));\n    if (deleteItems2 === undefined || deleteItems1.length !== deleteItems2.length) return false\n    for (let i = 0; i < deleteItems1.length; i++) {\n      const di1 = deleteItems1[i];\n      const di2 = deleteItems2[i];\n      if (di1.clock !== di2.clock || di1.len !== di2.len) {\n        return false\n      }\n    }\n  }\n  return true\n};\n\n/**\n * @module Y\n */\n\nconst generateNewClientId = random.uint32;\n\n/**\n * @typedef {Object} DocOpts\n * @property {boolean} [DocOpts.gc=true] Disable garbage collection (default: gc=true)\n * @property {function(Item):boolean} [DocOpts.gcFilter] Will be called before an Item is garbage collected. Return false to keep the Item.\n * @property {string} [DocOpts.guid] Define a globally unique identifier for this document\n * @property {string | null} [DocOpts.collectionid] Associate this document with a collection. This only plays a role if your provider has a concept of collection.\n * @property {any} [DocOpts.meta] Any kind of meta information you want to associate with this document. If this is a subdocument, remote peers will store the meta information as well.\n * @property {boolean} [DocOpts.autoLoad] If a subdocument, automatically load document. If this is a subdocument, remote peers will load the document as well automatically.\n * @property {boolean} [DocOpts.shouldLoad] Whether the document should be synced by the provider now. This is toggled to true when you call ydoc.load()\n */\n\n/**\n * A Yjs instance handles the state of shared data.\n * @extends Observable<string>\n */\nclass Doc extends Observable {\n  /**\n   * @param {DocOpts} opts configuration\n   */\n  constructor ({ guid = random.uuidv4(), collectionid = null, gc = true, gcFilter = () => true, meta = null, autoLoad = false, shouldLoad = true } = {}) {\n    super();\n    this.gc = gc;\n    this.gcFilter = gcFilter;\n    this.clientID = generateNewClientId();\n    this.guid = guid;\n    this.collectionid = collectionid;\n    /**\n     * @type {Map<string, AbstractType<YEvent<any>>>}\n     */\n    this.share = new Map();\n    this.store = new StructStore();\n    /**\n     * @type {Transaction | null}\n     */\n    this._transaction = null;\n    /**\n     * @type {Array<Transaction>}\n     */\n    this._transactionCleanups = [];\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocs = new Set();\n    /**\n     * If this document is a subdocument - a document integrated into another document - then _item is defined.\n     * @type {Item?}\n     */\n    this._item = null;\n    this.shouldLoad = shouldLoad;\n    this.autoLoad = autoLoad;\n    this.meta = meta;\n    /**\n     * This is set to true when the persistence provider loaded the document from the database or when the `sync` event fires.\n     * Note that not all providers implement this feature. Provider authors are encouraged to fire the `load` event when the doc content is loaded from the database.\n     *\n     * @type {boolean}\n     */\n    this.isLoaded = false;\n    /**\n     * This is set to true when the connection provider has successfully synced with a backend.\n     * Note that when using peer-to-peer providers this event may not provide very useful.\n     * Also note that not all providers implement this feature. Provider authors are encouraged to fire\n     * the `sync` event when the doc has been synced (with `true` as a parameter) or if connection is\n     * lost (with false as a parameter).\n     */\n    this.isSynced = false;\n    /**\n     * Promise that resolves once the document has been loaded from a presistence provider.\n     */\n    this.whenLoaded = promise.create(resolve => {\n      this.on('load', () => {\n        this.isLoaded = true;\n        resolve(this);\n      });\n    });\n    const provideSyncedPromise = () => promise.create(resolve => {\n      /**\n       * @param {boolean} isSynced\n       */\n      const eventHandler = (isSynced) => {\n        if (isSynced === undefined || isSynced === true) {\n          this.off('sync', eventHandler);\n          resolve();\n        }\n      };\n      this.on('sync', eventHandler);\n    });\n    this.on('sync', isSynced => {\n      if (isSynced === false && this.isSynced) {\n        this.whenSynced = provideSyncedPromise();\n      }\n      this.isSynced = isSynced === undefined || isSynced === true;\n      if (this.isSynced && !this.isLoaded) {\n        this.emit('load', []);\n      }\n    });\n    /**\n     * Promise that resolves once the document has been synced with a backend.\n     * This promise is recreated when the connection is lost.\n     * Note the documentation about the `isSynced` property.\n     */\n    this.whenSynced = provideSyncedPromise();\n  }\n\n  /**\n   * Notify the parent document that you request to load data into this subdocument (if it is a subdocument).\n   *\n   * `load()` might be used in the future to request any provider to load the most current data.\n   *\n   * It is safe to call `load()` multiple times.\n   */\n  load () {\n    const item = this._item;\n    if (item !== null && !this.shouldLoad) {\n      transact(/** @type {any} */ (item.parent).doc, transaction => {\n        transaction.subdocsLoaded.add(this);\n      }, null, true);\n    }\n    this.shouldLoad = true;\n  }\n\n  getSubdocs () {\n    return this.subdocs\n  }\n\n  getSubdocGuids () {\n    return new Set(array.from(this.subdocs).map(doc => doc.guid))\n  }\n\n  /**\n   * Changes that happen inside of a transaction are bundled. This means that\n   * the observer fires _after_ the transaction is finished and that all changes\n   * that happened inside of the transaction are sent as one message to the\n   * other peers.\n   *\n   * @template T\n   * @param {function(Transaction):T} f The function that should be executed as a transaction\n   * @param {any} [origin] Origin of who started the transaction. Will be stored on transaction.origin\n   * @return T\n   *\n   * @public\n   */\n  transact (f, origin = null) {\n    return transact(this, f, origin)\n  }\n\n  /**\n   * Define a shared data type.\n   *\n   * Multiple calls of `y.get(name, TypeConstructor)` yield the same result\n   * and do not overwrite each other. I.e.\n   * `y.define(name, Y.Array) === y.define(name, Y.Array)`\n   *\n   * After this method is called, the type is also available on `y.share.get(name)`.\n   *\n   * *Best Practices:*\n   * Define all types right after the Yjs instance is created and store them in a separate object.\n   * Also use the typed methods `getText(name)`, `getArray(name)`, ..\n   *\n   * @example\n   *   const y = new Y(..)\n   *   const appState = {\n   *     document: y.getText('document')\n   *     comments: y.getArray('comments')\n   *   }\n   *\n   * @param {string} name\n   * @param {Function} TypeConstructor The constructor of the type definition. E.g. Y.Text, Y.Array, Y.Map, ...\n   * @return {AbstractType<any>} The created type. Constructed with TypeConstructor\n   *\n   * @public\n   */\n  get (name, TypeConstructor = AbstractType) {\n    const type = map.setIfUndefined(this.share, name, () => {\n      // @ts-ignore\n      const t = new TypeConstructor();\n      t._integrate(this, null);\n      return t\n    });\n    const Constr = type.constructor;\n    if (TypeConstructor !== AbstractType && Constr !== TypeConstructor) {\n      if (Constr === AbstractType) {\n        // @ts-ignore\n        const t = new TypeConstructor();\n        t._map = type._map;\n        type._map.forEach(/** @param {Item?} n */ n => {\n          for (; n !== null; n = n.left) {\n            // @ts-ignore\n            n.parent = t;\n          }\n        });\n        t._start = type._start;\n        for (let n = t._start; n !== null; n = n.right) {\n          n.parent = t;\n        }\n        t._length = type._length;\n        this.share.set(name, t);\n        t._integrate(this, null);\n        return t\n      } else {\n        throw new Error(`Type with the name ${name} has already been defined with a different constructor`)\n      }\n    }\n    return type\n  }\n\n  /**\n   * @template T\n   * @param {string} [name]\n   * @return {YArray<T>}\n   *\n   * @public\n   */\n  getArray (name = '') {\n    // @ts-ignore\n    return this.get(name, YArray)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YText}\n   *\n   * @public\n   */\n  getText (name = '') {\n    // @ts-ignore\n    return this.get(name, YText)\n  }\n\n  /**\n   * @template T\n   * @param {string} [name]\n   * @return {YMap<T>}\n   *\n   * @public\n   */\n  getMap (name = '') {\n    // @ts-ignore\n    return this.get(name, YMap)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YXmlFragment}\n   *\n   * @public\n   */\n  getXmlFragment (name = '') {\n    // @ts-ignore\n    return this.get(name, YXmlFragment)\n  }\n\n  /**\n   * Converts the entire document into a js object, recursively traversing each yjs type\n   * Doesn't log types that have not been defined (using ydoc.getType(..)).\n   *\n   * @deprecated Do not use this method and rather call toJSON directly on the shared types.\n   *\n   * @return {Object<string, any>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string, any>}\n     */\n    const doc = {};\n\n    this.share.forEach((value, key) => {\n      doc[key] = value.toJSON();\n    });\n\n    return doc\n  }\n\n  /**\n   * Emit `destroy` event and unregister all event handlers.\n   */\n  destroy () {\n    array.from(this.subdocs).forEach(subdoc => subdoc.destroy());\n    const item = this._item;\n    if (item !== null) {\n      this._item = null;\n      const content = /** @type {ContentDoc} */ (item.content);\n      content.doc = new Doc({ guid: this.guid, ...content.opts, shouldLoad: false });\n      content.doc._item = item;\n      transact(/** @type {any} */ (item).parent.doc, transaction => {\n        const doc = content.doc;\n        if (!item.deleted) {\n          transaction.subdocsAdded.add(doc);\n        }\n        transaction.subdocsRemoved.add(this);\n      }, null, true);\n    }\n    this.emit('destroyed', [true]);\n    this.emit('destroy', [this]);\n    super.destroy();\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function(...any):any} f\n   */\n  on (eventName, f) {\n    super.on(eventName, f);\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} f\n   */\n  off (eventName, f) {\n    super.off(eventName, f);\n  }\n}\n\nclass DSDecoderV1 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    this.restDecoder = decoder;\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n}\n\nclass UpdateDecoderV1 extends DSDecoderV1 {\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return decoding.readUint8(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return decoding.readVarString(this.restDecoder)\n  }\n\n  /**\n   * @return {boolean} isKey\n   */\n  readParentInfo () {\n    return decoding.readVarUint(this.restDecoder) === 1\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number} len\n   */\n  readLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return buffer.copyUint8Array(decoding.readVarUint8Array(this.restDecoder))\n  }\n\n  /**\n   * Legacy implementation uses JSON parse. We use any-decoding in v2.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return JSON.parse(decoding.readVarString(this.restDecoder))\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    return decoding.readVarString(this.restDecoder)\n  }\n}\n\nclass DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    /**\n     * @private\n     */\n    this.dsCurrVal = 0;\n    this.restDecoder = decoder;\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0;\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    this.dsCurrVal += decoding.readVarUint(this.restDecoder);\n    return this.dsCurrVal\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    const diff = decoding.readVarUint(this.restDecoder) + 1;\n    this.dsCurrVal += diff;\n    return diff\n  }\n}\n\nclass UpdateDecoderV2 extends DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    super(decoder);\n    /**\n     * List of cached keys. If the keys[id] does not exist, we read a new key\n     * from stringEncoder and push it to keys.\n     *\n     * @type {Array<string>}\n     */\n    this.keys = [];\n    decoding.readVarUint(decoder); // read feature flag - currently unused\n    this.keyClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.clientDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.leftClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.rightClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.infoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8);\n    this.stringDecoder = new decoding.StringDecoder(decoding.readVarUint8Array(decoder));\n    this.parentInfoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8);\n    this.typeRefDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.lenDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder));\n  }\n\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return new ID(this.clientDecoder.read(), this.leftClockDecoder.read())\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return new ID(this.clientDecoder.read(), this.rightClockDecoder.read())\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return this.clientDecoder.read()\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return /** @type {number} */ (this.infoDecoder.read())\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return this.stringDecoder.read()\n  }\n\n  /**\n   * @return {boolean}\n   */\n  readParentInfo () {\n    return this.parentInfoDecoder.read() === 1\n  }\n\n  /**\n   * @return {number} An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return this.typeRefDecoder.read()\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number}\n   */\n  readLen () {\n    return this.lenDecoder.read()\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return decoding.readVarUint8Array(this.restDecoder)\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    const keyClock = this.keyClockDecoder.read();\n    if (keyClock < this.keys.length) {\n      return this.keys[keyClock]\n    } else {\n      const key = this.stringDecoder.read();\n      this.keys.push(key);\n      return key\n    }\n  }\n}\n\nclass DSEncoderV1 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder();\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    encoding.writeVarUint(this.restEncoder, clock);\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    encoding.writeVarUint(this.restEncoder, len);\n  }\n}\n\nclass UpdateEncoderV1 extends DSEncoderV1 {\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client);\n    encoding.writeVarUint(this.restEncoder, id.clock);\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client);\n    encoding.writeVarUint(this.restEncoder, id.clock);\n  }\n\n  /**\n   * Use writeClient and writeClock instead of writeID if possible.\n   * @param {number} client\n   */\n  writeClient (client) {\n    encoding.writeVarUint(this.restEncoder, client);\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    encoding.writeUint8(this.restEncoder, info);\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    encoding.writeVarString(this.restEncoder, s);\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    encoding.writeVarUint(this.restEncoder, isYKey ? 1 : 0);\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    encoding.writeVarUint(this.restEncoder, info);\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    encoding.writeVarUint(this.restEncoder, len);\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any);\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf);\n  }\n\n  /**\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeVarString(this.restEncoder, JSON.stringify(embed));\n  }\n\n  /**\n   * @param {string} key\n   */\n  writeKey (key) {\n    encoding.writeVarString(this.restEncoder, key);\n  }\n}\n\nclass DSEncoderV2 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder(); // encodes all the rest / non-optimized\n    this.dsCurrVal = 0;\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0;\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    const diff = clock - this.dsCurrVal;\n    this.dsCurrVal = clock;\n    encoding.writeVarUint(this.restEncoder, diff);\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    if (len === 0) {\n      error.unexpectedCase();\n    }\n    encoding.writeVarUint(this.restEncoder, len - 1);\n    this.dsCurrVal += len;\n  }\n}\n\nclass UpdateEncoderV2 extends DSEncoderV2 {\n  constructor () {\n    super();\n    /**\n     * @type {Map<string,number>}\n     */\n    this.keyMap = new Map();\n    /**\n     * Refers to the next uniqe key-identifier to me used.\n     * See writeKey method for more information.\n     *\n     * @type {number}\n     */\n    this.keyClock = 0;\n    this.keyClockEncoder = new encoding.IntDiffOptRleEncoder();\n    this.clientEncoder = new encoding.UintOptRleEncoder();\n    this.leftClockEncoder = new encoding.IntDiffOptRleEncoder();\n    this.rightClockEncoder = new encoding.IntDiffOptRleEncoder();\n    this.infoEncoder = new encoding.RleEncoder(encoding.writeUint8);\n    this.stringEncoder = new encoding.StringEncoder();\n    this.parentInfoEncoder = new encoding.RleEncoder(encoding.writeUint8);\n    this.typeRefEncoder = new encoding.UintOptRleEncoder();\n    this.lenEncoder = new encoding.UintOptRleEncoder();\n  }\n\n  toUint8Array () {\n    const encoder = encoding.createEncoder();\n    encoding.writeVarUint(encoder, 0); // this is a feature flag that we might use in the future\n    encoding.writeVarUint8Array(encoder, this.keyClockEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, this.clientEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, this.leftClockEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, this.rightClockEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.infoEncoder));\n    encoding.writeVarUint8Array(encoder, this.stringEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.parentInfoEncoder));\n    encoding.writeVarUint8Array(encoder, this.typeRefEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, this.lenEncoder.toUint8Array());\n    // @note The rest encoder is appended! (note the missing var)\n    encoding.writeUint8Array(encoder, encoding.toUint8Array(this.restEncoder));\n    return encoding.toUint8Array(encoder)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    this.clientEncoder.write(id.client);\n    this.leftClockEncoder.write(id.clock);\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    this.clientEncoder.write(id.client);\n    this.rightClockEncoder.write(id.clock);\n  }\n\n  /**\n   * @param {number} client\n   */\n  writeClient (client) {\n    this.clientEncoder.write(client);\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    this.infoEncoder.write(info);\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    this.stringEncoder.write(s);\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    this.parentInfoEncoder.write(isYKey ? 1 : 0);\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    this.typeRefEncoder.write(info);\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    this.lenEncoder.write(len);\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any);\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf);\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeAny(this.restEncoder, embed);\n  }\n\n  /**\n   * Property keys are often reused. For example, in y-prosemirror the key `bold` might\n   * occur very often. For a 3d application, the key `position` might occur very often.\n   *\n   * We cache these keys in a Map and refer to them via a unique number.\n   *\n   * @param {string} key\n   */\n  writeKey (key) {\n    const clock = this.keyMap.get(key);\n    if (clock === undefined) {\n      /**\n       * @todo uncomment to introduce this feature finally\n       *\n       * Background. The ContentFormat object was always encoded using writeKey, but the decoder used to use readString.\n       * Furthermore, I forgot to set the keyclock. So everything was working fine.\n       *\n       * However, this feature here is basically useless as it is not being used (it actually only consumes extra memory).\n       *\n       * I don't know yet how to reintroduce this feature..\n       *\n       * Older clients won't be able to read updates when we reintroduce this feature. So this should probably be done using a flag.\n       *\n       */\n      // this.keyMap.set(key, this.keyClock)\n      this.keyClockEncoder.write(this.keyClock++);\n      this.stringEncoder.write(key);\n    } else {\n      this.keyClockEncoder.write(clock);\n    }\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Array<GC|Item>} structs All structs by `client`\n * @param {number} client\n * @param {number} clock write structs starting with `ID(client,clock)`\n *\n * @function\n */\nconst writeStructs = (encoder, structs, client, clock) => {\n  // write first id\n  clock = math.max(clock, structs[0].id.clock); // make sure the first id exists\n  const startNewStructs = findIndexSS(structs, clock);\n  // write # encoded structs\n  encoding.writeVarUint(encoder.restEncoder, structs.length - startNewStructs);\n  encoder.writeClient(client);\n  encoding.writeVarUint(encoder.restEncoder, clock);\n  const firstStruct = structs[startNewStructs];\n  // write first struct with an offset\n  firstStruct.write(encoder, clock - firstStruct.id.clock);\n  for (let i = startNewStructs + 1; i < structs.length; i++) {\n    structs[i].write(encoder, 0);\n  }\n};\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {StructStore} store\n * @param {Map<number,number>} _sm\n *\n * @private\n * @function\n */\nconst writeClientsStructs = (encoder, store, _sm) => {\n  // we filter all valid _sm entries into sm\n  const sm = new Map();\n  _sm.forEach((clock, client) => {\n    // only write if new structs are available\n    if (getState(store, client) > clock) {\n      sm.set(client, clock);\n    }\n  });\n  getStateVector(store).forEach((_clock, client) => {\n    if (!_sm.has(client)) {\n      sm.set(client, 0);\n    }\n  });\n  // write # states that were updated\n  encoding.writeVarUint(encoder.restEncoder, sm.size);\n  // Write items with higher client ids first\n  // This heavily improves the conflict algorithm.\n  array.from(sm.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n    writeStructs(encoder, /** @type {Array<GC|Item>} */ (store.clients.get(client)), client, clock);\n  });\n};\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder The decoder object to read data from.\n * @param {Doc} doc\n * @return {Map<number, { i: number, refs: Array<Item | GC> }>}\n *\n * @private\n * @function\n */\nconst readClientsStructRefs = (decoder, doc) => {\n  /**\n   * @type {Map<number, { i: number, refs: Array<Item | GC> }>}\n   */\n  const clientRefs = map.create();\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder);\n    /**\n     * @type {Array<GC|Item>}\n     */\n    const refs = new Array(numberOfStructs);\n    const client = decoder.readClient();\n    let clock = decoding.readVarUint(decoder.restDecoder);\n    // const start = performance.now()\n    clientRefs.set(client, { i: 0, refs });\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo();\n      switch (binary.BITS5 & info) {\n        case 0: { // GC\n          const len = decoder.readLen();\n          refs[i] = new GC(createID(client, clock), len);\n          clock += len;\n          break\n        }\n        case 10: { // Skip Struct (nothing to apply)\n          // @todo we could reduce the amount of checks by adding Skip struct to clientRefs so we know that something is missing.\n          const len = decoding.readVarUint(decoder.restDecoder);\n          refs[i] = new Skip(createID(client, clock), len);\n          clock += len;\n          break\n        }\n        default: { // Item with content\n          /**\n           * The optimized implementation doesn't use any variables because inlining variables is faster.\n           * Below a non-optimized version is shown that implements the basic algorithm with\n           * a few comments\n           */\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0;\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n            null, // right\n            (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n            cantCopyParentInfo ? (decoder.readParentInfo() ? doc.get(decoder.readString()) : decoder.readLeftID()) : null, // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          );\n          /* A non-optimized implementation of the above algorithm:\n\n          // The item that was originally to the left of this item.\n          const origin = (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null\n          // The item that was originally to the right of this item.\n          const rightOrigin = (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n          const hasParentYKey = cantCopyParentInfo ? decoder.readParentInfo() : false\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const parentYKey = cantCopyParentInfo && hasParentYKey ? decoder.readString() : null\n\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            origin, // origin\n            null, // right\n            rightOrigin, // right origin\n            cantCopyParentInfo && !hasParentYKey ? decoder.readLeftID() : (parentYKey !== null ? doc.get(parentYKey) : null), // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          )\n          */\n          refs[i] = struct;\n          clock += struct.length;\n        }\n      }\n    }\n    // console.log('time to read: ', performance.now() - start) // @todo remove\n  }\n  return clientRefs\n};\n\n/**\n * Resume computing structs generated by struct readers.\n *\n * While there is something to do, we integrate structs in this order\n * 1. top element on stack, if stack is not empty\n * 2. next element from current struct reader (if empty, use next struct reader)\n *\n * If struct causally depends on another struct (ref.missing), we put next reader of\n * `ref.id.client` on top of stack.\n *\n * At some point we find a struct that has no causal dependencies,\n * then we start emptying the stack.\n *\n * It is not possible to have circles: i.e. struct1 (from client1) depends on struct2 (from client2)\n * depends on struct3 (from client1). Therefore the max stack size is eqaul to `structReaders.length`.\n *\n * This method is implemented in a way so that we can resume computation if this update\n * causally depends on another update.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {Map<number, { i: number, refs: (GC | Item)[] }>} clientsStructRefs\n * @return { null | { update: Uint8Array, missing: Map<number,number> } }\n *\n * @private\n * @function\n */\nconst integrateStructs = (transaction, store, clientsStructRefs) => {\n  /**\n   * @type {Array<Item | GC>}\n   */\n  const stack = [];\n  // sort them so that we take the higher id first, in case of conflicts the lower id will probably not conflict with the id from the higher user.\n  let clientsStructRefsIds = array.from(clientsStructRefs.keys()).sort((a, b) => a - b);\n  if (clientsStructRefsIds.length === 0) {\n    return null\n  }\n  const getNextStructTarget = () => {\n    if (clientsStructRefsIds.length === 0) {\n      return null\n    }\n    let nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]));\n    while (nextStructsTarget.refs.length === nextStructsTarget.i) {\n      clientsStructRefsIds.pop();\n      if (clientsStructRefsIds.length > 0) {\n        nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]));\n      } else {\n        return null\n      }\n    }\n    return nextStructsTarget\n  };\n  let curStructsTarget = getNextStructTarget();\n  if (curStructsTarget === null) {\n    return null\n  }\n\n  /**\n   * @type {StructStore}\n   */\n  const restStructs = new StructStore();\n  const missingSV = new Map();\n  /**\n   * @param {number} client\n   * @param {number} clock\n   */\n  const updateMissingSv = (client, clock) => {\n    const mclock = missingSV.get(client);\n    if (mclock == null || mclock > clock) {\n      missingSV.set(client, clock);\n    }\n  };\n  /**\n   * @type {GC|Item}\n   */\n  let stackHead = /** @type {any} */ (curStructsTarget).refs[/** @type {any} */ (curStructsTarget).i++];\n  // caching the state because it is used very often\n  const state = new Map();\n\n  const addStackToRestSS = () => {\n    for (const item of stack) {\n      const client = item.id.client;\n      const unapplicableItems = clientsStructRefs.get(client);\n      if (unapplicableItems) {\n        // decrement because we weren't able to apply previous operation\n        unapplicableItems.i--;\n        restStructs.clients.set(client, unapplicableItems.refs.slice(unapplicableItems.i));\n        clientsStructRefs.delete(client);\n        unapplicableItems.i = 0;\n        unapplicableItems.refs = [];\n      } else {\n        // item was the last item on clientsStructRefs and the field was already cleared. Add item to restStructs and continue\n        restStructs.clients.set(client, [item]);\n      }\n      // remove client from clientsStructRefsIds to prevent users from applying the same update again\n      clientsStructRefsIds = clientsStructRefsIds.filter(c => c !== client);\n    }\n    stack.length = 0;\n  };\n\n  // iterate over all struct readers until we are done\n  while (true) {\n    if (stackHead.constructor !== Skip) {\n      const localClock = map.setIfUndefined(state, stackHead.id.client, () => getState(store, stackHead.id.client));\n      const offset = localClock - stackHead.id.clock;\n      if (offset < 0) {\n        // update from the same client is missing\n        stack.push(stackHead);\n        updateMissingSv(stackHead.id.client, stackHead.id.clock - 1);\n        // hid a dead wall, add all items from stack to restSS\n        addStackToRestSS();\n      } else {\n        const missing = stackHead.getMissing(transaction, store);\n        if (missing !== null) {\n          stack.push(stackHead);\n          // get the struct reader that has the missing struct\n          /**\n           * @type {{ refs: Array<GC|Item>, i: number }}\n           */\n          const structRefs = clientsStructRefs.get(/** @type {number} */ (missing)) || { refs: [], i: 0 };\n          if (structRefs.refs.length === structRefs.i) {\n            // This update message causally depends on another update message that doesn't exist yet\n            updateMissingSv(/** @type {number} */ (missing), getState(store, missing));\n            addStackToRestSS();\n          } else {\n            stackHead = structRefs.refs[structRefs.i++];\n            continue\n          }\n        } else if (offset === 0 || offset < stackHead.length) {\n          // all fine, apply the stackhead\n          stackHead.integrate(transaction, offset);\n          state.set(stackHead.id.client, stackHead.id.clock + stackHead.length);\n        }\n      }\n    }\n    // iterate to next stackHead\n    if (stack.length > 0) {\n      stackHead = /** @type {GC|Item} */ (stack.pop());\n    } else if (curStructsTarget !== null && curStructsTarget.i < curStructsTarget.refs.length) {\n      stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++]);\n    } else {\n      curStructsTarget = getNextStructTarget();\n      if (curStructsTarget === null) {\n        // we are done!\n        break\n      } else {\n        stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++]);\n      }\n    }\n  }\n  if (restStructs.clients.size > 0) {\n    const encoder = new UpdateEncoderV2();\n    writeClientsStructs(encoder, restStructs, new Map());\n    // write empty deleteset\n    // writeDeleteSet(encoder, new DeleteSet())\n    encoding.writeVarUint(encoder.restEncoder, 0); // => no need for an extra function call, just write 0 deletes\n    return { missing: missingSV, update: encoder.toUint8Array() }\n  }\n  return null\n};\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nconst writeStructsFromTransaction = (encoder, transaction) => writeClientsStructs(encoder, transaction.doc.store, transaction.beforeState);\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {UpdateDecoderV1 | UpdateDecoderV2} [structDecoder]\n *\n * @function\n */\nconst readUpdateV2 = (decoder, ydoc, transactionOrigin, structDecoder = new UpdateDecoderV2(decoder)) =>\n  transact(ydoc, transaction => {\n    // force that transaction.local is set to non-local\n    transaction.local = false;\n    let retry = false;\n    const doc = transaction.doc;\n    const store = doc.store;\n    // let start = performance.now()\n    const ss = readClientsStructRefs(structDecoder, doc);\n    // console.log('time to read structs: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    // console.log('time to merge: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const restStructs = integrateStructs(transaction, store, ss);\n    const pending = store.pendingStructs;\n    if (pending) {\n      // check if we can apply something\n      for (const [client, clock] of pending.missing) {\n        if (clock < getState(store, client)) {\n          retry = true;\n          break\n        }\n      }\n      if (restStructs) {\n        // merge restStructs into store.pending\n        for (const [client, clock] of restStructs.missing) {\n          const mclock = pending.missing.get(client);\n          if (mclock == null || mclock > clock) {\n            pending.missing.set(client, clock);\n          }\n        }\n        pending.update = mergeUpdatesV2([pending.update, restStructs.update]);\n      }\n    } else {\n      store.pendingStructs = restStructs;\n    }\n    // console.log('time to integrate: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const dsRest = readAndApplyDeleteSet(structDecoder, transaction, store);\n    if (store.pendingDs) {\n      // @todo we could make a lower-bound state-vector check as we do above\n      const pendingDSUpdate = new UpdateDecoderV2(decoding.createDecoder(store.pendingDs));\n      decoding.readVarUint(pendingDSUpdate.restDecoder); // read 0 structs, because we only encode deletes in pendingdsupdate\n      const dsRest2 = readAndApplyDeleteSet(pendingDSUpdate, transaction, store);\n      if (dsRest && dsRest2) {\n        // case 1: ds1 != null && ds2 != null\n        store.pendingDs = mergeUpdatesV2([dsRest, dsRest2]);\n      } else {\n        // case 2: ds1 != null\n        // case 3: ds2 != null\n        // case 4: ds1 == null && ds2 == null\n        store.pendingDs = dsRest || dsRest2;\n      }\n    } else {\n      // Either dsRest == null && pendingDs == null OR dsRest != null\n      store.pendingDs = dsRest;\n    }\n    // console.log('time to cleanup: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n\n    // console.log('time to resume delete readers: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    if (retry) {\n      const update = /** @type {{update: Uint8Array}} */ (store.pendingStructs).update;\n      store.pendingStructs = null;\n      applyUpdateV2(transaction.doc, update);\n    }\n  }, transactionOrigin, false);\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nconst readUpdate = (decoder, ydoc, transactionOrigin) => readUpdateV2(decoder, ydoc, transactionOrigin, new UpdateDecoderV1(decoder));\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n *\n * @function\n */\nconst applyUpdateV2 = (ydoc, update, transactionOrigin, YDecoder = UpdateDecoderV2) => {\n  const decoder = decoding.createDecoder(update);\n  readUpdateV2(decoder, ydoc, transactionOrigin, new YDecoder(decoder));\n};\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nconst applyUpdate = (ydoc, update, transactionOrigin) => applyUpdateV2(ydoc, update, transactionOrigin, UpdateDecoderV1);\n\n/**\n * Write all the document as a single update message. If you specify the state of the remote client (`targetStateVector`) it will\n * only write the operations that are missing.\n *\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Doc} doc\n * @param {Map<number,number>} [targetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n *\n * @function\n */\nconst writeStateAsUpdate = (encoder, doc, targetStateVector = new Map()) => {\n  writeClientsStructs(encoder, doc.store, targetStateVector);\n  writeDeleteSet(encoder, createDeleteSetFromStructStore(doc.store));\n};\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @param {UpdateEncoderV1 | UpdateEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateAsUpdateV2 = (doc, encodedTargetStateVector = new Uint8Array([0]), encoder = new UpdateEncoderV2()) => {\n  const targetStateVector = decodeStateVector(encodedTargetStateVector);\n  writeStateAsUpdate(encoder, doc, targetStateVector);\n  const updates = [encoder.toUint8Array()];\n  // also add the pending updates (if there are any)\n  if (doc.store.pendingDs) {\n    updates.push(doc.store.pendingDs);\n  }\n  if (doc.store.pendingStructs) {\n    updates.push(diffUpdateV2(doc.store.pendingStructs.update, encodedTargetStateVector));\n  }\n  if (updates.length > 1) {\n    if (encoder.constructor === UpdateEncoderV1) {\n      return mergeUpdates(updates.map((update, i) => i === 0 ? update : convertUpdateFormatV2ToV1(update)))\n    } else if (encoder.constructor === UpdateEncoderV2) {\n      return mergeUpdatesV2(updates)\n    }\n  }\n  return updates[0]\n};\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateAsUpdate = (doc, encodedTargetStateVector) => encodeStateAsUpdateV2(doc, encodedTargetStateVector, new UpdateEncoderV1());\n\n/**\n * Read state vector from Decoder and return as Map\n *\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nconst readStateVector = decoder => {\n  const ss = new Map();\n  const ssLength = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < ssLength; i++) {\n    const client = decoding.readVarUint(decoder.restDecoder);\n    const clock = decoding.readVarUint(decoder.restDecoder);\n    ss.set(client, clock);\n  }\n  return ss\n};\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\n// export const decodeStateVectorV2 = decodedState => readStateVector(new DSDecoderV2(decoding.createDecoder(decodedState)))\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nconst decodeStateVector = decodedState => readStateVector(new DSDecoderV1(decoding.createDecoder(decodedState)));\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Map<number,number>} sv\n * @function\n */\nconst writeStateVector = (encoder, sv) => {\n  encoding.writeVarUint(encoder.restEncoder, sv.size);\n  array.from(sv.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n    encoding.writeVarUint(encoder.restEncoder, client); // @todo use a special client decoder that is based on mapping\n    encoding.writeVarUint(encoder.restEncoder, clock);\n  });\n  return encoder\n};\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Doc} doc\n *\n * @function\n */\nconst writeDocumentStateVector = (encoder, doc) => writeStateVector(encoder, getStateVector(doc.store));\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateVectorV2 = (doc, encoder = new DSEncoderV2()) => {\n  if (doc instanceof Map) {\n    writeStateVector(encoder, doc);\n  } else {\n    writeDocumentStateVector(encoder, doc);\n  }\n  return encoder.toUint8Array()\n};\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateVector = doc => encodeStateVectorV2(doc, new DSEncoderV1());\n\n/**\n * General event handler implementation.\n *\n * @template ARG0, ARG1\n *\n * @private\n */\nclass EventHandler {\n  constructor () {\n    /**\n     * @type {Array<function(ARG0, ARG1):void>}\n     */\n    this.l = [];\n  }\n}\n\n/**\n * @template ARG0,ARG1\n * @returns {EventHandler<ARG0,ARG1>}\n *\n * @private\n * @function\n */\nconst createEventHandler = () => new EventHandler();\n\n/**\n * Adds an event listener that is called when\n * {@link EventHandler#callEventListeners} is called.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler.\n *\n * @private\n * @function\n */\nconst addEventHandlerListener = (eventHandler, f) =>\n  eventHandler.l.push(f);\n\n/**\n * Removes an event listener.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler that was added with\n *                     {@link EventHandler#addEventListener}\n *\n * @private\n * @function\n */\nconst removeEventHandlerListener = (eventHandler, f) => {\n  const l = eventHandler.l;\n  const len = l.length;\n  eventHandler.l = l.filter(g => f !== g);\n  if (len === eventHandler.l.length) {\n    console.error('[yjs] Tried to remove event handler that doesn\\'t exist.');\n  }\n};\n\n/**\n * Call all event listeners that were added via\n * {@link EventHandler#addEventListener}.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {ARG0} arg0\n * @param {ARG1} arg1\n *\n * @private\n * @function\n */\nconst callEventHandlerListeners = (eventHandler, arg0, arg1) =>\n  f.callAll(eventHandler.l, [arg0, arg1]);\n\nclass ID {\n  /**\n   * @param {number} client client id\n   * @param {number} clock unique per client id, continuous number\n   */\n  constructor (client, clock) {\n    /**\n     * Client id\n     * @type {number}\n     */\n    this.client = client;\n    /**\n     * unique per client id, continuous number\n     * @type {number}\n     */\n    this.clock = clock;\n  }\n}\n\n/**\n * @param {ID | null} a\n * @param {ID | null} b\n * @return {boolean}\n *\n * @function\n */\nconst compareIDs = (a, b) => a === b || (a !== null && b !== null && a.client === b.client && a.clock === b.clock);\n\n/**\n * @param {number} client\n * @param {number} clock\n *\n * @private\n * @function\n */\nconst createID = (client, clock) => new ID(client, clock);\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {ID} id\n *\n * @private\n * @function\n */\nconst writeID = (encoder, id) => {\n  encoding.writeVarUint(encoder, id.client);\n  encoding.writeVarUint(encoder, id.clock);\n};\n\n/**\n * Read ID.\n * * If first varUint read is 0xFFFFFF a RootID is returned.\n * * Otherwise an ID is returned\n *\n * @param {decoding.Decoder} decoder\n * @return {ID}\n *\n * @private\n * @function\n */\nconst readID = decoder =>\n  createID(decoding.readVarUint(decoder), decoding.readVarUint(decoder));\n\n/**\n * The top types are mapped from y.share.get(keyname) => type.\n * `type` does not store any information about the `keyname`.\n * This function finds the correct `keyname` for `type` and throws otherwise.\n *\n * @param {AbstractType<any>} type\n * @return {string}\n *\n * @private\n * @function\n */\nconst findRootTypeKey = type => {\n  // @ts-ignore _y must be defined, otherwise unexpected case\n  for (const [key, value] of type.doc.share.entries()) {\n    if (value === type) {\n      return key\n    }\n  }\n  throw error.unexpectedCase()\n};\n\n/**\n * Check if `parent` is a parent of `child`.\n *\n * @param {AbstractType<any>} parent\n * @param {Item|null} child\n * @return {Boolean} Whether `parent` is a parent of `child`.\n *\n * @private\n * @function\n */\nconst isParentOf = (parent, child) => {\n  while (child !== null) {\n    if (child.parent === parent) {\n      return true\n    }\n    child = /** @type {AbstractType<any>} */ (child.parent)._item;\n  }\n  return false\n};\n\n/**\n * Convenient helper to log type information.\n *\n * Do not use in productive systems as the output can be immense!\n *\n * @param {AbstractType<any>} type\n */\nconst logType = type => {\n  const res = [];\n  let n = type._start;\n  while (n) {\n    res.push(n);\n    n = n.right;\n  }\n  console.log('Children: ', res);\n  console.log('Children content: ', res.filter(m => !m.deleted).map(m => m.content));\n};\n\nclass PermanentUserData {\n  /**\n   * @param {Doc} doc\n   * @param {YMap<any>} [storeType]\n   */\n  constructor (doc, storeType = doc.getMap('users')) {\n    /**\n     * @type {Map<string,DeleteSet>}\n     */\n    const dss = new Map();\n    this.yusers = storeType;\n    this.doc = doc;\n    /**\n     * Maps from clientid to userDescription\n     *\n     * @type {Map<number,string>}\n     */\n    this.clients = new Map();\n    this.dss = dss;\n    /**\n     * @param {YMap<any>} user\n     * @param {string} userDescription\n     */\n    const initUser = (user, userDescription) => {\n      /**\n       * @type {YArray<Uint8Array>}\n       */\n      const ds = user.get('ds');\n      const ids = user.get('ids');\n      const addClientId = /** @param {number} clientid */ clientid => this.clients.set(clientid, userDescription);\n      ds.observe(/** @param {YArrayEvent<any>} event */ event => {\n        event.changes.added.forEach(item => {\n          item.content.getContent().forEach(encodedDs => {\n            if (encodedDs instanceof Uint8Array) {\n              this.dss.set(userDescription, mergeDeleteSets([this.dss.get(userDescription) || createDeleteSet(), readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs)))]));\n            }\n          });\n        });\n      });\n      this.dss.set(userDescription, mergeDeleteSets(ds.map(encodedDs => readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs))))));\n      ids.observe(/** @param {YArrayEvent<any>} event */ event =>\n        event.changes.added.forEach(item => item.content.getContent().forEach(addClientId))\n      );\n      ids.forEach(addClientId);\n    };\n    // observe users\n    storeType.observe(event => {\n      event.keysChanged.forEach(userDescription =>\n        initUser(storeType.get(userDescription), userDescription)\n      );\n    });\n    // add intial data\n    storeType.forEach(initUser);\n  }\n\n  /**\n   * @param {Doc} doc\n   * @param {number} clientid\n   * @param {string} userDescription\n   * @param {Object} conf\n   * @param {function(Transaction, DeleteSet):boolean} [conf.filter]\n   */\n  setUserMapping (doc, clientid, userDescription, { filter = () => true } = {}) {\n    const users = this.yusers;\n    let user = users.get(userDescription);\n    if (!user) {\n      user = new YMap();\n      user.set('ids', new YArray());\n      user.set('ds', new YArray());\n      users.set(userDescription, user);\n    }\n    user.get('ids').push([clientid]);\n    users.observe(_event => {\n      setTimeout(() => {\n        const userOverwrite = users.get(userDescription);\n        if (userOverwrite !== user) {\n          // user was overwritten, port all data over to the next user object\n          // @todo Experiment with Y.Sets here\n          user = userOverwrite;\n          // @todo iterate over old type\n          this.clients.forEach((_userDescription, clientid) => {\n            if (userDescription === _userDescription) {\n              user.get('ids').push([clientid]);\n            }\n          });\n          const encoder = new DSEncoderV1();\n          const ds = this.dss.get(userDescription);\n          if (ds) {\n            writeDeleteSet(encoder, ds);\n            user.get('ds').push([encoder.toUint8Array()]);\n          }\n        }\n      }, 0);\n    });\n    doc.on('afterTransaction', /** @param {Transaction} transaction */ transaction => {\n      setTimeout(() => {\n        const yds = user.get('ds');\n        const ds = transaction.deleteSet;\n        if (transaction.local && ds.clients.size > 0 && filter(transaction, ds)) {\n          const encoder = new DSEncoderV1();\n          writeDeleteSet(encoder, ds);\n          yds.push([encoder.toUint8Array()]);\n        }\n      });\n    });\n  }\n\n  /**\n   * @param {number} clientid\n   * @return {any}\n   */\n  getUserByClientId (clientid) {\n    return this.clients.get(clientid) || null\n  }\n\n  /**\n   * @param {ID} id\n   * @return {string | null}\n   */\n  getUserByDeletedId (id) {\n    for (const [userDescription, ds] of this.dss.entries()) {\n      if (isDeleted(ds, id)) {\n        return userDescription\n      }\n    }\n    return null\n  }\n}\n\n/**\n * A relative position is based on the Yjs model and is not affected by document changes.\n * E.g. If you place a relative position before a certain character, it will always point to this character.\n * If you place a relative position at the end of a type, it will always point to the end of the type.\n *\n * A numeric position is often unsuited for user selections, because it does not change when content is inserted\n * before or after.\n *\n * ```Insert(0, 'x')('a|bc') = 'xa|bc'``` Where | is the relative position.\n *\n * One of the properties must be defined.\n *\n * @example\n *   // Current cursor position is at position 10\n *   const relativePosition = createRelativePositionFromIndex(yText, 10)\n *   // modify yText\n *   yText.insert(0, 'abc')\n *   yText.delete(3, 10)\n *   // Compute the cursor position\n *   const absolutePosition = createAbsolutePositionFromRelativePosition(y, relativePosition)\n *   absolutePosition.type === yText // => true\n *   console.log('cursor location is ' + absolutePosition.index) // => cursor location is 3\n *\n */\nclass RelativePosition {\n  /**\n   * @param {ID|null} type\n   * @param {string|null} tname\n   * @param {ID|null} item\n   * @param {number} assoc\n   */\n  constructor (type, tname, item, assoc = 0) {\n    /**\n     * @type {ID|null}\n     */\n    this.type = type;\n    /**\n     * @type {string|null}\n     */\n    this.tname = tname;\n    /**\n     * @type {ID | null}\n     */\n    this.item = item;\n    /**\n     * A relative position is associated to a specific character. By default\n     * assoc >= 0, the relative position is associated to the character\n     * after the meant position.\n     * I.e. position 1 in 'ab' is associated to character 'b'.\n     *\n     * If assoc < 0, then the relative position is associated to the caharacter\n     * before the meant position.\n     *\n     * @type {number}\n     */\n    this.assoc = assoc;\n  }\n}\n\n/**\n * @param {RelativePosition} rpos\n * @return {any}\n */\nconst relativePositionToJSON = rpos => {\n  const json = {};\n  if (rpos.type) {\n    json.type = rpos.type;\n  }\n  if (rpos.tname) {\n    json.tname = rpos.tname;\n  }\n  if (rpos.item) {\n    json.item = rpos.item;\n  }\n  if (rpos.assoc != null) {\n    json.assoc = rpos.assoc;\n  }\n  return json\n};\n\n/**\n * @param {any} json\n * @return {RelativePosition}\n *\n * @function\n */\nconst createRelativePositionFromJSON = json => new RelativePosition(json.type == null ? null : createID(json.type.client, json.type.clock), json.tname || null, json.item == null ? null : createID(json.item.client, json.item.clock), json.assoc == null ? 0 : json.assoc);\n\nclass AbsolutePosition {\n  /**\n   * @param {AbstractType<any>} type\n   * @param {number} index\n   * @param {number} [assoc]\n   */\n  constructor (type, index, assoc = 0) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type;\n    /**\n     * @type {number}\n     */\n    this.index = index;\n    this.assoc = assoc;\n  }\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @param {number} [assoc]\n *\n * @function\n */\nconst createAbsolutePosition = (type, index, assoc = 0) => new AbsolutePosition(type, index, assoc);\n\n/**\n * @param {AbstractType<any>} type\n * @param {ID|null} item\n * @param {number} [assoc]\n *\n * @function\n */\nconst createRelativePosition = (type, item, assoc) => {\n  let typeid = null;\n  let tname = null;\n  if (type._item === null) {\n    tname = findRootTypeKey(type);\n  } else {\n    typeid = createID(type._item.id.client, type._item.id.clock);\n  }\n  return new RelativePosition(typeid, tname, item, assoc)\n};\n\n/**\n * Create a relativePosition based on a absolute position.\n *\n * @param {AbstractType<any>} type The base type (e.g. YText or YArray).\n * @param {number} index The absolute position.\n * @param {number} [assoc]\n * @return {RelativePosition}\n *\n * @function\n */\nconst createRelativePositionFromTypeIndex = (type, index, assoc = 0) => {\n  let t = type._start;\n  if (assoc < 0) {\n    // associated to the left character or the beginning of a type, increment index if possible.\n    if (index === 0) {\n      return createRelativePosition(type, null, assoc)\n    }\n    index--;\n  }\n  while (t !== null) {\n    if (!t.deleted && t.countable) {\n      if (t.length > index) {\n        // case 1: found position somewhere in the linked list\n        return createRelativePosition(type, createID(t.id.client, t.id.clock + index), assoc)\n      }\n      index -= t.length;\n    }\n    if (t.right === null && assoc < 0) {\n      // left-associated position, return last available id\n      return createRelativePosition(type, t.lastId, assoc)\n    }\n    t = t.right;\n  }\n  return createRelativePosition(type, null, assoc)\n};\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {RelativePosition} rpos\n *\n * @function\n */\nconst writeRelativePosition = (encoder, rpos) => {\n  const { type, tname, item, assoc } = rpos;\n  if (item !== null) {\n    encoding.writeVarUint(encoder, 0);\n    writeID(encoder, item);\n  } else if (tname !== null) {\n    // case 2: found position at the end of the list and type is stored in y.share\n    encoding.writeUint8(encoder, 1);\n    encoding.writeVarString(encoder, tname);\n  } else if (type !== null) {\n    // case 3: found position at the end of the list and type is attached to an item\n    encoding.writeUint8(encoder, 2);\n    writeID(encoder, type);\n  } else {\n    throw error.unexpectedCase()\n  }\n  encoding.writeVarInt(encoder, assoc);\n  return encoder\n};\n\n/**\n * @param {RelativePosition} rpos\n * @return {Uint8Array}\n */\nconst encodeRelativePosition = rpos => {\n  const encoder = encoding.createEncoder();\n  writeRelativePosition(encoder, rpos);\n  return encoding.toUint8Array(encoder)\n};\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {RelativePosition}\n *\n * @function\n */\nconst readRelativePosition = decoder => {\n  let type = null;\n  let tname = null;\n  let itemID = null;\n  switch (decoding.readVarUint(decoder)) {\n    case 0:\n      // case 1: found position somewhere in the linked list\n      itemID = readID(decoder);\n      break\n    case 1:\n      // case 2: found position at the end of the list and type is stored in y.share\n      tname = decoding.readVarString(decoder);\n      break\n    case 2: {\n      // case 3: found position at the end of the list and type is attached to an item\n      type = readID(decoder);\n    }\n  }\n  const assoc = decoding.hasContent(decoder) ? decoding.readVarInt(decoder) : 0;\n  return new RelativePosition(type, tname, itemID, assoc)\n};\n\n/**\n * @param {Uint8Array} uint8Array\n * @return {RelativePosition}\n */\nconst decodeRelativePosition = uint8Array => readRelativePosition(decoding.createDecoder(uint8Array));\n\n/**\n * @param {RelativePosition} rpos\n * @param {Doc} doc\n * @return {AbsolutePosition|null}\n *\n * @function\n */\nconst createAbsolutePositionFromRelativePosition = (rpos, doc) => {\n  const store = doc.store;\n  const rightID = rpos.item;\n  const typeID = rpos.type;\n  const tname = rpos.tname;\n  const assoc = rpos.assoc;\n  let type = null;\n  let index = 0;\n  if (rightID !== null) {\n    if (getState(store, rightID.client) <= rightID.clock) {\n      return null\n    }\n    const res = followRedone(store, rightID);\n    const right = res.item;\n    if (!(right instanceof Item)) {\n      return null\n    }\n    type = /** @type {AbstractType<any>} */ (right.parent);\n    if (type._item === null || !type._item.deleted) {\n      index = (right.deleted || !right.countable) ? 0 : (res.diff + (assoc >= 0 ? 0 : 1)); // adjust position based on left association if necessary\n      let n = right.left;\n      while (n !== null) {\n        if (!n.deleted && n.countable) {\n          index += n.length;\n        }\n        n = n.left;\n      }\n    }\n  } else {\n    if (tname !== null) {\n      type = doc.get(tname);\n    } else if (typeID !== null) {\n      if (getState(store, typeID.client) <= typeID.clock) {\n        // type does not exist yet\n        return null\n      }\n      const { item } = followRedone(store, typeID);\n      if (item instanceof Item && item.content instanceof ContentType) {\n        type = item.content.type;\n      } else {\n        // struct is garbage collected\n        return null\n      }\n    } else {\n      throw error.unexpectedCase()\n    }\n    if (assoc >= 0) {\n      index = type._length;\n    } else {\n      index = 0;\n    }\n  }\n  return createAbsolutePosition(type, index, rpos.assoc)\n};\n\n/**\n * @param {RelativePosition|null} a\n * @param {RelativePosition|null} b\n * @return {boolean}\n *\n * @function\n */\nconst compareRelativePositions = (a, b) => a === b || (\n  a !== null && b !== null && a.tname === b.tname && compareIDs(a.item, b.item) && compareIDs(a.type, b.type) && a.assoc === b.assoc\n);\n\nclass Snapshot {\n  /**\n   * @param {DeleteSet} ds\n   * @param {Map<number,number>} sv state map\n   */\n  constructor (ds, sv) {\n    /**\n     * @type {DeleteSet}\n     */\n    this.ds = ds;\n    /**\n     * State Map\n     * @type {Map<number,number>}\n     */\n    this.sv = sv;\n  }\n}\n\n/**\n * @param {Snapshot} snap1\n * @param {Snapshot} snap2\n * @return {boolean}\n */\nconst equalSnapshots = (snap1, snap2) => {\n  const ds1 = snap1.ds.clients;\n  const ds2 = snap2.ds.clients;\n  const sv1 = snap1.sv;\n  const sv2 = snap2.sv;\n  if (sv1.size !== sv2.size || ds1.size !== ds2.size) {\n    return false\n  }\n  for (const [key, value] of sv1.entries()) {\n    if (sv2.get(key) !== value) {\n      return false\n    }\n  }\n  for (const [client, dsitems1] of ds1.entries()) {\n    const dsitems2 = ds2.get(client) || [];\n    if (dsitems1.length !== dsitems2.length) {\n      return false\n    }\n    for (let i = 0; i < dsitems1.length; i++) {\n      const dsitem1 = dsitems1[i];\n      const dsitem2 = dsitems2[i];\n      if (dsitem1.clock !== dsitem2.clock || dsitem1.len !== dsitem2.len) {\n        return false\n      }\n    }\n  }\n  return true\n};\n\n/**\n * @param {Snapshot} snapshot\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n */\nconst encodeSnapshotV2 = (snapshot, encoder = new DSEncoderV2()) => {\n  writeDeleteSet(encoder, snapshot.ds);\n  writeStateVector(encoder, snapshot.sv);\n  return encoder.toUint8Array()\n};\n\n/**\n * @param {Snapshot} snapshot\n * @return {Uint8Array}\n */\nconst encodeSnapshot = snapshot => encodeSnapshotV2(snapshot, new DSEncoderV1());\n\n/**\n * @param {Uint8Array} buf\n * @param {DSDecoderV1 | DSDecoderV2} [decoder]\n * @return {Snapshot}\n */\nconst decodeSnapshotV2 = (buf, decoder = new DSDecoderV2(decoding.createDecoder(buf))) => {\n  return new Snapshot(readDeleteSet(decoder), readStateVector(decoder))\n};\n\n/**\n * @param {Uint8Array} buf\n * @return {Snapshot}\n */\nconst decodeSnapshot = buf => decodeSnapshotV2(buf, new DSDecoderV1(decoding.createDecoder(buf)));\n\n/**\n * @param {DeleteSet} ds\n * @param {Map<number,number>} sm\n * @return {Snapshot}\n */\nconst createSnapshot = (ds, sm) => new Snapshot(ds, sm);\n\nconst emptySnapshot = createSnapshot(createDeleteSet(), new Map());\n\n/**\n * @param {Doc} doc\n * @return {Snapshot}\n */\nconst snapshot = doc => createSnapshot(createDeleteSetFromStructStore(doc.store), getStateVector(doc.store));\n\n/**\n * @param {Item} item\n * @param {Snapshot|undefined} snapshot\n *\n * @protected\n * @function\n */\nconst isVisible = (item, snapshot) => snapshot === undefined\n  ? !item.deleted\n  : snapshot.sv.has(item.id.client) && (snapshot.sv.get(item.id.client) || 0) > item.id.clock && !isDeleted(snapshot.ds, item.id);\n\n/**\n * @param {Transaction} transaction\n * @param {Snapshot} snapshot\n */\nconst splitSnapshotAffectedStructs = (transaction, snapshot) => {\n  const meta = map.setIfUndefined(transaction.meta, splitSnapshotAffectedStructs, set.create);\n  const store = transaction.doc.store;\n  // check if we already split for this snapshot\n  if (!meta.has(snapshot)) {\n    snapshot.sv.forEach((clock, client) => {\n      if (clock < getState(store, client)) {\n        getItemCleanStart(transaction, createID(client, clock));\n      }\n    });\n    iterateDeletedStructs(transaction, snapshot.ds, _item => {});\n    meta.add(snapshot);\n  }\n};\n\n/**\n * @example\n *  const ydoc = new Y.Doc({ gc: false })\n *  ydoc.getText().insert(0, 'world!')\n *  const snapshot = Y.snapshot(ydoc)\n *  ydoc.getText().insert(0, 'hello ')\n *  const restored = Y.createDocFromSnapshot(ydoc, snapshot)\n *  assert(restored.getText().toString() === 'world!')\n *\n * @param {Doc} originDoc\n * @param {Snapshot} snapshot\n * @param {Doc} [newDoc] Optionally, you may define the Yjs document that receives the data from originDoc\n * @return {Doc}\n */\nconst createDocFromSnapshot = (originDoc, snapshot, newDoc = new Doc()) => {\n  if (originDoc.gc) {\n    // we should not try to restore a GC-ed document, because some of the restored items might have their content deleted\n    throw new Error('Garbage-collection must be disabled in `originDoc`!')\n  }\n  const { sv, ds } = snapshot;\n\n  const encoder = new UpdateEncoderV2();\n  originDoc.transact(transaction => {\n    let size = 0;\n    sv.forEach(clock => {\n      if (clock > 0) {\n        size++;\n      }\n    });\n    encoding.writeVarUint(encoder.restEncoder, size);\n    // splitting the structs before writing them to the encoder\n    for (const [client, clock] of sv) {\n      if (clock === 0) {\n        continue\n      }\n      if (clock < getState(originDoc.store, client)) {\n        getItemCleanStart(transaction, createID(client, clock));\n      }\n      const structs = originDoc.store.clients.get(client) || [];\n      const lastStructIndex = findIndexSS(structs, clock - 1);\n      // write # encoded structs\n      encoding.writeVarUint(encoder.restEncoder, lastStructIndex + 1);\n      encoder.writeClient(client);\n      // first clock written is 0\n      encoding.writeVarUint(encoder.restEncoder, 0);\n      for (let i = 0; i <= lastStructIndex; i++) {\n        structs[i].write(encoder, 0);\n      }\n    }\n    writeDeleteSet(encoder, ds);\n  });\n\n  applyUpdateV2(newDoc, encoder.toUint8Array(), 'snapshot');\n  return newDoc\n};\n\n/**\n * @param {Snapshot} snapshot\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n */\nconst snapshotContainsUpdateV2 = (snapshot, update, YDecoder = UpdateDecoderV2) => {\n  const updateDecoder = new YDecoder(decoding.createDecoder(update));\n  const lazyDecoder = new LazyStructReader(updateDecoder, false);\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    if ((snapshot.sv.get(curr.id.client) || 0) < curr.id.clock + curr.length) {\n      return false\n    }\n  }\n  const mergedDS = mergeDeleteSets([snapshot.ds, readDeleteSet(updateDecoder)]);\n  return equalDeleteSets(snapshot.ds, mergedDS)\n};\n\n/**\n * @param {Snapshot} snapshot\n * @param {Uint8Array} update\n */\nconst snapshotContainsUpdate = (snapshot, update) => snapshotContainsUpdateV2(snapshot, update, UpdateDecoderV1);\n\nclass StructStore {\n  constructor () {\n    /**\n     * @type {Map<number,Array<GC|Item>>}\n     */\n    this.clients = new Map();\n    /**\n     * @type {null | { missing: Map<number, number>, update: Uint8Array }}\n     */\n    this.pendingStructs = null;\n    /**\n     * @type {null | Uint8Array}\n     */\n    this.pendingDs = null;\n  }\n}\n\n/**\n * Return the states as a Map<client,clock>.\n * Note that clock refers to the next expected clock id.\n *\n * @param {StructStore} store\n * @return {Map<number,number>}\n *\n * @public\n * @function\n */\nconst getStateVector = store => {\n  const sm = new Map();\n  store.clients.forEach((structs, client) => {\n    const struct = structs[structs.length - 1];\n    sm.set(client, struct.id.clock + struct.length);\n  });\n  return sm\n};\n\n/**\n * @param {StructStore} store\n * @param {number} client\n * @return {number}\n *\n * @public\n * @function\n */\nconst getState = (store, client) => {\n  const structs = store.clients.get(client);\n  if (structs === undefined) {\n    return 0\n  }\n  const lastStruct = structs[structs.length - 1];\n  return lastStruct.id.clock + lastStruct.length\n};\n\n/**\n * @param {StructStore} store\n * @param {GC|Item} struct\n *\n * @private\n * @function\n */\nconst addStruct = (store, struct) => {\n  let structs = store.clients.get(struct.id.client);\n  if (structs === undefined) {\n    structs = [];\n    store.clients.set(struct.id.client, structs);\n  } else {\n    const lastStruct = structs[structs.length - 1];\n    if (lastStruct.id.clock + lastStruct.length !== struct.id.clock) {\n      throw error.unexpectedCase()\n    }\n  }\n  structs.push(struct);\n};\n\n/**\n * Perform a binary search on a sorted array\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n * @return {number}\n *\n * @private\n * @function\n */\nconst findIndexSS = (structs, clock) => {\n  let left = 0;\n  let right = structs.length - 1;\n  let mid = structs[right];\n  let midclock = mid.id.clock;\n  if (midclock === clock) {\n    return right\n  }\n  // @todo does it even make sense to pivot the search?\n  // If a good split misses, it might actually increase the time to find the correct item.\n  // Currently, the only advantage is that search with pivoting might find the item on the first try.\n  let midindex = math.floor((clock / (midclock + mid.length - 1)) * right); // pivoting the search\n  while (left <= right) {\n    mid = structs[midindex];\n    midclock = mid.id.clock;\n    if (midclock <= clock) {\n      if (clock < midclock + mid.length) {\n        return midindex\n      }\n      left = midindex + 1;\n    } else {\n      right = midindex - 1;\n    }\n    midindex = math.floor((left + right) / 2);\n  }\n  // Always check state before looking for a struct in StructStore\n  // Therefore the case of not finding a struct is unexpected\n  throw error.unexpectedCase()\n};\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {GC|Item}\n *\n * @private\n * @function\n */\nconst find = (store, id) => {\n  /**\n   * @type {Array<GC|Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client);\n  return structs[findIndexSS(structs, id.clock)]\n};\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n * @private\n * @function\n */\nconst getItem = /** @type {function(StructStore,ID):Item} */ (find);\n\n/**\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n */\nconst findIndexCleanStart = (transaction, structs, clock) => {\n  const index = findIndexSS(structs, clock);\n  const struct = structs[index];\n  if (struct.id.clock < clock && struct instanceof Item) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock));\n    return index + 1\n  }\n  return index\n};\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nconst getItemCleanStart = (transaction, id) => {\n  const structs = /** @type {Array<Item>} */ (transaction.doc.store.clients.get(id.client));\n  return structs[findIndexCleanStart(transaction, structs, id.clock)]\n};\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nconst getItemCleanEnd = (transaction, store, id) => {\n  /**\n   * @type {Array<Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client);\n  const index = findIndexSS(structs, id.clock);\n  const struct = structs[index];\n  if (id.clock !== struct.id.clock + struct.length - 1 && struct.constructor !== GC) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, id.clock - struct.id.clock + 1));\n  }\n  return struct\n};\n\n/**\n * Replace `item` with `newitem` in store\n * @param {StructStore} store\n * @param {GC|Item} struct\n * @param {GC|Item} newStruct\n *\n * @private\n * @function\n */\nconst replaceStruct = (store, struct, newStruct) => {\n  const structs = /** @type {Array<GC|Item>} */ (store.clients.get(struct.id.client));\n  structs[findIndexSS(structs, struct.id.clock)] = newStruct;\n};\n\n/**\n * Iterate over a range of structs\n *\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clockStart Inclusive start\n * @param {number} len\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nconst iterateStructs = (transaction, structs, clockStart, len, f) => {\n  if (len === 0) {\n    return\n  }\n  const clockEnd = clockStart + len;\n  let index = findIndexCleanStart(transaction, structs, clockStart);\n  let struct;\n  do {\n    struct = structs[index++];\n    if (clockEnd < struct.id.clock + struct.length) {\n      findIndexCleanStart(transaction, structs, clockEnd);\n    }\n    f(struct);\n  } while (index < structs.length && structs[index].id.clock < clockEnd)\n};\n\n/**\n * A transaction is created for every change on the Yjs model. It is possible\n * to bundle changes on the Yjs model in a single transaction to\n * minimize the number on messages sent and the number of observer calls.\n * If possible the user of this library should bundle as many changes as\n * possible. Here is an example to illustrate the advantages of bundling:\n *\n * @example\n * const map = y.define('map', YMap)\n * // Log content when change is triggered\n * map.observe(() => {\n *   console.log('change triggered')\n * })\n * // Each change on the map type triggers a log message:\n * map.set('a', 0) // => \"change triggered\"\n * map.set('b', 0) // => \"change triggered\"\n * // When put in a transaction, it will trigger the log after the transaction:\n * y.transact(() => {\n *   map.set('a', 1)\n *   map.set('b', 1)\n * }) // => \"change triggered\"\n *\n * @public\n */\nclass Transaction {\n  /**\n   * @param {Doc} doc\n   * @param {any} origin\n   * @param {boolean} local\n   */\n  constructor (doc, origin, local) {\n    /**\n     * The Yjs instance.\n     * @type {Doc}\n     */\n    this.doc = doc;\n    /**\n     * Describes the set of deleted items by ids\n     * @type {DeleteSet}\n     */\n    this.deleteSet = new DeleteSet();\n    /**\n     * Holds the state before the transaction started.\n     * @type {Map<Number,Number>}\n     */\n    this.beforeState = getStateVector(doc.store);\n    /**\n     * Holds the state after the transaction.\n     * @type {Map<Number,Number>}\n     */\n    this.afterState = new Map();\n    /**\n     * All types that were directly modified (property added or child\n     * inserted/deleted). New types are not included in this Set.\n     * Maps from type to parentSubs (`item.parentSub = null` for YArray)\n     * @type {Map<AbstractType<YEvent<any>>,Set<String|null>>}\n     */\n    this.changed = new Map();\n    /**\n     * Stores the events for the types that observe also child elements.\n     * It is mainly used by `observeDeep`.\n     * @type {Map<AbstractType<YEvent<any>>,Array<YEvent<any>>>}\n     */\n    this.changedParentTypes = new Map();\n    /**\n     * @type {Array<AbstractStruct>}\n     */\n    this._mergeStructs = [];\n    /**\n     * @type {any}\n     */\n    this.origin = origin;\n    /**\n     * Stores meta information on the transaction\n     * @type {Map<any,any>}\n     */\n    this.meta = new Map();\n    /**\n     * Whether this change originates from this doc.\n     * @type {boolean}\n     */\n    this.local = local;\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsAdded = new Set();\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsRemoved = new Set();\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsLoaded = new Set();\n    /**\n     * @type {boolean}\n     */\n    this._needFormattingCleanup = false;\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n * @return {boolean} Whether data was written.\n */\nconst writeUpdateMessageFromTransaction = (encoder, transaction) => {\n  if (transaction.deleteSet.clients.size === 0 && !map.any(transaction.afterState, (clock, client) => transaction.beforeState.get(client) !== clock)) {\n    return false\n  }\n  sortAndMergeDeleteSet(transaction.deleteSet);\n  writeStructsFromTransaction(encoder, transaction);\n  writeDeleteSet(encoder, transaction.deleteSet);\n  return true\n};\n\n/**\n * If `type.parent` was added in current transaction, `type` technically\n * did not change, it was just added and we should not fire events for `type`.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<YEvent<any>>} type\n * @param {string|null} parentSub\n */\nconst addChangedTypeToTransaction = (transaction, type, parentSub) => {\n  const item = type._item;\n  if (item === null || (item.id.clock < (transaction.beforeState.get(item.id.client) || 0) && !item.deleted)) {\n    map.setIfUndefined(transaction.changed, type, set.create).add(parentSub);\n  }\n};\n\n/**\n * @param {Array<AbstractStruct>} structs\n * @param {number} pos\n * @return {number} # of merged structs\n */\nconst tryToMergeWithLefts = (structs, pos) => {\n  let right = structs[pos];\n  let left = structs[pos - 1];\n  let i = pos;\n  for (; i > 0; right = left, left = structs[--i - 1]) {\n    if (left.deleted === right.deleted && left.constructor === right.constructor) {\n      if (left.mergeWith(right)) {\n        if (right instanceof Item && right.parentSub !== null && /** @type {AbstractType<any>} */ (right.parent)._map.get(right.parentSub) === right) {\n          /** @type {AbstractType<any>} */ (right.parent)._map.set(right.parentSub, /** @type {Item} */ (left));\n        }\n        continue\n      }\n    }\n    break\n  }\n  const merged = pos - i;\n  if (merged) {\n    // remove all merged structs from the array\n    structs.splice(pos + 1 - merged, merged);\n  }\n  return merged\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nconst tryGcDeleteSet = (ds, store, gcFilter) => {\n  for (const [client, deleteItems] of ds.clients.entries()) {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client));\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di];\n      const endDeleteItemClock = deleteItem.clock + deleteItem.len;\n      for (\n        let si = findIndexSS(structs, deleteItem.clock), struct = structs[si];\n        si < structs.length && struct.id.clock < endDeleteItemClock;\n        struct = structs[++si]\n      ) {\n        const struct = structs[si];\n        if (deleteItem.clock + deleteItem.len <= struct.id.clock) {\n          break\n        }\n        if (struct instanceof Item && struct.deleted && !struct.keep && gcFilter(struct)) {\n          struct.gc(store, false);\n        }\n      }\n    }\n  }\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n */\nconst tryMergeDeleteSet = (ds, store) => {\n  // try to merge deleted / gc'd items\n  // merge from right to left for better efficiecy and so we don't miss any merge targets\n  ds.clients.forEach((deleteItems, client) => {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client));\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di];\n      // start with merging the item next to the last deleted item\n      const mostRightIndexToCheck = math.min(structs.length - 1, 1 + findIndexSS(structs, deleteItem.clock + deleteItem.len - 1));\n      for (\n        let si = mostRightIndexToCheck, struct = structs[si];\n        si > 0 && struct.id.clock >= deleteItem.clock;\n        struct = structs[si]\n      ) {\n        si -= 1 + tryToMergeWithLefts(structs, si);\n      }\n    }\n  });\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nconst tryGc = (ds, store, gcFilter) => {\n  tryGcDeleteSet(ds, store, gcFilter);\n  tryMergeDeleteSet(ds, store);\n};\n\n/**\n * @param {Array<Transaction>} transactionCleanups\n * @param {number} i\n */\nconst cleanupTransactions = (transactionCleanups, i) => {\n  if (i < transactionCleanups.length) {\n    const transaction = transactionCleanups[i];\n    const doc = transaction.doc;\n    const store = doc.store;\n    const ds = transaction.deleteSet;\n    const mergeStructs = transaction._mergeStructs;\n    try {\n      sortAndMergeDeleteSet(ds);\n      transaction.afterState = getStateVector(transaction.doc.store);\n      doc.emit('beforeObserverCalls', [transaction, doc]);\n      /**\n       * An array of event callbacks.\n       *\n       * Each callback is called even if the other ones throw errors.\n       *\n       * @type {Array<function():void>}\n       */\n      const fs = [];\n      // observe events on changed types\n      transaction.changed.forEach((subs, itemtype) =>\n        fs.push(() => {\n          if (itemtype._item === null || !itemtype._item.deleted) {\n            itemtype._callObserver(transaction, subs);\n          }\n        })\n      );\n      fs.push(() => {\n        // deep observe events\n        transaction.changedParentTypes.forEach((events, type) => {\n          // We need to think about the possibility that the user transforms the\n          // Y.Doc in the event.\n          if (type._dEH.l.length > 0 && (type._item === null || !type._item.deleted)) {\n            events = events\n              .filter(event =>\n                event.target._item === null || !event.target._item.deleted\n              );\n            events\n              .forEach(event => {\n                event.currentTarget = type;\n                // path is relative to the current target\n                event._path = null;\n              });\n            // sort events by path length so that top-level events are fired first.\n            events\n              .sort((event1, event2) => event1.path.length - event2.path.length);\n            // We don't need to check for events.length\n            // because we know it has at least one element\n            callEventHandlerListeners(type._dEH, events, transaction);\n          }\n        });\n      });\n      fs.push(() => doc.emit('afterTransaction', [transaction, doc]));\n      callAll(fs, []);\n      if (transaction._needFormattingCleanup) {\n        cleanupYTextAfterTransaction(transaction);\n      }\n    } finally {\n      // Replace deleted items with ItemDeleted / GC.\n      // This is where content is actually remove from the Yjs Doc.\n      if (doc.gc) {\n        tryGcDeleteSet(ds, store, doc.gcFilter);\n      }\n      tryMergeDeleteSet(ds, store);\n\n      // on all affected store.clients props, try to merge\n      transaction.afterState.forEach((clock, client) => {\n        const beforeClock = transaction.beforeState.get(client) || 0;\n        if (beforeClock !== clock) {\n          const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client));\n          // we iterate from right to left so we can safely remove entries\n          const firstChangePos = math.max(findIndexSS(structs, beforeClock), 1);\n          for (let i = structs.length - 1; i >= firstChangePos;) {\n            i -= 1 + tryToMergeWithLefts(structs, i);\n          }\n        }\n      });\n      // try to merge mergeStructs\n      // @todo: it makes more sense to transform mergeStructs to a DS, sort it, and merge from right to left\n      //        but at the moment DS does not handle duplicates\n      for (let i = mergeStructs.length - 1; i >= 0; i--) {\n        const { client, clock } = mergeStructs[i].id;\n        const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client));\n        const replacedStructPos = findIndexSS(structs, clock);\n        if (replacedStructPos + 1 < structs.length) {\n          if (tryToMergeWithLefts(structs, replacedStructPos + 1) > 1) {\n            continue // no need to perform next check, both are already merged\n          }\n        }\n        if (replacedStructPos > 0) {\n          tryToMergeWithLefts(structs, replacedStructPos);\n        }\n      }\n      if (!transaction.local && transaction.afterState.get(doc.clientID) !== transaction.beforeState.get(doc.clientID)) {\n        logging.print(logging.ORANGE, logging.BOLD, '[yjs] ', logging.UNBOLD, logging.RED, 'Changed the client-id because another client seems to be using it.');\n        doc.clientID = generateNewClientId();\n      }\n      // @todo Merge all the transactions into one and provide send the data as a single update message\n      doc.emit('afterTransactionCleanup', [transaction, doc]);\n      if (doc._observers.has('update')) {\n        const encoder = new UpdateEncoderV1();\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction);\n        if (hasContent) {\n          doc.emit('update', [encoder.toUint8Array(), transaction.origin, doc, transaction]);\n        }\n      }\n      if (doc._observers.has('updateV2')) {\n        const encoder = new UpdateEncoderV2();\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction);\n        if (hasContent) {\n          doc.emit('updateV2', [encoder.toUint8Array(), transaction.origin, doc, transaction]);\n        }\n      }\n      const { subdocsAdded, subdocsLoaded, subdocsRemoved } = transaction;\n      if (subdocsAdded.size > 0 || subdocsRemoved.size > 0 || subdocsLoaded.size > 0) {\n        subdocsAdded.forEach(subdoc => {\n          subdoc.clientID = doc.clientID;\n          if (subdoc.collectionid == null) {\n            subdoc.collectionid = doc.collectionid;\n          }\n          doc.subdocs.add(subdoc);\n        });\n        subdocsRemoved.forEach(subdoc => doc.subdocs.delete(subdoc));\n        doc.emit('subdocs', [{ loaded: subdocsLoaded, added: subdocsAdded, removed: subdocsRemoved }, doc, transaction]);\n        subdocsRemoved.forEach(subdoc => subdoc.destroy());\n      }\n\n      if (transactionCleanups.length <= i + 1) {\n        doc._transactionCleanups = [];\n        doc.emit('afterAllTransactions', [doc, transactionCleanups]);\n      } else {\n        cleanupTransactions(transactionCleanups, i + 1);\n      }\n    }\n  }\n};\n\n/**\n * Implements the functionality of `y.transact(()=>{..})`\n *\n * @template T\n * @param {Doc} doc\n * @param {function(Transaction):T} f\n * @param {any} [origin=true]\n * @return {T}\n *\n * @function\n */\nconst transact = (doc, f, origin = null, local = true) => {\n  const transactionCleanups = doc._transactionCleanups;\n  let initialCall = false;\n  /**\n   * @type {any}\n   */\n  let result = null;\n  if (doc._transaction === null) {\n    initialCall = true;\n    doc._transaction = new Transaction(doc, origin, local);\n    transactionCleanups.push(doc._transaction);\n    if (transactionCleanups.length === 1) {\n      doc.emit('beforeAllTransactions', [doc]);\n    }\n    doc.emit('beforeTransaction', [doc._transaction, doc]);\n  }\n  try {\n    result = f(doc._transaction);\n  } finally {\n    if (initialCall) {\n      const finishCleanup = doc._transaction === transactionCleanups[0];\n      doc._transaction = null;\n      if (finishCleanup) {\n        // The first transaction ended, now process observer calls.\n        // Observer call may create new transactions for which we need to call the observers and do cleanup.\n        // We don't want to nest these calls, so we execute these calls one after\n        // another.\n        // Also we need to ensure that all cleanups are called, even if the\n        // observes throw errors.\n        // This file is full of hacky try {} finally {} blocks to ensure that an\n        // event can throw errors and also that the cleanup is called.\n        cleanupTransactions(transactionCleanups, 0);\n      }\n    }\n  }\n  return result\n};\n\nclass StackItem {\n  /**\n   * @param {DeleteSet} deletions\n   * @param {DeleteSet} insertions\n   */\n  constructor (deletions, insertions) {\n    this.insertions = insertions;\n    this.deletions = deletions;\n    /**\n     * Use this to save and restore metadata like selection range\n     */\n    this.meta = new Map();\n  }\n}\n/**\n * @param {Transaction} tr\n * @param {UndoManager} um\n * @param {StackItem} stackItem\n */\nconst clearUndoManagerStackItem = (tr, um, stackItem) => {\n  iterateDeletedStructs(tr, stackItem.deletions, item => {\n    if (item instanceof Item && um.scope.some(type => isParentOf(type, item))) {\n      keepItem(item, false);\n    }\n  });\n};\n\n/**\n * @param {UndoManager} undoManager\n * @param {Array<StackItem>} stack\n * @param {string} eventType\n * @return {StackItem?}\n */\nconst popStackItem = (undoManager, stack, eventType) => {\n  /**\n   * Whether a change happened\n   * @type {StackItem?}\n   */\n  let result = null;\n  /**\n   * Keep a reference to the transaction so we can fire the event with the changedParentTypes\n   * @type {any}\n   */\n  let _tr = null;\n  const doc = undoManager.doc;\n  const scope = undoManager.scope;\n  transact(doc, transaction => {\n    while (stack.length > 0 && result === null) {\n      const store = doc.store;\n      const stackItem = /** @type {StackItem} */ (stack.pop());\n      /**\n       * @type {Set<Item>}\n       */\n      const itemsToRedo = new Set();\n      /**\n       * @type {Array<Item>}\n       */\n      const itemsToDelete = [];\n      let performedChange = false;\n      iterateDeletedStructs(transaction, stackItem.insertions, struct => {\n        if (struct instanceof Item) {\n          if (struct.redone !== null) {\n            let { item, diff } = followRedone(store, struct.id);\n            if (diff > 0) {\n              item = getItemCleanStart(transaction, createID(item.id.client, item.id.clock + diff));\n            }\n            struct = item;\n          }\n          if (!struct.deleted && scope.some(type => isParentOf(type, /** @type {Item} */ (struct)))) {\n            itemsToDelete.push(struct);\n          }\n        }\n      });\n      iterateDeletedStructs(transaction, stackItem.deletions, struct => {\n        if (\n          struct instanceof Item &&\n          scope.some(type => isParentOf(type, struct)) &&\n          // Never redo structs in stackItem.insertions because they were created and deleted in the same capture interval.\n          !isDeleted(stackItem.insertions, struct.id)\n        ) {\n          itemsToRedo.add(struct);\n        }\n      });\n      itemsToRedo.forEach(struct => {\n        performedChange = redoItem(transaction, struct, itemsToRedo, stackItem.insertions, undoManager.ignoreRemoteMapChanges, undoManager) !== null || performedChange;\n      });\n      // We want to delete in reverse order so that children are deleted before\n      // parents, so we have more information available when items are filtered.\n      for (let i = itemsToDelete.length - 1; i >= 0; i--) {\n        const item = itemsToDelete[i];\n        if (undoManager.deleteFilter(item)) {\n          item.delete(transaction);\n          performedChange = true;\n        }\n      }\n      result = performedChange ? stackItem : null;\n    }\n    transaction.changed.forEach((subProps, type) => {\n      // destroy search marker if necessary\n      if (subProps.has(null) && type._searchMarker) {\n        type._searchMarker.length = 0;\n      }\n    });\n    _tr = transaction;\n  }, undoManager);\n  if (result != null) {\n    const changedParentTypes = _tr.changedParentTypes;\n    undoManager.emit('stack-item-popped', [{ stackItem: result, type: eventType, changedParentTypes }, undoManager]);\n  }\n  return result\n};\n\n/**\n * @typedef {Object} UndoManagerOptions\n * @property {number} [UndoManagerOptions.captureTimeout=500]\n * @property {function(Transaction):boolean} [UndoManagerOptions.captureTransaction] Do not capture changes of a Transaction if result false.\n * @property {function(Item):boolean} [UndoManagerOptions.deleteFilter=()=>true] Sometimes\n * it is necessary to filter what an Undo/Redo operation can delete. If this\n * filter returns false, the type/item won't be deleted even it is in the\n * undo/redo scope.\n * @property {Set<any>} [UndoManagerOptions.trackedOrigins=new Set([null])]\n * @property {boolean} [ignoreRemoteMapChanges] Experimental. By default, the UndoManager will never overwrite remote changes. Enable this property to enable overwriting remote changes on key-value changes (Y.Map, properties on Y.Xml, etc..).\n * @property {Doc} [doc] The document that this UndoManager operates on. Only needed if typeScope is empty.\n */\n\n/**\n * Fires 'stack-item-added' event when a stack item was added to either the undo- or\n * the redo-stack. You may store additional stack information via the\n * metadata property on `event.stackItem.meta` (it is a `Map` of metadata properties).\n * Fires 'stack-item-popped' event when a stack item was popped from either the\n * undo- or the redo-stack. You may restore the saved stack information from `event.stackItem.meta`.\n *\n * @extends {Observable<'stack-item-added'|'stack-item-popped'|'stack-cleared'|'stack-item-updated'>}\n */\nclass UndoManager extends Observable {\n  /**\n   * @param {AbstractType<any>|Array<AbstractType<any>>} typeScope Accepts either a single type, or an array of types\n   * @param {UndoManagerOptions} options\n   */\n  constructor (typeScope, {\n    captureTimeout = 500,\n    captureTransaction = _tr => true,\n    deleteFilter = () => true,\n    trackedOrigins = new Set([null]),\n    ignoreRemoteMapChanges = false,\n    doc = /** @type {Doc} */ (array.isArray(typeScope) ? typeScope[0].doc : typeScope.doc)\n  } = {}) {\n    super();\n    /**\n     * @type {Array<AbstractType<any>>}\n     */\n    this.scope = [];\n    this.doc = doc;\n    this.addToScope(typeScope);\n    this.deleteFilter = deleteFilter;\n    trackedOrigins.add(this);\n    this.trackedOrigins = trackedOrigins;\n    this.captureTransaction = captureTransaction;\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.undoStack = [];\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.redoStack = [];\n    /**\n     * Whether the client is currently undoing (calling UndoManager.undo)\n     *\n     * @type {boolean}\n     */\n    this.undoing = false;\n    this.redoing = false;\n    this.lastChange = 0;\n    this.ignoreRemoteMapChanges = ignoreRemoteMapChanges;\n    this.captureTimeout = captureTimeout;\n    /**\n     * @param {Transaction} transaction\n     */\n    this.afterTransactionHandler = transaction => {\n      // Only track certain transactions\n      if (\n        !this.captureTransaction(transaction) ||\n        !this.scope.some(type => transaction.changedParentTypes.has(type)) ||\n        (!this.trackedOrigins.has(transaction.origin) && (!transaction.origin || !this.trackedOrigins.has(transaction.origin.constructor)))\n      ) {\n        return\n      }\n      const undoing = this.undoing;\n      const redoing = this.redoing;\n      const stack = undoing ? this.redoStack : this.undoStack;\n      if (undoing) {\n        this.stopCapturing(); // next undo should not be appended to last stack item\n      } else if (!redoing) {\n        // neither undoing nor redoing: delete redoStack\n        this.clear(false, true);\n      }\n      const insertions = new DeleteSet();\n      transaction.afterState.forEach((endClock, client) => {\n        const startClock = transaction.beforeState.get(client) || 0;\n        const len = endClock - startClock;\n        if (len > 0) {\n          addToDeleteSet(insertions, client, startClock, len);\n        }\n      });\n      const now = time.getUnixTime();\n      let didAdd = false;\n      if (this.lastChange > 0 && now - this.lastChange < this.captureTimeout && stack.length > 0 && !undoing && !redoing) {\n        // append change to last stack op\n        const lastOp = stack[stack.length - 1];\n        lastOp.deletions = mergeDeleteSets([lastOp.deletions, transaction.deleteSet]);\n        lastOp.insertions = mergeDeleteSets([lastOp.insertions, insertions]);\n      } else {\n        // create a new stack op\n        stack.push(new StackItem(transaction.deleteSet, insertions));\n        didAdd = true;\n      }\n      if (!undoing && !redoing) {\n        this.lastChange = now;\n      }\n      // make sure that deleted structs are not gc'd\n      iterateDeletedStructs(transaction, transaction.deleteSet, /** @param {Item|GC} item */ item => {\n        if (item instanceof Item && this.scope.some(type => isParentOf(type, item))) {\n          keepItem(item, true);\n        }\n      });\n      const changeEvent = [{ stackItem: stack[stack.length - 1], origin: transaction.origin, type: undoing ? 'redo' : 'undo', changedParentTypes: transaction.changedParentTypes }, this];\n      if (didAdd) {\n        this.emit('stack-item-added', changeEvent);\n      } else {\n        this.emit('stack-item-updated', changeEvent);\n      }\n    };\n    this.doc.on('afterTransaction', this.afterTransactionHandler);\n    this.doc.on('destroy', () => {\n      this.destroy();\n    });\n  }\n\n  /**\n   * @param {Array<AbstractType<any>> | AbstractType<any>} ytypes\n   */\n  addToScope (ytypes) {\n    ytypes = array.isArray(ytypes) ? ytypes : [ytypes];\n    ytypes.forEach(ytype => {\n      if (this.scope.every(yt => yt !== ytype)) {\n        if (ytype.doc !== this.doc) logging.warn('[yjs#509] Not same Y.Doc'); // use MultiDocUndoManager instead. also see https://github.com/yjs/yjs/issues/509\n        this.scope.push(ytype);\n      }\n    });\n  }\n\n  /**\n   * @param {any} origin\n   */\n  addTrackedOrigin (origin) {\n    this.trackedOrigins.add(origin);\n  }\n\n  /**\n   * @param {any} origin\n   */\n  removeTrackedOrigin (origin) {\n    this.trackedOrigins.delete(origin);\n  }\n\n  clear (clearUndoStack = true, clearRedoStack = true) {\n    if ((clearUndoStack && this.canUndo()) || (clearRedoStack && this.canRedo())) {\n      this.doc.transact(tr => {\n        if (clearUndoStack) {\n          this.undoStack.forEach(item => clearUndoManagerStackItem(tr, this, item));\n          this.undoStack = [];\n        }\n        if (clearRedoStack) {\n          this.redoStack.forEach(item => clearUndoManagerStackItem(tr, this, item));\n          this.redoStack = [];\n        }\n        this.emit('stack-cleared', [{ undoStackCleared: clearUndoStack, redoStackCleared: clearRedoStack }]);\n      });\n    }\n  }\n\n  /**\n   * UndoManager merges Undo-StackItem if they are created within time-gap\n   * smaller than `options.captureTimeout`. Call `um.stopCapturing()` so that the next\n   * StackItem won't be merged.\n   *\n   *\n   * @example\n   *     // without stopCapturing\n   *     ytext.insert(0, 'a')\n   *     ytext.insert(1, 'b')\n   *     um.undo()\n   *     ytext.toString() // => '' (note that 'ab' was removed)\n   *     // with stopCapturing\n   *     ytext.insert(0, 'a')\n   *     um.stopCapturing()\n   *     ytext.insert(0, 'b')\n   *     um.undo()\n   *     ytext.toString() // => 'a' (note that only 'b' was removed)\n   *\n   */\n  stopCapturing () {\n    this.lastChange = 0;\n  }\n\n  /**\n   * Undo last changes on type.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  undo () {\n    this.undoing = true;\n    let res;\n    try {\n      res = popStackItem(this, this.undoStack, 'undo');\n    } finally {\n      this.undoing = false;\n    }\n    return res\n  }\n\n  /**\n   * Redo last undo operation.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  redo () {\n    this.redoing = true;\n    let res;\n    try {\n      res = popStackItem(this, this.redoStack, 'redo');\n    } finally {\n      this.redoing = false;\n    }\n    return res\n  }\n\n  /**\n   * Are undo steps available?\n   *\n   * @return {boolean} `true` if undo is possible\n   */\n  canUndo () {\n    return this.undoStack.length > 0\n  }\n\n  /**\n   * Are redo steps available?\n   *\n   * @return {boolean} `true` if redo is possible\n   */\n  canRedo () {\n    return this.redoStack.length > 0\n  }\n\n  destroy () {\n    this.trackedOrigins.delete(this);\n    this.doc.off('afterTransaction', this.afterTransactionHandler);\n    super.destroy();\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n */\nfunction * lazyStructReaderGenerator (decoder) {\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder);\n    const client = decoder.readClient();\n    let clock = decoding.readVarUint(decoder.restDecoder);\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo();\n      // @todo use switch instead of ifs\n      if (info === 10) {\n        const len = decoding.readVarUint(decoder.restDecoder);\n        yield new Skip(createID(client, clock), len);\n        clock += len;\n      } else if ((binary.BITS5 & info) !== 0) {\n        const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0;\n        // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n        // and we read the next string as parentYKey.\n        // It indicates how we store/retrieve parent from `y.share`\n        // @type {string|null}\n        const struct = new Item(\n          createID(client, clock),\n          null, // left\n          (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n          null, // right\n          (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n          // @ts-ignore Force writing a string here.\n          cantCopyParentInfo ? (decoder.readParentInfo() ? decoder.readString() : decoder.readLeftID()) : null, // parent\n          cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n          readItemContent(decoder, info) // item content\n        );\n        yield struct;\n        clock += struct.length;\n      } else {\n        const len = decoder.readLen();\n        yield new GC(createID(client, clock), len);\n        clock += len;\n      }\n    }\n  }\n}\n\nclass LazyStructReader {\n  /**\n   * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n   * @param {boolean} filterSkips\n   */\n  constructor (decoder, filterSkips) {\n    this.gen = lazyStructReaderGenerator(decoder);\n    /**\n     * @type {null | Item | Skip | GC}\n     */\n    this.curr = null;\n    this.done = false;\n    this.filterSkips = filterSkips;\n    this.next();\n  }\n\n  /**\n   * @return {Item | GC | Skip |null}\n   */\n  next () {\n    // ignore \"Skip\" structs\n    do {\n      this.curr = this.gen.next().value || null;\n    } while (this.filterSkips && this.curr !== null && this.curr.constructor === Skip)\n    return this.curr\n  }\n}\n\n/**\n * @param {Uint8Array} update\n *\n */\nconst logUpdate = update => logUpdateV2(update, UpdateDecoderV1);\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nconst logUpdateV2 = (update, YDecoder = UpdateDecoderV2) => {\n  const structs = [];\n  const updateDecoder = new YDecoder(decoding.createDecoder(update));\n  const lazyDecoder = new LazyStructReader(updateDecoder, false);\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr);\n  }\n  logging.print('Structs: ', structs);\n  const ds = readDeleteSet(updateDecoder);\n  logging.print('DeleteSet: ', ds);\n};\n\n/**\n * @param {Uint8Array} update\n *\n */\nconst decodeUpdate = (update) => decodeUpdateV2(update, UpdateDecoderV1);\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nconst decodeUpdateV2 = (update, YDecoder = UpdateDecoderV2) => {\n  const structs = [];\n  const updateDecoder = new YDecoder(decoding.createDecoder(update));\n  const lazyDecoder = new LazyStructReader(updateDecoder, false);\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr);\n  }\n  return {\n    structs,\n    ds: readDeleteSet(updateDecoder)\n  }\n};\n\nclass LazyStructWriter {\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  constructor (encoder) {\n    this.currClient = 0;\n    this.startClock = 0;\n    this.written = 0;\n    this.encoder = encoder;\n    /**\n     * We want to write operations lazily, but also we need to know beforehand how many operations we want to write for each client.\n     *\n     * This kind of meta-information (#clients, #structs-per-client-written) is written to the restEncoder.\n     *\n     * We fragment the restEncoder and store a slice of it per-client until we know how many clients there are.\n     * When we flush (toUint8Array) we write the restEncoder using the fragments and the meta-information.\n     *\n     * @type {Array<{ written: number, restEncoder: Uint8Array }>}\n     */\n    this.clientStructs = [];\n  }\n}\n\n/**\n * @param {Array<Uint8Array>} updates\n * @return {Uint8Array}\n */\nconst mergeUpdates = updates => mergeUpdatesV2(updates, UpdateDecoderV1, UpdateEncoderV1);\n\n/**\n * @param {Uint8Array} update\n * @param {typeof DSEncoderV1 | typeof DSEncoderV2} YEncoder\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {Uint8Array}\n */\nconst encodeStateVectorFromUpdateV2 = (update, YEncoder = DSEncoderV2, YDecoder = UpdateDecoderV2) => {\n  const encoder = new YEncoder();\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false);\n  let curr = updateDecoder.curr;\n  if (curr !== null) {\n    let size = 0;\n    let currClient = curr.id.client;\n    let stopCounting = curr.id.clock !== 0; // must start at 0\n    let currClock = stopCounting ? 0 : curr.id.clock + curr.length;\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        if (currClock !== 0) {\n          size++;\n          // We found a new client\n          // write what we have to the encoder\n          encoding.writeVarUint(encoder.restEncoder, currClient);\n          encoding.writeVarUint(encoder.restEncoder, currClock);\n        }\n        currClient = curr.id.client;\n        currClock = 0;\n        stopCounting = curr.id.clock !== 0;\n      }\n      // we ignore skips\n      if (curr.constructor === Skip) {\n        stopCounting = true;\n      }\n      if (!stopCounting) {\n        currClock = curr.id.clock + curr.length;\n      }\n    }\n    // write what we have\n    if (currClock !== 0) {\n      size++;\n      encoding.writeVarUint(encoder.restEncoder, currClient);\n      encoding.writeVarUint(encoder.restEncoder, currClock);\n    }\n    // prepend the size of the state vector\n    const enc = encoding.createEncoder();\n    encoding.writeVarUint(enc, size);\n    encoding.writeBinaryEncoder(enc, encoder.restEncoder);\n    encoder.restEncoder = enc;\n    return encoder.toUint8Array()\n  } else {\n    encoding.writeVarUint(encoder.restEncoder, 0);\n    return encoder.toUint8Array()\n  }\n};\n\n/**\n * @param {Uint8Array} update\n * @return {Uint8Array}\n */\nconst encodeStateVectorFromUpdate = update => encodeStateVectorFromUpdateV2(update, DSEncoderV1, UpdateDecoderV1);\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nconst parseUpdateMetaV2 = (update, YDecoder = UpdateDecoderV2) => {\n  /**\n   * @type {Map<number, number>}\n   */\n  const from = new Map();\n  /**\n   * @type {Map<number, number>}\n   */\n  const to = new Map();\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false);\n  let curr = updateDecoder.curr;\n  if (curr !== null) {\n    let currClient = curr.id.client;\n    let currClock = curr.id.clock;\n    // write the beginning to `from`\n    from.set(currClient, currClock);\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        // We found a new client\n        // write the end to `to`\n        to.set(currClient, currClock);\n        // write the beginning to `from`\n        from.set(curr.id.client, curr.id.clock);\n        // update currClient\n        currClient = curr.id.client;\n      }\n      currClock = curr.id.clock + curr.length;\n    }\n    // write the end to `to`\n    to.set(currClient, currClock);\n  }\n  return { from, to }\n};\n\n/**\n * @param {Uint8Array} update\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nconst parseUpdateMeta = update => parseUpdateMetaV2(update, UpdateDecoderV1);\n\n/**\n * This method is intended to slice any kind of struct and retrieve the right part.\n * It does not handle side-effects, so it should only be used by the lazy-encoder.\n *\n * @param {Item | GC | Skip} left\n * @param {number} diff\n * @return {Item | GC}\n */\nconst sliceStruct = (left, diff) => {\n  if (left.constructor === GC) {\n    const { client, clock } = left.id;\n    return new GC(createID(client, clock + diff), left.length - diff)\n  } else if (left.constructor === Skip) {\n    const { client, clock } = left.id;\n    return new Skip(createID(client, clock + diff), left.length - diff)\n  } else {\n    const leftItem = /** @type {Item} */ (left);\n    const { client, clock } = leftItem.id;\n    return new Item(\n      createID(client, clock + diff),\n      null,\n      createID(client, clock + diff - 1),\n      null,\n      leftItem.rightOrigin,\n      leftItem.parent,\n      leftItem.parentSub,\n      leftItem.content.splice(diff)\n    )\n  }\n};\n\n/**\n *\n * This function works similarly to `readUpdateV2`.\n *\n * @param {Array<Uint8Array>} updates\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n * @return {Uint8Array}\n */\nconst mergeUpdatesV2 = (updates, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  if (updates.length === 1) {\n    return updates[0]\n  }\n  const updateDecoders = updates.map(update => new YDecoder(decoding.createDecoder(update)));\n  let lazyStructDecoders = updateDecoders.map(decoder => new LazyStructReader(decoder, true));\n\n  /**\n   * @todo we don't need offset because we always slice before\n   * @type {null | { struct: Item | GC | Skip, offset: number }}\n   */\n  let currWrite = null;\n\n  const updateEncoder = new YEncoder();\n  // write structs lazily\n  const lazyStructEncoder = new LazyStructWriter(updateEncoder);\n\n  // Note: We need to ensure that all lazyStructDecoders are fully consumed\n  // Note: Should merge document updates whenever possible - even from different updates\n  // Note: Should handle that some operations cannot be applied yet ()\n\n  while (true) {\n    // Write higher clients first ⇒ sort by clientID & clock and remove decoders without content\n    lazyStructDecoders = lazyStructDecoders.filter(dec => dec.curr !== null);\n    lazyStructDecoders.sort(\n      /** @type {function(any,any):number} */ (dec1, dec2) => {\n        if (dec1.curr.id.client === dec2.curr.id.client) {\n          const clockDiff = dec1.curr.id.clock - dec2.curr.id.clock;\n          if (clockDiff === 0) {\n            // @todo remove references to skip since the structDecoders must filter Skips.\n            return dec1.curr.constructor === dec2.curr.constructor\n              ? 0\n              : dec1.curr.constructor === Skip ? 1 : -1 // we are filtering skips anyway.\n          } else {\n            return clockDiff\n          }\n        } else {\n          return dec2.curr.id.client - dec1.curr.id.client\n        }\n      }\n    );\n    if (lazyStructDecoders.length === 0) {\n      break\n    }\n    const currDecoder = lazyStructDecoders[0];\n    // write from currDecoder until the next operation is from another client or if filler-struct\n    // then we need to reorder the decoders and find the next operation to write\n    const firstClient = /** @type {Item | GC} */ (currDecoder.curr).id.client;\n\n    if (currWrite !== null) {\n      let curr = /** @type {Item | GC | null} */ (currDecoder.curr);\n      let iterated = false;\n\n      // iterate until we find something that we haven't written already\n      // remember: first the high client-ids are written\n      while (curr !== null && curr.id.clock + curr.length <= currWrite.struct.id.clock + currWrite.struct.length && curr.id.client >= currWrite.struct.id.client) {\n        curr = currDecoder.next();\n        iterated = true;\n      }\n      if (\n        curr === null || // current decoder is empty\n        curr.id.client !== firstClient || // check whether there is another decoder that has has updates from `firstClient`\n        (iterated && curr.id.clock > currWrite.struct.id.clock + currWrite.struct.length) // the above while loop was used and we are potentially missing updates\n      ) {\n        continue\n      }\n\n      if (firstClient !== currWrite.struct.id.client) {\n        writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n        currWrite = { struct: curr, offset: 0 };\n        currDecoder.next();\n      } else {\n        if (currWrite.struct.id.clock + currWrite.struct.length < curr.id.clock) {\n          // @todo write currStruct & set currStruct = Skip(clock = currStruct.id.clock + currStruct.length, length = curr.id.clock - self.clock)\n          if (currWrite.struct.constructor === Skip) {\n            // extend existing skip\n            currWrite.struct.length = curr.id.clock + curr.length - currWrite.struct.id.clock;\n          } else {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n            const diff = curr.id.clock - currWrite.struct.id.clock - currWrite.struct.length;\n            /**\n             * @type {Skip}\n             */\n            const struct = new Skip(createID(firstClient, currWrite.struct.id.clock + currWrite.struct.length), diff);\n            currWrite = { struct, offset: 0 };\n          }\n        } else { // if (currWrite.struct.id.clock + currWrite.struct.length >= curr.id.clock) {\n          const diff = currWrite.struct.id.clock + currWrite.struct.length - curr.id.clock;\n          if (diff > 0) {\n            if (currWrite.struct.constructor === Skip) {\n              // prefer to slice Skip because the other struct might contain more information\n              currWrite.struct.length -= diff;\n            } else {\n              curr = sliceStruct(curr, diff);\n            }\n          }\n          if (!currWrite.struct.mergeWith(/** @type {any} */ (curr))) {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n            currWrite = { struct: curr, offset: 0 };\n            currDecoder.next();\n          }\n        }\n      }\n    } else {\n      currWrite = { struct: /** @type {Item | GC} */ (currDecoder.curr), offset: 0 };\n      currDecoder.next();\n    }\n    for (\n      let next = currDecoder.curr;\n      next !== null && next.id.client === firstClient && next.id.clock === currWrite.struct.id.clock + currWrite.struct.length && next.constructor !== Skip;\n      next = currDecoder.next()\n    ) {\n      writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n      currWrite = { struct: next, offset: 0 };\n    }\n  }\n  if (currWrite !== null) {\n    writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n    currWrite = null;\n  }\n  finishLazyStructWriting(lazyStructEncoder);\n\n  const dss = updateDecoders.map(decoder => readDeleteSet(decoder));\n  const ds = mergeDeleteSets(dss);\n  writeDeleteSet(updateEncoder, ds);\n  return updateEncoder.toUint8Array()\n};\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n */\nconst diffUpdateV2 = (update, sv, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  const state = decodeStateVector(sv);\n  const encoder = new YEncoder();\n  const lazyStructWriter = new LazyStructWriter(encoder);\n  const decoder = new YDecoder(decoding.createDecoder(update));\n  const reader = new LazyStructReader(decoder, false);\n  while (reader.curr) {\n    const curr = reader.curr;\n    const currClient = curr.id.client;\n    const svClock = state.get(currClient) || 0;\n    if (reader.curr.constructor === Skip) {\n      // the first written struct shouldn't be a skip\n      reader.next();\n      continue\n    }\n    if (curr.id.clock + curr.length > svClock) {\n      writeStructToLazyStructWriter(lazyStructWriter, curr, math.max(svClock - curr.id.clock, 0));\n      reader.next();\n      while (reader.curr && reader.curr.id.client === currClient) {\n        writeStructToLazyStructWriter(lazyStructWriter, reader.curr, 0);\n        reader.next();\n      }\n    } else {\n      // read until something new comes up\n      while (reader.curr && reader.curr.id.client === currClient && reader.curr.id.clock + reader.curr.length <= svClock) {\n        reader.next();\n      }\n    }\n  }\n  finishLazyStructWriting(lazyStructWriter);\n  // write ds\n  const ds = readDeleteSet(decoder);\n  writeDeleteSet(encoder, ds);\n  return encoder.toUint8Array()\n};\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n */\nconst diffUpdate = (update, sv) => diffUpdateV2(update, sv, UpdateDecoderV1, UpdateEncoderV1);\n\n/**\n * @param {LazyStructWriter} lazyWriter\n */\nconst flushLazyStructWriter = lazyWriter => {\n  if (lazyWriter.written > 0) {\n    lazyWriter.clientStructs.push({ written: lazyWriter.written, restEncoder: encoding.toUint8Array(lazyWriter.encoder.restEncoder) });\n    lazyWriter.encoder.restEncoder = encoding.createEncoder();\n    lazyWriter.written = 0;\n  }\n};\n\n/**\n * @param {LazyStructWriter} lazyWriter\n * @param {Item | GC} struct\n * @param {number} offset\n */\nconst writeStructToLazyStructWriter = (lazyWriter, struct, offset) => {\n  // flush curr if we start another client\n  if (lazyWriter.written > 0 && lazyWriter.currClient !== struct.id.client) {\n    flushLazyStructWriter(lazyWriter);\n  }\n  if (lazyWriter.written === 0) {\n    lazyWriter.currClient = struct.id.client;\n    // write next client\n    lazyWriter.encoder.writeClient(struct.id.client);\n    // write startClock\n    encoding.writeVarUint(lazyWriter.encoder.restEncoder, struct.id.clock + offset);\n  }\n  struct.write(lazyWriter.encoder, offset);\n  lazyWriter.written++;\n};\n/**\n * Call this function when we collected all parts and want to\n * put all the parts together. After calling this method,\n * you can continue using the UpdateEncoder.\n *\n * @param {LazyStructWriter} lazyWriter\n */\nconst finishLazyStructWriting = (lazyWriter) => {\n  flushLazyStructWriter(lazyWriter);\n\n  // this is a fresh encoder because we called flushCurr\n  const restEncoder = lazyWriter.encoder.restEncoder;\n\n  /**\n   * Now we put all the fragments together.\n   * This works similarly to `writeClientsStructs`\n   */\n\n  // write # states that were updated - i.e. the clients\n  encoding.writeVarUint(restEncoder, lazyWriter.clientStructs.length);\n\n  for (let i = 0; i < lazyWriter.clientStructs.length; i++) {\n    const partStructs = lazyWriter.clientStructs[i];\n    /**\n     * Works similarly to `writeStructs`\n     */\n    // write # encoded structs\n    encoding.writeVarUint(restEncoder, partStructs.written);\n    // write the rest of the fragment\n    encoding.writeUint8Array(restEncoder, partStructs.restEncoder);\n  }\n};\n\n/**\n * @param {Uint8Array} update\n * @param {function(Item|GC|Skip):Item|GC|Skip} blockTransformer\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} YDecoder\n * @param {typeof UpdateEncoderV2 | typeof UpdateEncoderV1 } YEncoder\n */\nconst convertUpdateFormat = (update, blockTransformer, YDecoder, YEncoder) => {\n  const updateDecoder = new YDecoder(decoding.createDecoder(update));\n  const lazyDecoder = new LazyStructReader(updateDecoder, false);\n  const updateEncoder = new YEncoder();\n  const lazyWriter = new LazyStructWriter(updateEncoder);\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    writeStructToLazyStructWriter(lazyWriter, blockTransformer(curr), 0);\n  }\n  finishLazyStructWriting(lazyWriter);\n  const ds = readDeleteSet(updateDecoder);\n  writeDeleteSet(updateEncoder, ds);\n  return updateEncoder.toUint8Array()\n};\n\n/**\n * @typedef {Object} ObfuscatorOptions\n * @property {boolean} [ObfuscatorOptions.formatting=true]\n * @property {boolean} [ObfuscatorOptions.subdocs=true]\n * @property {boolean} [ObfuscatorOptions.yxml=true] Whether to obfuscate nodeName / hookName\n */\n\n/**\n * @param {ObfuscatorOptions} obfuscator\n */\nconst createObfuscator = ({ formatting = true, subdocs = true, yxml = true } = {}) => {\n  let i = 0;\n  const mapKeyCache = map.create();\n  const nodeNameCache = map.create();\n  const formattingKeyCache = map.create();\n  const formattingValueCache = map.create();\n  formattingValueCache.set(null, null); // end of a formatting range should always be the end of a formatting range\n  /**\n   * @param {Item|GC|Skip} block\n   * @return {Item|GC|Skip}\n   */\n  return block => {\n    switch (block.constructor) {\n      case GC:\n      case Skip:\n        return block\n      case Item: {\n        const item = /** @type {Item} */ (block);\n        const content = item.content;\n        switch (content.constructor) {\n          case ContentDeleted:\n            break\n          case ContentType: {\n            if (yxml) {\n              const type = /** @type {ContentType} */ (content).type;\n              if (type instanceof YXmlElement) {\n                type.nodeName = map.setIfUndefined(nodeNameCache, type.nodeName, () => 'node-' + i);\n              }\n              if (type instanceof YXmlHook) {\n                type.hookName = map.setIfUndefined(nodeNameCache, type.hookName, () => 'hook-' + i);\n              }\n            }\n            break\n          }\n          case ContentAny: {\n            const c = /** @type {ContentAny} */ (content);\n            c.arr = c.arr.map(() => i);\n            break\n          }\n          case ContentBinary: {\n            const c = /** @type {ContentBinary} */ (content);\n            c.content = new Uint8Array([i]);\n            break\n          }\n          case ContentDoc: {\n            const c = /** @type {ContentDoc} */ (content);\n            if (subdocs) {\n              c.opts = {};\n              c.doc.guid = i + '';\n            }\n            break\n          }\n          case ContentEmbed: {\n            const c = /** @type {ContentEmbed} */ (content);\n            c.embed = {};\n            break\n          }\n          case ContentFormat: {\n            const c = /** @type {ContentFormat} */ (content);\n            if (formatting) {\n              c.key = map.setIfUndefined(formattingKeyCache, c.key, () => i + '');\n              c.value = map.setIfUndefined(formattingValueCache, c.value, () => ({ i }));\n            }\n            break\n          }\n          case ContentJSON: {\n            const c = /** @type {ContentJSON} */ (content);\n            c.arr = c.arr.map(() => i);\n            break\n          }\n          case ContentString: {\n            const c = /** @type {ContentString} */ (content);\n            c.str = string.repeat((i % 10) + '', c.str.length);\n            break\n          }\n          default:\n            // unknown content type\n            error.unexpectedCase();\n        }\n        if (item.parentSub) {\n          item.parentSub = map.setIfUndefined(mapKeyCache, item.parentSub, () => i + '');\n        }\n        i++;\n        return block\n      }\n      default:\n        // unknown block-type\n        error.unexpectedCase();\n    }\n  }\n};\n\n/**\n * This function obfuscates the content of a Yjs update. This is useful to share\n * buggy Yjs documents while significantly limiting the possibility that a\n * developer can on the user. Note that it might still be possible to deduce\n * some information by analyzing the \"structure\" of the document or by analyzing\n * the typing behavior using the CRDT-related metadata that is still kept fully\n * intact.\n *\n * @param {Uint8Array} update\n * @param {ObfuscatorOptions} [opts]\n */\nconst obfuscateUpdate = (update, opts) => convertUpdateFormat(update, createObfuscator(opts), UpdateDecoderV1, UpdateEncoderV1);\n\n/**\n * @param {Uint8Array} update\n * @param {ObfuscatorOptions} [opts]\n */\nconst obfuscateUpdateV2 = (update, opts) => convertUpdateFormat(update, createObfuscator(opts), UpdateDecoderV2, UpdateEncoderV2);\n\n/**\n * @param {Uint8Array} update\n */\nconst convertUpdateFormatV1ToV2 = update => convertUpdateFormat(update, f.id, UpdateDecoderV1, UpdateEncoderV2);\n\n/**\n * @param {Uint8Array} update\n */\nconst convertUpdateFormatV2ToV1 = update => convertUpdateFormat(update, f.id, UpdateDecoderV2, UpdateEncoderV1);\n\nconst errorComputeChanges = 'You must not compute changes after the event-handler fired.';\n\n/**\n * @template {AbstractType<any>} T\n * YEvent describes the changes on a YType.\n */\nclass YEvent {\n  /**\n   * @param {T} target The changed type.\n   * @param {Transaction} transaction\n   */\n  constructor (target, transaction) {\n    /**\n     * The type on which this event was created on.\n     * @type {T}\n     */\n    this.target = target;\n    /**\n     * The current target on which the observe callback is called.\n     * @type {AbstractType<any>}\n     */\n    this.currentTarget = target;\n    /**\n     * The transaction that triggered this event.\n     * @type {Transaction}\n     */\n    this.transaction = transaction;\n    /**\n     * @type {Object|null}\n     */\n    this._changes = null;\n    /**\n     * @type {null | Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n     */\n    this._keys = null;\n    /**\n     * @type {null | Array<{ insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any> }>}\n     */\n    this._delta = null;\n    /**\n     * @type {Array<string|number>|null}\n     */\n    this._path = null;\n  }\n\n  /**\n   * Computes the path from `y` to the changed type.\n   *\n   * @todo v14 should standardize on path: Array<{parent, index}> because that is easier to work with.\n   *\n   * The following property holds:\n   * @example\n   *   let type = y\n   *   event.path.forEach(dir => {\n   *     type = type.get(dir)\n   *   })\n   *   type === event.target // => true\n   */\n  get path () {\n    return this._path || (this._path = getPathTo(this.currentTarget, this.target))\n  }\n\n  /**\n   * Check if a struct is deleted by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  deletes (struct) {\n    return isDeleted(this.transaction.deleteSet, struct.id)\n  }\n\n  /**\n   * @type {Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n   */\n  get keys () {\n    if (this._keys === null) {\n      if (this.transaction.doc._transactionCleanups.length === 0) {\n        throw error.create(errorComputeChanges)\n      }\n      const keys = new Map();\n      const target = this.target;\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target));\n      changed.forEach(key => {\n        if (key !== null) {\n          const item = /** @type {Item} */ (target._map.get(key));\n          /**\n           * @type {'delete' | 'add' | 'update'}\n           */\n          let action;\n          let oldValue;\n          if (this.adds(item)) {\n            let prev = item.left;\n            while (prev !== null && this.adds(prev)) {\n              prev = prev.left;\n            }\n            if (this.deletes(item)) {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'delete';\n                oldValue = array.last(prev.content.getContent());\n              } else {\n                return\n              }\n            } else {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'update';\n                oldValue = array.last(prev.content.getContent());\n              } else {\n                action = 'add';\n                oldValue = undefined;\n              }\n            }\n          } else {\n            if (this.deletes(item)) {\n              action = 'delete';\n              oldValue = array.last(/** @type {Item} */ item.content.getContent());\n            } else {\n              return // nop\n            }\n          }\n          keys.set(key, { action, oldValue });\n        }\n      });\n      this._keys = keys;\n    }\n    return this._keys\n  }\n\n  /**\n   * This is a computed property. Note that this can only be safely computed during the\n   * event call. Computing this property after other changes happened might result in\n   * unexpected behavior (incorrect computation of deltas). A safe way to collect changes\n   * is to store the `changes` or the `delta` object. Avoid storing the `transaction` object.\n   *\n   * @type {Array<{insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any>}>}\n   */\n  get delta () {\n    return this.changes.delta\n  }\n\n  /**\n   * Check if a struct is added by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  adds (struct) {\n    return struct.id.clock >= (this.transaction.beforeState.get(struct.id.client) || 0)\n  }\n\n  /**\n   * This is a computed property. Note that this can only be safely computed during the\n   * event call. Computing this property after other changes happened might result in\n   * unexpected behavior (incorrect computation of deltas). A safe way to collect changes\n   * is to store the `changes` or the `delta` object. Avoid storing the `transaction` object.\n   *\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    let changes = this._changes;\n    if (changes === null) {\n      if (this.transaction.doc._transactionCleanups.length === 0) {\n        throw error.create(errorComputeChanges)\n      }\n      const target = this.target;\n      const added = set.create();\n      const deleted = set.create();\n      /**\n       * @type {Array<{insert:Array<any>}|{delete:number}|{retain:number}>}\n       */\n      const delta = [];\n      changes = {\n        added,\n        deleted,\n        delta,\n        keys: this.keys\n      };\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target));\n      if (changed.has(null)) {\n        /**\n         * @type {any}\n         */\n        let lastOp = null;\n        const packOp = () => {\n          if (lastOp) {\n            delta.push(lastOp);\n          }\n        };\n        for (let item = target._start; item !== null; item = item.right) {\n          if (item.deleted) {\n            if (this.deletes(item) && !this.adds(item)) {\n              if (lastOp === null || lastOp.delete === undefined) {\n                packOp();\n                lastOp = { delete: 0 };\n              }\n              lastOp.delete += item.length;\n              deleted.add(item);\n            } // else nop\n          } else {\n            if (this.adds(item)) {\n              if (lastOp === null || lastOp.insert === undefined) {\n                packOp();\n                lastOp = { insert: [] };\n              }\n              lastOp.insert = lastOp.insert.concat(item.content.getContent());\n              added.add(item);\n            } else {\n              if (lastOp === null || lastOp.retain === undefined) {\n                packOp();\n                lastOp = { retain: 0 };\n              }\n              lastOp.retain += item.length;\n            }\n          }\n        }\n        if (lastOp !== null && lastOp.retain === undefined) {\n          packOp();\n        }\n      }\n      this._changes = changes;\n    }\n    return /** @type {any} */ (changes)\n  }\n}\n\n/**\n * Compute the path from this type to the specified target.\n *\n * @example\n *   // `child` should be accessible via `type.get(path[0]).get(path[1])..`\n *   const path = type.getPathTo(child)\n *   // assuming `type instanceof YArray`\n *   console.log(path) // might look like => [2, 'key1']\n *   child === type.get(path[0]).get(path[1])\n *\n * @param {AbstractType<any>} parent\n * @param {AbstractType<any>} child target\n * @return {Array<string|number>} Path to the target\n *\n * @private\n * @function\n */\nconst getPathTo = (parent, child) => {\n  const path = [];\n  while (child._item !== null && child !== parent) {\n    if (child._item.parentSub !== null) {\n      // parent is map-ish\n      path.unshift(child._item.parentSub);\n    } else {\n      // parent is array-ish\n      let i = 0;\n      let c = /** @type {AbstractType<any>} */ (child._item.parent)._start;\n      while (c !== child._item && c !== null) {\n        if (!c.deleted) {\n          i++;\n        }\n        c = c.right;\n      }\n      path.unshift(i);\n    }\n    child = /** @type {AbstractType<any>} */ (child._item.parent);\n  }\n  return path\n};\n\nconst maxSearchMarker = 80;\n\n/**\n * A unique timestamp that identifies each marker.\n *\n * Time is relative,.. this is more like an ever-increasing clock.\n *\n * @type {number}\n */\nlet globalSearchMarkerTimestamp = 0;\n\nclass ArraySearchMarker {\n  /**\n   * @param {Item} p\n   * @param {number} index\n   */\n  constructor (p, index) {\n    p.marker = true;\n    this.p = p;\n    this.index = index;\n    this.timestamp = globalSearchMarkerTimestamp++;\n  }\n}\n\n/**\n * @param {ArraySearchMarker} marker\n */\nconst refreshMarkerTimestamp = marker => { marker.timestamp = globalSearchMarkerTimestamp++; };\n\n/**\n * This is rather complex so this function is the only thing that should overwrite a marker\n *\n * @param {ArraySearchMarker} marker\n * @param {Item} p\n * @param {number} index\n */\nconst overwriteMarker = (marker, p, index) => {\n  marker.p.marker = false;\n  marker.p = p;\n  p.marker = true;\n  marker.index = index;\n  marker.timestamp = globalSearchMarkerTimestamp++;\n};\n\n/**\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {Item} p\n * @param {number} index\n */\nconst markPosition = (searchMarker, p, index) => {\n  if (searchMarker.length >= maxSearchMarker) {\n    // override oldest marker (we don't want to create more objects)\n    const marker = searchMarker.reduce((a, b) => a.timestamp < b.timestamp ? a : b);\n    overwriteMarker(marker, p, index);\n    return marker\n  } else {\n    // create new marker\n    const pm = new ArraySearchMarker(p, index);\n    searchMarker.push(pm);\n    return pm\n  }\n};\n\n/**\n * Search marker help us to find positions in the associative array faster.\n *\n * They speed up the process of finding a position without much bookkeeping.\n *\n * A maximum of `maxSearchMarker` objects are created.\n *\n * This function always returns a refreshed marker (updated timestamp)\n *\n * @param {AbstractType<any>} yarray\n * @param {number} index\n */\nconst findMarker = (yarray, index) => {\n  if (yarray._start === null || index === 0 || yarray._searchMarker === null) {\n    return null\n  }\n  const marker = yarray._searchMarker.length === 0 ? null : yarray._searchMarker.reduce((a, b) => math.abs(index - a.index) < math.abs(index - b.index) ? a : b);\n  let p = yarray._start;\n  let pindex = 0;\n  if (marker !== null) {\n    p = marker.p;\n    pindex = marker.index;\n    refreshMarkerTimestamp(marker); // we used it, we might need to use it again\n  }\n  // iterate to right if possible\n  while (p.right !== null && pindex < index) {\n    if (!p.deleted && p.countable) {\n      if (index < pindex + p.length) {\n        break\n      }\n      pindex += p.length;\n    }\n    p = p.right;\n  }\n  // iterate to left if necessary (might be that pindex > index)\n  while (p.left !== null && pindex > index) {\n    p = p.left;\n    if (!p.deleted && p.countable) {\n      pindex -= p.length;\n    }\n  }\n  // we want to make sure that p can't be merged with left, because that would screw up everything\n  // in that cas just return what we have (it is most likely the best marker anyway)\n  // iterate to left until p can't be merged with left\n  while (p.left !== null && p.left.id.client === p.id.client && p.left.id.clock + p.left.length === p.id.clock) {\n    p = p.left;\n    if (!p.deleted && p.countable) {\n      pindex -= p.length;\n    }\n  }\n\n  // @todo remove!\n  // assure position\n  // {\n  //   let start = yarray._start\n  //   let pos = 0\n  //   while (start !== p) {\n  //     if (!start.deleted && start.countable) {\n  //       pos += start.length\n  //     }\n  //     start = /** @type {Item} */ (start.right)\n  //   }\n  //   if (pos !== pindex) {\n  //     debugger\n  //     throw new Error('Gotcha position fail!')\n  //   }\n  // }\n  // if (marker) {\n  //   if (window.lengthes == null) {\n  //     window.lengthes = []\n  //     window.getLengthes = () => window.lengthes.sort((a, b) => a - b)\n  //   }\n  //   window.lengthes.push(marker.index - pindex)\n  //   console.log('distance', marker.index - pindex, 'len', p && p.parent.length)\n  // }\n  if (marker !== null && math.abs(marker.index - pindex) < /** @type {YText|YArray<any>} */ (p.parent).length / maxSearchMarker) {\n    // adjust existing marker\n    overwriteMarker(marker, p, pindex);\n    return marker\n  } else {\n    // create new marker\n    return markPosition(yarray._searchMarker, p, pindex)\n  }\n};\n\n/**\n * Update markers when a change happened.\n *\n * This should be called before doing a deletion!\n *\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {number} index\n * @param {number} len If insertion, len is positive. If deletion, len is negative.\n */\nconst updateMarkerChanges = (searchMarker, index, len) => {\n  for (let i = searchMarker.length - 1; i >= 0; i--) {\n    const m = searchMarker[i];\n    if (len > 0) {\n      /**\n       * @type {Item|null}\n       */\n      let p = m.p;\n      p.marker = false;\n      // Ideally we just want to do a simple position comparison, but this will only work if\n      // search markers don't point to deleted items for formats.\n      // Iterate marker to prev undeleted countable position so we know what to do when updating a position\n      while (p && (p.deleted || !p.countable)) {\n        p = p.left;\n        if (p && !p.deleted && p.countable) {\n          // adjust position. the loop should break now\n          m.index -= p.length;\n        }\n      }\n      if (p === null || p.marker === true) {\n        // remove search marker if updated position is null or if position is already marked\n        searchMarker.splice(i, 1);\n        continue\n      }\n      m.p = p;\n      p.marker = true;\n    }\n    if (index < m.index || (len > 0 && index === m.index)) { // a simple index <= m.index check would actually suffice\n      m.index = math.max(index, m.index + len);\n    }\n  }\n};\n\n/**\n * Accumulate all (list) children of a type and return them as an Array.\n *\n * @param {AbstractType<any>} t\n * @return {Array<Item>}\n */\nconst getTypeChildren = t => {\n  let s = t._start;\n  const arr = [];\n  while (s) {\n    arr.push(s);\n    s = s.right;\n  }\n  return arr\n};\n\n/**\n * Call event listeners with an event. This will also add an event to all\n * parents (for `.observeDeep` handlers).\n *\n * @template EventType\n * @param {AbstractType<EventType>} type\n * @param {Transaction} transaction\n * @param {EventType} event\n */\nconst callTypeObservers = (type, transaction, event) => {\n  const changedType = type;\n  const changedParentTypes = transaction.changedParentTypes;\n  while (true) {\n    // @ts-ignore\n    map.setIfUndefined(changedParentTypes, type, () => []).push(event);\n    if (type._item === null) {\n      break\n    }\n    type = /** @type {AbstractType<any>} */ (type._item.parent);\n  }\n  callEventHandlerListeners(changedType._eH, event, transaction);\n};\n\n/**\n * @template EventType\n * Abstract Yjs Type class\n */\nclass AbstractType {\n  constructor () {\n    /**\n     * @type {Item|null}\n     */\n    this._item = null;\n    /**\n     * @type {Map<string,Item>}\n     */\n    this._map = new Map();\n    /**\n     * @type {Item|null}\n     */\n    this._start = null;\n    /**\n     * @type {Doc|null}\n     */\n    this.doc = null;\n    this._length = 0;\n    /**\n     * Event handlers\n     * @type {EventHandler<EventType,Transaction>}\n     */\n    this._eH = createEventHandler();\n    /**\n     * Deep event handlers\n     * @type {EventHandler<Array<YEvent<any>>,Transaction>}\n     */\n    this._dEH = createEventHandler();\n    /**\n     * @type {null | Array<ArraySearchMarker>}\n     */\n    this._searchMarker = null;\n  }\n\n  /**\n   * @return {AbstractType<any>|null}\n   */\n  get parent () {\n    return this._item ? /** @type {AbstractType<any>} */ (this._item.parent) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item|null} item\n   */\n  _integrate (y, item) {\n    this.doc = y;\n    this._item = item;\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  _copy () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  clone () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} _encoder\n   */\n  _write (_encoder) { }\n\n  /**\n   * The first non-deleted item\n   */\n  get _first () {\n    let n = this._start;\n    while (n !== null && n.deleted) {\n      n = n.right;\n    }\n    return n\n  }\n\n  /**\n   * Creates YEvent and calls all type observers.\n   * Must be implemented by each type.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} _parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, _parentSubs) {\n    if (!transaction.local && this._searchMarker) {\n      this._searchMarker.length = 0;\n    }\n  }\n\n  /**\n   * Observe all events that are created on this type.\n   *\n   * @param {function(EventType, Transaction):void} f Observer function\n   */\n  observe (f) {\n    addEventHandlerListener(this._eH, f);\n  }\n\n  /**\n   * Observe all events that are created by this type and its children.\n   *\n   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function\n   */\n  observeDeep (f) {\n    addEventHandlerListener(this._dEH, f);\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(EventType,Transaction):void} f Observer function\n   */\n  unobserve (f) {\n    removeEventHandlerListener(this._eH, f);\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function\n   */\n  unobserveDeep (f) {\n    removeEventHandlerListener(this._dEH, f);\n  }\n\n  /**\n   * @abstract\n   * @return {any}\n   */\n  toJSON () {}\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} start\n * @param {number} end\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nconst typeListSlice = (type, start, end) => {\n  if (start < 0) {\n    start = type._length + start;\n  }\n  if (end < 0) {\n    end = type._length + end;\n  }\n  let len = end - start;\n  const cs = [];\n  let n = type._start;\n  while (n !== null && len > 0) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent();\n      if (c.length <= start) {\n        start -= c.length;\n      } else {\n        for (let i = start; i < c.length && len > 0; i++) {\n          cs.push(c[i]);\n          len--;\n        }\n        start = 0;\n      }\n    }\n    n = n.right;\n  }\n  return cs\n};\n\n/**\n * @param {AbstractType<any>} type\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nconst typeListToArray = type => {\n  const cs = [];\n  let n = type._start;\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent();\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i]);\n      }\n    }\n    n = n.right;\n  }\n  return cs\n};\n\n/**\n * @param {AbstractType<any>} type\n * @param {Snapshot} snapshot\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nconst typeListToArraySnapshot = (type, snapshot) => {\n  const cs = [];\n  let n = type._start;\n  while (n !== null) {\n    if (n.countable && isVisible(n, snapshot)) {\n      const c = n.content.getContent();\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i]);\n      }\n    }\n    n = n.right;\n  }\n  return cs\n};\n\n/**\n * Executes a provided function on once on overy element of this YArray.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,any):void} f A function to execute on every element of this YArray.\n *\n * @private\n * @function\n */\nconst typeListForEach = (type, f) => {\n  let index = 0;\n  let n = type._start;\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent();\n      for (let i = 0; i < c.length; i++) {\n        f(c[i], index++, type);\n      }\n    }\n    n = n.right;\n  }\n};\n\n/**\n * @template C,R\n * @param {AbstractType<any>} type\n * @param {function(C,number,AbstractType<any>):R} f\n * @return {Array<R>}\n *\n * @private\n * @function\n */\nconst typeListMap = (type, f) => {\n  /**\n   * @type {Array<any>}\n   */\n  const result = [];\n  typeListForEach(type, (c, i) => {\n    result.push(f(c, i, type));\n  });\n  return result\n};\n\n/**\n * @param {AbstractType<any>} type\n * @return {IterableIterator<any>}\n *\n * @private\n * @function\n */\nconst typeListCreateIterator = type => {\n  let n = type._start;\n  /**\n   * @type {Array<any>|null}\n   */\n  let currentContent = null;\n  let currentContentIndex = 0;\n  return {\n    [Symbol.iterator] () {\n      return this\n    },\n    next: () => {\n      // find some content\n      if (currentContent === null) {\n        while (n !== null && n.deleted) {\n          n = n.right;\n        }\n        // check if we reached the end, no need to check currentContent, because it does not exist\n        if (n === null) {\n          return {\n            done: true,\n            value: undefined\n          }\n        }\n        // we found n, so we can set currentContent\n        currentContent = n.content.getContent();\n        currentContentIndex = 0;\n        n = n.right; // we used the content of n, now iterate to next\n      }\n      const value = currentContent[currentContentIndex++];\n      // check if we need to empty currentContent\n      if (currentContent.length <= currentContentIndex) {\n        currentContent = null;\n      }\n      return {\n        done: false,\n        value\n      }\n    }\n  }\n};\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @return {any}\n *\n * @private\n * @function\n */\nconst typeListGet = (type, index) => {\n  const marker = findMarker(type, index);\n  let n = type._start;\n  if (marker !== null) {\n    n = marker.p;\n    index -= marker.index;\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        return n.content.getContent()[index]\n      }\n      index -= n.length;\n    }\n  }\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Item?} referenceItem\n * @param {Array<Object<string,any>|Array<any>|boolean|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nconst typeListInsertGenericsAfter = (transaction, parent, referenceItem, content) => {\n  let left = referenceItem;\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  const store = doc.store;\n  const right = referenceItem === null ? parent._start : referenceItem.right;\n  /**\n   * @type {Array<Object|Array<any>|number|null>}\n   */\n  let jsonContent = [];\n  const packJsonContent = () => {\n    if (jsonContent.length > 0) {\n      left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentAny(jsonContent));\n      left.integrate(transaction, 0);\n      jsonContent = [];\n    }\n  };\n  content.forEach(c => {\n    if (c === null) {\n      jsonContent.push(c);\n    } else {\n      switch (c.constructor) {\n        case Number:\n        case Object:\n        case Boolean:\n        case Array:\n        case String:\n          jsonContent.push(c);\n          break\n        default:\n          packJsonContent();\n          switch (c.constructor) {\n            case Uint8Array:\n            case ArrayBuffer:\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentBinary(new Uint8Array(/** @type {Uint8Array} */ (c))));\n              left.integrate(transaction, 0);\n              break\n            case Doc:\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentDoc(/** @type {Doc} */ (c)));\n              left.integrate(transaction, 0);\n              break\n            default:\n              if (c instanceof AbstractType) {\n                left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentType(c));\n                left.integrate(transaction, 0);\n              } else {\n                throw new Error('Unexpected content type in insert operation')\n              }\n          }\n      }\n    }\n  });\n  packJsonContent();\n};\n\nconst lengthExceeded = () => error.create('Length exceeded!');\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {Array<Object<string,any>|Array<any>|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nconst typeListInsertGenerics = (transaction, parent, index, content) => {\n  if (index > parent._length) {\n    throw lengthExceeded()\n  }\n  if (index === 0) {\n    if (parent._searchMarker) {\n      updateMarkerChanges(parent._searchMarker, index, content.length);\n    }\n    return typeListInsertGenericsAfter(transaction, parent, null, content)\n  }\n  const startIndex = index;\n  const marker = findMarker(parent, index);\n  let n = parent._start;\n  if (marker !== null) {\n    n = marker.p;\n    index -= marker.index;\n    // we need to iterate one to the left so that the algorithm works\n    if (index === 0) {\n      // @todo refactor this as it actually doesn't consider formats\n      n = n.prev; // important! get the left undeleted item so that we can actually decrease index\n      index += (n && n.countable && !n.deleted) ? n.length : 0;\n    }\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index <= n.length) {\n        if (index < n.length) {\n          // insert in-between\n          getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index));\n        }\n        break\n      }\n      index -= n.length;\n    }\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, content.length);\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n};\n\n/**\n * Pushing content is special as we generally want to push after the last item. So we don't have to update\n * the serach marker.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Array<Object<string,any>|Array<any>|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nconst typeListPushGenerics = (transaction, parent, content) => {\n  // Use the marker with the highest index and iterate to the right.\n  const marker = (parent._searchMarker || []).reduce((maxMarker, currMarker) => currMarker.index > maxMarker.index ? currMarker : maxMarker, { index: 0, p: parent._start });\n  let n = marker.p;\n  if (n) {\n    while (n.right) {\n      n = n.right;\n    }\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {number} length\n *\n * @private\n * @function\n */\nconst typeListDelete = (transaction, parent, index, length) => {\n  if (length === 0) { return }\n  const startIndex = index;\n  const startLength = length;\n  const marker = findMarker(parent, index);\n  let n = parent._start;\n  if (marker !== null) {\n    n = marker.p;\n    index -= marker.index;\n  }\n  // compute the first item to be deleted\n  for (; n !== null && index > 0; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index));\n      }\n      index -= n.length;\n    }\n  }\n  // delete all items until done\n  while (length > 0 && n !== null) {\n    if (!n.deleted) {\n      if (length < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + length));\n      }\n      n.delete(transaction);\n      length -= n.length;\n    }\n    n = n.right;\n  }\n  if (length > 0) {\n    throw lengthExceeded()\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, -startLength + length /* in case we remove the above exception */);\n  }\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n *\n * @private\n * @function\n */\nconst typeMapDelete = (transaction, parent, key) => {\n  const c = parent._map.get(key);\n  if (c !== undefined) {\n    c.delete(transaction);\n  }\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Object|number|null|Array<any>|string|Uint8Array|AbstractType<any>} value\n *\n * @private\n * @function\n */\nconst typeMapSet = (transaction, parent, key, value) => {\n  const left = parent._map.get(key) || null;\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  let content;\n  if (value == null) {\n    content = new ContentAny([value]);\n  } else {\n    switch (value.constructor) {\n      case Number:\n      case Object:\n      case Boolean:\n      case Array:\n      case String:\n        content = new ContentAny([value]);\n        break\n      case Uint8Array:\n        content = new ContentBinary(/** @type {Uint8Array} */ (value));\n        break\n      case Doc:\n        content = new ContentDoc(/** @type {Doc} */ (value));\n        break\n      default:\n        if (value instanceof AbstractType) {\n          content = new ContentType(value);\n        } else {\n          throw new Error('Unexpected content type')\n        }\n    }\n  }\n  new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, null, null, parent, key, content).integrate(transaction, 0);\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nconst typeMapGet = (parent, key) => {\n  const val = parent._map.get(key);\n  return val !== undefined && !val.deleted ? val.content.getContent()[val.length - 1] : undefined\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @return {Object<string,Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined>}\n *\n * @private\n * @function\n */\nconst typeMapGetAll = (parent) => {\n  /**\n   * @type {Object<string,any>}\n   */\n  const res = {};\n  parent._map.forEach((value, key) => {\n    if (!value.deleted) {\n      res[key] = value.content.getContent()[value.length - 1];\n    }\n  });\n  return res\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {boolean}\n *\n * @private\n * @function\n */\nconst typeMapHas = (parent, key) => {\n  const val = parent._map.get(key);\n  return val !== undefined && !val.deleted\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Snapshot} snapshot\n * @return {Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nconst typeMapGetSnapshot = (parent, key, snapshot) => {\n  let v = parent._map.get(key) || null;\n  while (v !== null && (!snapshot.sv.has(v.id.client) || v.id.clock >= (snapshot.sv.get(v.id.client) || 0))) {\n    v = v.left;\n  }\n  return v !== null && isVisible(v, snapshot) ? v.content.getContent()[v.length - 1] : undefined\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @param {Snapshot} snapshot\n * @return {Object<string,Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined>}\n *\n * @private\n * @function\n */\nconst typeMapGetAllSnapshot = (parent, snapshot) => {\n  /**\n   * @type {Object<string,any>}\n   */\n  const res = {};\n  parent._map.forEach((value, key) => {\n    /**\n     * @type {Item|null}\n     */\n    let v = value;\n    while (v !== null && (!snapshot.sv.has(v.id.client) || v.id.clock >= (snapshot.sv.get(v.id.client) || 0))) {\n      v = v.left;\n    }\n    if (v !== null && isVisible(v, snapshot)) {\n      res[key] = v.content.getContent()[v.length - 1];\n    }\n  });\n  return res\n};\n\n/**\n * @param {Map<string,Item>} map\n * @return {IterableIterator<Array<any>>}\n *\n * @private\n * @function\n */\nconst createMapIterator = map => iterator.iteratorFilter(map.entries(), /** @param {any} entry */ entry => !entry[1].deleted);\n\n/**\n * @module YArray\n */\n\n/**\n * Event that describes the changes on a YArray\n * @template T\n * @extends YEvent<YArray<T>>\n */\nclass YArrayEvent extends YEvent {\n  /**\n   * @param {YArray<T>} yarray The changed type\n   * @param {Transaction} transaction The transaction object\n   */\n  constructor (yarray, transaction) {\n    super(yarray, transaction);\n    this._transaction = transaction;\n  }\n}\n\n/**\n * A shared Array implementation.\n * @template T\n * @extends AbstractType<YArrayEvent<T>>\n * @implements {Iterable<T>}\n */\nclass YArray extends AbstractType {\n  constructor () {\n    super();\n    /**\n     * @type {Array<any>?}\n     * @private\n     */\n    this._prelimContent = [];\n    /**\n     * @type {Array<ArraySearchMarker>}\n     */\n    this._searchMarker = [];\n  }\n\n  /**\n   * Construct a new YArray containing the specified items.\n   * @template {Object<string,any>|Array<any>|number|null|string|Uint8Array} T\n   * @param {Array<T>} items\n   * @return {YArray<T>}\n   */\n  static from (items) {\n    /**\n     * @type {YArray<T>}\n     */\n    const a = new YArray();\n    a.push(items);\n    return a\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item);\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent));\n    this._prelimContent = null;\n  }\n\n  /**\n   * @return {YArray<T>}\n   */\n  _copy () {\n    return new YArray()\n  }\n\n  /**\n   * @return {YArray<T>}\n   */\n  clone () {\n    /**\n     * @type {YArray<T>}\n     */\n    const arr = new YArray();\n    arr.insert(0, this.toArray().map(el =>\n      el instanceof AbstractType ? /** @type {typeof el} */ (el.clone()) : el\n    ));\n    return arr\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Creates YArrayEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs);\n    callTypeObservers(this, transaction, new YArrayEvent(this, transaction));\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * Important: This function expects an array of content. Not just a content\n   * object. The reason for this \"weirdness\" is that inserting several elements\n   * is very efficient when it is done as a single operation.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  yarray.insert(0, ['a'])\n   *  // Insert numbers 1, 2 at position 1\n   *  yarray.insert(1, [1, 2])\n   *\n   * @param {number} index The index to insert content at.\n   * @param {Array<T>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, /** @type {any} */ (content));\n      });\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, 0, ...content);\n    }\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to append.\n   *\n   * @todo Use the following implementation in all types.\n   */\n  push (content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListPushGenerics(transaction, this, /** @type {any} */ (content));\n      });\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).push(...content);\n    }\n  }\n\n  /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to preppend.\n   */\n  unshift (content) {\n    this.insert(0, content);\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} length The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length);\n      });\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, length);\n    }\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {T}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<T>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<T>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Array<any>}\n   */\n  toJSON () {\n    return this.map(c => c instanceof AbstractType ? c.toJSON() : c)\n  }\n\n  /**\n   * Returns an Array with the result of calling a provided function on every\n   * element of this YArray.\n   *\n   * @template M\n   * @param {function(T,number,YArray<T>):M} f Function that produces an element of the new Array\n   * @return {Array<M>} A new array with each element being the result of the\n   *                 callback function\n   */\n  map (f) {\n    return typeListMap(this, /** @type {any} */ (f))\n  }\n\n  /**\n   * Executes a provided function once on overy element of this YArray.\n   *\n   * @param {function(T,number,YArray<T>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f);\n  }\n\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return typeListCreateIterator(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YArrayRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n *\n * @private\n * @function\n */\nconst readYArray = _decoder => new YArray();\n\n/**\n * @template T\n * @extends YEvent<YMap<T>>\n * Event that describes the changes on a YMap.\n */\nclass YMapEvent extends YEvent {\n  /**\n   * @param {YMap<T>} ymap The YArray that changed.\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed.\n   */\n  constructor (ymap, transaction, subs) {\n    super(ymap, transaction);\n    this.keysChanged = subs;\n  }\n}\n\n/**\n * @template MapType\n * A shared Map implementation.\n *\n * @extends AbstractType<YMapEvent<MapType>>\n * @implements {Iterable<[string, MapType]>}\n */\nclass YMap extends AbstractType {\n  /**\n   *\n   * @param {Iterable<readonly [string, any]>=} entries - an optional iterable to initialize the YMap\n   */\n  constructor (entries) {\n    super();\n    /**\n     * @type {Map<string,any>?}\n     * @private\n     */\n    this._prelimContent = null;\n\n    if (entries === undefined) {\n      this._prelimContent = new Map();\n    } else {\n      this._prelimContent = new Map(entries);\n    }\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;/** @type {Map<string, any>} */ (this._prelimContent).forEach((value, key) => {\n      this.set(key, value);\n    });\n    this._prelimContent = null;\n  }\n\n  /**\n   * @return {YMap<MapType>}\n   */\n  _copy () {\n    return new YMap()\n  }\n\n  /**\n   * @return {YMap<MapType>}\n   */\n  clone () {\n    /**\n     * @type {YMap<MapType>}\n     */\n    const map = new YMap();\n    this.forEach((value, key) => {\n      map.set(key, value instanceof AbstractType ? /** @type {typeof value} */ (value.clone()) : value);\n    });\n    return map\n  }\n\n  /**\n   * Creates YMapEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YMapEvent(this, transaction, parentSubs));\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Object<string,any>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string,MapType>}\n     */\n    const map = {};\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        const v = item.content.getContent()[item.length - 1];\n        map[key] = v instanceof AbstractType ? v.toJSON() : v;\n      }\n    });\n    return map\n  }\n\n  /**\n   * Returns the size of the YMap (count of key/value pairs)\n   *\n   * @return {number}\n   */\n  get size () {\n    return [...createMapIterator(this._map)].length\n  }\n\n  /**\n   * Returns the keys for each element in the YMap Type.\n   *\n   * @return {IterableIterator<string>}\n   */\n  keys () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[0])\n  }\n\n  /**\n   * Returns the values for each element in the YMap Type.\n   *\n   * @return {IterableIterator<MapType>}\n   */\n  values () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[1].content.getContent()[v[1].length - 1])\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<[string, MapType]>}\n   */\n  entries () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => /** @type {any} */ ([v[0], v[1].content.getContent()[v[1].length - 1]]))\n  }\n\n  /**\n   * Executes a provided function on once on every key-value pair.\n   *\n   * @param {function(MapType,string,YMap<MapType>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        f(item.content.getContent()[item.length - 1], key, this);\n      }\n    });\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<[string, MapType]>}\n   */\n  [Symbol.iterator] () {\n    return this.entries()\n  }\n\n  /**\n   * Remove a specified element from this YMap.\n   *\n   * @param {string} key The key of the element to remove.\n   */\n  delete (key) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, key);\n      });\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).delete(key);\n    }\n  }\n\n  /**\n   * Adds or updates an element with a specified key and value.\n   * @template {MapType} VAL\n   *\n   * @param {string} key The key of the element to add to this YMap\n   * @param {VAL} value The value of the element to add\n   * @return {VAL}\n   */\n  set (key, value) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, key, /** @type {any} */ (value));\n      });\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).set(key, value);\n    }\n    return value\n  }\n\n  /**\n   * Returns a specified element from this YMap.\n   *\n   * @param {string} key\n   * @return {MapType|undefined}\n   */\n  get (key) {\n    return /** @type {any} */ (typeMapGet(this, key))\n  }\n\n  /**\n   * Returns a boolean indicating whether the specified key exists or not.\n   *\n   * @param {string} key The key to test.\n   * @return {boolean}\n   */\n  has (key) {\n    return typeMapHas(this, key)\n  }\n\n  /**\n   * Removes all elements from this YMap.\n   */\n  clear () {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        this.forEach(function (_value, key, map) {\n          typeMapDelete(transaction, map, key);\n        });\n      });\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).clear();\n    }\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YMapRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n *\n * @private\n * @function\n */\nconst readYMap = _decoder => new YMap();\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nconst equalAttrs = (a, b) => a === b || (typeof a === 'object' && typeof b === 'object' && a && b && object.equalFlat(a, b));\n\nclass ItemTextListPosition {\n  /**\n   * @param {Item|null} left\n   * @param {Item|null} right\n   * @param {number} index\n   * @param {Map<string,any>} currentAttributes\n   */\n  constructor (left, right, index, currentAttributes) {\n    this.left = left;\n    this.right = right;\n    this.index = index;\n    this.currentAttributes = currentAttributes;\n  }\n\n  /**\n   * Only call this if you know that this.right is defined\n   */\n  forward () {\n    if (this.right === null) {\n      error.unexpectedCase();\n    }\n    switch (this.right.content.constructor) {\n      case ContentFormat:\n        if (!this.right.deleted) {\n          updateCurrentAttributes(this.currentAttributes, /** @type {ContentFormat} */ (this.right.content));\n        }\n        break\n      default:\n        if (!this.right.deleted) {\n          this.index += this.right.length;\n        }\n        break\n    }\n    this.left = this.right;\n    this.right = this.right.right;\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} pos\n * @param {number} count steps to move forward\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findNextPosition = (transaction, pos, count) => {\n  while (pos.right !== null && count > 0) {\n    switch (pos.right.content.constructor) {\n      case ContentFormat:\n        if (!pos.right.deleted) {\n          updateCurrentAttributes(pos.currentAttributes, /** @type {ContentFormat} */ (pos.right.content));\n        }\n        break\n      default:\n        if (!pos.right.deleted) {\n          if (count < pos.right.length) {\n            // split right\n            getItemCleanStart(transaction, createID(pos.right.id.client, pos.right.id.clock + count));\n          }\n          pos.index += pos.right.length;\n          count -= pos.right.length;\n        }\n        break\n    }\n    pos.left = pos.right;\n    pos.right = pos.right.right;\n    // pos.forward() - we don't forward because that would halve the performance because we already do the checks above\n  }\n  return pos\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findPosition = (transaction, parent, index) => {\n  const currentAttributes = new Map();\n  const marker = findMarker(parent, index);\n  if (marker) {\n    const pos = new ItemTextListPosition(marker.p.left, marker.p, marker.index, currentAttributes);\n    return findNextPosition(transaction, pos, index - marker.index)\n  } else {\n    const pos = new ItemTextListPosition(null, parent._start, 0, currentAttributes);\n    return findNextPosition(transaction, pos, index)\n  }\n};\n\n/**\n * Negate applied formats\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Map<string,any>} negatedAttributes\n *\n * @private\n * @function\n */\nconst insertNegatedAttributes = (transaction, parent, currPos, negatedAttributes) => {\n  // check if we really need to remove attributes\n  while (\n    currPos.right !== null && (\n      currPos.right.deleted === true || (\n        currPos.right.content.constructor === ContentFormat &&\n        equalAttrs(negatedAttributes.get(/** @type {ContentFormat} */ (currPos.right.content).key), /** @type {ContentFormat} */ (currPos.right.content).value)\n      )\n    )\n  ) {\n    if (!currPos.right.deleted) {\n      negatedAttributes.delete(/** @type {ContentFormat} */ (currPos.right.content).key);\n    }\n    currPos.forward();\n  }\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  negatedAttributes.forEach((val, key) => {\n    const left = currPos.left;\n    const right = currPos.right;\n    const nextFormat = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val));\n    nextFormat.integrate(transaction, 0);\n    currPos.right = nextFormat;\n    currPos.forward();\n  });\n};\n\n/**\n * @param {Map<string,any>} currentAttributes\n * @param {ContentFormat} format\n *\n * @private\n * @function\n */\nconst updateCurrentAttributes = (currentAttributes, format) => {\n  const { key, value } = format;\n  if (value === null) {\n    currentAttributes.delete(key);\n  } else {\n    currentAttributes.set(key, value);\n  }\n};\n\n/**\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst minimizeAttributeChanges = (currPos, attributes) => {\n  // go right while attributes[right.key] === right.value (or right is deleted)\n  while (true) {\n    if (currPos.right === null) {\n      break\n    } else if (currPos.right.deleted || (currPos.right.content.constructor === ContentFormat && equalAttrs(attributes[(/** @type {ContentFormat} */ (currPos.right.content)).key] || null, /** @type {ContentFormat} */ (currPos.right.content).value))) ; else {\n      break\n    }\n    currPos.forward();\n  }\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n * @return {Map<string,any>}\n *\n * @private\n * @function\n **/\nconst insertAttributes = (transaction, parent, currPos, attributes) => {\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  const negatedAttributes = new Map();\n  // insert format-start items\n  for (const key in attributes) {\n    const val = attributes[key];\n    const currentVal = currPos.currentAttributes.get(key) || null;\n    if (!equalAttrs(currentVal, val)) {\n      // save negated attribute (set null if currentVal undefined)\n      negatedAttributes.set(key, currentVal);\n      const { left, right } = currPos;\n      currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val));\n      currPos.right.integrate(transaction, 0);\n      currPos.forward();\n    }\n  }\n  return negatedAttributes\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {string|object|AbstractType<any>} text\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n **/\nconst insertText = (transaction, parent, currPos, text, attributes) => {\n  currPos.currentAttributes.forEach((_val, key) => {\n    if (attributes[key] === undefined) {\n      attributes[key] = null;\n    }\n  });\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  minimizeAttributeChanges(currPos, attributes);\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes);\n  // insert content\n  const content = text.constructor === String ? new ContentString(/** @type {string} */ (text)) : (text instanceof AbstractType ? new ContentType(text) : new ContentEmbed(text));\n  let { left, right, index } = currPos;\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, content.getLength());\n  }\n  right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, content);\n  right.integrate(transaction, 0);\n  currPos.right = right;\n  currPos.index = index;\n  currPos.forward();\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes);\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst formatText = (transaction, parent, currPos, length, attributes) => {\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  minimizeAttributeChanges(currPos, attributes);\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes);\n  // iterate until first non-format or null is found\n  // delete all formats with attributes[format.key] != null\n  // also check the attributes after the first non-format as we do not want to insert redundant negated attributes there\n  // eslint-disable-next-line no-labels\n  iterationLoop: while (\n    currPos.right !== null &&\n    (length > 0 ||\n      (\n        negatedAttributes.size > 0 &&\n        (currPos.right.deleted || currPos.right.content.constructor === ContentFormat)\n      )\n    )\n  ) {\n    if (!currPos.right.deleted) {\n      switch (currPos.right.content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (currPos.right.content);\n          const attr = attributes[key];\n          if (attr !== undefined) {\n            if (equalAttrs(attr, value)) {\n              negatedAttributes.delete(key);\n            } else {\n              if (length === 0) {\n                // no need to further extend negatedAttributes\n                // eslint-disable-next-line no-labels\n                break iterationLoop\n              }\n              negatedAttributes.set(key, value);\n            }\n            currPos.right.delete(transaction);\n          } else {\n            currPos.currentAttributes.set(key, value);\n          }\n          break\n        }\n        default:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length));\n          }\n          length -= currPos.right.length;\n          break\n      }\n    }\n    currPos.forward();\n  }\n  // Quill just assumes that the editor starts with a newline and that it always\n  // ends with a newline. We only insert that newline when a new newline is\n  // inserted - i.e when length is bigger than type.length\n  if (length > 0) {\n    let newlines = '';\n    for (; length > 0; length--) {\n      newlines += '\\n';\n    }\n    currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), currPos.left, currPos.left && currPos.left.lastId, currPos.right, currPos.right && currPos.right.id, parent, null, new ContentString(newlines));\n    currPos.right.integrate(transaction, 0);\n    currPos.forward();\n  }\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes);\n};\n\n/**\n * Call this function after string content has been deleted in order to\n * clean up formatting Items.\n *\n * @param {Transaction} transaction\n * @param {Item} start\n * @param {Item|null} curr exclusive end, automatically iterates to the next Content Item\n * @param {Map<string,any>} startAttributes\n * @param {Map<string,any>} currAttributes\n * @return {number} The amount of formatting Items deleted.\n *\n * @function\n */\nconst cleanupFormattingGap = (transaction, start, curr, startAttributes, currAttributes) => {\n  /**\n   * @type {Item|null}\n   */\n  let end = start;\n  /**\n   * @type {Map<string,ContentFormat>}\n   */\n  const endFormats = map.create();\n  while (end && (!end.countable || end.deleted)) {\n    if (!end.deleted && end.content.constructor === ContentFormat) {\n      const cf = /** @type {ContentFormat} */ (end.content);\n      endFormats.set(cf.key, cf);\n    }\n    end = end.right;\n  }\n  let cleanups = 0;\n  let reachedCurr = false;\n  while (start !== end) {\n    if (curr === start) {\n      reachedCurr = true;\n    }\n    if (!start.deleted) {\n      const content = start.content;\n      switch (content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (content);\n          const startAttrValue = startAttributes.get(key) || null;\n          if (endFormats.get(key) !== content || startAttrValue === value) {\n            // Either this format is overwritten or it is not necessary because the attribute already existed.\n            start.delete(transaction);\n            cleanups++;\n            if (!reachedCurr && (currAttributes.get(key) || null) === value && startAttrValue !== value) {\n              if (startAttrValue === null) {\n                currAttributes.delete(key);\n              } else {\n                currAttributes.set(key, startAttrValue);\n              }\n            }\n          }\n          if (!reachedCurr && !start.deleted) {\n            updateCurrentAttributes(currAttributes, /** @type {ContentFormat} */ (content));\n          }\n          break\n        }\n      }\n    }\n    start = /** @type {Item} */ (start.right);\n  }\n  return cleanups\n};\n\n/**\n * @param {Transaction} transaction\n * @param {Item | null} item\n */\nconst cleanupContextlessFormattingGap = (transaction, item) => {\n  // iterate until item.right is null or content\n  while (item && item.right && (item.right.deleted || !item.right.countable)) {\n    item = item.right;\n  }\n  const attrs = new Set();\n  // iterate back until a content item is found\n  while (item && (item.deleted || !item.countable)) {\n    if (!item.deleted && item.content.constructor === ContentFormat) {\n      const key = /** @type {ContentFormat} */ (item.content).key;\n      if (attrs.has(key)) {\n        item.delete(transaction);\n      } else {\n        attrs.add(key);\n      }\n    }\n    item = item.left;\n  }\n};\n\n/**\n * This function is experimental and subject to change / be removed.\n *\n * Ideally, we don't need this function at all. Formatting attributes should be cleaned up\n * automatically after each change. This function iterates twice over the complete YText type\n * and removes unnecessary formatting attributes. This is also helpful for testing.\n *\n * This function won't be exported anymore as soon as there is confidence that the YText type works as intended.\n *\n * @param {YText} type\n * @return {number} How many formatting attributes have been cleaned up.\n */\nconst cleanupYTextFormatting = type => {\n  let res = 0;\n  transact(/** @type {Doc} */ (type.doc), transaction => {\n    let start = /** @type {Item} */ (type._start);\n    let end = type._start;\n    let startAttributes = map.create();\n    const currentAttributes = map.copy(startAttributes);\n    while (end) {\n      if (end.deleted === false) {\n        switch (end.content.constructor) {\n          case ContentFormat:\n            updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (end.content));\n            break\n          default:\n            res += cleanupFormattingGap(transaction, start, end, startAttributes, currentAttributes);\n            startAttributes = map.copy(currentAttributes);\n            start = end;\n            break\n        }\n      }\n      end = end.right;\n    }\n  });\n  return res\n};\n\n/**\n * This will be called by the transction once the event handlers are called to potentially cleanup\n * formatting attributes.\n *\n * @param {Transaction} transaction\n */\nconst cleanupYTextAfterTransaction = transaction => {\n  /**\n   * @type {Set<YText>}\n   */\n  const needFullCleanup = new Set();\n  // check if another formatting item was inserted\n  const doc = transaction.doc;\n  for (const [client, afterClock] of transaction.afterState.entries()) {\n    const clock = transaction.beforeState.get(client) || 0;\n    if (afterClock === clock) {\n      continue\n    }\n    iterateStructs(transaction, /** @type {Array<Item|GC>} */ (doc.store.clients.get(client)), clock, afterClock, item => {\n      if (\n        !item.deleted && /** @type {Item} */ (item).content.constructor === ContentFormat && item.constructor !== GC\n      ) {\n        needFullCleanup.add(/** @type {any} */ (item).parent);\n      }\n    });\n  }\n  // cleanup in a new transaction\n  transact(doc, (t) => {\n    iterateDeletedStructs(transaction, transaction.deleteSet, item => {\n      if (item instanceof GC || !(/** @type {YText} */ (item.parent)._hasFormatting) || needFullCleanup.has(/** @type {YText} */ (item.parent))) {\n        return\n      }\n      const parent = /** @type {YText} */ (item.parent);\n      if (item.content.constructor === ContentFormat) {\n        needFullCleanup.add(parent);\n      } else {\n        // If no formatting attribute was inserted or deleted, we can make due with contextless\n        // formatting cleanups.\n        // Contextless: it is not necessary to compute currentAttributes for the affected position.\n        cleanupContextlessFormattingGap(t, item);\n      }\n    });\n    // If a formatting item was inserted, we simply clean the whole type.\n    // We need to compute currentAttributes for the current position anyway.\n    for (const yText of needFullCleanup) {\n      cleanupYTextFormatting(yText);\n    }\n  });\n};\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst deleteText = (transaction, currPos, length) => {\n  const startLength = length;\n  const startAttrs = map.copy(currPos.currentAttributes);\n  const start = currPos.right;\n  while (length > 0 && currPos.right !== null) {\n    if (currPos.right.deleted === false) {\n      switch (currPos.right.content.constructor) {\n        case ContentType:\n        case ContentEmbed:\n        case ContentString:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length));\n          }\n          length -= currPos.right.length;\n          currPos.right.delete(transaction);\n          break\n      }\n    }\n    currPos.forward();\n  }\n  if (start) {\n    cleanupFormattingGap(transaction, start, currPos.right, startAttrs, currPos.currentAttributes);\n  }\n  const parent = /** @type {AbstractType<any>} */ (/** @type {Item} */ (currPos.left || currPos.right).parent);\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, -startLength + length);\n  }\n  return currPos\n};\n\n/**\n * The Quill Delta format represents changes on a text document with\n * formatting information. For mor information visit {@link https://quilljs.com/docs/delta/|Quill Delta}\n *\n * @example\n *   {\n *     ops: [\n *       { insert: 'Gandalf', attributes: { bold: true } },\n *       { insert: ' the ' },\n *       { insert: 'Grey', attributes: { color: '#cccccc' } }\n *     ]\n *   }\n *\n */\n\n/**\n  * Attributes that can be assigned to a selection of text.\n  *\n  * @example\n  *   {\n  *     bold: true,\n  *     font-size: '40px'\n  *   }\n  *\n  * @typedef {Object} TextAttributes\n  */\n\n/**\n * @extends YEvent<YText>\n * Event that describes the changes on a YText type.\n */\nclass YTextEvent extends YEvent {\n  /**\n   * @param {YText} ytext\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed\n   */\n  constructor (ytext, transaction, subs) {\n    super(ytext, transaction);\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false;\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.keysChanged = new Set();\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true;\n      } else {\n        this.keysChanged.add(sub);\n      }\n    });\n  }\n\n  /**\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    if (this._changes === null) {\n      /**\n       * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string|AbstractType<any>|object, delete?:number, retain?:number}>}}\n       */\n      const changes = {\n        keys: this.keys,\n        delta: this.delta,\n        added: new Set(),\n        deleted: new Set()\n      };\n      this._changes = changes;\n    }\n    return /** @type {any} */ (this._changes)\n  }\n\n  /**\n   * Compute the changes in the delta format.\n   * A {@link https://quilljs.com/docs/delta/|Quill Delta}) that represents the changes on the document.\n   *\n   * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n   *\n   * @public\n   */\n  get delta () {\n    if (this._delta === null) {\n      const y = /** @type {Doc} */ (this.target.doc);\n      /**\n       * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n       */\n      const delta = [];\n      transact(y, transaction => {\n        const currentAttributes = new Map(); // saves all current attributes for insert\n        const oldAttributes = new Map();\n        let item = this.target._start;\n        /**\n         * @type {string?}\n         */\n        let action = null;\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {}; // counts added or removed new attributes for retain\n        /**\n         * @type {string|object}\n         */\n        let insert = '';\n        let retain = 0;\n        let deleteLen = 0;\n        const addOp = () => {\n          if (action !== null) {\n            /**\n             * @type {any}\n             */\n            let op = null;\n            switch (action) {\n              case 'delete':\n                if (deleteLen > 0) {\n                  op = { delete: deleteLen };\n                }\n                deleteLen = 0;\n                break\n              case 'insert':\n                if (typeof insert === 'object' || insert.length > 0) {\n                  op = { insert };\n                  if (currentAttributes.size > 0) {\n                    op.attributes = {};\n                    currentAttributes.forEach((value, key) => {\n                      if (value !== null) {\n                        op.attributes[key] = value;\n                      }\n                    });\n                  }\n                }\n                insert = '';\n                break\n              case 'retain':\n                if (retain > 0) {\n                  op = { retain };\n                  if (!object.isEmpty(attributes)) {\n                    op.attributes = object.assign({}, attributes);\n                  }\n                }\n                retain = 0;\n                break\n            }\n            if (op) delta.push(op);\n            action = null;\n          }\n        };\n        while (item !== null) {\n          switch (item.content.constructor) {\n            case ContentType:\n            case ContentEmbed:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  addOp();\n                  action = 'insert';\n                  insert = item.content.getContent()[0];\n                  addOp();\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp();\n                  action = 'delete';\n                }\n                deleteLen += 1;\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp();\n                  action = 'retain';\n                }\n                retain += 1;\n              }\n              break\n            case ContentString:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  if (action !== 'insert') {\n                    addOp();\n                    action = 'insert';\n                  }\n                  insert += /** @type {ContentString} */ (item.content).str;\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp();\n                  action = 'delete';\n                }\n                deleteLen += item.length;\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp();\n                  action = 'retain';\n                }\n                retain += item.length;\n              }\n              break\n            case ContentFormat: {\n              const { key, value } = /** @type {ContentFormat} */ (item.content);\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  const curVal = currentAttributes.get(key) || null;\n                  if (!equalAttrs(curVal, value)) {\n                    if (action === 'retain') {\n                      addOp();\n                    }\n                    if (equalAttrs(value, (oldAttributes.get(key) || null))) {\n                      delete attributes[key];\n                    } else {\n                      attributes[key] = value;\n                    }\n                  } else if (value !== null) {\n                    item.delete(transaction);\n                  }\n                }\n              } else if (this.deletes(item)) {\n                oldAttributes.set(key, value);\n                const curVal = currentAttributes.get(key) || null;\n                if (!equalAttrs(curVal, value)) {\n                  if (action === 'retain') {\n                    addOp();\n                  }\n                  attributes[key] = curVal;\n                }\n              } else if (!item.deleted) {\n                oldAttributes.set(key, value);\n                const attr = attributes[key];\n                if (attr !== undefined) {\n                  if (!equalAttrs(attr, value)) {\n                    if (action === 'retain') {\n                      addOp();\n                    }\n                    if (value === null) {\n                      delete attributes[key];\n                    } else {\n                      attributes[key] = value;\n                    }\n                  } else if (attr !== null) { // this will be cleaned up automatically by the contextless cleanup function\n                    item.delete(transaction);\n                  }\n                }\n              }\n              if (!item.deleted) {\n                if (action === 'insert') {\n                  addOp();\n                }\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (item.content));\n              }\n              break\n            }\n          }\n          item = item.right;\n        }\n        addOp();\n        while (delta.length > 0) {\n          const lastOp = delta[delta.length - 1];\n          if (lastOp.retain !== undefined && lastOp.attributes === undefined) {\n            // retain delta's if they don't assign attributes\n            delta.pop();\n          } else {\n            break\n          }\n        }\n      });\n      this._delta = delta;\n    }\n    return /** @type {any} */ (this._delta)\n  }\n}\n\n/**\n * Type that represents text with formatting information.\n *\n * This type replaces y-richtext as this implementation is able to handle\n * block formats (format information on a paragraph), embeds (complex elements\n * like pictures and videos), and text formats (**bold**, *italic*).\n *\n * @extends AbstractType<YTextEvent>\n */\nclass YText extends AbstractType {\n  /**\n   * @param {String} [string] The initial value of the YText.\n   */\n  constructor (string) {\n    super();\n    /**\n     * Array of pending operations on this type\n     * @type {Array<function():void>?}\n     */\n    this._pending = string !== undefined ? [() => this.insert(0, string)] : [];\n    /**\n     * @type {Array<ArraySearchMarker>|null}\n     */\n    this._searchMarker = [];\n    /**\n     * Whether this YText contains formatting attributes.\n     * This flag is updated when a formatting item is integrated (see ContentFormat.integrate)\n     */\n    this._hasFormatting = false;\n  }\n\n  /**\n   * Number of characters of this text type.\n   *\n   * @type {number}\n   */\n  get length () {\n    return this._length\n  }\n\n  /**\n   * @param {Doc} y\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item);\n    try {\n      /** @type {Array<function>} */ (this._pending).forEach(f => f());\n    } catch (e) {\n      console.error(e);\n    }\n    this._pending = null;\n  }\n\n  _copy () {\n    return new YText()\n  }\n\n  /**\n   * @return {YText}\n   */\n  clone () {\n    const text = new YText();\n    text.applyDelta(this.toDelta());\n    return text\n  }\n\n  /**\n   * Creates YTextEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs);\n    const event = new YTextEvent(this, transaction, parentSubs);\n    callTypeObservers(this, transaction, event);\n    // If a remote change happened, we try to cleanup potential formatting duplicates.\n    if (!transaction.local && this._hasFormatting) {\n      transaction._needFormattingCleanup = true;\n    }\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @public\n   */\n  toString () {\n    let str = '';\n    /**\n     * @type {Item|null}\n     */\n    let n = this._start;\n    while (n !== null) {\n      if (!n.deleted && n.countable && n.content.constructor === ContentString) {\n        str += /** @type {ContentString} */ (n.content).str;\n      }\n      n = n.right;\n    }\n    return str\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @return {string}\n   * @public\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Apply a {@link Delta} on this shared YText type.\n   *\n   * @param {any} delta The changes to apply on this element.\n   * @param {object}  opts\n   * @param {boolean} [opts.sanitize] Sanitize input delta. Removes ending newlines if set to true.\n   *\n   *\n   * @public\n   */\n  applyDelta (delta, { sanitize = true } = {}) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const currPos = new ItemTextListPosition(null, this._start, 0, new Map());\n        for (let i = 0; i < delta.length; i++) {\n          const op = delta[i];\n          if (op.insert !== undefined) {\n            // Quill assumes that the content starts with an empty paragraph.\n            // Yjs/Y.Text assumes that it starts empty. We always hide that\n            // there is a newline at the end of the content.\n            // If we omit this step, clients will see a different number of\n            // paragraphs, but nothing bad will happen.\n            const ins = (!sanitize && typeof op.insert === 'string' && i === delta.length - 1 && currPos.right === null && op.insert.slice(-1) === '\\n') ? op.insert.slice(0, -1) : op.insert;\n            if (typeof ins !== 'string' || ins.length > 0) {\n              insertText(transaction, this, currPos, ins, op.attributes || {});\n            }\n          } else if (op.retain !== undefined) {\n            formatText(transaction, this, currPos, op.retain, op.attributes || {});\n          } else if (op.delete !== undefined) {\n            deleteText(transaction, currPos, op.delete);\n          }\n        }\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.applyDelta(delta));\n    }\n  }\n\n  /**\n   * Returns the Delta representation of this YText type.\n   *\n   * @param {Snapshot} [snapshot]\n   * @param {Snapshot} [prevSnapshot]\n   * @param {function('removed' | 'added', ID):any} [computeYChange]\n   * @return {any} The Delta representation of this type.\n   *\n   * @public\n   */\n  toDelta (snapshot, prevSnapshot, computeYChange) {\n    /**\n     * @type{Array<any>}\n     */\n    const ops = [];\n    const currentAttributes = new Map();\n    const doc = /** @type {Doc} */ (this.doc);\n    let str = '';\n    let n = this._start;\n    function packStr () {\n      if (str.length > 0) {\n        // pack str with attributes to ops\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {};\n        let addAttributes = false;\n        currentAttributes.forEach((value, key) => {\n          addAttributes = true;\n          attributes[key] = value;\n        });\n        /**\n         * @type {Object<string,any>}\n         */\n        const op = { insert: str };\n        if (addAttributes) {\n          op.attributes = attributes;\n        }\n        ops.push(op);\n        str = '';\n      }\n    }\n    const computeDelta = () => {\n      while (n !== null) {\n        if (isVisible(n, snapshot) || (prevSnapshot !== undefined && isVisible(n, prevSnapshot))) {\n          switch (n.content.constructor) {\n            case ContentString: {\n              const cur = currentAttributes.get('ychange');\n              if (snapshot !== undefined && !isVisible(n, snapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.type !== 'removed') {\n                  packStr();\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('removed', n.id) : { type: 'removed' });\n                }\n              } else if (prevSnapshot !== undefined && !isVisible(n, prevSnapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.type !== 'added') {\n                  packStr();\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('added', n.id) : { type: 'added' });\n                }\n              } else if (cur !== undefined) {\n                packStr();\n                currentAttributes.delete('ychange');\n              }\n              str += /** @type {ContentString} */ (n.content).str;\n              break\n            }\n            case ContentType:\n            case ContentEmbed: {\n              packStr();\n              /**\n               * @type {Object<string,any>}\n               */\n              const op = {\n                insert: n.content.getContent()[0]\n              };\n              if (currentAttributes.size > 0) {\n                const attrs = /** @type {Object<string,any>} */ ({});\n                op.attributes = attrs;\n                currentAttributes.forEach((value, key) => {\n                  attrs[key] = value;\n                });\n              }\n              ops.push(op);\n              break\n            }\n            case ContentFormat:\n              if (isVisible(n, snapshot)) {\n                packStr();\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (n.content));\n              }\n              break\n          }\n        }\n        n = n.right;\n      }\n      packStr();\n    };\n    if (snapshot || prevSnapshot) {\n      // snapshots are merged again after the transaction, so we need to keep the\n      // transaction alive until we are done\n      transact(doc, transaction => {\n        if (snapshot) {\n          splitSnapshotAffectedStructs(transaction, snapshot);\n        }\n        if (prevSnapshot) {\n          splitSnapshotAffectedStructs(transaction, prevSnapshot);\n        }\n        computeDelta();\n      }, 'cleanup');\n    } else {\n      computeDelta();\n    }\n    return ops\n  }\n\n  /**\n   * Insert text at a given index.\n   *\n   * @param {number} index The index at which to start inserting.\n   * @param {String} text The text to insert at the specified position.\n   * @param {TextAttributes} [attributes] Optionally define some formatting\n   *                                    information to apply on the inserted\n   *                                    Text.\n   * @public\n   */\n  insert (index, text, attributes) {\n    if (text.length <= 0) {\n      return\n    }\n    const y = this.doc;\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index);\n        if (!attributes) {\n          attributes = {};\n          // @ts-ignore\n          pos.currentAttributes.forEach((v, k) => { attributes[k] = v; });\n        }\n        insertText(transaction, this, pos, text, attributes);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insert(index, text, attributes));\n    }\n  }\n\n  /**\n   * Inserts an embed at a index.\n   *\n   * @param {number} index The index to insert the embed at.\n   * @param {Object | AbstractType<any>} embed The Object that represents the embed.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    embed\n   *\n   * @public\n   */\n  insertEmbed (index, embed, attributes = {}) {\n    const y = this.doc;\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index);\n        insertText(transaction, this, pos, embed, attributes);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insertEmbed(index, embed, attributes));\n    }\n  }\n\n  /**\n   * Deletes text starting from an index.\n   *\n   * @param {number} index Index at which to start deleting.\n   * @param {number} length The number of characters to remove. Defaults to 1.\n   *\n   * @public\n   */\n  delete (index, length) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc;\n    if (y !== null) {\n      transact(y, transaction => {\n        deleteText(transaction, findPosition(transaction, this, index), length);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.delete(index, length));\n    }\n  }\n\n  /**\n   * Assigns properties to a range of text.\n   *\n   * @param {number} index The position where to start formatting.\n   * @param {number} length The amount of characters to assign properties to.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    text.\n   *\n   * @public\n   */\n  format (index, length, attributes) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc;\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index);\n        if (pos.right === null) {\n          return\n        }\n        formatText(transaction, this, pos, length, attributes);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.format(index, length, attributes));\n    }\n  }\n\n  /**\n   * Removes an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.removeAttribute(attributeName));\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be set.\n   * @param {any} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.setAttribute(attributeName, attributeValue));\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {any} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @return {Object<string, any>} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes () {\n    return typeMapGetAll(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YTextRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n * @return {YText}\n *\n * @private\n * @function\n */\nconst readYText = _decoder => new YText();\n\n/**\n * @module YXml\n */\n\n/**\n * Define the elements to which a set of CSS queries apply.\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors|CSS_Selectors}\n *\n * @example\n *   query = '.classSelector'\n *   query = 'nodeSelector'\n *   query = '#idSelector'\n *\n * @typedef {string} CSS_Selector\n */\n\n/**\n * Dom filter function.\n *\n * @callback domFilter\n * @param {string} nodeName The nodeName of the element\n * @param {Map} attributes The map of attributes.\n * @return {boolean} Whether to include the Dom node in the YXmlElement.\n */\n\n/**\n * Represents a subset of the nodes of a YXmlElement / YXmlFragment and a\n * position within them.\n *\n * Can be created with {@link YXmlFragment#createTreeWalker}\n *\n * @public\n * @implements {Iterable<YXmlElement|YXmlText|YXmlElement|YXmlHook>}\n */\nclass YXmlTreeWalker {\n  /**\n   * @param {YXmlFragment | YXmlElement} root\n   * @param {function(AbstractType<any>):boolean} [f]\n   */\n  constructor (root, f = () => true) {\n    this._filter = f;\n    this._root = root;\n    /**\n     * @type {Item}\n     */\n    this._currentNode = /** @type {Item} */ (root._start);\n    this._firstCall = true;\n  }\n\n  [Symbol.iterator] () {\n    return this\n  }\n\n  /**\n   * Get the next node.\n   *\n   * @return {IteratorResult<YXmlElement|YXmlText|YXmlHook>} The next node.\n   *\n   * @public\n   */\n  next () {\n    /**\n     * @type {Item|null}\n     */\n    let n = this._currentNode;\n    let type = n && n.content && /** @type {any} */ (n.content).type;\n    if (n !== null && (!this._firstCall || n.deleted || !this._filter(type))) { // if first call, we check if we can use the first item\n      do {\n        type = /** @type {any} */ (n.content).type;\n        if (!n.deleted && (type.constructor === YXmlElement || type.constructor === YXmlFragment) && type._start !== null) {\n          // walk down in the tree\n          n = type._start;\n        } else {\n          // walk right or up in the tree\n          while (n !== null) {\n            if (n.right !== null) {\n              n = n.right;\n              break\n            } else if (n.parent === this._root) {\n              n = null;\n            } else {\n              n = /** @type {AbstractType<any>} */ (n.parent)._item;\n            }\n          }\n        }\n      } while (n !== null && (n.deleted || !this._filter(/** @type {ContentType} */ (n.content).type)))\n    }\n    this._firstCall = false;\n    if (n === null) {\n      // @ts-ignore\n      return { value: undefined, done: true }\n    }\n    this._currentNode = n;\n    return { value: /** @type {any} */ (n.content).type, done: false }\n  }\n}\n\n/**\n * Represents a list of {@link YXmlElement}.and {@link YXmlText} types.\n * A YxmlFragment is similar to a {@link YXmlElement}, but it does not have a\n * nodeName and it does not have attributes. Though it can be bound to a DOM\n * element - in this case the attributes and the nodeName are not shared.\n *\n * @public\n * @extends AbstractType<YXmlEvent>\n */\nclass YXmlFragment extends AbstractType {\n  constructor () {\n    super();\n    /**\n     * @type {Array<any>|null}\n     */\n    this._prelimContent = [];\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get firstChild () {\n    const first = this._first;\n    return first ? first.content.getContent()[0] : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item);\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent));\n    this._prelimContent = null;\n  }\n\n  _copy () {\n    return new YXmlFragment()\n  }\n\n  /**\n   * @return {YXmlFragment}\n   */\n  clone () {\n    const el = new YXmlFragment();\n    // @ts-ignore\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item));\n    return el\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Create a subtree of childNodes.\n   *\n   * @example\n   * const walker = elem.createTreeWalker(dom => dom.nodeName === 'div')\n   * for (let node in walker) {\n   *   // `node` is a div node\n   *   nop(node)\n   * }\n   *\n   * @param {function(AbstractType<any>):boolean} filter Function that is called on each child element and\n   *                          returns a Boolean indicating whether the child\n   *                          is to be included in the subtree.\n   * @return {YXmlTreeWalker} A subtree and a position within it.\n   *\n   * @public\n   */\n  createTreeWalker (filter) {\n    return new YXmlTreeWalker(this, filter)\n  }\n\n  /**\n   * Returns the first YXmlElement that matches the query.\n   * Similar to DOM's {@link querySelector}.\n   *\n   * Query support:\n   *   - tagname\n   * TODO:\n   *   - id\n   *   - attribute\n   *\n   * @param {CSS_Selector} query The query on the children.\n   * @return {YXmlElement|YXmlText|YXmlHook|null} The first element that matches the query or null.\n   *\n   * @public\n   */\n  querySelector (query) {\n    query = query.toUpperCase();\n    // @ts-ignore\n    const iterator = new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query);\n    const next = iterator.next();\n    if (next.done) {\n      return null\n    } else {\n      return next.value\n    }\n  }\n\n  /**\n   * Returns all YXmlElements that match the query.\n   * Similar to Dom's {@link querySelectorAll}.\n   *\n   * @todo Does not yet support all queries. Currently only query by tagName.\n   *\n   * @param {CSS_Selector} query The query on the children\n   * @return {Array<YXmlElement|YXmlText|YXmlHook|null>} The elements that match this query.\n   *\n   * @public\n   */\n  querySelectorAll (query) {\n    query = query.toUpperCase();\n    // @ts-ignore\n    return array.from(new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query))\n  }\n\n  /**\n   * Creates YXmlEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YXmlEvent(this, parentSubs, transaction));\n  }\n\n  /**\n   * Get the string representation of all the children of this YXmlFragment.\n   *\n   * @return {string} The string representation of all children.\n   */\n  toString () {\n    return typeListMap(this, xml => xml.toString()).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const fragment = _document.createDocumentFragment();\n    if (binding !== undefined) {\n      binding._createAssociation(fragment, this);\n    }\n    typeListForEach(this, xmlType => {\n      fragment.insertBefore(xmlType.toDOM(_document, hooks, binding), null);\n    });\n    return fragment\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {number} index The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, content);\n      });\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, 0, ...content);\n    }\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {null|Item|YXmlElement|YXmlText} ref The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insertAfter (ref, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const refItem = (ref && ref instanceof AbstractType) ? ref._item : ref;\n        typeListInsertGenericsAfter(transaction, this, refItem, content);\n      });\n    } else {\n      const pc = /** @type {Array<any>} */ (this._prelimContent);\n      const index = ref === null ? 0 : pc.findIndex(el => el === ref) + 1;\n      if (index === 0 && ref !== null) {\n        throw error.create('Reference item not found')\n      }\n      pc.splice(index, 0, ...content);\n    }\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} [length=1] The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length);\n      });\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, length);\n    }\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<YXmlElement|YXmlText|YXmlHook>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to append.\n   */\n  push (content) {\n    this.insert(this.length, content);\n  }\n\n  /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to preppend.\n   */\n  unshift (content) {\n    this.insert(0, content);\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {YXmlElement|YXmlText}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<YXmlElement|YXmlText>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Executes a provided function on once on overy child element.\n   *\n   * @param {function(YXmlElement|YXmlText,number, typeof self):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f);\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlFragmentRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n * @return {YXmlFragment}\n *\n * @private\n * @function\n */\nconst readYXmlFragment = _decoder => new YXmlFragment();\n\n/**\n * @typedef {Object|number|null|Array<any>|string|Uint8Array|AbstractType<any>} ValueTypes\n */\n\n/**\n * An YXmlElement imitates the behavior of a\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}.\n *\n * * An YXmlElement has attributes (key value pairs)\n * * An YXmlElement has childElements that must inherit from YXmlElement\n *\n * @template {{ [key: string]: ValueTypes }} [KV={ [key: string]: string }]\n */\nclass YXmlElement extends YXmlFragment {\n  constructor (nodeName = 'UNDEFINED') {\n    super();\n    this.nodeName = nodeName;\n    /**\n     * @type {Map<string, any>|null}\n     */\n    this._prelimAttrs = new Map();\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null;\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null;\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;(/** @type {Map<string, any>} */ (this._prelimAttrs)).forEach((value, key) => {\n      this.setAttribute(key, value);\n    });\n    this._prelimAttrs = null;\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   *\n   * @return {YXmlElement}\n   */\n  _copy () {\n    return new YXmlElement(this.nodeName)\n  }\n\n  /**\n   * @return {YXmlElement<KV>}\n   */\n  clone () {\n    /**\n     * @type {YXmlElement<KV>}\n     */\n    const el = new YXmlElement(this.nodeName);\n    const attrs = this.getAttributes();\n    object.forEach(attrs, (value, key) => {\n      if (typeof value === 'string') {\n        el.setAttribute(key, value);\n      }\n    });\n    // @ts-ignore\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item));\n    return el\n  }\n\n  /**\n   * Returns the XML serialization of this YXmlElement.\n   * The attributes are ordered by attribute-name, so you can easily use this\n   * method to compare YXmlElements\n   *\n   * @return {string} The string representation of this type.\n   *\n   * @public\n   */\n  toString () {\n    const attrs = this.getAttributes();\n    const stringBuilder = [];\n    const keys = [];\n    for (const key in attrs) {\n      keys.push(key);\n    }\n    keys.sort();\n    const keysLen = keys.length;\n    for (let i = 0; i < keysLen; i++) {\n      const key = keys[i];\n      stringBuilder.push(key + '=\"' + attrs[key] + '\"');\n    }\n    const nodeName = this.nodeName.toLocaleLowerCase();\n    const attrsString = stringBuilder.length > 0 ? ' ' + stringBuilder.join(' ') : '';\n    return `<${nodeName}${attrsString}>${super.toString()}</${nodeName}>`\n  }\n\n  /**\n   * Removes an attribute from this YXmlElement.\n   *\n   * @param {string} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName);\n      });\n    } else {\n      /** @type {Map<string,any>} */ (this._prelimAttrs).delete(attributeName);\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @template {keyof KV & string} KEY\n   *\n   * @param {KEY} attributeName The attribute name that is to be set.\n   * @param {KV[KEY]} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue);\n      });\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimAttrs).set(attributeName, attributeValue);\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @template {keyof KV & string} KEY\n   *\n   * @param {KEY} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {KV[KEY]|undefined} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns whether an attribute exists\n   *\n   * @param {string} attributeName The attribute name to check for existence.\n   * @return {boolean} whether the attribute exists.\n   *\n   * @public\n   */\n  hasAttribute (attributeName) {\n    return /** @type {any} */ (typeMapHas(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @param {Snapshot} [snapshot]\n   * @return {{ [Key in Extract<keyof KV,string>]?: KV[Key]}} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes (snapshot) {\n    return /** @type {any} */ (snapshot ? typeMapGetAllSnapshot(this, snapshot) : typeMapGetAll(this))\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const dom = _document.createElement(this.nodeName);\n    const attrs = this.getAttributes();\n    for (const key in attrs) {\n      const value = attrs[key];\n      if (typeof value === 'string') {\n        dom.setAttribute(key, value);\n      }\n    }\n    typeListForEach(this, yxml => {\n      dom.appendChild(yxml.toDOM(_document, hooks, binding));\n    });\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this);\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlElementRefID);\n    encoder.writeKey(this.nodeName);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlElement}\n *\n * @function\n */\nconst readYXmlElement = decoder => new YXmlElement(decoder.readKey());\n\n/**\n * @extends YEvent<YXmlElement|YXmlText|YXmlFragment>\n * An Event that describes changes on a YXml Element or Yxml Fragment\n */\nclass YXmlEvent extends YEvent {\n  /**\n   * @param {YXmlElement|YXmlText|YXmlFragment} target The target on which the event is created.\n   * @param {Set<string|null>} subs The set of changed attributes. `null` is included if the\n   *                   child list changed.\n   * @param {Transaction} transaction The transaction instance with wich the\n   *                                  change was created.\n   */\n  constructor (target, subs, transaction) {\n    super(target, transaction);\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false;\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.attributesChanged = new Set();\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true;\n      } else {\n        this.attributesChanged.add(sub);\n      }\n    });\n  }\n}\n\n/**\n * You can manage binding to a custom type with YXmlHook.\n *\n * @extends {YMap<any>}\n */\nclass YXmlHook extends YMap {\n  /**\n   * @param {string} hookName nodeName of the Dom Node.\n   */\n  constructor (hookName) {\n    super();\n    /**\n     * @type {string}\n     */\n    this.hookName = hookName;\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   */\n  _copy () {\n    return new YXmlHook(this.hookName)\n  }\n\n  /**\n   * @return {YXmlHook}\n   */\n  clone () {\n    const el = new YXmlHook(this.hookName);\n    this.forEach((value, key) => {\n      el.set(key, value);\n    });\n    return el\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object.<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type\n   * @return {Element} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const hook = hooks[this.hookName];\n    let dom;\n    if (hook !== undefined) {\n      dom = hook.createDom(this);\n    } else {\n      dom = document.createElement(this.hookName);\n    }\n    dom.setAttribute('data-yjs-hook', this.hookName);\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this);\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlHookRefID);\n    encoder.writeKey(this.hookName);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlHook}\n *\n * @private\n * @function\n */\nconst readYXmlHook = decoder =>\n  new YXmlHook(decoder.readKey());\n\n/**\n * Represents text in a Dom Element. In the future this type will also handle\n * simple formatting information like bold and italic.\n */\nclass YXmlText extends YText {\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null;\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null;\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  _copy () {\n    return new YXmlText()\n  }\n\n  /**\n   * @return {YXmlText}\n   */\n  clone () {\n    const text = new YXmlText();\n    text.applyDelta(this.toDelta());\n    return text\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlText.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Text} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks, binding) {\n    const dom = _document.createTextNode(this.toString());\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this);\n    }\n    return dom\n  }\n\n  toString () {\n    // @ts-ignore\n    return this.toDelta().map(delta => {\n      const nestedNodes = [];\n      for (const nodeName in delta.attributes) {\n        const attrs = [];\n        for (const key in delta.attributes[nodeName]) {\n          attrs.push({ key, value: delta.attributes[nodeName][key] });\n        }\n        // sort attributes to get a unique order\n        attrs.sort((a, b) => a.key < b.key ? -1 : 1);\n        nestedNodes.push({ nodeName, attrs });\n      }\n      // sort node order to get a unique order\n      nestedNodes.sort((a, b) => a.nodeName < b.nodeName ? -1 : 1);\n      // now convert to dom string\n      let str = '';\n      for (let i = 0; i < nestedNodes.length; i++) {\n        const node = nestedNodes[i];\n        str += `<${node.nodeName}`;\n        for (let j = 0; j < node.attrs.length; j++) {\n          const attr = node.attrs[j];\n          str += ` ${attr.key}=\"${attr.value}\"`;\n        }\n        str += '>';\n      }\n      str += delta.insert;\n      for (let i = nestedNodes.length - 1; i >= 0; i--) {\n        str += `</${nestedNodes[i].nodeName}>`;\n      }\n      return str\n    }).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlTextRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlText}\n *\n * @private\n * @function\n */\nconst readYXmlText = decoder => new YXmlText();\n\nclass AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {number} length\n   */\n  constructor (id, length) {\n    this.id = id;\n    this.length = length;\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get deleted () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * Merge this struct with the item to the right.\n   * This method is already assuming that `this.id.clock + this.length === this.id.clock`.\n   * Also this method does *not* remove right from StructStore!\n   * @param {AbstractStruct} right\n   * @return {boolean} wether this merged with right\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   * @param {number} encodingRef\n   */\n  write (encoder, offset, encodingRef) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    throw error.methodUnimplemented()\n  }\n}\n\nconst structGCRefNumber = 0;\n\n/**\n * @private\n */\nclass GC extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {GC} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length;\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset;\n      this.length -= offset;\n    }\n    addStruct(transaction.doc.store, this);\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structGCRefNumber);\n    encoder.writeLen(this.length - offset);\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n\nclass ContentBinary {\n  /**\n   * @param {Uint8Array} content\n   */\n  constructor (content) {\n    this.content = content;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.content]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentBinary}\n   */\n  copy () {\n    return new ContentBinary(this.content)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentBinary}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentBinary} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeBuf(this.content);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 3\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentBinary}\n */\nconst readContentBinary = decoder => new ContentBinary(decoder.readBuf());\n\nclass ContentDeleted {\n  /**\n   * @param {number} len\n   */\n  constructor (len) {\n    this.len = len;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.len\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentDeleted}\n   */\n  copy () {\n    return new ContentDeleted(this.len)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDeleted}\n   */\n  splice (offset) {\n    const right = new ContentDeleted(this.len - offset);\n    this.len = offset;\n    return right\n  }\n\n  /**\n   * @param {ContentDeleted} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.len += right.len;\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    addToDeleteSet(transaction.deleteSet, item.id.client, item.id.clock, this.len);\n    item.markDeleted();\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeLen(this.len - offset);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 1\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentDeleted}\n */\nconst readContentDeleted = decoder => new ContentDeleted(decoder.readLen());\n\n/**\n * @param {string} guid\n * @param {Object<string, any>} opts\n */\nconst createDocFromOpts = (guid, opts) => new Doc({ guid, ...opts, shouldLoad: opts.shouldLoad || opts.autoLoad || false });\n\n/**\n * @private\n */\nclass ContentDoc {\n  /**\n   * @param {Doc} doc\n   */\n  constructor (doc) {\n    if (doc._item) {\n      console.error('This document was already integrated as a sub-document. You should create a second instance instead with the same guid.');\n    }\n    /**\n     * @type {Doc}\n     */\n    this.doc = doc;\n    /**\n     * @type {any}\n     */\n    const opts = {};\n    this.opts = opts;\n    if (!doc.gc) {\n      opts.gc = false;\n    }\n    if (doc.autoLoad) {\n      opts.autoLoad = true;\n    }\n    if (doc.meta !== null) {\n      opts.meta = doc.meta;\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.doc]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentDoc}\n   */\n  copy () {\n    return new ContentDoc(createDocFromOpts(this.doc.guid, this.opts))\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDoc}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentDoc} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    // this needs to be reflected in doc.destroy as well\n    this.doc._item = item;\n    transaction.subdocsAdded.add(this.doc);\n    if (this.doc.shouldLoad) {\n      transaction.subdocsLoaded.add(this.doc);\n    }\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (transaction.subdocsAdded.has(this.doc)) {\n      transaction.subdocsAdded.delete(this.doc);\n    } else {\n      transaction.subdocsRemoved.add(this.doc);\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) { }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(this.doc.guid);\n    encoder.writeAny(this.opts);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 9\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentDoc}\n */\nconst readContentDoc = decoder => new ContentDoc(createDocFromOpts(decoder.readString(), decoder.readAny()));\n\n/**\n * @private\n */\nclass ContentEmbed {\n  /**\n   * @param {Object} embed\n   */\n  constructor (embed) {\n    this.embed = embed;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.embed]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentEmbed}\n   */\n  copy () {\n    return new ContentEmbed(this.embed)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentEmbed}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentEmbed} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeJSON(this.embed);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 5\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentEmbed}\n */\nconst readContentEmbed = decoder => new ContentEmbed(decoder.readJSON());\n\n/**\n * @private\n */\nclass ContentFormat {\n  /**\n   * @param {string} key\n   * @param {Object} value\n   */\n  constructor (key, value) {\n    this.key = key;\n    this.value = value;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentFormat}\n   */\n  copy () {\n    return new ContentFormat(this.key, this.value)\n  }\n\n  /**\n   * @param {number} _offset\n   * @return {ContentFormat}\n   */\n  splice (_offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentFormat} _right\n   * @return {boolean}\n   */\n  mergeWith (_right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} _transaction\n   * @param {Item} item\n   */\n  integrate (_transaction, item) {\n    // @todo searchmarker are currently unsupported for rich text documents\n    const p = /** @type {YText} */ (item.parent);\n    p._searchMarker = null;\n    p._hasFormatting = true;\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeKey(this.key);\n    encoder.writeJSON(this.value);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 6\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentFormat}\n */\nconst readContentFormat = decoder => new ContentFormat(decoder.readKey(), decoder.readJSON());\n\n/**\n * @private\n */\nclass ContentJSON {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentJSON}\n   */\n  copy () {\n    return new ContentJSON(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentJSON}\n   */\n  splice (offset) {\n    const right = new ContentJSON(this.arr.slice(offset));\n    this.arr = this.arr.slice(0, offset);\n    return right\n  }\n\n  /**\n   * @param {ContentJSON} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr);\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length;\n    encoder.writeLen(len - offset);\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i];\n      encoder.writeString(c === undefined ? 'undefined' : JSON.stringify(c));\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 2\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentJSON}\n */\nconst readContentJSON = decoder => {\n  const len = decoder.readLen();\n  const cs = [];\n  for (let i = 0; i < len; i++) {\n    const c = decoder.readString();\n    if (c === 'undefined') {\n      cs.push(undefined);\n    } else {\n      cs.push(JSON.parse(c));\n    }\n  }\n  return new ContentJSON(cs)\n};\n\nclass ContentAny {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentAny}\n   */\n  copy () {\n    return new ContentAny(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentAny}\n   */\n  splice (offset) {\n    const right = new ContentAny(this.arr.slice(offset));\n    this.arr = this.arr.slice(0, offset);\n    return right\n  }\n\n  /**\n   * @param {ContentAny} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr);\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length;\n    encoder.writeLen(len - offset);\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i];\n      encoder.writeAny(c);\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 8\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentAny}\n */\nconst readContentAny = decoder => {\n  const len = decoder.readLen();\n  const cs = [];\n  for (let i = 0; i < len; i++) {\n    cs.push(decoder.readAny());\n  }\n  return new ContentAny(cs)\n};\n\n/**\n * @private\n */\nclass ContentString {\n  /**\n   * @param {string} str\n   */\n  constructor (str) {\n    /**\n     * @type {string}\n     */\n    this.str = str;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.str.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.str.split('')\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentString}\n   */\n  copy () {\n    return new ContentString(this.str)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentString}\n   */\n  splice (offset) {\n    const right = new ContentString(this.str.slice(offset));\n    this.str = this.str.slice(0, offset);\n\n    // Prevent encoding invalid documents because of splitting of surrogate pairs: https://github.com/yjs/yjs/issues/248\n    const firstCharCode = this.str.charCodeAt(offset - 1);\n    if (firstCharCode >= 0xD800 && firstCharCode <= 0xDBFF) {\n      // Last character of the left split is the start of a surrogate utf16/ucs2 pair.\n      // We don't support splitting of surrogate pairs because this may lead to invalid documents.\n      // Replace the invalid character with a unicode replacement character (� / U+FFFD)\n      this.str = this.str.slice(0, offset - 1) + '�';\n      // replace right as well\n      right.str = '�' + right.str.slice(1);\n    }\n    return right\n  }\n\n  /**\n   * @param {ContentString} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.str += right.str;\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(offset === 0 ? this.str : this.str.slice(offset));\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 4\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentString}\n */\nconst readContentString = decoder => new ContentString(decoder.readString());\n\n/**\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractType<any>>}\n * @private\n */\nconst typeRefs = [\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText\n];\n\nconst YArrayRefID = 0;\nconst YMapRefID = 1;\nconst YTextRefID = 2;\nconst YXmlElementRefID = 3;\nconst YXmlFragmentRefID = 4;\nconst YXmlHookRefID = 5;\nconst YXmlTextRefID = 6;\n\n/**\n * @private\n */\nclass ContentType {\n  /**\n   * @param {AbstractType<any>} type\n   */\n  constructor (type) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.type]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentType}\n   */\n  copy () {\n    return new ContentType(this.type._copy())\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentType}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentType} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    this.type._integrate(transaction.doc, item);\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    let item = this.type._start;\n    while (item !== null) {\n      if (!item.deleted) {\n        item.delete(transaction);\n      } else if (item.id.clock < (transaction.beforeState.get(item.id.client) || 0)) {\n        // This will be gc'd later and we want to merge it if possible\n        // We try to merge all deleted items after each transaction,\n        // but we have no knowledge about that this needs to be merged\n        // since it is not in transaction.ds. Hence we add it to transaction._mergeStructs\n        transaction._mergeStructs.push(item);\n      }\n      item = item.right;\n    }\n    this.type._map.forEach(item => {\n      if (!item.deleted) {\n        item.delete(transaction);\n      } else if (item.id.clock < (transaction.beforeState.get(item.id.client) || 0)) {\n        // same as above\n        transaction._mergeStructs.push(item);\n      }\n    });\n    transaction.changed.delete(this.type);\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {\n    let item = this.type._start;\n    while (item !== null) {\n      item.gc(store, true);\n      item = item.right;\n    }\n    this.type._start = null;\n    this.type._map.forEach(/** @param {Item | null} item */ (item) => {\n      while (item !== null) {\n        item.gc(store, true);\n        item = item.left;\n      }\n    });\n    this.type._map = new Map();\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    this.type._write(encoder);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 7\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentType}\n */\nconst readContentType = decoder => new ContentType(typeRefs[decoder.readTypeRef()](decoder));\n\n/**\n * @todo This should return several items\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {{item:Item, diff:number}}\n */\nconst followRedone = (store, id) => {\n  /**\n   * @type {ID|null}\n   */\n  let nextID = id;\n  let diff = 0;\n  let item;\n  do {\n    if (diff > 0) {\n      nextID = createID(nextID.client, nextID.clock + diff);\n    }\n    item = getItem(store, nextID);\n    diff = nextID.clock - item.id.clock;\n    nextID = item.redone;\n  } while (nextID !== null && item instanceof Item)\n  return {\n    item, diff\n  }\n};\n\n/**\n * Make sure that neither item nor any of its parents is ever deleted.\n *\n * This property does not persist when storing it into a database or when\n * sending it to other peers\n *\n * @param {Item|null} item\n * @param {boolean} keep\n */\nconst keepItem = (item, keep) => {\n  while (item !== null && item.keep !== keep) {\n    item.keep = keep;\n    item = /** @type {AbstractType<any>} */ (item.parent)._item;\n  }\n};\n\n/**\n * Split leftItem into two items\n * @param {Transaction} transaction\n * @param {Item} leftItem\n * @param {number} diff\n * @return {Item}\n *\n * @function\n * @private\n */\nconst splitItem = (transaction, leftItem, diff) => {\n  // create rightItem\n  const { client, clock } = leftItem.id;\n  const rightItem = new Item(\n    createID(client, clock + diff),\n    leftItem,\n    createID(client, clock + diff - 1),\n    leftItem.right,\n    leftItem.rightOrigin,\n    leftItem.parent,\n    leftItem.parentSub,\n    leftItem.content.splice(diff)\n  );\n  if (leftItem.deleted) {\n    rightItem.markDeleted();\n  }\n  if (leftItem.keep) {\n    rightItem.keep = true;\n  }\n  if (leftItem.redone !== null) {\n    rightItem.redone = createID(leftItem.redone.client, leftItem.redone.clock + diff);\n  }\n  // update left (do not set leftItem.rightOrigin as it will lead to problems when syncing)\n  leftItem.right = rightItem;\n  // update right\n  if (rightItem.right !== null) {\n    rightItem.right.left = rightItem;\n  }\n  // right is more specific.\n  transaction._mergeStructs.push(rightItem);\n  // update parent._map\n  if (rightItem.parentSub !== null && rightItem.right === null) {\n    /** @type {AbstractType<any>} */ (rightItem.parent)._map.set(rightItem.parentSub, rightItem);\n  }\n  leftItem.length = diff;\n  return rightItem\n};\n\n/**\n * @param {Array<StackItem>} stack\n * @param {ID} id\n */\nconst isDeletedByUndoStack = (stack, id) => array.some(stack, /** @param {StackItem} s */ s => isDeleted(s.deletions, id));\n\n/**\n * Redoes the effect of this operation.\n *\n * @param {Transaction} transaction The Yjs instance.\n * @param {Item} item\n * @param {Set<Item>} redoitems\n * @param {DeleteSet} itemsToDelete\n * @param {boolean} ignoreRemoteMapChanges\n * @param {import('../utils/UndoManager.js').UndoManager} um\n *\n * @return {Item|null}\n *\n * @private\n */\nconst redoItem = (transaction, item, redoitems, itemsToDelete, ignoreRemoteMapChanges, um) => {\n  const doc = transaction.doc;\n  const store = doc.store;\n  const ownClientID = doc.clientID;\n  const redone = item.redone;\n  if (redone !== null) {\n    return getItemCleanStart(transaction, redone)\n  }\n  let parentItem = /** @type {AbstractType<any>} */ (item.parent)._item;\n  /**\n   * @type {Item|null}\n   */\n  let left = null;\n  /**\n   * @type {Item|null}\n   */\n  let right;\n  // make sure that parent is redone\n  if (parentItem !== null && parentItem.deleted === true) {\n    // try to undo parent if it will be undone anyway\n    if (parentItem.redone === null && (!redoitems.has(parentItem) || redoItem(transaction, parentItem, redoitems, itemsToDelete, ignoreRemoteMapChanges, um) === null)) {\n      return null\n    }\n    while (parentItem.redone !== null) {\n      parentItem = getItemCleanStart(transaction, parentItem.redone);\n    }\n  }\n  const parentType = parentItem === null ? /** @type {AbstractType<any>} */ (item.parent) : /** @type {ContentType} */ (parentItem.content).type;\n\n  if (item.parentSub === null) {\n    // Is an array item. Insert at the old position\n    left = item.left;\n    right = item;\n    // find next cloned_redo items\n    while (left !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let leftTrace = left;\n      // trace redone until parent matches\n      while (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item !== parentItem) {\n        leftTrace = leftTrace.redone === null ? null : getItemCleanStart(transaction, leftTrace.redone);\n      }\n      if (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item === parentItem) {\n        left = leftTrace;\n        break\n      }\n      left = left.left;\n    }\n    while (right !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let rightTrace = right;\n      // trace redone until parent matches\n      while (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item !== parentItem) {\n        rightTrace = rightTrace.redone === null ? null : getItemCleanStart(transaction, rightTrace.redone);\n      }\n      if (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item === parentItem) {\n        right = rightTrace;\n        break\n      }\n      right = right.right;\n    }\n  } else {\n    right = null;\n    if (item.right && !ignoreRemoteMapChanges) {\n      left = item;\n      // Iterate right while right is in itemsToDelete\n      // If it is intended to delete right while item is redone, we can expect that item should replace right.\n      while (left !== null && left.right !== null && (left.right.redone || isDeleted(itemsToDelete, left.right.id) || isDeletedByUndoStack(um.undoStack, left.right.id) || isDeletedByUndoStack(um.redoStack, left.right.id))) {\n        left = left.right;\n        // follow redone\n        while (left.redone) left = getItemCleanStart(transaction, left.redone);\n      }\n      if (left && left.right !== null) {\n        // It is not possible to redo this item because it conflicts with a\n        // change from another client\n        return null\n      }\n    } else {\n      left = parentType._map.get(item.parentSub) || null;\n    }\n  }\n  const nextClock = getState(store, ownClientID);\n  const nextId = createID(ownClientID, nextClock);\n  const redoneItem = new Item(\n    nextId,\n    left, left && left.lastId,\n    right, right && right.id,\n    parentType,\n    item.parentSub,\n    item.content.copy()\n  );\n  item.redone = nextId;\n  keepItem(redoneItem, true);\n  redoneItem.integrate(transaction, 0);\n  return redoneItem\n};\n\n/**\n * Abstract class that represents any content.\n */\nclass Item extends AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {Item | null} left\n   * @param {ID | null} origin\n   * @param {Item | null} right\n   * @param {ID | null} rightOrigin\n   * @param {AbstractType<any>|ID|null} parent Is a type if integrated, is null if it is possible to copy parent from left or right, is ID before integration to search for it.\n   * @param {string | null} parentSub\n   * @param {AbstractContent} content\n   */\n  constructor (id, left, origin, right, rightOrigin, parent, parentSub, content) {\n    super(id, content.getLength());\n    /**\n     * The item that was originally to the left of this item.\n     * @type {ID | null}\n     */\n    this.origin = origin;\n    /**\n     * The item that is currently to the left of this item.\n     * @type {Item | null}\n     */\n    this.left = left;\n    /**\n     * The item that is currently to the right of this item.\n     * @type {Item | null}\n     */\n    this.right = right;\n    /**\n     * The item that was originally to the right of this item.\n     * @type {ID | null}\n     */\n    this.rightOrigin = rightOrigin;\n    /**\n     * @type {AbstractType<any>|ID|null}\n     */\n    this.parent = parent;\n    /**\n     * If the parent refers to this item with some kind of key (e.g. YMap, the\n     * key is specified here. The key is then used to refer to the list in which\n     * to insert this item. If `parentSub = null` type._start is the list in\n     * which to insert to. Otherwise it is `parent._map`.\n     * @type {String | null}\n     */\n    this.parentSub = parentSub;\n    /**\n     * If this type's effect is redone this type refers to the type that undid\n     * this operation.\n     * @type {ID | null}\n     */\n    this.redone = null;\n    /**\n     * @type {AbstractContent}\n     */\n    this.content = content;\n    /**\n     * bit1: keep\n     * bit2: countable\n     * bit3: deleted\n     * bit4: mark - mark node as fast-search-marker\n     * @type {number} byte\n     */\n    this.info = this.content.isCountable() ? binary.BIT2 : 0;\n  }\n\n  /**\n   * This is used to mark the item as an indexed fast-search marker\n   *\n   * @type {boolean}\n   */\n  set marker (isMarked) {\n    if (((this.info & binary.BIT4) > 0) !== isMarked) {\n      this.info ^= binary.BIT4;\n    }\n  }\n\n  get marker () {\n    return (this.info & binary.BIT4) > 0\n  }\n\n  /**\n   * If true, do not garbage collect this Item.\n   */\n  get keep () {\n    return (this.info & binary.BIT1) > 0\n  }\n\n  set keep (doKeep) {\n    if (this.keep !== doKeep) {\n      this.info ^= binary.BIT1;\n    }\n  }\n\n  get countable () {\n    return (this.info & binary.BIT2) > 0\n  }\n\n  /**\n   * Whether this item was deleted or not.\n   * @type {Boolean}\n   */\n  get deleted () {\n    return (this.info & binary.BIT3) > 0\n  }\n\n  set deleted (doDelete) {\n    if (this.deleted !== doDelete) {\n      this.info ^= binary.BIT3;\n    }\n  }\n\n  markDeleted () {\n    this.info |= binary.BIT3;\n  }\n\n  /**\n   * Return the creator clientID of the missing op or define missing items and return null.\n   *\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    if (this.origin && this.origin.client !== this.id.client && this.origin.clock >= getState(store, this.origin.client)) {\n      return this.origin.client\n    }\n    if (this.rightOrigin && this.rightOrigin.client !== this.id.client && this.rightOrigin.clock >= getState(store, this.rightOrigin.client)) {\n      return this.rightOrigin.client\n    }\n    if (this.parent && this.parent.constructor === ID && this.id.client !== this.parent.client && this.parent.clock >= getState(store, this.parent.client)) {\n      return this.parent.client\n    }\n\n    // We have all missing ids, now find the items\n\n    if (this.origin) {\n      this.left = getItemCleanEnd(transaction, store, this.origin);\n      this.origin = this.left.lastId;\n    }\n    if (this.rightOrigin) {\n      this.right = getItemCleanStart(transaction, this.rightOrigin);\n      this.rightOrigin = this.right.id;\n    }\n    if ((this.left && this.left.constructor === GC) || (this.right && this.right.constructor === GC)) {\n      this.parent = null;\n    } else if (!this.parent) {\n      // only set parent if this shouldn't be garbage collected\n      if (this.left && this.left.constructor === Item) {\n        this.parent = this.left.parent;\n        this.parentSub = this.left.parentSub;\n      }\n      if (this.right && this.right.constructor === Item) {\n        this.parent = this.right.parent;\n        this.parentSub = this.right.parentSub;\n      }\n    } else if (this.parent.constructor === ID) {\n      const parentItem = getItem(store, this.parent);\n      if (parentItem.constructor === GC) {\n        this.parent = null;\n      } else {\n        this.parent = /** @type {ContentType} */ (parentItem.content).type;\n      }\n    }\n    return null\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset;\n      this.left = getItemCleanEnd(transaction, transaction.doc.store, createID(this.id.client, this.id.clock - 1));\n      this.origin = this.left.lastId;\n      this.content = this.content.splice(offset);\n      this.length -= offset;\n    }\n\n    if (this.parent) {\n      if ((!this.left && (!this.right || this.right.left !== null)) || (this.left && this.left.right !== this.right)) {\n        /**\n         * @type {Item|null}\n         */\n        let left = this.left;\n\n        /**\n         * @type {Item|null}\n         */\n        let o;\n        // set o to the first conflicting item\n        if (left !== null) {\n          o = left.right;\n        } else if (this.parentSub !== null) {\n          o = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null;\n          while (o !== null && o.left !== null) {\n            o = o.left;\n          }\n        } else {\n          o = /** @type {AbstractType<any>} */ (this.parent)._start;\n        }\n        // TODO: use something like DeleteSet here (a tree implementation would be best)\n        // @todo use global set definitions\n        /**\n         * @type {Set<Item>}\n         */\n        const conflictingItems = new Set();\n        /**\n         * @type {Set<Item>}\n         */\n        const itemsBeforeOrigin = new Set();\n        // Let c in conflictingItems, b in itemsBeforeOrigin\n        // ***{origin}bbbb{this}{c,b}{c,b}{o}***\n        // Note that conflictingItems is a subset of itemsBeforeOrigin\n        while (o !== null && o !== this.right) {\n          itemsBeforeOrigin.add(o);\n          conflictingItems.add(o);\n          if (compareIDs(this.origin, o.origin)) {\n            // case 1\n            if (o.id.client < this.id.client) {\n              left = o;\n              conflictingItems.clear();\n            } else if (compareIDs(this.rightOrigin, o.rightOrigin)) {\n              // this and o are conflicting and point to the same integration points. The id decides which item comes first.\n              // Since this is to the left of o, we can break here\n              break\n            } // else, o might be integrated before an item that this conflicts with. If so, we will find it in the next iterations\n          } else if (o.origin !== null && itemsBeforeOrigin.has(getItem(transaction.doc.store, o.origin))) { // use getItem instead of getItemCleanEnd because we don't want / need to split items.\n            // case 2\n            if (!conflictingItems.has(getItem(transaction.doc.store, o.origin))) {\n              left = o;\n              conflictingItems.clear();\n            }\n          } else {\n            break\n          }\n          o = o.right;\n        }\n        this.left = left;\n      }\n      // reconnect left/right + update parent map/start if necessary\n      if (this.left !== null) {\n        const right = this.left.right;\n        this.right = right;\n        this.left.right = this;\n      } else {\n        let r;\n        if (this.parentSub !== null) {\n          r = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null;\n          while (r !== null && r.left !== null) {\n            r = r.left;\n          }\n        } else {\n          r = /** @type {AbstractType<any>} */ (this.parent)._start\n          ;/** @type {AbstractType<any>} */ (this.parent)._start = this;\n        }\n        this.right = r;\n      }\n      if (this.right !== null) {\n        this.right.left = this;\n      } else if (this.parentSub !== null) {\n        // set as current parent value if right === null and this is parentSub\n        /** @type {AbstractType<any>} */ (this.parent)._map.set(this.parentSub, this);\n        if (this.left !== null) {\n          // this is the current attribute value of parent. delete right\n          this.left.delete(transaction);\n        }\n      }\n      // adjust length of parent\n      if (this.parentSub === null && this.countable && !this.deleted) {\n        /** @type {AbstractType<any>} */ (this.parent)._length += this.length;\n      }\n      addStruct(transaction.doc.store, this);\n      this.content.integrate(transaction, this);\n      // add parent to transaction.changed\n      addChangedTypeToTransaction(transaction, /** @type {AbstractType<any>} */ (this.parent), this.parentSub);\n      if ((/** @type {AbstractType<any>} */ (this.parent)._item !== null && /** @type {AbstractType<any>} */ (this.parent)._item.deleted) || (this.parentSub !== null && this.right !== null)) {\n        // delete if parent is deleted or if this is not the current attribute value of parent\n        this.delete(transaction);\n      }\n    } else {\n      // parent is not defined. Integrate GC struct instead\n      new GC(this.id, this.length).integrate(transaction, 0);\n    }\n  }\n\n  /**\n   * Returns the next non-deleted item\n   */\n  get next () {\n    let n = this.right;\n    while (n !== null && n.deleted) {\n      n = n.right;\n    }\n    return n\n  }\n\n  /**\n   * Returns the previous non-deleted item\n   */\n  get prev () {\n    let n = this.left;\n    while (n !== null && n.deleted) {\n      n = n.left;\n    }\n    return n\n  }\n\n  /**\n   * Computes the last content address of this Item.\n   */\n  get lastId () {\n    // allocating ids is pretty costly because of the amount of ids created, so we try to reuse whenever possible\n    return this.length === 1 ? this.id : createID(this.id.client, this.id.clock + this.length - 1)\n  }\n\n  /**\n   * Try to merge two items\n   *\n   * @param {Item} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (\n      this.constructor === right.constructor &&\n      compareIDs(right.origin, this.lastId) &&\n      this.right === right &&\n      compareIDs(this.rightOrigin, right.rightOrigin) &&\n      this.id.client === right.id.client &&\n      this.id.clock + this.length === right.id.clock &&\n      this.deleted === right.deleted &&\n      this.redone === null &&\n      right.redone === null &&\n      this.content.constructor === right.content.constructor &&\n      this.content.mergeWith(right.content)\n    ) {\n      const searchMarker = /** @type {AbstractType<any>} */ (this.parent)._searchMarker;\n      if (searchMarker) {\n        searchMarker.forEach(marker => {\n          if (marker.p === right) {\n            // right is going to be \"forgotten\" so we need to update the marker\n            marker.p = this;\n            // adjust marker index\n            if (!this.deleted && this.countable) {\n              marker.index -= this.length;\n            }\n          }\n        });\n      }\n      if (right.keep) {\n        this.keep = true;\n      }\n      this.right = right.right;\n      if (this.right !== null) {\n        this.right.left = this;\n      }\n      this.length += right.length;\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Mark this Item as deleted.\n   *\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (!this.deleted) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent);\n      // adjust the length of parent\n      if (this.countable && this.parentSub === null) {\n        parent._length -= this.length;\n      }\n      this.markDeleted();\n      addToDeleteSet(transaction.deleteSet, this.id.client, this.id.clock, this.length);\n      addChangedTypeToTransaction(transaction, parent, this.parentSub);\n      this.content.delete(transaction);\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   * @param {boolean} parentGCd\n   */\n  gc (store, parentGCd) {\n    if (!this.deleted) {\n      throw error.unexpectedCase()\n    }\n    this.content.gc(store);\n    if (parentGCd) {\n      replaceStruct(store, this, new GC(this.id, this.length));\n    } else {\n      this.content = new ContentDeleted(this.length);\n    }\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const origin = offset > 0 ? createID(this.id.client, this.id.clock + offset - 1) : this.origin;\n    const rightOrigin = this.rightOrigin;\n    const parentSub = this.parentSub;\n    const info = (this.content.getRef() & binary.BITS5) |\n      (origin === null ? 0 : binary.BIT8) | // origin is defined\n      (rightOrigin === null ? 0 : binary.BIT7) | // right origin is defined\n      (parentSub === null ? 0 : binary.BIT6); // parentSub is non-null\n    encoder.writeInfo(info);\n    if (origin !== null) {\n      encoder.writeLeftID(origin);\n    }\n    if (rightOrigin !== null) {\n      encoder.writeRightID(rightOrigin);\n    }\n    if (origin === null && rightOrigin === null) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent);\n      if (parent._item !== undefined) {\n        const parentItem = parent._item;\n        if (parentItem === null) {\n          // parent type on y._map\n          // find the correct key\n          const ykey = findRootTypeKey(parent);\n          encoder.writeParentInfo(true); // write parentYKey\n          encoder.writeString(ykey);\n        } else {\n          encoder.writeParentInfo(false); // write parent id\n          encoder.writeLeftID(parentItem.id);\n        }\n      } else if (parent.constructor === String) { // this edge case was added by differential updates\n        encoder.writeParentInfo(true); // write parentYKey\n        encoder.writeString(parent);\n      } else if (parent.constructor === ID) {\n        encoder.writeParentInfo(false); // write parent id\n        encoder.writeLeftID(parent);\n      } else {\n        error.unexpectedCase();\n      }\n      if (parentSub !== null) {\n        encoder.writeString(parentSub);\n      }\n    }\n    this.content.write(encoder, offset);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @param {number} info\n */\nconst readItemContent = (decoder, info) => contentRefs[info & binary.BITS5](decoder);\n\n/**\n * A lookup map for reading Item content.\n *\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractContent>}\n */\nconst contentRefs = [\n  () => { error.unexpectedCase(); }, // GC is not ItemContent\n  readContentDeleted, // 1\n  readContentJSON, // 2\n  readContentBinary, // 3\n  readContentString, // 4\n  readContentEmbed, // 5\n  readContentFormat, // 6\n  readContentType, // 7\n  readContentAny, // 8\n  readContentDoc, // 9\n  () => { error.unexpectedCase(); } // 10 - Skip is not ItemContent\n];\n\nconst structSkipRefNumber = 10;\n\n/**\n * @private\n */\nclass Skip extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {Skip} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length;\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    // skip structs cannot be integrated\n    error.unexpectedCase();\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structSkipRefNumber);\n    // write as VarUint because Skips can't make use of predictable length-encoding\n    encoding.writeVarUint(encoder.restEncoder, this.length - offset);\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n\n/** eslint-env browser */\n\nconst glo = /** @type {any} */ (typeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof window !== 'undefined'\n    ? window\n    // @ts-ignore\n    : typeof global !== 'undefined' ? global : {});\n\nconst importIdentifier = '__ $YJS$ __';\n\nif (glo[importIdentifier] === true) {\n  /**\n   * Dear reader of this message. Please take this seriously.\n   *\n   * If you see this message, make sure that you only import one version of Yjs. In many cases,\n   * your package manager installs two versions of Yjs that are used by different packages within your project.\n   * Another reason for this message is that some parts of your project use the commonjs version of Yjs\n   * and others use the EcmaScript version of Yjs.\n   *\n   * This often leads to issues that are hard to debug. We often need to perform constructor checks,\n   * e.g. `struct instanceof GC`. If you imported different versions of Yjs, it is impossible for us to\n   * do the constructor checks anymore - which might break the CRDT algorithm.\n   *\n   * https://github.com/yjs/yjs/issues/438\n   */\n  console.error('Yjs was already imported. This breaks constructor checks and will lead to issues! - https://github.com/yjs/yjs/issues/438');\n}\nglo[importIdentifier] = true;\n\nexport { AbsolutePosition, AbstractConnector, AbstractStruct, AbstractType, YArray as Array, ContentAny, ContentBinary, ContentDeleted, ContentDoc, ContentEmbed, ContentFormat, ContentJSON, ContentString, ContentType, Doc, GC, ID, Item, YMap as Map, PermanentUserData, RelativePosition, Skip, Snapshot, YText as Text, Transaction, UndoManager, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, YXmlElement as XmlElement, YXmlFragment as XmlFragment, YXmlHook as XmlHook, YXmlText as XmlText, YArrayEvent, YEvent, YMapEvent, YTextEvent, YXmlEvent, applyUpdate, applyUpdateV2, cleanupYTextFormatting, compareIDs, compareRelativePositions, convertUpdateFormatV1ToV2, convertUpdateFormatV2ToV1, createAbsolutePositionFromRelativePosition, createDeleteSet, createDeleteSetFromStructStore, createDocFromSnapshot, createID, createRelativePositionFromJSON, createRelativePositionFromTypeIndex, createSnapshot, decodeRelativePosition, decodeSnapshot, decodeSnapshotV2, decodeStateVector, decodeUpdate, decodeUpdateV2, diffUpdate, diffUpdateV2, emptySnapshot, encodeRelativePosition, encodeSnapshot, encodeSnapshotV2, encodeStateAsUpdate, encodeStateAsUpdateV2, encodeStateVector, encodeStateVectorFromUpdate, encodeStateVectorFromUpdateV2, equalDeleteSets, equalSnapshots, findIndexSS, findRootTypeKey, getItem, getState, getTypeChildren, isDeleted, isParentOf, iterateDeletedStructs, logType, logUpdate, logUpdateV2, mergeUpdates, mergeUpdatesV2, obfuscateUpdate, obfuscateUpdateV2, parseUpdateMeta, parseUpdateMetaV2, readUpdate, readUpdateV2, relativePositionToJSON, snapshot, snapshotContainsUpdate, transact, tryGc, typeListToArraySnapshot, typeMapGetAllSnapshot, typeMapGetSnapshot };\n//# sourceMappingURL=yjs.mjs.map\n","/**\n * Mutual exclude for JavaScript.\n *\n * @module mutex\n */\n\n/**\n * @callback mutex\n * @param {function():void} cb Only executed when this mutex is not in the current stack\n * @param {function():void} [elseCb] Executed when this mutex is in the current stack\n */\n\n/**\n * Creates a mutual exclude function with the following property:\n *\n * ```js\n * const mutex = createMutex()\n * mutex(() => {\n *   // This function is immediately executed\n *   mutex(() => {\n *     // This function is not executed, as the mutex is already active.\n *   })\n * })\n * ```\n *\n * @return {mutex} A mutual exclude function\n * @public\n */\nexport const createMutex = () => {\n  let token = true\n  return (f, g) => {\n    if (token) {\n      token = false\n      try {\n        f()\n      } finally {\n        token = true\n      }\n    } else if (g !== undefined) {\n      g()\n    }\n  }\n}\n","/**\n * Efficient diffs.\n *\n * @module diff\n */\n\nimport { equalityStrict } from './function.js'\n\n/**\n * A SimpleDiff describes a change on a String.\n *\n * ```js\n * console.log(a) // the old value\n * console.log(b) // the updated value\n * // Apply changes of diff (pseudocode)\n * a.remove(diff.index, diff.remove) // Remove `diff.remove` characters\n * a.insert(diff.index, diff.insert) // Insert `diff.insert`\n * a === b // values match\n * ```\n *\n * @typedef {Object} SimpleDiff\n * @property {Number} index The index where changes were applied\n * @property {Number} remove The number of characters to delete starting\n *                                  at `index`.\n * @property {T} insert The new text to insert at `index` after applying\n *                           `delete`\n *\n * @template T\n */\n\nconst highSurrogateRegex = /[\\uD800-\\uDBFF]/\nconst lowSurrogateRegex = /[\\uDC00-\\uDFFF]/\n\n/**\n * Create a diff between two strings. This diff implementation is highly\n * efficient, but not very sophisticated.\n *\n * @function\n *\n * @param {string} a The old version of the string\n * @param {string} b The updated version of the string\n * @return {SimpleDiff<string>} The diff description.\n */\nexport const simpleDiffString = (a, b) => {\n  let left = 0 // number of same characters counting from left\n  let right = 0 // number of same characters counting from right\n  while (left < a.length && left < b.length && a[left] === b[left]) {\n    left++\n  }\n  // If the last same character is a high surrogate, we need to rollback to the previous character\n  if (left > 0 && highSurrogateRegex.test(a[left - 1])) left--\n  while (right + left < a.length && right + left < b.length && a[a.length - right - 1] === b[b.length - right - 1]) {\n    right++\n  }\n  // If the last same character is a low surrogate, we need to rollback to the previous character\n  if (right > 0 && lowSurrogateRegex.test(a[a.length - right])) right--\n  return {\n    index: left,\n    remove: a.length - left - right,\n    insert: b.slice(left, b.length - right)\n  }\n}\n\n/**\n * @todo Remove in favor of simpleDiffString\n * @deprecated\n */\nexport const simpleDiff = simpleDiffString\n\n/**\n * Create a diff between two arrays. This diff implementation is highly\n * efficient, but not very sophisticated.\n *\n * Note: This is basically the same function as above. Another function was created so that the runtime\n * can better optimize these function calls.\n *\n * @function\n * @template T\n *\n * @param {Array<T>} a The old version of the array\n * @param {Array<T>} b The updated version of the array\n * @param {function(T, T):boolean} [compare]\n * @return {SimpleDiff<Array<T>>} The diff description.\n */\nexport const simpleDiffArray = (a, b, compare = equalityStrict) => {\n  let left = 0 // number of same characters counting from left\n  let right = 0 // number of same characters counting from right\n  while (left < a.length && left < b.length && compare(a[left], b[left])) {\n    left++\n  }\n  while (right + left < a.length && right + left < b.length && compare(a[a.length - right - 1], b[b.length - right - 1])) {\n    right++\n  }\n  return {\n    index: left,\n    remove: a.length - left - right,\n    insert: b.slice(left, b.length - right)\n  }\n}\n\n/**\n * Diff text and try to diff at the current cursor position.\n *\n * @param {string} a\n * @param {string} b\n * @param {number} cursor This should refer to the current left cursor-range position\n */\nexport const simpleDiffStringWithCursor = (a, b, cursor) => {\n  let left = 0 // number of same characters counting from left\n  let right = 0 // number of same characters counting from right\n  // Iterate left to the right until we find a changed character\n  // First iteration considers the current cursor position\n  while (\n    left < a.length &&\n    left < b.length &&\n    a[left] === b[left] &&\n    left < cursor\n  ) {\n    left++\n  }\n  // If the last same character is a high surrogate, we need to rollback to the previous character\n  if (left > 0 && highSurrogateRegex.test(a[left - 1])) left--\n  // Iterate right to the left until we find a changed character\n  while (\n    right + left < a.length &&\n    right + left < b.length &&\n    a[a.length - right - 1] === b[b.length - right - 1]\n  ) {\n    right++\n  }\n  // If the last same character is a low surrogate, we need to rollback to the previous character\n  if (right > 0 && lowSurrogateRegex.test(a[a.length - right])) right--\n  // Try to iterate left further to the right without caring about the current cursor position\n  while (\n    right + left < a.length &&\n    right + left < b.length &&\n    a[left] === b[left]\n  ) {\n    left++\n  }\n  if (left > 0 && highSurrogateRegex.test(a[left - 1])) left--\n  return {\n    index: left,\n    remove: a.length - left - right,\n    insert: b.slice(left, b.length - right)\n  }\n}\n","\nimport { PluginKey } from 'prosemirror-state' // eslint-disable-line\n\n/**\n * The unique prosemirror plugin key for syncPlugin\n *\n * @public\n */\nexport const ySyncPluginKey = new PluginKey('y-sync')\n\n/**\n * The unique prosemirror plugin key for undoPlugin\n *\n * @public\n */\nexport const yUndoPluginKey = new PluginKey('y-undo')\n\n/**\n * The unique prosemirror plugin key for cursorPlugin\n *\n * @public\n */\nexport const yCursorPluginKey = new PluginKey('yjs-cursor')\n","/**\n * @module bindings/prosemirror\n */\n\nimport { createMutex } from 'lib0/mutex'\nimport * as PModel from 'prosemirror-model'\nimport { Plugin, TextSelection } from 'prosemirror-state' // eslint-disable-line\nimport * as math from 'lib0/math'\nimport * as object from 'lib0/object'\nimport * as set from 'lib0/set'\nimport { simpleDiff } from 'lib0/diff'\nimport * as error from 'lib0/error'\nimport { ySyncPluginKey } from './keys.js'\nimport * as Y from 'yjs'\nimport { absolutePositionToRelativePosition, relativePositionToAbsolutePosition } from '../lib.js'\nimport * as random from 'lib0/random'\nimport * as environment from 'lib0/environment'\nimport * as dom from 'lib0/dom'\nimport * as eventloop from 'lib0/eventloop'\n\n/**\n * @param {Y.Item} item\n * @param {Y.Snapshot} [snapshot]\n */\nexport const isVisible = (item, snapshot) => snapshot === undefined ? !item.deleted : (snapshot.sv.has(item.id.client) && /** @type {number} */ (snapshot.sv.get(item.id.client)) > item.id.clock && !Y.isDeleted(snapshot.ds, item.id))\n\n/**\n * Either a node if type is YXmlElement or an Array of text nodes if YXmlText\n * @typedef {Map<Y.AbstractType<any>, PModel.Node | Array<PModel.Node>>} ProsemirrorMapping\n */\n\n/**\n * @typedef {Object} ColorDef\n * @property {string} ColorDef.light\n * @property {string} ColorDef.dark\n */\n\n/**\n * @typedef {Object} YSyncOpts\n * @property {Array<ColorDef>} [YSyncOpts.colors]\n * @property {Map<string,ColorDef>} [YSyncOpts.colorMapping]\n * @property {Y.PermanentUserData|null} [YSyncOpts.permanentUserData]\n * @property {function} [YSyncOpts.onFirstRender] Fired when the content from Yjs is initially rendered to ProseMirror\n */\n\n/**\n * @type {Array<ColorDef>}\n */\nconst defaultColors = [{ light: '#ecd44433', dark: '#ecd444' }]\n\n/**\n * @param {Map<string,ColorDef>} colorMapping\n * @param {Array<ColorDef>} colors\n * @param {string} user\n * @return {ColorDef}\n */\nconst getUserColor = (colorMapping, colors, user) => {\n  // @todo do not hit the same color twice if possible\n  if (!colorMapping.has(user)) {\n    if (colorMapping.size < colors.length) {\n      const usedColors = set.create()\n      colorMapping.forEach(color => usedColors.add(color))\n      colors = colors.filter(color => !usedColors.has(color))\n    }\n    colorMapping.set(user, random.oneOf(colors))\n  }\n  return /** @type {ColorDef} */ (colorMapping.get(user))\n}\n\n/**\n * This plugin listens to changes in prosemirror view and keeps yXmlState and view in sync.\n *\n * This plugin also keeps references to the type and the shared document so other plugins can access it.\n * @param {Y.XmlFragment} yXmlFragment\n * @param {YSyncOpts} opts\n * @return {any} Returns a prosemirror plugin that binds to this type\n */\nexport const ySyncPlugin = (yXmlFragment, {\n  colors = defaultColors,\n  colorMapping = new Map(),\n  permanentUserData = null,\n  onFirstRender = () => {}\n} = {}) => {\n  let changedInitialContent = false\n  let rerenderTimeoutId\n  const plugin = new Plugin({\n    props: {\n      editable: (state) => {\n        const syncState = ySyncPluginKey.getState(state)\n        return syncState.snapshot == null && syncState.prevSnapshot == null\n      }\n    },\n    key: ySyncPluginKey,\n    state: {\n      init: (initargs, state) => {\n        return {\n          type: yXmlFragment,\n          doc: yXmlFragment.doc,\n          binding: null,\n          snapshot: null,\n          prevSnapshot: null,\n          isChangeOrigin: false,\n          colors,\n          colorMapping,\n          permanentUserData\n        }\n      },\n      apply: (tr, pluginState) => {\n        const change = tr.getMeta(ySyncPluginKey)\n        if (change !== undefined) {\n          pluginState = Object.assign({}, pluginState)\n          for (const key in change) {\n            pluginState[key] = change[key]\n          }\n        }\n        // always set isChangeOrigin. If undefined, this is not change origin.\n        pluginState.isChangeOrigin = change !== undefined && !!change.isChangeOrigin\n        if (pluginState.binding !== null) {\n          if (change !== undefined && (change.snapshot != null || change.prevSnapshot != null)) {\n            // snapshot changed, rerender next\n            eventloop.timeout(0, () => {\n              if (pluginState.binding == null || pluginState.binding.isDestroyed) {\n                return\n              }\n              if (change.restore == null) {\n                pluginState.binding._renderSnapshot(change.snapshot, change.prevSnapshot, pluginState)\n              } else {\n                pluginState.binding._renderSnapshot(change.snapshot, change.snapshot, pluginState)\n                // reset to current prosemirror state\n                delete pluginState.restore\n                delete pluginState.snapshot\n                delete pluginState.prevSnapshot\n                pluginState.binding._prosemirrorChanged(pluginState.binding.prosemirrorView.state.doc)\n              }\n            })\n          }\n        }\n        return pluginState\n      }\n    },\n    view: view => {\n      const binding = new ProsemirrorBinding(yXmlFragment, view)\n      if (rerenderTimeoutId != null) {\n        clearTimeout(rerenderTimeoutId)\n      }\n      // Make sure this is called in a separate context\n      rerenderTimeoutId = eventloop.timeout(0, () => {\n        binding._forceRerender()\n        view.dispatch(view.state.tr.setMeta(ySyncPluginKey, { binding }))\n        onFirstRender()\n      })\n      return {\n        update: () => {\n          const pluginState = plugin.getState(view.state)\n          if (pluginState.snapshot == null && pluginState.prevSnapshot == null) {\n            if (changedInitialContent || view.state.doc.content.findDiffStart(view.state.doc.type.createAndFill().content) !== null) {\n              changedInitialContent = true\n              binding._prosemirrorChanged(view.state.doc)\n            }\n          }\n        },\n        destroy: () => {\n          clearTimeout(rerenderTimeoutId)\n          binding.destroy()\n        }\n      }\n    }\n  })\n  return plugin\n}\n\n/**\n * @param {any} tr\n * @param {any} relSel\n * @param {ProsemirrorBinding} binding\n */\nconst restoreRelativeSelection = (tr, relSel, binding) => {\n  if (relSel !== null && relSel.anchor !== null && relSel.head !== null) {\n    const anchor = relativePositionToAbsolutePosition(binding.doc, binding.type, relSel.anchor, binding.mapping)\n    const head = relativePositionToAbsolutePosition(binding.doc, binding.type, relSel.head, binding.mapping)\n    if (anchor !== null && head !== null) {\n      tr = tr.setSelection(TextSelection.create(tr.doc, anchor, head))\n    }\n  }\n}\n\nexport const getRelativeSelection = (pmbinding, state) => ({\n  anchor: absolutePositionToRelativePosition(state.selection.anchor, pmbinding.type, pmbinding.mapping),\n  head: absolutePositionToRelativePosition(state.selection.head, pmbinding.type, pmbinding.mapping)\n})\n\n/**\n * Binding for prosemirror.\n *\n * @protected\n */\nexport class ProsemirrorBinding {\n  /**\n   * @param {Y.XmlFragment} yXmlFragment The bind source\n   * @param {any} prosemirrorView The target binding\n   */\n  constructor (yXmlFragment, prosemirrorView) {\n    this.type = yXmlFragment\n    this.prosemirrorView = prosemirrorView\n    this.mux = createMutex()\n    this.isDestroyed = false\n    /**\n     * @type {ProsemirrorMapping}\n     */\n    this.mapping = new Map()\n    this._observeFunction = this._typeChanged.bind(this)\n    /**\n     * @type {Y.Doc}\n     */\n    // @ts-ignore\n    this.doc = yXmlFragment.doc\n    /**\n     * current selection as relative positions in the Yjs model\n     */\n    this.beforeTransactionSelection = null\n    this.beforeAllTransactions = () => {\n      if (this.beforeTransactionSelection === null) {\n        this.beforeTransactionSelection = getRelativeSelection(this, prosemirrorView.state)\n      }\n    }\n    this.afterAllTransactions = () => {\n      this.beforeTransactionSelection = null\n    }\n\n    this.doc.on('beforeAllTransactions', this.beforeAllTransactions)\n    this.doc.on('afterAllTransactions', this.afterAllTransactions)\n    yXmlFragment.observeDeep(this._observeFunction)\n\n    this._domSelectionInView = null\n  }\n\n  /**\n   * Create a transaction for changing the prosemirror state.\n   *\n   * @returns\n   */\n  get _tr () {\n    return this.prosemirrorView.state.tr.setMeta('addToHistory', false)\n  }\n\n  _isLocalCursorInView () {\n    if (!this.prosemirrorView.hasFocus()) return false\n    if (environment.isBrowser && this._domSelectionInView === null) {\n      // Calculate the domSelectionInView and clear by next tick after all events are finished\n      eventloop.timeout(0, () => {\n        this._domSelectionInView = null\n      })\n      this._domSelectionInView = this._isDomSelectionInView()\n    }\n    return this._domSelectionInView\n  }\n\n  _isDomSelectionInView () {\n    const selection = this.prosemirrorView._root.getSelection()\n\n    const range = this.prosemirrorView._root.createRange()\n    range.setStart(selection.anchorNode, selection.anchorOffset)\n    range.setEnd(selection.focusNode, selection.focusOffset)\n\n    // This is a workaround for an edgecase where getBoundingClientRect will\n    // return zero values if the selection is collapsed at the start of a newline\n    // see reference here: https://stackoverflow.com/a/59780954\n    const rects = range.getClientRects()\n    if (rects.length === 0) {\n      // probably buggy newline behavior, explicitly select the node contents\n      if (range.startContainer && range.collapsed) {\n        range.selectNodeContents(range.startContainer)\n      }\n    }\n\n    const bounding = range.getBoundingClientRect()\n    const documentElement = dom.doc.documentElement\n\n    return bounding.bottom >= 0 && bounding.right >= 0 &&\n      bounding.left <= (window.innerWidth || documentElement.clientWidth || 0) &&\n      bounding.top <= (window.innerHeight || documentElement.clientHeight || 0)\n  }\n\n  renderSnapshot (snapshot, prevSnapshot) {\n    if (!prevSnapshot) {\n      prevSnapshot = Y.createSnapshot(Y.createDeleteSet(), new Map())\n    }\n    this.prosemirrorView.dispatch(this._tr.setMeta(ySyncPluginKey, { snapshot, prevSnapshot }))\n  }\n\n  unrenderSnapshot () {\n    this.mapping = new Map()\n    this.mux(() => {\n      const fragmentContent = this.type.toArray().map(t => createNodeFromYElement(/** @type {Y.XmlElement} */ (t), this.prosemirrorView.state.schema, this.mapping)).filter(n => n !== null)\n      // @ts-ignore\n      const tr = this._tr.replace(0, this.prosemirrorView.state.doc.content.size, new PModel.Slice(new PModel.Fragment(fragmentContent), 0, 0))\n      tr.setMeta(ySyncPluginKey, { snapshot: null, prevSnapshot: null })\n      this.prosemirrorView.dispatch(tr)\n    })\n  }\n\n  _forceRerender () {\n    this.mapping = new Map()\n    this.mux(() => {\n      const fragmentContent = this.type.toArray().map(t => createNodeFromYElement(/** @type {Y.XmlElement} */ (t), this.prosemirrorView.state.schema, this.mapping)).filter(n => n !== null)\n      // @ts-ignore\n      const tr = this._tr.replace(0, this.prosemirrorView.state.doc.content.size, new PModel.Slice(new PModel.Fragment(fragmentContent), 0, 0))\n      this.prosemirrorView.dispatch(tr.setMeta(ySyncPluginKey, { isChangeOrigin: true }))\n    })\n  }\n\n  /**\n   * @param {Y.Snapshot} snapshot\n   * @param {Y.Snapshot} prevSnapshot\n   * @param {Object} pluginState\n   */\n  _renderSnapshot (snapshot, prevSnapshot, pluginState) {\n    if (!snapshot) {\n      snapshot = Y.snapshot(this.doc)\n    }\n    // clear mapping because we are going to rerender\n    this.mapping = new Map()\n    this.mux(() => {\n      this.doc.transact(transaction => {\n        // before rendering, we are going to sanitize ops and split deleted ops\n        // if they were deleted by seperate users.\n        const pud = pluginState.permanentUserData\n        if (pud) {\n          pud.dss.forEach(ds => {\n            Y.iterateDeletedStructs(transaction, ds, item => {})\n          })\n        }\n        const computeYChange = (type, id) => {\n          const user = type === 'added' ? pud.getUserByClientId(id.client) : pud.getUserByDeletedId(id)\n          return {\n            user,\n            type,\n            color: getUserColor(pluginState.colorMapping, pluginState.colors, user)\n          }\n        }\n        // Create document fragment and render\n        const fragmentContent = Y.typeListToArraySnapshot(this.type, new Y.Snapshot(prevSnapshot.ds, snapshot.sv)).map(t => {\n          if (!t._item.deleted || isVisible(t._item, snapshot) || isVisible(t._item, prevSnapshot)) {\n            return createNodeFromYElement(t, this.prosemirrorView.state.schema, new Map(), snapshot, prevSnapshot, computeYChange)\n          } else {\n            // No need to render elements that are not visible by either snapshot.\n            // If a client adds and deletes content in the same snapshot the element is not visible by either snapshot.\n            return null\n          }\n        }).filter(n => n !== null)\n        // @ts-ignore\n        const tr = this._tr.replace(0, this.prosemirrorView.state.doc.content.size, new PModel.Slice(new PModel.Fragment(fragmentContent), 0, 0))\n        this.prosemirrorView.dispatch(tr.setMeta(ySyncPluginKey, { isChangeOrigin: true }))\n      }, ySyncPluginKey)\n    })\n  }\n\n  /**\n   * @param {Array<Y.YEvent<any>>} events\n   * @param {Y.Transaction} transaction\n   */\n  _typeChanged (events, transaction) {\n    const syncState = ySyncPluginKey.getState(this.prosemirrorView.state)\n    if (events.length === 0 || syncState.snapshot != null || syncState.prevSnapshot != null) {\n      // drop out if snapshot is active\n      this.renderSnapshot(syncState.snapshot, syncState.prevSnapshot)\n      return\n    }\n    this.mux(() => {\n      /**\n       * @param {any} _\n       * @param {Y.AbstractType<any>} type\n       */\n      const delType = (_, type) => this.mapping.delete(type)\n      Y.iterateDeletedStructs(transaction, transaction.deleteSet, struct => struct.constructor === Y.Item && this.mapping.delete(/** @type {Y.ContentType} */ (/** @type {Y.Item} */ (struct).content).type))\n      transaction.changed.forEach(delType)\n      transaction.changedParentTypes.forEach(delType)\n      const fragmentContent = this.type.toArray().map(t => createNodeIfNotExists(/** @type {Y.XmlElement | Y.XmlHook} */ (t), this.prosemirrorView.state.schema, this.mapping)).filter(n => n !== null)\n      // @ts-ignore\n      let tr = this._tr.replace(0, this.prosemirrorView.state.doc.content.size, new PModel.Slice(new PModel.Fragment(fragmentContent), 0, 0))\n      restoreRelativeSelection(tr, this.beforeTransactionSelection, this)\n      tr = tr.setMeta(ySyncPluginKey, { isChangeOrigin: true })\n      if (this.beforeTransactionSelection !== null && this._isLocalCursorInView()) {\n        tr.scrollIntoView()\n      }\n      this.prosemirrorView.dispatch(tr)\n    })\n  }\n\n  _prosemirrorChanged (doc) {\n    this.mux(() => {\n      this.doc.transact(() => {\n        updateYFragment(this.doc, this.type, doc, this.mapping)\n        this.beforeTransactionSelection = getRelativeSelection(this, this.prosemirrorView.state)\n      }, ySyncPluginKey)\n    })\n  }\n\n  destroy () {\n    this.isDestroyed = true\n    this.type.unobserveDeep(this._observeFunction)\n    this.doc.off('beforeAllTransactions', this.beforeAllTransactions)\n    this.doc.off('afterAllTransactions', this.afterAllTransactions)\n  }\n}\n\n/**\n * @private\n * @param {Y.XmlElement | Y.XmlHook} el\n * @param {PModel.Schema} schema\n * @param {ProsemirrorMapping} mapping\n * @param {Y.Snapshot} [snapshot]\n * @param {Y.Snapshot} [prevSnapshot]\n * @param {function('removed' | 'added', Y.ID):any} [computeYChange]\n * @return {PModel.Node | null}\n */\nconst createNodeIfNotExists = (el, schema, mapping, snapshot, prevSnapshot, computeYChange) => {\n  const node = /** @type {PModel.Node} */ (mapping.get(el))\n  if (node === undefined) {\n    if (el instanceof Y.XmlElement) {\n      return createNodeFromYElement(el, schema, mapping, snapshot, prevSnapshot, computeYChange)\n    } else {\n      throw error.methodUnimplemented() // we are currently not handling hooks\n    }\n  }\n  return node\n}\n\n/**\n * @private\n * @param {Y.XmlElement} el\n * @param {any} schema\n * @param {ProsemirrorMapping} mapping\n * @param {Y.Snapshot} [snapshot]\n * @param {Y.Snapshot} [prevSnapshot]\n * @param {function('removed' | 'added', Y.ID):any} [computeYChange]\n * @return {PModel.Node | null} Returns node if node could be created. Otherwise it deletes the yjs type and returns null\n */\nconst createNodeFromYElement = (el, schema, mapping, snapshot, prevSnapshot, computeYChange) => {\n  const children = []\n  const createChildren = type => {\n    if (type.constructor === Y.XmlElement) {\n      const n = createNodeIfNotExists(type, schema, mapping, snapshot, prevSnapshot, computeYChange)\n      if (n !== null) {\n        children.push(n)\n      }\n    } else {\n      const ns = createTextNodesFromYText(type, schema, mapping, snapshot, prevSnapshot, computeYChange)\n      if (ns !== null) {\n        ns.forEach(textchild => {\n          if (textchild !== null) {\n            children.push(textchild)\n          }\n        })\n      }\n    }\n  }\n  if (snapshot === undefined || prevSnapshot === undefined) {\n    el.toArray().forEach(createChildren)\n  } else {\n    Y.typeListToArraySnapshot(el, new Y.Snapshot(prevSnapshot.ds, snapshot.sv)).forEach(createChildren)\n  }\n  try {\n    const attrs = el.getAttributes(snapshot)\n    if (snapshot !== undefined) {\n      if (!isVisible(/** @type {Y.Item} */ (el._item), snapshot)) {\n        attrs.ychange = computeYChange ? computeYChange('removed', /** @type {Y.Item} */ (el._item).id) : { type: 'removed' }\n      } else if (!isVisible(/** @type {Y.Item} */ (el._item), prevSnapshot)) {\n        attrs.ychange = computeYChange ? computeYChange('added', /** @type {Y.Item} */ (el._item).id) : { type: 'added' }\n      }\n    }\n    const node = schema.node(el.nodeName, attrs, children)\n    mapping.set(el, node)\n    return node\n  } catch (e) {\n    // an error occured while creating the node. This is probably a result of a concurrent action.\n    /** @type {Y.Doc} */ (el.doc).transact(transaction => {\n      /** @type {Y.Item} */ (el._item).delete(transaction)\n    }, ySyncPluginKey)\n    mapping.delete(el)\n    return null\n  }\n}\n\n/**\n * @private\n * @param {Y.XmlText} text\n * @param {any} schema\n * @param {ProsemirrorMapping} mapping\n * @param {Y.Snapshot} [snapshot]\n * @param {Y.Snapshot} [prevSnapshot]\n * @param {function('removed' | 'added', Y.ID):any} [computeYChange]\n * @return {Array<PModel.Node>|null}\n */\nconst createTextNodesFromYText = (text, schema, mapping, snapshot, prevSnapshot, computeYChange) => {\n  const nodes = []\n  const deltas = text.toDelta(snapshot, prevSnapshot, computeYChange)\n  try {\n    for (let i = 0; i < deltas.length; i++) {\n      const delta = deltas[i]\n      const marks = []\n      for (const markName in delta.attributes) {\n        marks.push(schema.mark(markName, delta.attributes[markName]))\n      }\n      nodes.push(schema.text(delta.insert, marks))\n    }\n  } catch (e) {\n    // an error occured while creating the node. This is probably a result of a concurrent action.\n    /** @type {Y.Doc} */ (text.doc).transact(transaction => {\n      /** @type {Y.Item} */ (text._item).delete(transaction)\n    }, ySyncPluginKey)\n    return null\n  }\n  // @ts-ignore\n  return nodes\n}\n\n/**\n * @private\n * @param {Array<any>} nodes prosemirror node\n * @param {ProsemirrorMapping} mapping\n * @return {Y.XmlText}\n */\nconst createTypeFromTextNodes = (nodes, mapping) => {\n  const type = new Y.XmlText()\n  const delta = nodes.map(node => ({\n    // @ts-ignore\n    insert: node.text,\n    attributes: marksToAttributes(node.marks)\n  }))\n  type.applyDelta(delta)\n  mapping.set(type, nodes)\n  return type\n}\n\n/**\n * @private\n * @param {any} node prosemirror node\n * @param {ProsemirrorMapping} mapping\n * @return {Y.XmlElement}\n */\nconst createTypeFromElementNode = (node, mapping) => {\n  const type = new Y.XmlElement(node.type.name)\n  for (const key in node.attrs) {\n    const val = node.attrs[key]\n    if (val !== null && key !== 'ychange') {\n      type.setAttribute(key, val)\n    }\n  }\n  type.insert(0, normalizePNodeContent(node).map(n => createTypeFromTextOrElementNode(n, mapping)))\n  mapping.set(type, node)\n  return type\n}\n\n/**\n * @private\n * @param {PModel.Node|Array<PModel.Node>} node prosemirror text node\n * @param {ProsemirrorMapping} mapping\n * @return {Y.XmlElement|Y.XmlText}\n */\nconst createTypeFromTextOrElementNode = (node, mapping) => node instanceof Array ? createTypeFromTextNodes(node, mapping) : createTypeFromElementNode(node, mapping)\n\nconst isObject = (val) => typeof val === 'object' && val !== null\n\nconst equalAttrs = (pattrs, yattrs) => {\n  const keys = Object.keys(pattrs).filter(key => pattrs[key] !== null)\n  let eq = keys.length === Object.keys(yattrs).filter(key => yattrs[key] !== null).length\n  for (let i = 0; i < keys.length && eq; i++) {\n    const key = keys[i]\n    const l = pattrs[key]\n    const r = yattrs[key]\n    eq = key === 'ychange' || l === r || (isObject(l) && isObject(r) && equalAttrs(l, r))\n  }\n  return eq\n}\n\n/**\n * @typedef {Array<Array<PModel.Node>|PModel.Node>} NormalizedPNodeContent\n */\n\n/**\n * @param {any} pnode\n * @return {NormalizedPNodeContent}\n */\nconst normalizePNodeContent = pnode => {\n  const c = pnode.content.content\n  const res = []\n  for (let i = 0; i < c.length; i++) {\n    const n = c[i]\n    if (n.isText) {\n      const textNodes = []\n      for (let tnode = c[i]; i < c.length && tnode.isText; tnode = c[++i]) {\n        textNodes.push(tnode)\n      }\n      i--\n      res.push(textNodes)\n    } else {\n      res.push(n)\n    }\n  }\n  return res\n}\n\n/**\n * @param {Y.XmlText} ytext\n * @param {Array<any>} ptexts\n */\nconst equalYTextPText = (ytext, ptexts) => {\n  const delta = ytext.toDelta()\n  return delta.length === ptexts.length && delta.every((d, i) => d.insert === /** @type {any} */ (ptexts[i]).text && object.keys(d.attributes || {}).length === ptexts[i].marks.length && ptexts[i].marks.every(mark => equalAttrs(d.attributes[mark.type.name] || {}, mark.attrs)))\n}\n\n/**\n * @param {Y.XmlElement|Y.XmlText|Y.XmlHook} ytype\n * @param {any|Array<any>} pnode\n */\nconst equalYTypePNode = (ytype, pnode) => {\n  if (ytype instanceof Y.XmlElement && !(pnode instanceof Array) && matchNodeName(ytype, pnode)) {\n    const normalizedContent = normalizePNodeContent(pnode)\n    return ytype._length === normalizedContent.length && equalAttrs(ytype.getAttributes(), pnode.attrs) && ytype.toArray().every((ychild, i) => equalYTypePNode(ychild, normalizedContent[i]))\n  }\n  return ytype instanceof Y.XmlText && pnode instanceof Array && equalYTextPText(ytype, pnode)\n}\n\n/**\n * @param {PModel.Node | Array<PModel.Node> | undefined} mapped\n * @param {PModel.Node | Array<PModel.Node>} pcontent\n */\nconst mappedIdentity = (mapped, pcontent) => mapped === pcontent || (mapped instanceof Array && pcontent instanceof Array && mapped.length === pcontent.length && mapped.every((a, i) => pcontent[i] === a))\n\n/**\n * @param {Y.XmlElement} ytype\n * @param {PModel.Node} pnode\n * @param {ProsemirrorMapping} mapping\n * @return {{ foundMappedChild: boolean, equalityFactor: number }}\n */\nconst computeChildEqualityFactor = (ytype, pnode, mapping) => {\n  const yChildren = ytype.toArray()\n  const pChildren = normalizePNodeContent(pnode)\n  const pChildCnt = pChildren.length\n  const yChildCnt = yChildren.length\n  const minCnt = math.min(yChildCnt, pChildCnt)\n  let left = 0\n  let right = 0\n  let foundMappedChild = false\n  for (; left < minCnt; left++) {\n    const leftY = yChildren[left]\n    const leftP = pChildren[left]\n    if (mappedIdentity(mapping.get(leftY), leftP)) {\n      foundMappedChild = true// definite (good) match!\n    } else if (!equalYTypePNode(leftY, leftP)) {\n      break\n    }\n  }\n  for (; left + right < minCnt; right++) {\n    const rightY = yChildren[yChildCnt - right - 1]\n    const rightP = pChildren[pChildCnt - right - 1]\n    if (mappedIdentity(mapping.get(rightY), rightP)) {\n      foundMappedChild = true\n    } else if (!equalYTypePNode(rightY, rightP)) {\n      break\n    }\n  }\n  return {\n    equalityFactor: left + right,\n    foundMappedChild\n  }\n}\n\nconst ytextTrans = ytext => {\n  let str = ''\n  /**\n   * @type {Y.Item|null}\n   */\n  let n = ytext._start\n  const nAttrs = {}\n  while (n !== null) {\n    if (!n.deleted) {\n      if (n.countable && n.content instanceof Y.ContentString) {\n        str += n.content.str\n      } else if (n.content instanceof Y.ContentFormat) {\n        nAttrs[n.content.key] = null\n      }\n    }\n    n = n.right\n  }\n  return {\n    str,\n    nAttrs\n  }\n}\n\n/**\n * @todo test this more\n *\n * @param {Y.Text} ytext\n * @param {Array<any>} ptexts\n * @param {ProsemirrorMapping} mapping\n */\nconst updateYText = (ytext, ptexts, mapping) => {\n  mapping.set(ytext, ptexts)\n  const { nAttrs, str } = ytextTrans(ytext)\n  const content = ptexts.map(p => ({ insert: /** @type {any} */ (p).text, attributes: Object.assign({}, nAttrs, marksToAttributes(p.marks)) }))\n  const { insert, remove, index } = simpleDiff(str, content.map(c => c.insert).join(''))\n  ytext.delete(index, remove)\n  ytext.insert(index, insert)\n  ytext.applyDelta(content.map(c => ({ retain: c.insert.length, attributes: c.attributes })))\n}\n\nconst marksToAttributes = marks => {\n  const pattrs = {}\n  marks.forEach(mark => {\n    if (mark.type.name !== 'ychange') {\n      pattrs[mark.type.name] = mark.attrs\n    }\n  })\n  return pattrs\n}\n\n/**\n * @private\n * @param {{transact: Function}} y\n * @param {Y.XmlFragment} yDomFragment\n * @param {any} pNode\n * @param {ProsemirrorMapping} mapping\n */\nexport const updateYFragment = (y, yDomFragment, pNode, mapping) => {\n  if (yDomFragment instanceof Y.XmlElement && yDomFragment.nodeName !== pNode.type.name) {\n    throw new Error('node name mismatch!')\n  }\n  mapping.set(yDomFragment, pNode)\n  // update attributes\n  if (yDomFragment instanceof Y.XmlElement) {\n    const yDomAttrs = yDomFragment.getAttributes()\n    const pAttrs = pNode.attrs\n    for (const key in pAttrs) {\n      if (pAttrs[key] !== null) {\n        if (yDomAttrs[key] !== pAttrs[key] && key !== 'ychange') {\n          yDomFragment.setAttribute(key, pAttrs[key])\n        }\n      } else {\n        yDomFragment.removeAttribute(key)\n      }\n    }\n    // remove all keys that are no longer in pAttrs\n    for (const key in yDomAttrs) {\n      if (pAttrs[key] === undefined) {\n        yDomFragment.removeAttribute(key)\n      }\n    }\n  }\n  // update children\n  const pChildren = normalizePNodeContent(pNode)\n  const pChildCnt = pChildren.length\n  const yChildren = yDomFragment.toArray()\n  const yChildCnt = yChildren.length\n  const minCnt = math.min(pChildCnt, yChildCnt)\n  let left = 0\n  let right = 0\n  // find number of matching elements from left\n  for (;left < minCnt; left++) {\n    const leftY = yChildren[left]\n    const leftP = pChildren[left]\n    if (!mappedIdentity(mapping.get(leftY), leftP)) {\n      if (equalYTypePNode(leftY, leftP)) {\n        // update mapping\n        mapping.set(leftY, leftP)\n      } else {\n        break\n      }\n    }\n  }\n  // find number of matching elements from right\n  for (;right + left + 1 < minCnt; right++) {\n    const rightY = yChildren[yChildCnt - right - 1]\n    const rightP = pChildren[pChildCnt - right - 1]\n    if (!mappedIdentity(mapping.get(rightY), rightP)) {\n      if (equalYTypePNode(rightY, rightP)) {\n        // update mapping\n        mapping.set(rightY, rightP)\n      } else {\n        break\n      }\n    }\n  }\n  y.transact(() => {\n    // try to compare and update\n    while (yChildCnt - left - right > 0 && pChildCnt - left - right > 0) {\n      const leftY = yChildren[left]\n      const leftP = pChildren[left]\n      const rightY = yChildren[yChildCnt - right - 1]\n      const rightP = pChildren[pChildCnt - right - 1]\n      if (leftY instanceof Y.XmlText && leftP instanceof Array) {\n        if (!equalYTextPText(leftY, leftP)) {\n          updateYText(leftY, leftP, mapping)\n        }\n        left += 1\n      } else {\n        let updateLeft = leftY instanceof Y.XmlElement && matchNodeName(leftY, leftP)\n        let updateRight = rightY instanceof Y.XmlElement && matchNodeName(rightY, rightP)\n        if (updateLeft && updateRight) {\n          // decide which which element to update\n          const equalityLeft = computeChildEqualityFactor(/** @type {Y.XmlElement} */ (leftY), /** @type {PModel.Node} */ (leftP), mapping)\n          const equalityRight = computeChildEqualityFactor(/** @type {Y.XmlElement} */ (rightY), /** @type {PModel.Node} */ (rightP), mapping)\n          if (equalityLeft.foundMappedChild && !equalityRight.foundMappedChild) {\n            updateRight = false\n          } else if (!equalityLeft.foundMappedChild && equalityRight.foundMappedChild) {\n            updateLeft = false\n          } else if (equalityLeft.equalityFactor < equalityRight.equalityFactor) {\n            updateLeft = false\n          } else {\n            updateRight = false\n          }\n        }\n        if (updateLeft) {\n          updateYFragment(y, /** @type {Y.XmlFragment} */ (leftY), /** @type {PModel.Node} */ (leftP), mapping)\n          left += 1\n        } else if (updateRight) {\n          updateYFragment(y, /** @type {Y.XmlFragment} */ (rightY), /** @type {PModel.Node} */ (rightP), mapping)\n          right += 1\n        } else {\n          yDomFragment.delete(left, 1)\n          yDomFragment.insert(left, [createTypeFromTextOrElementNode(leftP, mapping)])\n          left += 1\n        }\n      }\n    }\n    const yDelLen = yChildCnt - left - right\n    if (yChildCnt === 1 && pChildCnt === 0 && yChildren[0] instanceof Y.XmlText) {\n      // Edge case handling https://github.com/yjs/y-prosemirror/issues/108\n      // Only delete the content of the Y.Text to retain remote changes on the same Y.Text object\n      yChildren[0].delete(0, yChildren[0].length)\n    } else if (yDelLen > 0) {\n      yDomFragment.delete(left, yDelLen)\n    }\n    if (left + right < pChildCnt) {\n      const ins = []\n      for (let i = left; i < pChildCnt - right; i++) {\n        ins.push(createTypeFromTextOrElementNode(pChildren[i], mapping))\n      }\n      yDomFragment.insert(left, ins)\n    }\n  }, ySyncPluginKey)\n}\n\n/**\n * @function\n * @param {Y.XmlElement} yElement\n * @param {any} pNode Prosemirror Node\n */\nconst matchNodeName = (yElement, pNode) => !(pNode instanceof Array) && yElement.nodeName === pNode.type.name\n","import { updateYFragment } from './plugins/sync-plugin.js' // eslint-disable-line\nimport { ySyncPluginKey } from './plugins/keys.js'\nimport * as Y from 'yjs'\nimport { EditorView } from 'prosemirror-view' // eslint-disable-line\nimport { Node, Schema } from 'prosemirror-model' // eslint-disable-line\nimport * as error from 'lib0/error'\nimport * as map from 'lib0/map'\nimport * as eventloop from 'lib0/eventloop'\n\n/**\n * Either a node if type is YXmlElement or an Array of text nodes if YXmlText\n * @typedef {Map<Y.AbstractType, Node | Array<Node>>} ProsemirrorMapping\n */\n\n/**\n * Is null if no timeout is in progress.\n * Is defined if a timeout is in progress.\n * Maps from view\n * @type {Map<EditorView, Map<any, any>>|null}\n */\nlet viewsToUpdate = null\n\nconst updateMetas = () => {\n  const ups = /** @type {Map<EditorView, Map<any, any>>} */ (viewsToUpdate)\n  viewsToUpdate = null\n  ups.forEach((metas, view) => {\n    const tr = view.state.tr\n    const syncState = ySyncPluginKey.getState(view.state)\n    if (syncState && syncState.binding && !syncState.binding.isDestroyed) {\n      metas.forEach((val, key) => {\n        tr.setMeta(key, val)\n      })\n      view.dispatch(tr)\n    }\n  })\n}\n\nexport const setMeta = (view, key, value) => {\n  if (!viewsToUpdate) {\n    viewsToUpdate = new Map()\n    eventloop.timeout(0, updateMetas)\n  }\n  map.setIfUndefined(viewsToUpdate, view, map.create).set(key, value)\n}\n\n/**\n * Transforms a Prosemirror based absolute position to a Yjs Cursor (relative position in the Yjs model).\n *\n * @param {number} pos\n * @param {Y.XmlFragment} type\n * @param {ProsemirrorMapping} mapping\n * @return {any} relative position\n */\nexport const absolutePositionToRelativePosition = (pos, type, mapping) => {\n  if (pos === 0) {\n    return Y.createRelativePositionFromTypeIndex(type, 0)\n  }\n  /**\n   * @type {any}\n   */\n  let n = type._first === null ? null : /** @type {Y.ContentType} */ (type._first.content).type\n  while (n !== null && type !== n) {\n    if (n instanceof Y.XmlText) {\n      if (n._length >= pos) {\n        return Y.createRelativePositionFromTypeIndex(n, pos)\n      } else {\n        pos -= n._length\n      }\n      if (n._item !== null && n._item.next !== null) {\n        n = /** @type {Y.ContentType} */ (n._item.next.content).type\n      } else {\n        do {\n          n = n._item === null ? null : n._item.parent\n          pos--\n        } while (n !== type && n !== null && n._item !== null && n._item.next === null)\n        if (n !== null && n !== type) {\n          // @ts-gnore we know that n.next !== null because of above loop conditition\n          n = n._item === null ? null : /** @type {Y.ContentType} */ (/** @type Y.Item */ (n._item.next).content).type\n        }\n      }\n    } else {\n      const pNodeSize = /** @type {any} */ (mapping.get(n) || { nodeSize: 0 }).nodeSize\n      if (n._first !== null && pos < pNodeSize) {\n        n = /** @type {Y.ContentType} */ (n._first.content).type\n        pos--\n      } else {\n        if (pos === 1 && n._length === 0 && pNodeSize > 1) {\n          // edge case, should end in this paragraph\n          return new Y.RelativePosition(n._item === null ? null : n._item.id, n._item === null ? Y.findRootTypeKey(n) : null, null)\n        }\n        pos -= pNodeSize\n        if (n._item !== null && n._item.next !== null) {\n          n = /** @type {Y.ContentType} */ (n._item.next.content).type\n        } else {\n          if (pos === 0) {\n            // set to end of n.parent\n            n = n._item === null ? n : n._item.parent\n            return new Y.RelativePosition(n._item === null ? null : n._item.id, n._item === null ? Y.findRootTypeKey(n) : null, null)\n          }\n          do {\n            n = /** @type {Y.Item} */ (n._item).parent\n            pos--\n          } while (n !== type && /** @type {Y.Item} */ (n._item).next === null)\n          // if n is null at this point, we have an unexpected case\n          if (n !== type) {\n            // We know that n._item.next is defined because of above loop condition\n            n = /** @type {Y.ContentType} */ (/** @type {Y.Item} */ (/** @type {Y.Item} */ (n._item).next).content).type\n          }\n        }\n      }\n    }\n    if (n === null) {\n      throw error.unexpectedCase()\n    }\n    if (pos === 0 && n.constructor !== Y.XmlText && n !== type) { // TODO: set to <= 0\n      return createRelativePosition(n._item.parent, n._item)\n    }\n  }\n  return Y.createRelativePositionFromTypeIndex(type, type._length)\n}\n\nconst createRelativePosition = (type, item) => {\n  let typeid = null\n  let tname = null\n  if (type._item === null) {\n    tname = Y.findRootTypeKey(type)\n  } else {\n    typeid = Y.createID(type._item.id.client, type._item.id.clock)\n  }\n  return new Y.RelativePosition(typeid, tname, item.id)\n}\n\n/**\n * @param {Y.Doc} y\n * @param {Y.XmlFragment} documentType Top level type that is bound to pView\n * @param {any} relPos Encoded Yjs based relative position\n * @param {ProsemirrorMapping} mapping\n * @return {null|number}\n */\nexport const relativePositionToAbsolutePosition = (y, documentType, relPos, mapping) => {\n  const decodedPos = Y.createAbsolutePositionFromRelativePosition(relPos, y)\n  if (decodedPos === null || (decodedPos.type !== documentType && !Y.isParentOf(documentType, decodedPos.type._item))) {\n    return null\n  }\n  let type = decodedPos.type\n  let pos = 0\n  if (type.constructor === Y.XmlText) {\n    pos = decodedPos.index\n  } else if (type._item === null || !type._item.deleted) {\n    let n = type._first\n    let i = 0\n    while (i < type._length && i < decodedPos.index && n !== null) {\n      if (!n.deleted) {\n        const t = /** @type {Y.ContentType} */ (n.content).type\n        i++\n        if (t instanceof Y.XmlText) {\n          pos += t._length\n        } else {\n          pos += /** @type {any} */ (mapping.get(t)).nodeSize\n        }\n      }\n      n = /** @type {Y.Item} */ (n.right)\n    }\n    pos += 1 // increase because we go out of n\n  }\n  while (type !== documentType && type._item !== null) {\n    // @ts-ignore\n    const parent = type._item.parent\n    // @ts-ignore\n    if (parent._item === null || !parent._item.deleted) {\n      pos += 1 // the start tag\n      let n = /** @type {Y.AbstractType} */ (parent)._first\n      // now iterate until we found type\n      while (n !== null) {\n        const contentType = /** @type {Y.ContentType} */ (n.content).type\n        if (contentType === type) {\n          break\n        }\n        if (!n.deleted) {\n          if (contentType instanceof Y.XmlText) {\n            pos += contentType._length\n          } else {\n            pos += /** @type {any} */ (mapping.get(contentType)).nodeSize\n          }\n        }\n        n = n.right\n      }\n    }\n    type = /** @type {Y.AbstractType} */ (parent)\n  }\n  return pos - 1 // we don't count the most outer tag, because it is a fragment\n}\n\n/**\n * Utility method to convert a Prosemirror Doc Node into a Y.Doc.\n *\n * This can be used when importing existing content to Y.Doc for the first time,\n * note that this should not be used to rehydrate a Y.Doc from a database once\n * collaboration has begun as all history will be lost\n *\n * @param {Node} doc\n * @param {string} xmlFragment\n * @return {Y.Doc}\n */\nexport function prosemirrorToYDoc (doc, xmlFragment = 'prosemirror') {\n  const ydoc = new Y.Doc()\n  const type = /** @type {Y.XmlFragment} */ (ydoc.get(xmlFragment, Y.XmlFragment))\n  if (!type.doc) {\n    return ydoc\n  }\n\n  prosemirrorToYXmlFragment(doc, type)\n  return type.doc\n}\n\n/**\n * Utility method to update an empty Y.XmlFragment with content from a Prosemirror Doc Node.\n *\n * This can be used when importing existing content to Y.Doc for the first time,\n * note that this should not be used to rehydrate a Y.Doc from a database once\n * collaboration has begun as all history will be lost\n *\n * Note: The Y.XmlFragment does not need to be part of a Y.Doc document at the time that this\n * method is called, but it must be added before any other operations are performed on it.\n *\n * @param {Node} doc prosemirror document.\n * @param {Y.XmlFragment} [xmlFragment] If supplied, an xml fragment to be\n *   populated from the prosemirror state; otherwise a new XmlFragment will be created.\n * @return {Y.XmlFragment}\n */\nexport function prosemirrorToYXmlFragment (doc, xmlFragment) {\n  const type = xmlFragment || new Y.XmlFragment()\n  const ydoc = type.doc ? type.doc : { transact: (transaction) => transaction(undefined) }\n  updateYFragment(ydoc, type, doc, new Map())\n  return type\n}\n\n/**\n * Utility method to convert Prosemirror compatible JSON into a Y.Doc.\n *\n * This can be used when importing existing content to Y.Doc for the first time,\n * note that this should not be used to rehydrate a Y.Doc from a database once\n * collaboration has begun as all history will be lost\n *\n * @param {Schema} schema\n * @param {any} state\n * @param {string} xmlFragment\n * @return {Y.Doc}\n */\nexport function prosemirrorJSONToYDoc (schema, state, xmlFragment = 'prosemirror') {\n  const doc = Node.fromJSON(schema, state)\n  return prosemirrorToYDoc(doc, xmlFragment)\n}\n\n/**\n * Utility method to convert Prosemirror compatible JSON to a Y.XmlFragment\n *\n * This can be used when importing existing content to Y.Doc for the first time,\n * note that this should not be used to rehydrate a Y.Doc from a database once\n * collaboration has begun as all history will be lost\n *\n * @param {Schema} schema\n * @param {any} state\n * @param {Y.XmlFragment} [xmlFragment] If supplied, an xml fragment to be\n *   populated from the prosemirror state; otherwise a new XmlFragment will be created.\n * @return {Y.XmlFragment}\n */\nexport function prosemirrorJSONToYXmlFragment (schema, state, xmlFragment) {\n  const doc = Node.fromJSON(schema, state)\n  return prosemirrorToYXmlFragment(doc, xmlFragment)\n}\n\n/**\n * Utility method to convert a Y.Doc to a Prosemirror Doc node.\n *\n * @param {Schema} schema\n * @param {Y.Doc} ydoc\n * @return {Node}\n */\nexport function yDocToProsemirror (schema, ydoc) {\n  const state = yDocToProsemirrorJSON(ydoc)\n  return Node.fromJSON(schema, state)\n}\n\n/**\n * Utility method to convert a Y.XmlFragment to a Prosemirror Doc node.\n *\n * @param {Schema} schema\n * @param {Y.XmlFragment} xmlFragment\n * @return {Node}\n */\nexport function yXmlFragmentToProsemirror (schema, xmlFragment) {\n  const state = yXmlFragmentToProsemirrorJSON(xmlFragment)\n  return Node.fromJSON(schema, state)\n}\n\n/**\n * Utility method to convert a Y.Doc to Prosemirror compatible JSON.\n *\n * @param {Y.Doc} ydoc\n * @param {string} xmlFragment\n * @return {Record<string, any>}\n */\nexport function yDocToProsemirrorJSON (\n  ydoc,\n  xmlFragment = 'prosemirror'\n) {\n  return yXmlFragmentToProsemirrorJSON(ydoc.getXmlFragment(xmlFragment))\n}\n\n/**\n * Utility method to convert a Y.Doc to Prosemirror compatible JSON.\n *\n * @param {Y.XmlFragment} xmlFragment The fragment, which must be part of a Y.Doc.\n * @return {Record<string, any>}\n */\nexport function yXmlFragmentToProsemirrorJSON (xmlFragment) {\n  const items = xmlFragment.toArray()\n\n  function serialize (item) {\n    /**\n     * @type {Object} NodeObject\n     * @property {string} NodeObject.type\n     * @property {Record<string, string>=} NodeObject.attrs\n     * @property {Array<NodeObject>=} NodeObject.content\n     */\n    let response\n\n    // TODO: Must be a better way to detect text nodes than this\n    if (!item.nodeName) {\n      const delta = item.toDelta()\n      response = delta.map((d) => {\n        const text = {\n          type: 'text',\n          text: d.insert\n        }\n\n        if (d.attributes) {\n          text.marks = Object.keys(d.attributes).map((type) => {\n            const attrs = d.attributes[type]\n            const mark = {\n              type\n            }\n\n            if (Object.keys(attrs)) {\n              mark.attrs = attrs\n            }\n\n            return mark\n          })\n        }\n        return text\n      })\n    } else {\n      response = {\n        type: item.nodeName\n      }\n\n      const attrs = item.getAttributes()\n      if (Object.keys(attrs).length) {\n        response.attrs = attrs\n      }\n\n      const children = item.toArray()\n      if (children.length) {\n        response.content = children.map(serialize).flat()\n      }\n    }\n\n    return response\n  }\n\n  return {\n    type: 'doc',\n    content: items.map(serialize)\n  }\n}\n","\nimport * as Y from 'yjs'\nimport { Decoration, DecorationSet } from 'prosemirror-view' // eslint-disable-line\nimport { Plugin } from 'prosemirror-state' // eslint-disable-line\nimport { Awareness } from 'y-protocols/awareness' // eslint-disable-line\nimport { absolutePositionToRelativePosition, relativePositionToAbsolutePosition, setMeta } from '../lib.js'\nimport { yCursorPluginKey, ySyncPluginKey } from './keys.js'\n\nimport * as math from 'lib0/math'\n\n/**\n * Default generator for a cursor element\n *\n * @param {any} user user data\n * @return {HTMLElement}\n */\nexport const defaultCursorBuilder = user => {\n  const cursor = document.createElement('span')\n  cursor.classList.add('ProseMirror-yjs-cursor')\n  cursor.setAttribute('style', `border-color: ${user.color}`)\n  const userDiv = document.createElement('div')\n  userDiv.setAttribute('style', `background-color: ${user.color}`)\n  userDiv.insertBefore(document.createTextNode(user.name), null)\n  const nonbreakingSpace1 = document.createTextNode('\\u2060')\n  const nonbreakingSpace2 = document.createTextNode('\\u2060')\n  cursor.insertBefore(nonbreakingSpace1, null)\n  cursor.insertBefore(userDiv, null)\n  cursor.insertBefore(nonbreakingSpace2, null)\n  return cursor\n}\n\n/**\n * Default generator for the selection attributes\n *\n * @param {any} user user data\n * @return {import('prosemirror-view').DecorationAttrs}\n */\nexport const defaultSelectionBuilder = user => {\n  return {\n    style: `background-color: ${user.color}70`,\n    class: `ProseMirror-yjs-selection`\n  }\n}\n\nconst rxValidColor = /^#[0-9a-fA-F]{6}$/\n\n/**\n * @param {any} state\n * @param {Awareness} awareness\n * @return {any} DecorationSet\n */\nexport const createDecorations = (state, awareness, createCursor, createSelection) => {\n  const ystate = ySyncPluginKey.getState(state)\n  const y = ystate.doc\n  const decorations = []\n  if (ystate.snapshot != null || ystate.prevSnapshot != null || ystate.binding === null) {\n    // do not render cursors while snapshot is active\n    return DecorationSet.create(state.doc, [])\n  }\n  awareness.getStates().forEach((aw, clientId) => {\n    if (clientId === y.clientID) {\n      return\n    }\n    if (aw.cursor != null) {\n      const user = aw.user || {}\n      if (user.color == null) {\n        user.color = '#ffa500'\n      } else if (!rxValidColor.test(user.color)) {\n        // We only support 6-digit RGB colors in y-prosemirror\n        console.warn('A user uses an unsupported color format', user)\n      }\n      if (user.name == null) {\n        user.name = `User: ${clientId}`\n      }\n      let anchor = relativePositionToAbsolutePosition(y, ystate.type, Y.createRelativePositionFromJSON(aw.cursor.anchor), ystate.binding.mapping)\n      let head = relativePositionToAbsolutePosition(y, ystate.type, Y.createRelativePositionFromJSON(aw.cursor.head), ystate.binding.mapping)\n      if (anchor !== null && head !== null) {\n        const maxsize = math.max(state.doc.content.size - 1, 0)\n        anchor = math.min(anchor, maxsize)\n        head = math.min(head, maxsize)\n        decorations.push(Decoration.widget(head, () => createCursor(user), { key: clientId + '', side: 10 }))\n        const from = math.min(anchor, head)\n        const to = math.max(anchor, head)\n        decorations.push(Decoration.inline(from, to, createSelection(user), { inclusiveEnd: true, inclusiveStart: false }))\n      }\n    }\n  })\n  return DecorationSet.create(state.doc, decorations)\n}\n\n/**\n * A prosemirror plugin that listens to awareness information on Yjs.\n * This requires that a `prosemirrorPlugin` is also bound to the prosemirror.\n *\n * @public\n * @param {Awareness} awareness\n * @param {object} [opts]\n * @param {function(any):HTMLElement} [opts.cursorBuilder]\n * @param {function(any):import('prosemirror-view').DecorationAttrs} [opts.selectionBuilder]\n * @param {function(any):any} [opts.getSelection]\n * @param {string} [cursorStateField] By default all editor bindings use the awareness 'cursor' field to propagate cursor information.\n * @return {any}\n */\nexport const yCursorPlugin = (awareness, { cursorBuilder = defaultCursorBuilder, selectionBuilder = defaultSelectionBuilder, getSelection = state => state.selection } = {}, cursorStateField = 'cursor') => new Plugin({\n  key: yCursorPluginKey,\n  state: {\n    init (_, state) {\n      return createDecorations(state, awareness, cursorBuilder, selectionBuilder)\n    },\n    apply (tr, prevState, oldState, newState) {\n      const ystate = ySyncPluginKey.getState(newState)\n      const yCursorState = tr.getMeta(yCursorPluginKey)\n      if ((ystate && ystate.isChangeOrigin) || (yCursorState && yCursorState.awarenessUpdated)) {\n        return createDecorations(newState, awareness, cursorBuilder, selectionBuilder)\n      }\n      return prevState.map(tr.mapping, tr.doc)\n    }\n  },\n  props: {\n    decorations: state => {\n      return yCursorPluginKey.getState(state)\n    }\n  },\n  view: view => {\n    const awarenessListener = () => {\n      // @ts-ignore\n      if (view.docView) {\n        setMeta(view, yCursorPluginKey, { awarenessUpdated: true })\n      }\n    }\n    const updateCursorInfo = () => {\n      const ystate = ySyncPluginKey.getState(view.state)\n      // @note We make implicit checks when checking for the cursor property\n      const current = awareness.getLocalState() || {}\n      if (ystate.binding == null) {\n        return\n      }\n      if (view.hasFocus()) {\n        const selection = getSelection(view.state)\n        /**\n         * @type {Y.RelativePosition}\n         */\n        const anchor = absolutePositionToRelativePosition(selection.anchor, ystate.type, ystate.binding.mapping)\n        /**\n         * @type {Y.RelativePosition}\n         */\n        const head = absolutePositionToRelativePosition(selection.head, ystate.type, ystate.binding.mapping)\n        if (current.cursor == null || !Y.compareRelativePositions(Y.createRelativePositionFromJSON(current.cursor.anchor), anchor) || !Y.compareRelativePositions(Y.createRelativePositionFromJSON(current.cursor.head), head)) {\n          awareness.setLocalStateField(cursorStateField, {\n            anchor, head\n          })\n        }\n      } else if (current.cursor != null && relativePositionToAbsolutePosition(ystate.doc, ystate.type, Y.createRelativePositionFromJSON(current.cursor.anchor), ystate.binding.mapping) !== null) {\n        // delete cursor information if current cursor information is owned by this editor binding\n        awareness.setLocalStateField(cursorStateField, null)\n      }\n    }\n    awareness.on('change', awarenessListener)\n    view.dom.addEventListener('focusin', updateCursorInfo)\n    view.dom.addEventListener('focusout', updateCursorInfo)\n    return {\n      update: updateCursorInfo,\n      destroy: () => {\n        view.dom.removeEventListener('focusin', updateCursorInfo)\n        view.dom.removeEventListener('focusout', updateCursorInfo)\n        awareness.off('change', awarenessListener)\n        awareness.setLocalStateField(cursorStateField, null)\n      }\n    }\n  }\n})\n","\nimport { Plugin } from 'prosemirror-state' // eslint-disable-line\n\nimport { getRelativeSelection } from './sync-plugin.js'\nimport { UndoManager, Item, ContentType, XmlElement, Text } from 'yjs'\nimport { yUndoPluginKey, ySyncPluginKey } from './keys.js'\n\nexport const undo = state => {\n  const undoManager = yUndoPluginKey.getState(state).undoManager\n  if (undoManager != null) {\n    undoManager.undo()\n    return true\n  }\n}\n\nexport const redo = state => {\n  const undoManager = yUndoPluginKey.getState(state).undoManager\n  if (undoManager != null) {\n    undoManager.redo()\n    return true\n  }\n}\n\nexport const defaultProtectedNodes = new Set(['paragraph'])\n\nexport const defaultDeleteFilter = (item, protectedNodes) => !(item instanceof Item) ||\n!(item.content instanceof ContentType) ||\n!(item.content.type instanceof Text ||\n  (item.content.type instanceof XmlElement && protectedNodes.has(item.content.type.nodeName))) ||\nitem.content.type._length === 0\n\nexport const yUndoPlugin = ({ protectedNodes = defaultProtectedNodes, trackedOrigins = [], undoManager = null } = {}) => new Plugin({\n  key: yUndoPluginKey,\n  state: {\n    init: (initargs, state) => {\n      // TODO: check if plugin order matches and fix\n      const ystate = ySyncPluginKey.getState(state)\n      const _undoManager = undoManager || new UndoManager(ystate.type, {\n        trackedOrigins: new Set([ySyncPluginKey].concat(trackedOrigins)),\n        deleteFilter: (item) => defaultDeleteFilter(item, protectedNodes)\n      })\n      return {\n        undoManager: _undoManager,\n        prevSel: null,\n        hasUndoOps: _undoManager.undoStack.length > 0,\n        hasRedoOps: _undoManager.redoStack.length > 0\n      }\n    },\n    apply: (tr, val, oldState, state) => {\n      const binding = ySyncPluginKey.getState(state).binding\n      const undoManager = val.undoManager\n      const hasUndoOps = undoManager.undoStack.length > 0\n      const hasRedoOps = undoManager.redoStack.length > 0\n      if (binding) {\n        return {\n          undoManager,\n          prevSel: getRelativeSelection(binding, oldState),\n          hasUndoOps,\n          hasRedoOps\n        }\n      } else {\n        if (hasUndoOps !== val.hasUndoOps || hasRedoOps !== val.hasRedoOps) {\n          return Object.assign({}, val, {\n            hasUndoOps: undoManager.undoStack.length > 0,\n            hasRedoOps: undoManager.redoStack.length > 0\n          })\n        } else { // nothing changed\n          return val\n        }\n      }\n    }\n  },\n  view: view => {\n    const ystate = ySyncPluginKey.getState(view.state)\n    const undoManager = yUndoPluginKey.getState(view.state).undoManager\n    undoManager.on('stack-item-added', ({ stackItem }) => {\n      const binding = ystate.binding\n      if (binding) {\n        stackItem.meta.set(binding, yUndoPluginKey.getState(view.state).prevSel)\n      }\n    })\n    undoManager.on('stack-item-popped', ({ stackItem }) => {\n      const binding = ystate.binding\n      if (binding) {\n        binding.beforeTransactionSelection = stackItem.meta.get(binding) || binding.beforeTransactionSelection\n      }\n    })\n    return {\n      destroy: () => {\n        undoManager.destroy()\n      }\n    }\n  }\n})\n","import { Extension } from '@tiptap/core';\nimport { yUndoPluginKey, undo, redo, yUndoPlugin, ySyncPlugin, ySyncPluginKey } from 'y-prosemirror';\n\nconst Collaboration = Extension.create({\r\n    name: 'collaboration',\r\n    priority: 1000,\r\n    addOptions() {\r\n        return {\r\n            document: null,\r\n            field: 'default',\r\n            fragment: null,\r\n        };\r\n    },\r\n    onCreate() {\r\n        if (this.editor.extensionManager.extensions.find(extension => extension.name === 'history')) {\r\n            console.warn('[tiptap warn]: \"@tiptap/extension-collaboration\" comes with its own history support and is not compatible with \"@tiptap/extension-history\".');\r\n        }\r\n    },\r\n    addCommands() {\r\n        return {\r\n            undo: () => ({ tr, state, dispatch }) => {\r\n                tr.setMeta('preventDispatch', true);\r\n                const undoManager = yUndoPluginKey.getState(state).undoManager;\r\n                if (undoManager.undoStack.length === 0) {\r\n                    return false;\r\n                }\r\n                if (!dispatch) {\r\n                    return true;\r\n                }\r\n                return undo(state);\r\n            },\r\n            redo: () => ({ tr, state, dispatch }) => {\r\n                tr.setMeta('preventDispatch', true);\r\n                const undoManager = yUndoPluginKey.getState(state).undoManager;\r\n                if (undoManager.redoStack.length === 0) {\r\n                    return false;\r\n                }\r\n                if (!dispatch) {\r\n                    return true;\r\n                }\r\n                return redo(state);\r\n            },\r\n        };\r\n    },\r\n    addKeyboardShortcuts() {\r\n        return {\r\n            'Mod-z': () => this.editor.commands.undo(),\r\n            'Mod-y': () => this.editor.commands.redo(),\r\n            'Shift-Mod-z': () => this.editor.commands.redo(),\r\n        };\r\n    },\r\n    addProseMirrorPlugins() {\r\n        const fragment = this.options.fragment\r\n            ? this.options.fragment\r\n            : this.options.document.getXmlFragment(this.options.field);\r\n        // Quick fix until there is an official implementation (thanks to @hamflx).\r\n        // See https://github.com/yjs/y-prosemirror/issues/114 and https://github.com/yjs/y-prosemirror/issues/102\r\n        const yUndoPluginInstance = yUndoPlugin();\r\n        const originalUndoPluginView = yUndoPluginInstance.spec.view;\r\n        yUndoPluginInstance.spec.view = (view) => {\r\n            const { undoManager } = yUndoPluginKey.getState(view.state);\r\n            if (undoManager.restore) {\r\n                undoManager.restore();\r\n                // eslint-disable-next-line\r\n                undoManager.restore = () => { };\r\n            }\r\n            const viewRet = originalUndoPluginView(view);\r\n            return {\r\n                destroy: () => {\r\n                    const hasUndoManSelf = undoManager.trackedOrigins.has(undoManager);\r\n                    // eslint-disable-next-line\r\n                    const observers = undoManager._observers;\r\n                    undoManager.restore = () => {\r\n                        if (hasUndoManSelf) {\r\n                            undoManager.trackedOrigins.add(undoManager);\r\n                        }\r\n                        undoManager.doc.on('afterTransaction', undoManager.afterTransactionHandler);\r\n                        // eslint-disable-next-line\r\n                        undoManager._observers = observers;\r\n                    };\r\n                    viewRet.destroy();\r\n                },\r\n            };\r\n        };\r\n        return [ySyncPlugin(fragment), yUndoPluginInstance];\r\n    },\r\n});\n\nfunction isChangeOrigin(transaction) {\r\n    return !!transaction.getMeta(ySyncPluginKey);\r\n}\n\nexport { Collaboration, Collaboration as default, isChangeOrigin };\n//# sourceMappingURL=index.js.map\n","import { Extension } from '@tiptap/core';\nimport { defaultSelectionBuilder, yCursorPlugin } from 'y-prosemirror';\n\nconst awarenessStatesToArray = (states) => {\r\n    return Array.from(states.entries()).map(([key, value]) => {\r\n        return {\r\n            clientId: key,\r\n            ...value.user,\r\n        };\r\n    });\r\n};\r\nconst defaultOnUpdate = () => null;\r\nconst CollaborationCursor = Extension.create({\r\n    name: 'collaborationCursor',\r\n    addOptions() {\r\n        return {\r\n            provider: null,\r\n            user: {\r\n                name: null,\r\n                color: null,\r\n            },\r\n            render: user => {\r\n                const cursor = document.createElement('span');\r\n                cursor.classList.add('collaboration-cursor__caret');\r\n                cursor.setAttribute('style', `border-color: ${user.color}`);\r\n                const label = document.createElement('div');\r\n                label.classList.add('collaboration-cursor__label');\r\n                label.setAttribute('style', `background-color: ${user.color}`);\r\n                label.insertBefore(document.createTextNode(user.name), null);\r\n                cursor.insertBefore(label, null);\r\n                return cursor;\r\n            },\r\n            selectionRender: defaultSelectionBuilder,\r\n            onUpdate: defaultOnUpdate,\r\n        };\r\n    },\r\n    onCreate() {\r\n        if (this.options.onUpdate !== defaultOnUpdate) {\r\n            console.warn('[tiptap warn]: DEPRECATED: The \"onUpdate\" option is deprecated. Please use `editor.storage.collaborationCursor.users` instead. Read more: https://tiptap.dev/api/extensions/collaboration-cursor');\r\n        }\r\n    },\r\n    addStorage() {\r\n        return {\r\n            users: [],\r\n        };\r\n    },\r\n    addCommands() {\r\n        return {\r\n            updateUser: attributes => () => {\r\n                this.options.user = attributes;\r\n                this.options.provider.awareness.setLocalStateField('user', this.options.user);\r\n                return true;\r\n            },\r\n            user: attributes => ({ editor }) => {\r\n                console.warn('[tiptap warn]: DEPRECATED: The \"user\" command is deprecated. Please use \"updateUser\" instead. Read more: https://tiptap.dev/api/extensions/collaboration-cursor');\r\n                return editor.commands.updateUser(attributes);\r\n            },\r\n        };\r\n    },\r\n    addProseMirrorPlugins() {\r\n        return [\r\n            yCursorPlugin((() => {\r\n                this.options.provider.awareness.setLocalStateField('user', this.options.user);\r\n                this.storage.users = awarenessStatesToArray(this.options.provider.awareness.states);\r\n                this.options.provider.awareness.on('update', () => {\r\n                    this.storage.users = awarenessStatesToArray(this.options.provider.awareness.states);\r\n                });\r\n                return this.options.provider.awareness;\r\n            })(), \r\n            // @ts-ignore\r\n            {\r\n                cursorBuilder: this.options.render,\r\n                selectionBuilder: this.options.selectionRender,\r\n            }),\r\n        ];\r\n    },\r\n});\n\nexport { CollaborationCursor, CollaborationCursor as default };\n//# sourceMappingURL=index.js.map\n","import { Plugin } from 'prosemirror-state';\nimport { dropPoint } from 'prosemirror-transform';\n\n/**\nCreate a plugin that, when added to a ProseMirror instance,\ncauses a decoration to show up at the drop position when something\nis dragged over the editor.\n\nNodes may add a `disableDropCursor` property to their spec to\ncontrol the showing of a drop cursor inside them. This may be a\nboolean or a function, which will be called with a view and a\nposition, and should return a boolean.\n*/\nfunction dropCursor(options = {}) {\n    return new Plugin({\n        view(editorView) { return new DropCursorView(editorView, options); }\n    });\n}\nclass DropCursorView {\n    constructor(editorView, options) {\n        var _a;\n        this.editorView = editorView;\n        this.cursorPos = null;\n        this.element = null;\n        this.timeout = -1;\n        this.width = (_a = options.width) !== null && _a !== void 0 ? _a : 1;\n        this.color = options.color === false ? undefined : (options.color || \"black\");\n        this.class = options.class;\n        this.handlers = [\"dragover\", \"dragend\", \"drop\", \"dragleave\"].map(name => {\n            let handler = (e) => { this[name](e); };\n            editorView.dom.addEventListener(name, handler);\n            return { name, handler };\n        });\n    }\n    destroy() {\n        this.handlers.forEach(({ name, handler }) => this.editorView.dom.removeEventListener(name, handler));\n    }\n    update(editorView, prevState) {\n        if (this.cursorPos != null && prevState.doc != editorView.state.doc) {\n            if (this.cursorPos > editorView.state.doc.content.size)\n                this.setCursor(null);\n            else\n                this.updateOverlay();\n        }\n    }\n    setCursor(pos) {\n        if (pos == this.cursorPos)\n            return;\n        this.cursorPos = pos;\n        if (pos == null) {\n            this.element.parentNode.removeChild(this.element);\n            this.element = null;\n        }\n        else {\n            this.updateOverlay();\n        }\n    }\n    updateOverlay() {\n        let $pos = this.editorView.state.doc.resolve(this.cursorPos);\n        let isBlock = !$pos.parent.inlineContent, rect;\n        if (isBlock) {\n            let before = $pos.nodeBefore, after = $pos.nodeAfter;\n            if (before || after) {\n                let node = this.editorView.nodeDOM(this.cursorPos - (before ? before.nodeSize : 0));\n                if (node) {\n                    let nodeRect = node.getBoundingClientRect();\n                    let top = before ? nodeRect.bottom : nodeRect.top;\n                    if (before && after)\n                        top = (top + this.editorView.nodeDOM(this.cursorPos).getBoundingClientRect().top) / 2;\n                    rect = { left: nodeRect.left, right: nodeRect.right, top: top - this.width / 2, bottom: top + this.width / 2 };\n                }\n            }\n        }\n        if (!rect) {\n            let coords = this.editorView.coordsAtPos(this.cursorPos);\n            rect = { left: coords.left - this.width / 2, right: coords.left + this.width / 2, top: coords.top, bottom: coords.bottom };\n        }\n        let parent = this.editorView.dom.offsetParent;\n        if (!this.element) {\n            this.element = parent.appendChild(document.createElement(\"div\"));\n            if (this.class)\n                this.element.className = this.class;\n            this.element.style.cssText = \"position: absolute; z-index: 50; pointer-events: none;\";\n            if (this.color) {\n                this.element.style.backgroundColor = this.color;\n            }\n        }\n        this.element.classList.toggle(\"prosemirror-dropcursor-block\", isBlock);\n        this.element.classList.toggle(\"prosemirror-dropcursor-inline\", !isBlock);\n        let parentLeft, parentTop;\n        if (!parent || parent == document.body && getComputedStyle(parent).position == \"static\") {\n            parentLeft = -pageXOffset;\n            parentTop = -pageYOffset;\n        }\n        else {\n            let rect = parent.getBoundingClientRect();\n            parentLeft = rect.left - parent.scrollLeft;\n            parentTop = rect.top - parent.scrollTop;\n        }\n        this.element.style.left = (rect.left - parentLeft) + \"px\";\n        this.element.style.top = (rect.top - parentTop) + \"px\";\n        this.element.style.width = (rect.right - rect.left) + \"px\";\n        this.element.style.height = (rect.bottom - rect.top) + \"px\";\n    }\n    scheduleRemoval(timeout) {\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => this.setCursor(null), timeout);\n    }\n    dragover(event) {\n        if (!this.editorView.editable)\n            return;\n        let pos = this.editorView.posAtCoords({ left: event.clientX, top: event.clientY });\n        let node = pos && pos.inside >= 0 && this.editorView.state.doc.nodeAt(pos.inside);\n        let disableDropCursor = node && node.type.spec.disableDropCursor;\n        let disabled = typeof disableDropCursor == \"function\" ? disableDropCursor(this.editorView, pos, event) : disableDropCursor;\n        if (pos && !disabled) {\n            let target = pos.pos;\n            if (this.editorView.dragging && this.editorView.dragging.slice) {\n                let point = dropPoint(this.editorView.state.doc, target, this.editorView.dragging.slice);\n                if (point != null)\n                    target = point;\n            }\n            this.setCursor(target);\n            this.scheduleRemoval(5000);\n        }\n    }\n    dragend() {\n        this.scheduleRemoval(20);\n    }\n    drop() {\n        this.scheduleRemoval(20);\n    }\n    dragleave(event) {\n        if (event.target == this.editorView.dom || !this.editorView.dom.contains(event.relatedTarget))\n            this.setCursor(null);\n    }\n}\n\nexport { dropCursor };\n","import { Extension } from '@tiptap/core';\nimport { dropCursor } from '@tiptap/pm/dropcursor';\n\nconst Dropcursor = Extension.create({\r\n    name: 'dropCursor',\r\n    addOptions() {\r\n        return {\r\n            color: 'currentColor',\r\n            width: 1,\r\n            class: undefined,\r\n        };\r\n    },\r\n    addProseMirrorPlugins() {\r\n        return [\r\n            dropCursor(this.options),\r\n        ];\r\n    },\r\n});\n\nexport { Dropcursor, Dropcursor as default };\n//# sourceMappingURL=index.js.map\n","import { keydownHandler } from 'prosemirror-keymap';\nimport { Selection, NodeSelection, TextSelection, Plugin } from 'prosemirror-state';\nimport { Slice, Fragment } from 'prosemirror-model';\nimport { DecorationSet, Decoration } from 'prosemirror-view';\n\n/**\nGap cursor selections are represented using this class. Its\n`$anchor` and `$head` properties both point at the cursor position.\n*/\nclass GapCursor extends Selection {\n    /**\n    Create a gap cursor.\n    */\n    constructor($pos) {\n        super($pos, $pos);\n    }\n    map(doc, mapping) {\n        let $pos = doc.resolve(mapping.map(this.head));\n        return GapCursor.valid($pos) ? new GapCursor($pos) : Selection.near($pos);\n    }\n    content() { return Slice.empty; }\n    eq(other) {\n        return other instanceof GapCursor && other.head == this.head;\n    }\n    toJSON() {\n        return { type: \"gapcursor\", pos: this.head };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for GapCursor.fromJSON\");\n        return new GapCursor(doc.resolve(json.pos));\n    }\n    /**\n    @internal\n    */\n    getBookmark() { return new GapBookmark(this.anchor); }\n    /**\n    @internal\n    */\n    static valid($pos) {\n        let parent = $pos.parent;\n        if (parent.isTextblock || !closedBefore($pos) || !closedAfter($pos))\n            return false;\n        let override = parent.type.spec.allowGapCursor;\n        if (override != null)\n            return override;\n        let deflt = parent.contentMatchAt($pos.index()).defaultType;\n        return deflt && deflt.isTextblock;\n    }\n    /**\n    @internal\n    */\n    static findGapCursorFrom($pos, dir, mustMove = false) {\n        search: for (;;) {\n            if (!mustMove && GapCursor.valid($pos))\n                return $pos;\n            let pos = $pos.pos, next = null;\n            // Scan up from this position\n            for (let d = $pos.depth;; d--) {\n                let parent = $pos.node(d);\n                if (dir > 0 ? $pos.indexAfter(d) < parent.childCount : $pos.index(d) > 0) {\n                    next = parent.child(dir > 0 ? $pos.indexAfter(d) : $pos.index(d) - 1);\n                    break;\n                }\n                else if (d == 0) {\n                    return null;\n                }\n                pos += dir;\n                let $cur = $pos.doc.resolve(pos);\n                if (GapCursor.valid($cur))\n                    return $cur;\n            }\n            // And then down into the next node\n            for (;;) {\n                let inside = dir > 0 ? next.firstChild : next.lastChild;\n                if (!inside) {\n                    if (next.isAtom && !next.isText && !NodeSelection.isSelectable(next)) {\n                        $pos = $pos.doc.resolve(pos + next.nodeSize * dir);\n                        mustMove = false;\n                        continue search;\n                    }\n                    break;\n                }\n                next = inside;\n                pos += dir;\n                let $cur = $pos.doc.resolve(pos);\n                if (GapCursor.valid($cur))\n                    return $cur;\n            }\n            return null;\n        }\n    }\n}\nGapCursor.prototype.visible = false;\nGapCursor.findFrom = GapCursor.findGapCursorFrom;\nSelection.jsonID(\"gapcursor\", GapCursor);\nclass GapBookmark {\n    constructor(pos) {\n        this.pos = pos;\n    }\n    map(mapping) {\n        return new GapBookmark(mapping.map(this.pos));\n    }\n    resolve(doc) {\n        let $pos = doc.resolve(this.pos);\n        return GapCursor.valid($pos) ? new GapCursor($pos) : Selection.near($pos);\n    }\n}\nfunction closedBefore($pos) {\n    for (let d = $pos.depth; d >= 0; d--) {\n        let index = $pos.index(d), parent = $pos.node(d);\n        // At the start of this parent, look at next one\n        if (index == 0) {\n            if (parent.type.spec.isolating)\n                return true;\n            continue;\n        }\n        // See if the node before (or its first ancestor) is closed\n        for (let before = parent.child(index - 1);; before = before.lastChild) {\n            if ((before.childCount == 0 && !before.inlineContent) || before.isAtom || before.type.spec.isolating)\n                return true;\n            if (before.inlineContent)\n                return false;\n        }\n    }\n    // Hit start of document\n    return true;\n}\nfunction closedAfter($pos) {\n    for (let d = $pos.depth; d >= 0; d--) {\n        let index = $pos.indexAfter(d), parent = $pos.node(d);\n        if (index == parent.childCount) {\n            if (parent.type.spec.isolating)\n                return true;\n            continue;\n        }\n        for (let after = parent.child(index);; after = after.firstChild) {\n            if ((after.childCount == 0 && !after.inlineContent) || after.isAtom || after.type.spec.isolating)\n                return true;\n            if (after.inlineContent)\n                return false;\n        }\n    }\n    return true;\n}\n\n/**\nCreate a gap cursor plugin. When enabled, this will capture clicks\nnear and arrow-key-motion past places that don't have a normally\nselectable position nearby, and create a gap cursor selection for\nthem. The cursor is drawn as an element with class\n`ProseMirror-gapcursor`. You can either include\n`style/gapcursor.css` from the package's directory or add your own\nstyles to make it visible.\n*/\nfunction gapCursor() {\n    return new Plugin({\n        props: {\n            decorations: drawGapCursor,\n            createSelectionBetween(_view, $anchor, $head) {\n                return $anchor.pos == $head.pos && GapCursor.valid($head) ? new GapCursor($head) : null;\n            },\n            handleClick,\n            handleKeyDown,\n            handleDOMEvents: { beforeinput: beforeinput }\n        }\n    });\n}\nconst handleKeyDown = keydownHandler({\n    \"ArrowLeft\": arrow(\"horiz\", -1),\n    \"ArrowRight\": arrow(\"horiz\", 1),\n    \"ArrowUp\": arrow(\"vert\", -1),\n    \"ArrowDown\": arrow(\"vert\", 1)\n});\nfunction arrow(axis, dir) {\n    const dirStr = axis == \"vert\" ? (dir > 0 ? \"down\" : \"up\") : (dir > 0 ? \"right\" : \"left\");\n    return function (state, dispatch, view) {\n        let sel = state.selection;\n        let $start = dir > 0 ? sel.$to : sel.$from, mustMove = sel.empty;\n        if (sel instanceof TextSelection) {\n            if (!view.endOfTextblock(dirStr) || $start.depth == 0)\n                return false;\n            mustMove = false;\n            $start = state.doc.resolve(dir > 0 ? $start.after() : $start.before());\n        }\n        let $found = GapCursor.findGapCursorFrom($start, dir, mustMove);\n        if (!$found)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.setSelection(new GapCursor($found)));\n        return true;\n    };\n}\nfunction handleClick(view, pos, event) {\n    if (!view || !view.editable)\n        return false;\n    let $pos = view.state.doc.resolve(pos);\n    if (!GapCursor.valid($pos))\n        return false;\n    let clickPos = view.posAtCoords({ left: event.clientX, top: event.clientY });\n    if (clickPos && clickPos.inside > -1 && NodeSelection.isSelectable(view.state.doc.nodeAt(clickPos.inside)))\n        return false;\n    view.dispatch(view.state.tr.setSelection(new GapCursor($pos)));\n    return true;\n}\n// This is a hack that, when a composition starts while a gap cursor\n// is active, quickly creates an inline context for the composition to\n// happen in, to avoid it being aborted by the DOM selection being\n// moved into a valid position.\nfunction beforeinput(view, event) {\n    if (event.inputType != \"insertCompositionText\" || !(view.state.selection instanceof GapCursor))\n        return false;\n    let { $from } = view.state.selection;\n    let insert = $from.parent.contentMatchAt($from.index()).findWrapping(view.state.schema.nodes.text);\n    if (!insert)\n        return false;\n    let frag = Fragment.empty;\n    for (let i = insert.length - 1; i >= 0; i--)\n        frag = Fragment.from(insert[i].createAndFill(null, frag));\n    let tr = view.state.tr.replace($from.pos, $from.pos, new Slice(frag, 0, 0));\n    tr.setSelection(TextSelection.near(tr.doc.resolve($from.pos + 1)));\n    view.dispatch(tr);\n    return false;\n}\nfunction drawGapCursor(state) {\n    if (!(state.selection instanceof GapCursor))\n        return null;\n    let node = document.createElement(\"div\");\n    node.className = \"ProseMirror-gapcursor\";\n    return DecorationSet.create(state.doc, [Decoration.widget(state.selection.head, node, { key: \"gapcursor\" })]);\n}\n\nexport { GapCursor, gapCursor };\n","import { Extension, callOrReturn, getExtensionField } from '@tiptap/core';\nimport { gapCursor } from '@tiptap/pm/gapcursor';\n\nconst Gapcursor = Extension.create({\r\n    name: 'gapCursor',\r\n    addProseMirrorPlugins() {\r\n        return [\r\n            gapCursor(),\r\n        ];\r\n    },\r\n    extendNodeSchema(extension) {\r\n        var _a;\r\n        const context = {\r\n            name: extension.name,\r\n            options: extension.options,\r\n            storage: extension.storage,\r\n        };\r\n        return {\r\n            allowGapCursor: (_a = callOrReturn(getExtensionField(extension, 'allowGapCursor', context))) !== null && _a !== void 0 ? _a : null,\r\n        };\r\n    },\r\n});\n\nexport { Gapcursor, Gapcursor as default };\n//# sourceMappingURL=index.js.map\n","import { Node, mergeAttributes } from '@tiptap/core';\n\nconst HardBreak = Node.create({\r\n    name: 'hardBreak',\r\n    addOptions() {\r\n        return {\r\n            keepMarks: true,\r\n            HTMLAttributes: {},\r\n        };\r\n    },\r\n    inline: true,\r\n    group: 'inline',\r\n    selectable: false,\r\n    parseHTML() {\r\n        return [\r\n            { tag: 'br' },\r\n        ];\r\n    },\r\n    renderHTML({ HTMLAttributes }) {\r\n        return ['br', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)];\r\n    },\r\n    renderText() {\r\n        return '\\n';\r\n    },\r\n    addCommands() {\r\n        return {\r\n            setHardBreak: () => ({ commands, chain, state, editor, }) => {\r\n                return commands.first([\r\n                    () => commands.exitCode(),\r\n                    () => commands.command(() => {\r\n                        const { selection, storedMarks } = state;\r\n                        if (selection.$from.parent.type.spec.isolating) {\r\n                            return false;\r\n                        }\r\n                        const { keepMarks } = this.options;\r\n                        const { splittableMarks } = editor.extensionManager;\r\n                        const marks = storedMarks\r\n                            || (selection.$to.parentOffset && selection.$from.marks());\r\n                        return chain()\r\n                            .insertContent({ type: this.name })\r\n                            .command(({ tr, dispatch }) => {\r\n                            if (dispatch && marks && keepMarks) {\r\n                                const filteredMarks = marks\r\n                                    .filter(mark => splittableMarks.includes(mark.type.name));\r\n                                tr.ensureMarks(filteredMarks);\r\n                            }\r\n                            return true;\r\n                        })\r\n                            .run();\r\n                    }),\r\n                ]);\r\n            },\r\n        };\r\n    },\r\n    addKeyboardShortcuts() {\r\n        return {\r\n            'Mod-Enter': () => this.editor.commands.setHardBreak(),\r\n            'Shift-Enter': () => this.editor.commands.setHardBreak(),\r\n        };\r\n    },\r\n});\n\nexport { HardBreak, HardBreak as default };\n//# sourceMappingURL=index.js.map\n","var GOOD_LEAF_SIZE = 200;\n\n// :: class<T> A rope sequence is a persistent sequence data structure\n// that supports appending, prepending, and slicing without doing a\n// full copy. It is represented as a mostly-balanced tree.\nvar RopeSequence = function RopeSequence () {};\n\nRopeSequence.prototype.append = function append (other) {\n  if (!other.length) { return this }\n  other = RopeSequence.from(other);\n\n  return (!this.length && other) ||\n    (other.length < GOOD_LEAF_SIZE && this.leafAppend(other)) ||\n    (this.length < GOOD_LEAF_SIZE && other.leafPrepend(this)) ||\n    this.appendInner(other)\n};\n\n// :: (union<[T], RopeSequence<T>>) → RopeSequence<T>\n// Prepend an array or other rope to this one, returning a new rope.\nRopeSequence.prototype.prepend = function prepend (other) {\n  if (!other.length) { return this }\n  return RopeSequence.from(other).append(this)\n};\n\nRopeSequence.prototype.appendInner = function appendInner (other) {\n  return new Append(this, other)\n};\n\n// :: (?number, ?number) → RopeSequence<T>\n// Create a rope repesenting a sub-sequence of this rope.\nRopeSequence.prototype.slice = function slice (from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from >= to) { return RopeSequence.empty }\n  return this.sliceInner(Math.max(0, from), Math.min(this.length, to))\n};\n\n// :: (number) → T\n// Retrieve the element at the given position from this rope.\nRopeSequence.prototype.get = function get (i) {\n  if (i < 0 || i >= this.length) { return undefined }\n  return this.getInner(i)\n};\n\n// :: ((element: T, index: number) → ?bool, ?number, ?number)\n// Call the given function for each element between the given\n// indices. This tends to be more efficient than looping over the\n// indices and calling `get`, because it doesn't have to descend the\n// tree for every element.\nRopeSequence.prototype.forEach = function forEach (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from <= to)\n    { this.forEachInner(f, from, to, 0); }\n  else\n    { this.forEachInvertedInner(f, from, to, 0); }\n};\n\n// :: ((element: T, index: number) → U, ?number, ?number) → [U]\n// Map the given functions over the elements of the rope, producing\n// a flat array.\nRopeSequence.prototype.map = function map (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  var result = [];\n  this.forEach(function (elt, i) { return result.push(f(elt, i)); }, from, to);\n  return result\n};\n\n// :: (?union<[T], RopeSequence<T>>) → RopeSequence<T>\n// Create a rope representing the given array, or return the rope\n// itself if a rope was given.\nRopeSequence.from = function from (values) {\n  if (values instanceof RopeSequence) { return values }\n  return values && values.length ? new Leaf(values) : RopeSequence.empty\n};\n\nvar Leaf = /*@__PURE__*/(function (RopeSequence) {\n  function Leaf(values) {\n    RopeSequence.call(this);\n    this.values = values;\n  }\n\n  if ( RopeSequence ) Leaf.__proto__ = RopeSequence;\n  Leaf.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Leaf.prototype.constructor = Leaf;\n\n  var prototypeAccessors = { length: { configurable: true },depth: { configurable: true } };\n\n  Leaf.prototype.flatten = function flatten () {\n    return this.values\n  };\n\n  Leaf.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    return new Leaf(this.values.slice(from, to))\n  };\n\n  Leaf.prototype.getInner = function getInner (i) {\n    return this.values[i]\n  };\n\n  Leaf.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    for (var i = from; i < to; i++)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    for (var i = from - 1; i >= to; i--)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.leafAppend = function leafAppend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(this.values.concat(other.flatten())) }\n  };\n\n  Leaf.prototype.leafPrepend = function leafPrepend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(other.flatten().concat(this.values)) }\n  };\n\n  prototypeAccessors.length.get = function () { return this.values.length };\n\n  prototypeAccessors.depth.get = function () { return 0 };\n\n  Object.defineProperties( Leaf.prototype, prototypeAccessors );\n\n  return Leaf;\n}(RopeSequence));\n\n// :: RopeSequence\n// The empty rope sequence.\nRopeSequence.empty = new Leaf([]);\n\nvar Append = /*@__PURE__*/(function (RopeSequence) {\n  function Append(left, right) {\n    RopeSequence.call(this);\n    this.left = left;\n    this.right = right;\n    this.length = left.length + right.length;\n    this.depth = Math.max(left.depth, right.depth) + 1;\n  }\n\n  if ( RopeSequence ) Append.__proto__ = RopeSequence;\n  Append.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Append.prototype.constructor = Append;\n\n  Append.prototype.flatten = function flatten () {\n    return this.left.flatten().concat(this.right.flatten())\n  };\n\n  Append.prototype.getInner = function getInner (i) {\n    return i < this.left.length ? this.left.get(i) : this.right.get(i - this.left.length)\n  };\n\n  Append.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from < leftLen &&\n        this.left.forEachInner(f, from, Math.min(to, leftLen), start) === false)\n      { return false }\n    if (to > leftLen &&\n        this.right.forEachInner(f, Math.max(from - leftLen, 0), Math.min(this.length, to) - leftLen, start + leftLen) === false)\n      { return false }\n  };\n\n  Append.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from > leftLen &&\n        this.right.forEachInvertedInner(f, from - leftLen, Math.max(to, leftLen) - leftLen, start + leftLen) === false)\n      { return false }\n    if (to < leftLen &&\n        this.left.forEachInvertedInner(f, Math.min(from, leftLen), to, start) === false)\n      { return false }\n  };\n\n  Append.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    var leftLen = this.left.length;\n    if (to <= leftLen) { return this.left.slice(from, to) }\n    if (from >= leftLen) { return this.right.slice(from - leftLen, to - leftLen) }\n    return this.left.slice(from, leftLen).append(this.right.slice(0, to - leftLen))\n  };\n\n  Append.prototype.leafAppend = function leafAppend (other) {\n    var inner = this.right.leafAppend(other);\n    if (inner) { return new Append(this.left, inner) }\n  };\n\n  Append.prototype.leafPrepend = function leafPrepend (other) {\n    var inner = this.left.leafPrepend(other);\n    if (inner) { return new Append(inner, this.right) }\n  };\n\n  Append.prototype.appendInner = function appendInner (other) {\n    if (this.left.depth >= Math.max(this.right.depth, other.depth) + 1)\n      { return new Append(this.left, new Append(this.right, other)) }\n    return new Append(this, other)\n  };\n\n  return Append;\n}(RopeSequence));\n\nexport default RopeSequence;\n","import RopeSequence from 'rope-sequence';\nimport { Mapping } from 'prosemirror-transform';\nimport { PluginKey, Plugin } from 'prosemirror-state';\n\n// ProseMirror's history isn't simply a way to roll back to a previous\n// state, because ProseMirror supports applying changes without adding\n// them to the history (for example during collaboration).\n//\n// To this end, each 'Branch' (one for the undo history and one for\n// the redo history) keeps an array of 'Items', which can optionally\n// hold a step (an actual undoable change), and always hold a position\n// map (which is needed to move changes below them to apply to the\n// current document).\n//\n// An item that has both a step and a selection bookmark is the start\n// of an 'event' — a group of changes that will be undone or redone at\n// once. (It stores only the bookmark, since that way we don't have to\n// provide a document until the selection is actually applied, which\n// is useful when compressing.)\n// Used to schedule history compression\nconst max_empty_items = 500;\nclass Branch {\n    constructor(items, eventCount) {\n        this.items = items;\n        this.eventCount = eventCount;\n    }\n    // Pop the latest event off the branch's history and apply it\n    // to a document transform.\n    popEvent(state, preserveItems) {\n        if (this.eventCount == 0)\n            return null;\n        let end = this.items.length;\n        for (;; end--) {\n            let next = this.items.get(end - 1);\n            if (next.selection) {\n                --end;\n                break;\n            }\n        }\n        let remap, mapFrom;\n        if (preserveItems) {\n            remap = this.remapping(end, this.items.length);\n            mapFrom = remap.maps.length;\n        }\n        let transform = state.tr;\n        let selection, remaining;\n        let addAfter = [], addBefore = [];\n        this.items.forEach((item, i) => {\n            if (!item.step) {\n                if (!remap) {\n                    remap = this.remapping(end, i + 1);\n                    mapFrom = remap.maps.length;\n                }\n                mapFrom--;\n                addBefore.push(item);\n                return;\n            }\n            if (remap) {\n                addBefore.push(new Item(item.map));\n                let step = item.step.map(remap.slice(mapFrom)), map;\n                if (step && transform.maybeStep(step).doc) {\n                    map = transform.mapping.maps[transform.mapping.maps.length - 1];\n                    addAfter.push(new Item(map, undefined, undefined, addAfter.length + addBefore.length));\n                }\n                mapFrom--;\n                if (map)\n                    remap.appendMap(map, mapFrom);\n            }\n            else {\n                transform.maybeStep(item.step);\n            }\n            if (item.selection) {\n                selection = remap ? item.selection.map(remap.slice(mapFrom)) : item.selection;\n                remaining = new Branch(this.items.slice(0, end).append(addBefore.reverse().concat(addAfter)), this.eventCount - 1);\n                return false;\n            }\n        }, this.items.length, 0);\n        return { remaining: remaining, transform, selection: selection };\n    }\n    // Create a new branch with the given transform added.\n    addTransform(transform, selection, histOptions, preserveItems) {\n        let newItems = [], eventCount = this.eventCount;\n        let oldItems = this.items, lastItem = !preserveItems && oldItems.length ? oldItems.get(oldItems.length - 1) : null;\n        for (let i = 0; i < transform.steps.length; i++) {\n            let step = transform.steps[i].invert(transform.docs[i]);\n            let item = new Item(transform.mapping.maps[i], step, selection), merged;\n            if (merged = lastItem && lastItem.merge(item)) {\n                item = merged;\n                if (i)\n                    newItems.pop();\n                else\n                    oldItems = oldItems.slice(0, oldItems.length - 1);\n            }\n            newItems.push(item);\n            if (selection) {\n                eventCount++;\n                selection = undefined;\n            }\n            if (!preserveItems)\n                lastItem = item;\n        }\n        let overflow = eventCount - histOptions.depth;\n        if (overflow > DEPTH_OVERFLOW) {\n            oldItems = cutOffEvents(oldItems, overflow);\n            eventCount -= overflow;\n        }\n        return new Branch(oldItems.append(newItems), eventCount);\n    }\n    remapping(from, to) {\n        let maps = new Mapping;\n        this.items.forEach((item, i) => {\n            let mirrorPos = item.mirrorOffset != null && i - item.mirrorOffset >= from\n                ? maps.maps.length - item.mirrorOffset : undefined;\n            maps.appendMap(item.map, mirrorPos);\n        }, from, to);\n        return maps;\n    }\n    addMaps(array) {\n        if (this.eventCount == 0)\n            return this;\n        return new Branch(this.items.append(array.map(map => new Item(map))), this.eventCount);\n    }\n    // When the collab module receives remote changes, the history has\n    // to know about those, so that it can adjust the steps that were\n    // rebased on top of the remote changes, and include the position\n    // maps for the remote changes in its array of items.\n    rebased(rebasedTransform, rebasedCount) {\n        if (!this.eventCount)\n            return this;\n        let rebasedItems = [], start = Math.max(0, this.items.length - rebasedCount);\n        let mapping = rebasedTransform.mapping;\n        let newUntil = rebasedTransform.steps.length;\n        let eventCount = this.eventCount;\n        this.items.forEach(item => { if (item.selection)\n            eventCount--; }, start);\n        let iRebased = rebasedCount;\n        this.items.forEach(item => {\n            let pos = mapping.getMirror(--iRebased);\n            if (pos == null)\n                return;\n            newUntil = Math.min(newUntil, pos);\n            let map = mapping.maps[pos];\n            if (item.step) {\n                let step = rebasedTransform.steps[pos].invert(rebasedTransform.docs[pos]);\n                let selection = item.selection && item.selection.map(mapping.slice(iRebased + 1, pos));\n                if (selection)\n                    eventCount++;\n                rebasedItems.push(new Item(map, step, selection));\n            }\n            else {\n                rebasedItems.push(new Item(map));\n            }\n        }, start);\n        let newMaps = [];\n        for (let i = rebasedCount; i < newUntil; i++)\n            newMaps.push(new Item(mapping.maps[i]));\n        let items = this.items.slice(0, start).append(newMaps).append(rebasedItems);\n        let branch = new Branch(items, eventCount);\n        if (branch.emptyItemCount() > max_empty_items)\n            branch = branch.compress(this.items.length - rebasedItems.length);\n        return branch;\n    }\n    emptyItemCount() {\n        let count = 0;\n        this.items.forEach(item => { if (!item.step)\n            count++; });\n        return count;\n    }\n    // Compressing a branch means rewriting it to push the air (map-only\n    // items) out. During collaboration, these naturally accumulate\n    // because each remote change adds one. The `upto` argument is used\n    // to ensure that only the items below a given level are compressed,\n    // because `rebased` relies on a clean, untouched set of items in\n    // order to associate old items with rebased steps.\n    compress(upto = this.items.length) {\n        let remap = this.remapping(0, upto), mapFrom = remap.maps.length;\n        let items = [], events = 0;\n        this.items.forEach((item, i) => {\n            if (i >= upto) {\n                items.push(item);\n                if (item.selection)\n                    events++;\n            }\n            else if (item.step) {\n                let step = item.step.map(remap.slice(mapFrom)), map = step && step.getMap();\n                mapFrom--;\n                if (map)\n                    remap.appendMap(map, mapFrom);\n                if (step) {\n                    let selection = item.selection && item.selection.map(remap.slice(mapFrom));\n                    if (selection)\n                        events++;\n                    let newItem = new Item(map.invert(), step, selection), merged, last = items.length - 1;\n                    if (merged = items.length && items[last].merge(newItem))\n                        items[last] = merged;\n                    else\n                        items.push(newItem);\n                }\n            }\n            else if (item.map) {\n                mapFrom--;\n            }\n        }, this.items.length, 0);\n        return new Branch(RopeSequence.from(items.reverse()), events);\n    }\n}\nBranch.empty = new Branch(RopeSequence.empty, 0);\nfunction cutOffEvents(items, n) {\n    let cutPoint;\n    items.forEach((item, i) => {\n        if (item.selection && (n-- == 0)) {\n            cutPoint = i;\n            return false;\n        }\n    });\n    return items.slice(cutPoint);\n}\nclass Item {\n    constructor(\n    // The (forward) step map for this item.\n    map, \n    // The inverted step\n    step, \n    // If this is non-null, this item is the start of a group, and\n    // this selection is the starting selection for the group (the one\n    // that was active before the first step was applied)\n    selection, \n    // If this item is the inverse of a previous mapping on the stack,\n    // this points at the inverse's offset\n    mirrorOffset) {\n        this.map = map;\n        this.step = step;\n        this.selection = selection;\n        this.mirrorOffset = mirrorOffset;\n    }\n    merge(other) {\n        if (this.step && other.step && !other.selection) {\n            let step = other.step.merge(this.step);\n            if (step)\n                return new Item(step.getMap().invert(), step, this.selection);\n        }\n    }\n}\n// The value of the state field that tracks undo/redo history for that\n// state. Will be stored in the plugin state when the history plugin\n// is active.\nclass HistoryState {\n    constructor(done, undone, prevRanges, prevTime, prevComposition) {\n        this.done = done;\n        this.undone = undone;\n        this.prevRanges = prevRanges;\n        this.prevTime = prevTime;\n        this.prevComposition = prevComposition;\n    }\n}\nconst DEPTH_OVERFLOW = 20;\n// Record a transformation in undo history.\nfunction applyTransaction(history, state, tr, options) {\n    let historyTr = tr.getMeta(historyKey), rebased;\n    if (historyTr)\n        return historyTr.historyState;\n    if (tr.getMeta(closeHistoryKey))\n        history = new HistoryState(history.done, history.undone, null, 0, -1);\n    let appended = tr.getMeta(\"appendedTransaction\");\n    if (tr.steps.length == 0) {\n        return history;\n    }\n    else if (appended && appended.getMeta(historyKey)) {\n        if (appended.getMeta(historyKey).redo)\n            return new HistoryState(history.done.addTransform(tr, undefined, options, mustPreserveItems(state)), history.undone, rangesFor(tr.mapping.maps[tr.steps.length - 1]), history.prevTime, history.prevComposition);\n        else\n            return new HistoryState(history.done, history.undone.addTransform(tr, undefined, options, mustPreserveItems(state)), null, history.prevTime, history.prevComposition);\n    }\n    else if (tr.getMeta(\"addToHistory\") !== false && !(appended && appended.getMeta(\"addToHistory\") === false)) {\n        // Group transforms that occur in quick succession into one event.\n        let composition = tr.getMeta(\"composition\");\n        let newGroup = history.prevTime == 0 ||\n            (!appended && history.prevComposition != composition &&\n                (history.prevTime < (tr.time || 0) - options.newGroupDelay || !isAdjacentTo(tr, history.prevRanges)));\n        let prevRanges = appended ? mapRanges(history.prevRanges, tr.mapping) : rangesFor(tr.mapping.maps[tr.steps.length - 1]);\n        return new HistoryState(history.done.addTransform(tr, newGroup ? state.selection.getBookmark() : undefined, options, mustPreserveItems(state)), Branch.empty, prevRanges, tr.time, composition == null ? history.prevComposition : composition);\n    }\n    else if (rebased = tr.getMeta(\"rebased\")) {\n        // Used by the collab module to tell the history that some of its\n        // content has been rebased.\n        return new HistoryState(history.done.rebased(tr, rebased), history.undone.rebased(tr, rebased), mapRanges(history.prevRanges, tr.mapping), history.prevTime, history.prevComposition);\n    }\n    else {\n        return new HistoryState(history.done.addMaps(tr.mapping.maps), history.undone.addMaps(tr.mapping.maps), mapRanges(history.prevRanges, tr.mapping), history.prevTime, history.prevComposition);\n    }\n}\nfunction isAdjacentTo(transform, prevRanges) {\n    if (!prevRanges)\n        return false;\n    if (!transform.docChanged)\n        return true;\n    let adjacent = false;\n    transform.mapping.maps[0].forEach((start, end) => {\n        for (let i = 0; i < prevRanges.length; i += 2)\n            if (start <= prevRanges[i + 1] && end >= prevRanges[i])\n                adjacent = true;\n    });\n    return adjacent;\n}\nfunction rangesFor(map) {\n    let result = [];\n    map.forEach((_from, _to, from, to) => result.push(from, to));\n    return result;\n}\nfunction mapRanges(ranges, mapping) {\n    if (!ranges)\n        return null;\n    let result = [];\n    for (let i = 0; i < ranges.length; i += 2) {\n        let from = mapping.map(ranges[i], 1), to = mapping.map(ranges[i + 1], -1);\n        if (from <= to)\n            result.push(from, to);\n    }\n    return result;\n}\n// Apply the latest event from one branch to the document and shift the event\n// onto the other branch.\nfunction histTransaction(history, state, dispatch, redo) {\n    let preserveItems = mustPreserveItems(state);\n    let histOptions = historyKey.get(state).spec.config;\n    let pop = (redo ? history.undone : history.done).popEvent(state, preserveItems);\n    if (!pop)\n        return;\n    let selection = pop.selection.resolve(pop.transform.doc);\n    let added = (redo ? history.done : history.undone).addTransform(pop.transform, state.selection.getBookmark(), histOptions, preserveItems);\n    let newHist = new HistoryState(redo ? added : pop.remaining, redo ? pop.remaining : added, null, 0, -1);\n    dispatch(pop.transform.setSelection(selection).setMeta(historyKey, { redo, historyState: newHist }).scrollIntoView());\n}\nlet cachedPreserveItems = false, cachedPreserveItemsPlugins = null;\n// Check whether any plugin in the given state has a\n// `historyPreserveItems` property in its spec, in which case we must\n// preserve steps exactly as they came in, so that they can be\n// rebased.\nfunction mustPreserveItems(state) {\n    let plugins = state.plugins;\n    if (cachedPreserveItemsPlugins != plugins) {\n        cachedPreserveItems = false;\n        cachedPreserveItemsPlugins = plugins;\n        for (let i = 0; i < plugins.length; i++)\n            if (plugins[i].spec.historyPreserveItems) {\n                cachedPreserveItems = true;\n                break;\n            }\n    }\n    return cachedPreserveItems;\n}\n/**\nSet a flag on the given transaction that will prevent further steps\nfrom being appended to an existing history event (so that they\nrequire a separate undo command to undo).\n*/\nfunction closeHistory(tr) {\n    return tr.setMeta(closeHistoryKey, true);\n}\nconst historyKey = new PluginKey(\"history\");\nconst closeHistoryKey = new PluginKey(\"closeHistory\");\n/**\nReturns a plugin that enables the undo history for an editor. The\nplugin will track undo and redo stacks, which can be used with the\n[`undo`](https://prosemirror.net/docs/ref/#history.undo) and [`redo`](https://prosemirror.net/docs/ref/#history.redo) commands.\n\nYou can set an `\"addToHistory\"` [metadata\nproperty](https://prosemirror.net/docs/ref/#state.Transaction.setMeta) of `false` on a transaction\nto prevent it from being rolled back by undo.\n*/\nfunction history(config = {}) {\n    config = { depth: config.depth || 100,\n        newGroupDelay: config.newGroupDelay || 500 };\n    return new Plugin({\n        key: historyKey,\n        state: {\n            init() {\n                return new HistoryState(Branch.empty, Branch.empty, null, 0, -1);\n            },\n            apply(tr, hist, state) {\n                return applyTransaction(hist, state, tr, config);\n            }\n        },\n        config,\n        props: {\n            handleDOMEvents: {\n                beforeinput(view, e) {\n                    let inputType = e.inputType;\n                    let command = inputType == \"historyUndo\" ? undo : inputType == \"historyRedo\" ? redo : null;\n                    if (!command)\n                        return false;\n                    e.preventDefault();\n                    return command(view.state, view.dispatch);\n                }\n            }\n        }\n    });\n}\n/**\nA command function that undoes the last change, if any.\n*/\nconst undo = (state, dispatch) => {\n    let hist = historyKey.getState(state);\n    if (!hist || hist.done.eventCount == 0)\n        return false;\n    if (dispatch)\n        histTransaction(hist, state, dispatch, false);\n    return true;\n};\n/**\nA command function that redoes the last undone change, if any.\n*/\nconst redo = (state, dispatch) => {\n    let hist = historyKey.getState(state);\n    if (!hist || hist.undone.eventCount == 0)\n        return false;\n    if (dispatch)\n        histTransaction(hist, state, dispatch, true);\n    return true;\n};\n/**\nThe amount of undoable events available in a given state.\n*/\nfunction undoDepth(state) {\n    let hist = historyKey.getState(state);\n    return hist ? hist.done.eventCount : 0;\n}\n/**\nThe amount of redoable events available in a given editor state.\n*/\nfunction redoDepth(state) {\n    let hist = historyKey.getState(state);\n    return hist ? hist.undone.eventCount : 0;\n}\n\nexport { closeHistory, history, redo, redoDepth, undo, undoDepth };\n","import { Extension } from '@tiptap/core';\nimport { undo, redo, history } from '@tiptap/pm/history';\n\nconst History = Extension.create({\r\n    name: 'history',\r\n    addOptions() {\r\n        return {\r\n            depth: 100,\r\n            newGroupDelay: 500,\r\n        };\r\n    },\r\n    addCommands() {\r\n        return {\r\n            undo: () => ({ state, dispatch }) => {\r\n                return undo(state, dispatch);\r\n            },\r\n            redo: () => ({ state, dispatch }) => {\r\n                return redo(state, dispatch);\r\n            },\r\n        };\r\n    },\r\n    addProseMirrorPlugins() {\r\n        return [\r\n            history(this.options),\r\n        ];\r\n    },\r\n    addKeyboardShortcuts() {\r\n        return {\r\n            'Mod-z': () => this.editor.commands.undo(),\r\n            'Mod-Z': () => this.editor.commands.undo(),\r\n            'Mod-y': () => this.editor.commands.redo(),\r\n            'Mod-Y': () => this.editor.commands.redo(),\r\n            'Shift-Mod-z': () => this.editor.commands.redo(),\r\n            'Shift-Mod-Z': () => this.editor.commands.redo(),\r\n            // Russian keyboard layouts\r\n            'Mod-я': () => this.editor.commands.undo(),\r\n            'Shift-Mod-я': () => this.editor.commands.redo(),\r\n        };\r\n    },\r\n});\n\nexport { History, History as default };\n//# sourceMappingURL=index.js.map\n","import { Mark, mergeAttributes, markInputRule, markPasteRule } from '@tiptap/core';\n\nconst starInputRegex = /(?:^|\\s)((?:\\*)((?:[^*]+))(?:\\*))$/;\r\nconst starPasteRegex = /(?:^|\\s)((?:\\*)((?:[^*]+))(?:\\*))/g;\r\nconst underscoreInputRegex = /(?:^|\\s)((?:_)((?:[^_]+))(?:_))$/;\r\nconst underscorePasteRegex = /(?:^|\\s)((?:_)((?:[^_]+))(?:_))/g;\r\nconst Italic = Mark.create({\r\n    name: 'italic',\r\n    addOptions() {\r\n        return {\r\n            HTMLAttributes: {},\r\n        };\r\n    },\r\n    parseHTML() {\r\n        return [\r\n            {\r\n                tag: 'em',\r\n            },\r\n            {\r\n                tag: 'i',\r\n                getAttrs: node => node.style.fontStyle !== 'normal' && null,\r\n            },\r\n            {\r\n                style: 'font-style=italic',\r\n            },\r\n        ];\r\n    },\r\n    renderHTML({ HTMLAttributes }) {\r\n        return ['em', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\r\n    },\r\n    addCommands() {\r\n        return {\r\n            setItalic: () => ({ commands }) => {\r\n                return commands.setMark(this.name);\r\n            },\r\n            toggleItalic: () => ({ commands }) => {\r\n                return commands.toggleMark(this.name);\r\n            },\r\n            unsetItalic: () => ({ commands }) => {\r\n                return commands.unsetMark(this.name);\r\n            },\r\n        };\r\n    },\r\n    addKeyboardShortcuts() {\r\n        return {\r\n            'Mod-i': () => this.editor.commands.toggleItalic(),\r\n            'Mod-I': () => this.editor.commands.toggleItalic(),\r\n        };\r\n    },\r\n    addInputRules() {\r\n        return [\r\n            markInputRule({\r\n                find: starInputRegex,\r\n                type: this.type,\r\n            }),\r\n            markInputRule({\r\n                find: underscoreInputRegex,\r\n                type: this.type,\r\n            }),\r\n        ];\r\n    },\r\n    addPasteRules() {\r\n        return [\r\n            markPasteRule({\r\n                find: starPasteRegex,\r\n                type: this.type,\r\n            }),\r\n            markPasteRule({\r\n                find: underscorePasteRegex,\r\n                type: this.type,\r\n            }),\r\n        ];\r\n    },\r\n});\n\nexport { Italic, Italic as default, starInputRegex, starPasteRegex, underscoreInputRegex, underscorePasteRegex };\n//# sourceMappingURL=index.js.map\n","// THIS FILE IS AUTOMATICALLY GENERATED DO NOT EDIT DIRECTLY\n// See update-tlds.js for encoding/decoding format\n// https://data.iana.org/TLD/tlds-alpha-by-domain.txt\nconst encodedTlds = 'aaa1rp3bb0ott3vie4c1le2ogado5udhabi7c0ademy5centure6ountant0s9o1tor4d0s1ult4e0g1ro2tna4f0l1rica5g0akhan5ency5i0g1rbus3force5tel5kdn3l0ibaba4pay4lfinanz6state5y2sace3tom5m0azon4ericanexpress7family11x2fam3ica3sterdam8nalytics7droid5quan4z2o0l2partments8p0le4q0uarelle8r0ab1mco4chi3my2pa2t0e3s0da2ia2sociates9t0hleta5torney7u0ction5di0ble3o3spost5thor3o0s4vianca6w0s2x0a2z0ure5ba0by2idu3namex3narepublic11d1k2r0celona5laycard4s5efoot5gains6seball5ketball8uhaus5yern5b0c1t1va3cg1n2d1e0ats2uty4er2ntley5rlin4st0buy5t2f1g1h0arti5i0ble3d1ke2ng0o3o1z2j1lack0friday9ockbuster8g1omberg7ue3m0s1w2n0pparibas9o0ats3ehringer8fa2m1nd2o0k0ing5sch2tik2on4t1utique6x2r0adesco6idgestone9oadway5ker3ther5ussels7s1t1uild0ers6siness6y1zz3v1w1y1z0h3ca0b1fe2l0l1vinklein9m0era3p2non3petown5ital0one8r0avan4ds2e0er0s4s2sa1e1h1ino4t0ering5holic7ba1n1re3c1d1enter4o1rn3f0a1d2g1h0anel2nel4rity4se2t2eap3intai5ristmas6ome4urch5i0priani6rcle4sco3tadel4i0c2y3k1l0aims4eaning6ick2nic1que6othing5ud3ub0med6m1n1o0ach3des3ffee4llege4ogne5m0cast4mbank4unity6pany2re3uter5sec4ndos3struction8ulting7tact3ractors9oking4l1p2rsica5untry4pon0s4rses6pa2r0edit0card4union9icket5own3s1uise0s6u0isinella9v1w1x1y0mru3ou3z2dabur3d1nce3ta1e1ing3sun4y2clk3ds2e0al0er2s3gree4livery5l1oitte5ta3mocrat6ntal2ist5si0gn4v2hl2iamonds6et2gital5rect0ory7scount3ver5h2y2j1k1m1np2o0cs1tor4g1mains5t1wnload7rive4tv2ubai3nlop4pont4rban5vag2r2z2earth3t2c0o2deka3u0cation8e1g1mail3erck5nergy4gineer0ing9terprises10pson4quipment8r0icsson6ni3s0q1tate5t1u0rovision8s2vents5xchange6pert3osed4ress5traspace10fage2il1rwinds6th3mily4n0s2rm0ers5shion4t3edex3edback6rrari3ero6i0delity5o2lm2nal1nce1ial7re0stone6mdale6sh0ing5t0ness6j1k1lickr3ghts4r2orist4wers5y2m1o0o0d1tball6rd1ex2sale4um3undation8x2r0ee1senius7l1ogans4ntier7tr2ujitsu5n0d2rniture7tbol5yi3ga0l0lery3o1up4me0s3p1rden4y2b0iz3d0n2e0a1nt0ing5orge5f1g0ee3h1i0ft0s3ves2ing5l0ass3e1obal2o4m0ail3bh2o1x2n1odaddy5ld0point6f2o0dyear5g0le4p1t1v2p1q1r0ainger5phics5tis4een3ipe3ocery4up4s1t1u0ardian6cci3ge2ide2tars5ru3w1y2hair2mburg5ngout5us3bo2dfc0bank7ealth0care8lp1sinki6re1mes5iphop4samitsu7tachi5v2k0t2m1n1ockey4ldings5iday5medepot5goods5s0ense7nda3rse3spital5t0ing5t0els3mail5use3w2r1sbc3t1u0ghes5yatt3undai7ibm2cbc2e1u2d1e0ee3fm2kano4l1m0amat4db2mo0bilien9n0c1dustries8finiti5o2g1k1stitute6urance4e4t0ernational10uit4vestments10o1piranga7q1r0ish4s0maili5t0anbul7t0au2v3jaguar4va3cb2e0ep2tzt3welry6io2ll2m0p2nj2o0bs1urg4t1y2p0morgan6rs3uegos4niper7kaufen5ddi3e0rryhotels6logistics9properties14fh2g1h1i0a1ds2m1ndle4tchen5wi3m1n1oeln3matsu5sher5p0mg2n2r0d1ed3uokgroup8w1y0oto4z2la0caixa5mborghini8er3ncaster6d0rover6xess5salle5t0ino3robe5w0yer5b1c1ds2ease3clerc5frak4gal2o2xus4gbt3i0dl2fe0insurance9style7ghting6ke2lly3mited4o2ncoln4k2psy3ve1ing5k1lc1p2oan0s3cker3us3l1ndon4tte1o3ve3pl0financial11r1s1t0d0a3u0ndbeck6xe1ury5v1y2ma0drid4if1son4keup4n0agement7go3p1rket0ing3s4riott5shalls7ttel5ba2c0kinsey7d1e0d0ia3et2lbourne7me1orial6n0u2rckmsd7g1h1iami3crosoft7l1ni1t2t0subishi9k1l0b1s2m0a2n1o0bi0le4da2e1i1m1nash3ey2ster5rmon3tgage6scow4to0rcycles9v0ie4p1q1r1s0d2t0n1r2u0seum3ic4v1w1x1y1z2na0b1goya4me2tura4vy3ba2c1e0c1t0bank4flix4work5ustar5w0s2xt0direct7us4f0l2g0o2hk2i0co2ke1on3nja3ssan1y5l1o0kia3rton4w0ruz3tv4p1r0a1w2tt2u1yc2z2obi1server7ffice5kinawa6layan0group9dnavy5lo3m0ega4ne1g1l0ine5oo2pen3racle3nge4g0anic5igins6saka4tsuka4t2vh3pa0ge2nasonic7ris2s1tners4s1y3y2ccw3e0t2f0izer5g1h0armacy6d1ilips5one2to0graphy6s4ysio5ics1tet2ures6d1n0g1k2oneer5zza4k1l0ace2y0station9umbing5s3m1n0c2ohl2ker3litie5rn2st3r0america6xi3ess3ime3o0d0uctions8f1gressive8mo2perties3y5tection8u0dential9s1t1ub2w0c2y2qa1pon3uebec3st5racing4dio4e0ad1lestate6tor2y4cipes5d0stone5umbrella9hab3ise0n3t2liance6n0t0als5pair3ort3ublican8st0aurant8view0s5xroth6ich0ardli6oh3l1o1p2o0cks3deo3gers4om3s0vp3u0gby3hr2n2w0e2yukyu6sa0arland6fe0ty4kura4le1on3msclub4ung5ndvik0coromant12ofi4p1rl2s1ve2xo3b0i1s2c0a1b1haeffler7midt4olarships8ol3ule3warz5ience5ot3d1e0arch3t2cure1ity6ek2lect4ner3rvices6ven3w1x0y3fr2g1h0angrila6rp2w2ell3ia1ksha5oes2p0ping5uji3w3i0lk2na1gles5te3j1k0i0n2y0pe4l0ing4m0art3ile4n0cf3o0ccer3ial4ftbank4ware6hu2lar2utions7ng1y2y2pa0ce3ort2t3r0l2s1t0ada2ples4r1tebank4farm7c0group6ockholm6rage3e3ream4udio2y3yle4u0cks3pplies3y2ort5rf1gery5zuki5v1watch4iss4x1y0dney4stems6z2tab1ipei4lk2obao4rget4tamotors6r2too4x0i3c0i2d0k2eam2ch0nology8l1masek5nnis4va3f1g1h0d1eater2re6iaa2ckets5enda4ps2res2ol4j0maxx4x2k0maxx5l1m0all4n1o0day3kyo3ols3p1ray3shiba5tal3urs3wn2yota3s3r0ade1ing4ining5vel0ers0insurance16ust3v2t1ube2i1nes3shu4v0s2w1z2ua1bank3s2g1k1nicom3versity8o2ol2ps2s1y1z2va0cations7na1guard7c1e0gas3ntures6risign5mögensberater2ung14sicherung10t2g1i0ajes4deo3g1king4llas4n1p1rgin4sa1ion4va1o3laanderen9n1odka3lvo3te1ing3o2yage5u2wales2mart4ter4ng0gou5tch0es6eather0channel12bcam3er2site5d0ding5ibo2r3f1hoswho6ien2ki2lliamhill9n0dows4e1ners6me2olterskluwer11odside6rk0s2ld3w2s1tc1f3xbox3erox4finity6ihuan4n2xx2yz3yachts4hoo3maxun5ndex5e1odobashi7ga2kohama6u0tube6t1un3za0ppos4ra3ero3ip2m1one3uerich6w2';\n// Internationalized domain names containing non-ASCII\nconst encodedUtlds = 'ελ1υ2бг1ел3дети4ею2католик6ом3мкд2он1сква6онлайн5рг3рус2ф2сайт3рб3укр3қаз3հայ3ישראל5קום3ابوظبي5رامكو5لاردن4بحرين5جزائر5سعودية6عليان5مغرب5مارات5یران5بارت2زار4يتك3ھارت5تونس4سودان3رية5شبكة4عراق2ب2مان4فلسطين6قطر3كاثوليك6وم3مصر2ليسيا5وريتانيا7قع4همراه5پاکستان7ڀارت4कॉम3नेट3भारत0म्3ोत5संगठन5বাংলা5ভারত2ৰত4ਭਾਰਤ4ભારત4ଭାରତ4இந்தியா6லங்கை6சிங்கப்பூர்11భారత్5ಭಾರತ4ഭാരതം5ලංකා4คอม3ไทย3ລາວ3გე2みんな3アマゾン4クラウド4グーグル4コム2ストア3セール3ファッション6ポイント4世界2中信1国1國1文网3亚马逊3企业2佛山2信息2健康2八卦2公司1益2台湾1灣2商城1店1标2嘉里0大酒店5在线2大拿2天主教3娱乐2家電2广东2微博2慈善2我爱你3手机2招聘2政务1府2新加坡2闻2时尚2書籍2机构2淡马锡3游戏2澳門2点看2移动2组织机构4网址1店1站1络2联通2谷歌2购物2通販2集团2電訊盈科4飞利浦3食品2餐厅2香格里拉3港2닷넷1컴2삼성2한국2';\n\n/**\n * @template A\n * @template B\n * @param {A} target\n * @param {B} properties\n * @return {A & B}\n */\nconst assign = (target, properties) => {\n  for (const key in properties) {\n    target[key] = properties[key];\n  }\n  return target;\n};\n\n/**\n * Finite State Machine generation utilities\n */\n\n/**\n * @template T\n * @typedef {{ [group: string]: T[] }} Collections\n */\n\n/**\n * @typedef {{ [group: string]: true }} Flags\n */\n\n// Keys in scanner Collections instances\nconst numeric = 'numeric';\nconst ascii = 'ascii';\nconst alpha = 'alpha';\nconst asciinumeric = 'asciinumeric';\nconst alphanumeric = 'alphanumeric';\nconst domain = 'domain';\nconst emoji = 'emoji';\nconst scheme = 'scheme';\nconst slashscheme = 'slashscheme';\nconst whitespace = 'whitespace';\n\n/**\n * @template T\n * @param {string} name\n * @param {Collections<T>} groups to register in\n * @returns {T[]} Current list of tokens in the given collection\n */\nfunction registerGroup(name, groups) {\n  if (!(name in groups)) {\n    groups[name] = [];\n  }\n  return groups[name];\n}\n\n/**\n * @template T\n * @param {T} t token to add\n * @param {Collections<T>} groups\n * @param {Flags} flags\n */\nfunction addToGroups(t, flags, groups) {\n  if (flags[numeric]) {\n    flags[asciinumeric] = true;\n    flags[alphanumeric] = true;\n  }\n  if (flags[ascii]) {\n    flags[asciinumeric] = true;\n    flags[alpha] = true;\n  }\n  if (flags[asciinumeric]) {\n    flags[alphanumeric] = true;\n  }\n  if (flags[alpha]) {\n    flags[alphanumeric] = true;\n  }\n  if (flags[alphanumeric]) {\n    flags[domain] = true;\n  }\n  if (flags[emoji]) {\n    flags[domain] = true;\n  }\n  for (const k in flags) {\n    const group = registerGroup(k, groups);\n    if (group.indexOf(t) < 0) {\n      group.push(t);\n    }\n  }\n}\n\n/**\n * @template T\n * @param {T} t token to check\n * @param {Collections<T>} groups\n * @returns {Flags} group flags that contain this token\n */\nfunction flagsForToken(t, groups) {\n  const result = {};\n  for (const c in groups) {\n    if (groups[c].indexOf(t) >= 0) {\n      result[c] = true;\n    }\n  }\n  return result;\n}\n\n/**\n * @template T\n * @typedef {null | T } Transition\n */\n\n/**\n * Define a basic state machine state. j is the list of character transitions,\n * jr is the list of regex-match transitions, jd is the default state to\n * transition to t is the accepting token type, if any. If this is the terminal\n * state, then it does not emit a token.\n *\n * The template type T represents the type of the token this state accepts. This\n * should be a string (such as of the token exports in `text.js`) or a\n * MultiToken subclass (from `multi.js`)\n *\n * @template T\n * @param {T} [token] Token that this state emits\n */\nfunction State(token) {\n  if (token === void 0) {\n    token = null;\n  }\n  // this.n = null; // DEBUG: State name\n  /** @type {{ [input: string]: State<T> }} j */\n  this.j = {}; // IMPLEMENTATION 1\n  // this.j = []; // IMPLEMENTATION 2\n  /** @type {[RegExp, State<T>][]} jr */\n  this.jr = [];\n  /** @type {?State<T>} jd */\n  this.jd = null;\n  /** @type {?T} t */\n  this.t = token;\n}\n\n/**\n * Scanner token groups\n * @type Collections<string>\n */\nState.groups = {};\nState.prototype = {\n  accepts() {\n    return !!this.t;\n  },\n  /**\n   * Follow an existing transition from the given input to the next state.\n   * Does not mutate.\n   * @param {string} input character or token type to transition on\n   * @returns {?State<T>} the next state, if any\n   */\n  go(input) {\n    const state = this;\n    const nextState = state.j[input];\n    if (nextState) {\n      return nextState;\n    }\n    for (let i = 0; i < state.jr.length; i++) {\n      const regex = state.jr[i][0];\n      const nextState = state.jr[i][1]; // note: might be empty to prevent default jump\n      if (nextState && regex.test(input)) {\n        return nextState;\n      }\n    }\n    // Nowhere left to jump! Return default, if any\n    return state.jd;\n  },\n  /**\n   * Whether the state has a transition for the given input. Set the second\n   * argument to true to only look for an exact match (and not a default or\n   * regular-expression-based transition)\n   * @param {string} input\n   * @param {boolean} exactOnly\n   */\n  has(input, exactOnly) {\n    if (exactOnly === void 0) {\n      exactOnly = false;\n    }\n    return exactOnly ? input in this.j : !!this.go(input);\n  },\n  /**\n   * Short for \"transition all\"; create a transition from the array of items\n   * in the given list to the same final resulting state.\n   * @param {string | string[]} inputs Group of inputs to transition on\n   * @param {Transition<T> | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   */\n  ta(inputs, next, flags, groups) {\n    for (let i = 0; i < inputs.length; i++) {\n      this.tt(inputs[i], next, flags, groups);\n    }\n  },\n  /**\n   * Short for \"take regexp transition\"; defines a transition for this state\n   * when it encounters a token which matches the given regular expression\n   * @param {RegExp} regexp Regular expression transition (populate first)\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   * @returns {State<T>} taken after the given input\n   */\n  tr(regexp, next, flags, groups) {\n    groups = groups || State.groups;\n    let nextState;\n    if (next && next.j) {\n      nextState = next;\n    } else {\n      // Token with maybe token groups\n      nextState = new State(next);\n      if (flags && groups) {\n        addToGroups(next, flags, groups);\n      }\n    }\n    this.jr.push([regexp, nextState]);\n    return nextState;\n  },\n  /**\n   * Short for \"take transitions\", will take as many sequential transitions as\n   * the length of the given input and returns the\n   * resulting final state.\n   * @param {string | string[]} input\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   * @returns {State<T>} taken after the given input\n   */\n  ts(input, next, flags, groups) {\n    let state = this;\n    const len = input.length;\n    if (!len) {\n      return state;\n    }\n    for (let i = 0; i < len - 1; i++) {\n      state = state.tt(input[i]);\n    }\n    return state.tt(input[len - 1], next, flags, groups);\n  },\n  /**\n   * Short for \"take transition\", this is a method for building/working with\n   * state machines.\n   *\n   * If a state already exists for the given input, returns it.\n   *\n   * If a token is specified, that state will emit that token when reached by\n   * the linkify engine.\n   *\n   * If no state exists, it will be initialized with some default transitions\n   * that resemble existing default transitions.\n   *\n   * If a state is given for the second argument, that state will be\n   * transitioned to on the given input regardless of what that input\n   * previously did.\n   *\n   * Specify a token group flags to define groups that this token belongs to.\n   * The token will be added to corresponding entires in the given groups\n   * object.\n   *\n   * @param {string} input character, token type to transition on\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of groups\n   * @returns {State<T>} taken after the given input\n   */\n  tt(input, next, flags, groups) {\n    groups = groups || State.groups;\n    const state = this;\n\n    // Check if existing state given, just a basic transition\n    if (next && next.j) {\n      state.j[input] = next;\n      return next;\n    }\n    const t = next;\n\n    // Take the transition with the usual default mechanisms and use that as\n    // a template for creating the next state\n    let nextState,\n      templateState = state.go(input);\n    if (templateState) {\n      nextState = new State();\n      assign(nextState.j, templateState.j);\n      nextState.jr.push.apply(nextState.jr, templateState.jr);\n      nextState.jd = templateState.jd;\n      nextState.t = templateState.t;\n    } else {\n      nextState = new State();\n    }\n    if (t) {\n      // Ensure newly token is in the same groups as the old token\n      if (groups) {\n        if (nextState.t && typeof nextState.t === 'string') {\n          const allFlags = assign(flagsForToken(nextState.t, groups), flags);\n          addToGroups(t, allFlags, groups);\n        } else if (flags) {\n          addToGroups(t, flags, groups);\n        }\n      }\n      nextState.t = t; // overwrite anything that was previously there\n    }\n\n    state.j[input] = nextState;\n    return nextState;\n  }\n};\n\n// Helper functions to improve minification (not exported outside linkifyjs module)\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string | string[]} input\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst ta = (state, input, next, flags, groups) => state.ta(input, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {RegExp} regexp\n * @param {T | State<T>} [next]\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst tr = (state, regexp, next, flags, groups) => state.tr(regexp, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string | string[]} input\n * @param {T | State<T>} [next]\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst ts = (state, input, next, flags, groups) => state.ts(input, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string} input\n * @param {T | State<T>} [next]\n * @param {Collections<T>} [groups]\n * @param {Flags} [flags]\n */\nconst tt = (state, input, next, flags, groups) => state.tt(input, next, flags, groups);\n\n/******************************************************************************\nText Tokens\nIdentifiers for token outputs from the regexp scanner\n******************************************************************************/\n\n// A valid web domain token\nconst WORD = 'WORD'; // only contains a-z\nconst UWORD = 'UWORD'; // contains letters other than a-z, used for IDN\n\n// Special case of word\nconst LOCALHOST = 'LOCALHOST';\n\n// Valid top-level domain, special case of WORD (see tlds.js)\nconst TLD = 'TLD';\n\n// Valid IDN TLD, special case of UWORD (see tlds.js)\nconst UTLD = 'UTLD';\n\n// The scheme portion of a web URI protocol. Supported types include: `mailto`,\n// `file`, and user-defined custom protocols. Limited to schemes that contain\n// only letters\nconst SCHEME = 'SCHEME';\n\n// Similar to SCHEME, except makes distinction for schemes that must always be\n// followed by `://`, not just `:`. Supported types include `http`, `https`,\n// `ftp`, `ftps`\nconst SLASH_SCHEME = 'SLASH_SCHEME';\n\n// Any sequence of digits 0-9\nconst NUM = 'NUM';\n\n// Any number of consecutive whitespace characters that are not newline\nconst WS = 'WS';\n\n// New line (unix style)\nconst NL$1 = 'NL'; // \\n\n\n// Opening/closing bracket classes\n// TODO: Rename OPEN -> LEFT and CLOSE -> RIGHT in v5 to fit with Unicode names\n// Also rename angle brackes to LESSTHAN and GREATER THAN\nconst OPENBRACE = 'OPENBRACE'; // {\nconst CLOSEBRACE = 'CLOSEBRACE'; // }\nconst OPENBRACKET = 'OPENBRACKET'; // [\nconst CLOSEBRACKET = 'CLOSEBRACKET'; // ]\nconst OPENPAREN = 'OPENPAREN'; // (\nconst CLOSEPAREN = 'CLOSEPAREN'; // )\nconst OPENANGLEBRACKET = 'OPENANGLEBRACKET'; // <\nconst CLOSEANGLEBRACKET = 'CLOSEANGLEBRACKET'; // >\nconst FULLWIDTHLEFTPAREN = 'FULLWIDTHLEFTPAREN'; // （\nconst FULLWIDTHRIGHTPAREN = 'FULLWIDTHRIGHTPAREN'; // ）\nconst LEFTCORNERBRACKET = 'LEFTCORNERBRACKET'; // 「\nconst RIGHTCORNERBRACKET = 'RIGHTCORNERBRACKET'; // 」\nconst LEFTWHITECORNERBRACKET = 'LEFTWHITECORNERBRACKET'; // 『\nconst RIGHTWHITECORNERBRACKET = 'RIGHTWHITECORNERBRACKET'; // 』\nconst FULLWIDTHLESSTHAN = 'FULLWIDTHLESSTHAN'; // ＜\nconst FULLWIDTHGREATERTHAN = 'FULLWIDTHGREATERTHAN'; // ＞\n\n// Various symbols\nconst AMPERSAND = 'AMPERSAND'; // &\nconst APOSTROPHE = 'APOSTROPHE'; // '\nconst ASTERISK = 'ASTERISK'; // *\nconst AT = 'AT'; // @\nconst BACKSLASH = 'BACKSLASH'; // \\\nconst BACKTICK = 'BACKTICK'; // `\nconst CARET = 'CARET'; // ^\nconst COLON = 'COLON'; // :\nconst COMMA = 'COMMA'; // ,\nconst DOLLAR = 'DOLLAR'; // $\nconst DOT = 'DOT'; // .\nconst EQUALS = 'EQUALS'; // =\nconst EXCLAMATION = 'EXCLAMATION'; // !\nconst HYPHEN = 'HYPHEN'; // -\nconst PERCENT = 'PERCENT'; // %\nconst PIPE = 'PIPE'; // |\nconst PLUS = 'PLUS'; // +\nconst POUND = 'POUND'; // #\nconst QUERY = 'QUERY'; // ?\nconst QUOTE = 'QUOTE'; // \"\n\nconst SEMI = 'SEMI'; // ;\nconst SLASH = 'SLASH'; // /\nconst TILDE = 'TILDE'; // ~\nconst UNDERSCORE = 'UNDERSCORE'; // _\n\n// Emoji symbol\nconst EMOJI$1 = 'EMOJI';\n\n// Default token - anything that is not one of the above\nconst SYM = 'SYM';\n\nvar tk = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tWORD: WORD,\n\tUWORD: UWORD,\n\tLOCALHOST: LOCALHOST,\n\tTLD: TLD,\n\tUTLD: UTLD,\n\tSCHEME: SCHEME,\n\tSLASH_SCHEME: SLASH_SCHEME,\n\tNUM: NUM,\n\tWS: WS,\n\tNL: NL$1,\n\tOPENBRACE: OPENBRACE,\n\tCLOSEBRACE: CLOSEBRACE,\n\tOPENBRACKET: OPENBRACKET,\n\tCLOSEBRACKET: CLOSEBRACKET,\n\tOPENPAREN: OPENPAREN,\n\tCLOSEPAREN: CLOSEPAREN,\n\tOPENANGLEBRACKET: OPENANGLEBRACKET,\n\tCLOSEANGLEBRACKET: CLOSEANGLEBRACKET,\n\tFULLWIDTHLEFTPAREN: FULLWIDTHLEFTPAREN,\n\tFULLWIDTHRIGHTPAREN: FULLWIDTHRIGHTPAREN,\n\tLEFTCORNERBRACKET: LEFTCORNERBRACKET,\n\tRIGHTCORNERBRACKET: RIGHTCORNERBRACKET,\n\tLEFTWHITECORNERBRACKET: LEFTWHITECORNERBRACKET,\n\tRIGHTWHITECORNERBRACKET: RIGHTWHITECORNERBRACKET,\n\tFULLWIDTHLESSTHAN: FULLWIDTHLESSTHAN,\n\tFULLWIDTHGREATERTHAN: FULLWIDTHGREATERTHAN,\n\tAMPERSAND: AMPERSAND,\n\tAPOSTROPHE: APOSTROPHE,\n\tASTERISK: ASTERISK,\n\tAT: AT,\n\tBACKSLASH: BACKSLASH,\n\tBACKTICK: BACKTICK,\n\tCARET: CARET,\n\tCOLON: COLON,\n\tCOMMA: COMMA,\n\tDOLLAR: DOLLAR,\n\tDOT: DOT,\n\tEQUALS: EQUALS,\n\tEXCLAMATION: EXCLAMATION,\n\tHYPHEN: HYPHEN,\n\tPERCENT: PERCENT,\n\tPIPE: PIPE,\n\tPLUS: PLUS,\n\tPOUND: POUND,\n\tQUERY: QUERY,\n\tQUOTE: QUOTE,\n\tSEMI: SEMI,\n\tSLASH: SLASH,\n\tTILDE: TILDE,\n\tUNDERSCORE: UNDERSCORE,\n\tEMOJI: EMOJI$1,\n\tSYM: SYM\n});\n\n// Note that these two Unicode ones expand into a really big one with Babel\nconst ASCII_LETTER = /[a-z]/;\nconst LETTER = /\\p{L}/u; // Any Unicode character with letter data type\nconst EMOJI = /\\p{Emoji}/u; // Any Unicode emoji character\nconst EMOJI_VARIATION$1 = /\\ufe0f/;\nconst DIGIT = /\\d/;\nconst SPACE = /\\s/;\n\nvar regexp = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tASCII_LETTER: ASCII_LETTER,\n\tLETTER: LETTER,\n\tEMOJI: EMOJI,\n\tEMOJI_VARIATION: EMOJI_VARIATION$1,\n\tDIGIT: DIGIT,\n\tSPACE: SPACE\n});\n\n/**\n\tThe scanner provides an interface that takes a string of text as input, and\n\toutputs an array of tokens instances that can be used for easy URL parsing.\n*/\nconst NL = '\\n'; // New line character\nconst EMOJI_VARIATION = '\\ufe0f'; // Variation selector, follows heart and others\nconst EMOJI_JOINER = '\\u200d'; // zero-width joiner\n\nlet tlds = null,\n  utlds = null; // don't change so only have to be computed once\n\n/**\n * Scanner output token:\n * - `t` is the token name (e.g., 'NUM', 'EMOJI', 'TLD')\n * - `v` is the value of the token (e.g., '123', '❤️', 'com')\n * - `s` is the start index of the token in the original string\n * - `e` is the end index of the token in the original string\n * @typedef {{t: string, v: string, s: number, e: number}} Token\n */\n\n/**\n * @template T\n * @typedef {{ [collection: string]: T[] }} Collections\n */\n\n/**\n * Initialize the scanner character-based state machine for the given start\n * state\n * @param {[string, boolean][]} customSchemes List of custom schemes, where each\n * item is a length-2 tuple with the first element set to the string scheme, and\n * the second element set to `true` if the `://` after the scheme is optional\n */\nfunction init$2(customSchemes) {\n  if (customSchemes === void 0) {\n    customSchemes = [];\n  }\n  // Frequently used states (name argument removed during minification)\n  /** @type Collections<string> */\n  const groups = {}; // of tokens\n  State.groups = groups;\n  /** @type State<string> */\n  const Start = new State();\n  if (tlds == null) {\n    tlds = decodeTlds(encodedTlds);\n  }\n  if (utlds == null) {\n    utlds = decodeTlds(encodedUtlds);\n  }\n\n  // States for special URL symbols that accept immediately after start\n  tt(Start, \"'\", APOSTROPHE);\n  tt(Start, '{', OPENBRACE);\n  tt(Start, '}', CLOSEBRACE);\n  tt(Start, '[', OPENBRACKET);\n  tt(Start, ']', CLOSEBRACKET);\n  tt(Start, '(', OPENPAREN);\n  tt(Start, ')', CLOSEPAREN);\n  tt(Start, '<', OPENANGLEBRACKET);\n  tt(Start, '>', CLOSEANGLEBRACKET);\n  tt(Start, '（', FULLWIDTHLEFTPAREN);\n  tt(Start, '）', FULLWIDTHRIGHTPAREN);\n  tt(Start, '「', LEFTCORNERBRACKET);\n  tt(Start, '」', RIGHTCORNERBRACKET);\n  tt(Start, '『', LEFTWHITECORNERBRACKET);\n  tt(Start, '』', RIGHTWHITECORNERBRACKET);\n  tt(Start, '＜', FULLWIDTHLESSTHAN);\n  tt(Start, '＞', FULLWIDTHGREATERTHAN);\n  tt(Start, '&', AMPERSAND);\n  tt(Start, '*', ASTERISK);\n  tt(Start, '@', AT);\n  tt(Start, '`', BACKTICK);\n  tt(Start, '^', CARET);\n  tt(Start, ':', COLON);\n  tt(Start, ',', COMMA);\n  tt(Start, '$', DOLLAR);\n  tt(Start, '.', DOT);\n  tt(Start, '=', EQUALS);\n  tt(Start, '!', EXCLAMATION);\n  tt(Start, '-', HYPHEN);\n  tt(Start, '%', PERCENT);\n  tt(Start, '|', PIPE);\n  tt(Start, '+', PLUS);\n  tt(Start, '#', POUND);\n  tt(Start, '?', QUERY);\n  tt(Start, '\"', QUOTE);\n  tt(Start, '/', SLASH);\n  tt(Start, ';', SEMI);\n  tt(Start, '~', TILDE);\n  tt(Start, '_', UNDERSCORE);\n  tt(Start, '\\\\', BACKSLASH);\n  const Num = tr(Start, DIGIT, NUM, {\n    [numeric]: true\n  });\n  tr(Num, DIGIT, Num);\n\n  // State which emits a word token\n  const Word = tr(Start, ASCII_LETTER, WORD, {\n    [ascii]: true\n  });\n  tr(Word, ASCII_LETTER, Word);\n\n  // Same as previous, but specific to non-fsm.ascii alphabet words\n  const UWord = tr(Start, LETTER, UWORD, {\n    [alpha]: true\n  });\n  tr(UWord, ASCII_LETTER); // Non-accepting\n  tr(UWord, LETTER, UWord);\n\n  // Whitespace jumps\n  // Tokens of only non-newline whitespace are arbitrarily long\n  // If any whitespace except newline, more whitespace!\n  const Ws = tr(Start, SPACE, WS, {\n    [whitespace]: true\n  });\n  tt(Start, NL, NL$1, {\n    [whitespace]: true\n  });\n  tt(Ws, NL); // non-accepting state to avoid mixing whitespaces\n  tr(Ws, SPACE, Ws);\n\n  // Emoji tokens. They are not grouped by the scanner except in cases where a\n  // zero-width joiner is present\n  const Emoji = tr(Start, EMOJI, EMOJI$1, {\n    [emoji]: true\n  });\n  tr(Emoji, EMOJI, Emoji);\n  tt(Emoji, EMOJI_VARIATION, Emoji);\n  // tt(Start, EMOJI_VARIATION, Emoji); // This one is sketchy\n\n  const EmojiJoiner = tt(Emoji, EMOJI_JOINER);\n  tr(EmojiJoiner, EMOJI, Emoji);\n  // tt(EmojiJoiner, EMOJI_VARIATION, Emoji); // also sketchy\n\n  // Generates states for top-level domains\n  // Note that this is most accurate when tlds are in alphabetical order\n  const wordjr = [[ASCII_LETTER, Word]];\n  const uwordjr = [[ASCII_LETTER, null], [LETTER, UWord]];\n  for (let i = 0; i < tlds.length; i++) {\n    fastts(Start, tlds[i], TLD, WORD, wordjr);\n  }\n  for (let i = 0; i < utlds.length; i++) {\n    fastts(Start, utlds[i], UTLD, UWORD, uwordjr);\n  }\n  addToGroups(TLD, {\n    tld: true,\n    ascii: true\n  }, groups);\n  addToGroups(UTLD, {\n    utld: true,\n    alpha: true\n  }, groups);\n\n  // Collect the states generated by different protocols. NOTE: If any new TLDs\n  // get added that are also protocols, set the token to be the same as the\n  // protocol to ensure parsing works as expected.\n  fastts(Start, 'file', SCHEME, WORD, wordjr);\n  fastts(Start, 'mailto', SCHEME, WORD, wordjr);\n  fastts(Start, 'http', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'https', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'ftp', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'ftps', SLASH_SCHEME, WORD, wordjr);\n  addToGroups(SCHEME, {\n    scheme: true,\n    ascii: true\n  }, groups);\n  addToGroups(SLASH_SCHEME, {\n    slashscheme: true,\n    ascii: true\n  }, groups);\n\n  // Register custom schemes. Assumes each scheme is asciinumeric with hyphens\n  customSchemes = customSchemes.sort((a, b) => a[0] > b[0] ? 1 : -1);\n  for (let i = 0; i < customSchemes.length; i++) {\n    const sch = customSchemes[i][0];\n    const optionalSlashSlash = customSchemes[i][1];\n    const flags = optionalSlashSlash ? {\n      [scheme]: true\n    } : {\n      [slashscheme]: true\n    };\n    if (sch.indexOf('-') >= 0) {\n      flags[domain] = true;\n    } else if (!ASCII_LETTER.test(sch)) {\n      flags[numeric] = true; // numbers only\n    } else if (DIGIT.test(sch)) {\n      flags[asciinumeric] = true;\n    } else {\n      flags[ascii] = true;\n    }\n    ts(Start, sch, sch, flags);\n  }\n\n  // Localhost token\n  ts(Start, 'localhost', LOCALHOST, {\n    ascii: true\n  });\n\n  // Set default transition for start state (some symbol)\n  Start.jd = new State(SYM);\n  return {\n    start: Start,\n    tokens: assign({\n      groups\n    }, tk)\n  };\n}\n\n/**\n\tGiven a string, returns an array of TOKEN instances representing the\n\tcomposition of that string.\n\n\t@method run\n\t@param {State<string>} start scanner starting state\n\t@param {string} str input string to scan\n\t@return {Token[]} list of tokens, each with a type and value\n*/\nfunction run$1(start, str) {\n  // State machine is not case sensitive, so input is tokenized in lowercased\n  // form (still returns regular case). Uses selective `toLowerCase` because\n  // lowercasing the entire string causes the length and character position to\n  // vary in some non-English strings with V8-based runtimes.\n  const iterable = stringToArray(str.replace(/[A-Z]/g, c => c.toLowerCase()));\n  const charCount = iterable.length; // <= len if there are emojis, etc\n  const tokens = []; // return value\n\n  // cursor through the string itself, accounting for characters that have\n  // width with length 2 such as emojis\n  let cursor = 0;\n\n  // Cursor through the array-representation of the string\n  let charCursor = 0;\n\n  // Tokenize the string\n  while (charCursor < charCount) {\n    let state = start;\n    let nextState = null;\n    let tokenLength = 0;\n    let latestAccepting = null;\n    let sinceAccepts = -1;\n    let charsSinceAccepts = -1;\n    while (charCursor < charCount && (nextState = state.go(iterable[charCursor]))) {\n      state = nextState;\n\n      // Keep track of the latest accepting state\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        charsSinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts += iterable[charCursor].length;\n        charsSinceAccepts++;\n      }\n      tokenLength += iterable[charCursor].length;\n      cursor += iterable[charCursor].length;\n      charCursor++;\n    }\n\n    // Roll back to the latest accepting state\n    cursor -= sinceAccepts;\n    charCursor -= charsSinceAccepts;\n    tokenLength -= sinceAccepts;\n\n    // No more jumps, just make a new token from the last accepting one\n    tokens.push({\n      t: latestAccepting.t,\n      // token type/name\n      v: str.slice(cursor - tokenLength, cursor),\n      // string value\n      s: cursor - tokenLength,\n      // start index\n      e: cursor // end index (excluding)\n    });\n  }\n\n  return tokens;\n}\n\n/**\n * Convert a String to an Array of characters, taking into account that some\n * characters like emojis take up two string indexes.\n *\n * Adapted from core-js (MIT license)\n * https://github.com/zloirock/core-js/blob/2d69cf5f99ab3ea3463c395df81e5a15b68f49d9/packages/core-js/internals/string-multibyte.js\n *\n * @function stringToArray\n * @param {string} str\n * @returns {string[]}\n */\nfunction stringToArray(str) {\n  const result = [];\n  const len = str.length;\n  let index = 0;\n  while (index < len) {\n    let first = str.charCodeAt(index);\n    let second;\n    let char = first < 0xd800 || first > 0xdbff || index + 1 === len || (second = str.charCodeAt(index + 1)) < 0xdc00 || second > 0xdfff ? str[index] // single character\n    : str.slice(index, index + 2); // two-index characters\n    result.push(char);\n    index += char.length;\n  }\n  return result;\n}\n\n/**\n * Fast version of ts function for when transition defaults are well known\n * @param {State<string>} state\n * @param {string} input\n * @param {string} t\n * @param {string} defaultt\n * @param {[RegExp, State<string>][]} jr\n * @returns {State<string>}\n */\nfunction fastts(state, input, t, defaultt, jr) {\n  let next;\n  const len = input.length;\n  for (let i = 0; i < len - 1; i++) {\n    const char = input[i];\n    if (state.j[char]) {\n      next = state.j[char];\n    } else {\n      next = new State(defaultt);\n      next.jr = jr.slice();\n      state.j[char] = next;\n    }\n    state = next;\n  }\n  next = new State(t);\n  next.jr = jr.slice();\n  state.j[input[len - 1]] = next;\n  return next;\n}\n\n/**\n * Converts a string of Top-Level Domain names encoded in update-tlds.js back\n * into a list of strings.\n * @param {str} encoded encoded TLDs string\n * @returns {str[]} original TLDs list\n */\nfunction decodeTlds(encoded) {\n  const words = [];\n  const stack = [];\n  let i = 0;\n  let digits = '0123456789';\n  while (i < encoded.length) {\n    let popDigitCount = 0;\n    while (digits.indexOf(encoded[i + popDigitCount]) >= 0) {\n      popDigitCount++; // encountered some digits, have to pop to go one level up trie\n    }\n\n    if (popDigitCount > 0) {\n      words.push(stack.join('')); // whatever preceded the pop digits must be a word\n      for (let popCount = parseInt(encoded.substring(i, i + popDigitCount), 10); popCount > 0; popCount--) {\n        stack.pop();\n      }\n      i += popDigitCount;\n    } else {\n      stack.push(encoded[i]); // drop down a level into the trie\n      i++;\n    }\n  }\n  return words;\n}\n\n/**\n * An object where each key is a valid DOM Event Name such as `click` or `focus`\n * and each value is an event handler function.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element#events\n * @typedef {?{ [event: string]: Function }} EventListeners\n */\n\n/**\n * All formatted properties required to render a link, including `tagName`,\n * `attributes`, `content` and `eventListeners`.\n * @typedef {{ tagName: any, attributes: {[attr: string]: any}, content: string,\n * eventListeners: EventListeners }} IntermediateRepresentation\n */\n\n/**\n * Specify either an object described by the template type `O` or a function.\n *\n * The function takes a string value (usually the link's href attribute), the\n * link type (`'url'`, `'hashtag`', etc.) and an internal token representation\n * of the link. It should return an object of the template type `O`\n * @template O\n * @typedef {O | ((value: string, type: string, token: MultiToken) => O)} OptObj\n */\n\n/**\n * Specify either a function described by template type `F` or an object.\n *\n * Each key in the object should be a link type (`'url'`, `'hashtag`', etc.). Each\n * value should be a function with template type `F` that is called when the\n * corresponding link type is encountered.\n * @template F\n * @typedef {F | { [type: string]: F}} OptFn\n */\n\n/**\n * Specify either a value with template type `V`, a function that returns `V` or\n * an object where each value resolves to `V`.\n *\n * The function takes a string value (usually the link's href attribute), the\n * link type (`'url'`, `'hashtag`', etc.) and an internal token representation\n * of the link. It should return an object of the template type `V`\n *\n * For the object, each key should be a link type (`'url'`, `'hashtag`', etc.).\n * Each value should either have type `V` or a function that returns V. This\n * function similarly takes a string value and a token.\n *\n * Example valid types for `Opt<string>`:\n *\n * ```js\n * 'hello'\n * (value, type, token) => 'world'\n * { url: 'hello', email: (value, token) => 'world'}\n * ```\n * @template V\n * @typedef {V | ((value: string, type: string, token: MultiToken) => V) | { [type: string]: V | ((value: string, token: MultiToken) => V) }} Opt\n */\n\n/**\n * See available options: https://linkify.js.org/docs/options.html\n * @typedef {{\n * \tdefaultProtocol?: string,\n *  events?: OptObj<EventListeners>,\n * \tformat?: Opt<string>,\n * \tformatHref?: Opt<string>,\n * \tnl2br?: boolean,\n * \ttagName?: Opt<any>,\n * \ttarget?: Opt<string>,\n * \trel?: Opt<string>,\n * \tvalidate?: Opt<boolean>,\n * \ttruncate?: Opt<number>,\n * \tclassName?: Opt<string>,\n * \tattributes?: OptObj<({ [attr: string]: any })>,\n *  ignoreTags?: string[],\n * \trender?: OptFn<((ir: IntermediateRepresentation) => any)>\n * }} Opts\n */\n\n/**\n * @type Required<Opts>\n */\nconst defaults = {\n  defaultProtocol: 'http',\n  events: null,\n  format: noop,\n  formatHref: noop,\n  nl2br: false,\n  tagName: 'a',\n  target: null,\n  rel: null,\n  validate: true,\n  truncate: Infinity,\n  className: null,\n  attributes: null,\n  ignoreTags: [],\n  render: null\n};\n\n/**\n * Utility class for linkify interfaces to apply specified\n * {@link Opts formatting and rendering options}.\n *\n * @param {Opts | Options} [opts] Option value overrides.\n * @param {(ir: IntermediateRepresentation) => any} [defaultRender] (For\n *   internal use) default render function that determines how to generate an\n *   HTML element based on a link token's derived tagName, attributes and HTML.\n *   Similar to render option\n */\nfunction Options(opts, defaultRender) {\n  if (defaultRender === void 0) {\n    defaultRender = null;\n  }\n  let o = assign({}, defaults);\n  if (opts) {\n    o = assign(o, opts instanceof Options ? opts.o : opts);\n  }\n\n  // Ensure all ignored tags are uppercase\n  const ignoredTags = o.ignoreTags;\n  const uppercaseIgnoredTags = [];\n  for (let i = 0; i < ignoredTags.length; i++) {\n    uppercaseIgnoredTags.push(ignoredTags[i].toUpperCase());\n  }\n  /** @protected */\n  this.o = o;\n  if (defaultRender) {\n    this.defaultRender = defaultRender;\n  }\n  this.ignoreTags = uppercaseIgnoredTags;\n}\nOptions.prototype = {\n  o: defaults,\n  /**\n   * @type string[]\n   */\n  ignoreTags: [],\n  /**\n   * @param {IntermediateRepresentation} ir\n   * @returns {any}\n   */\n  defaultRender(ir) {\n    return ir;\n  },\n  /**\n   * Returns true or false based on whether a token should be displayed as a\n   * link based on the user options.\n   * @param {MultiToken} token\n   * @returns {boolean}\n   */\n  check(token) {\n    return this.get('validate', token.toString(), token);\n  },\n  // Private methods\n\n  /**\n   * Resolve an option's value based on the value of the option and the given\n   * params. If operator and token are specified and the target option is\n   * callable, automatically calls the function with the given argument.\n   * @template {keyof Opts} K\n   * @param {K} key Name of option to use\n   * @param {string} [operator] will be passed to the target option if it's a\n   * function. If not specified, RAW function value gets returned\n   * @param {MultiToken} [token] The token from linkify.tokenize\n   * @returns {Opts[K] | any}\n   */\n  get(key, operator, token) {\n    const isCallable = operator != null;\n    let option = this.o[key];\n    if (!option) {\n      return option;\n    }\n    if (typeof option === 'object') {\n      option = token.t in option ? option[token.t] : defaults[key];\n      if (typeof option === 'function' && isCallable) {\n        option = option(operator, token);\n      }\n    } else if (typeof option === 'function' && isCallable) {\n      option = option(operator, token.t, token);\n    }\n    return option;\n  },\n  /**\n   * @template {keyof Opts} L\n   * @param {L} key Name of options object to use\n   * @param {string} [operator]\n   * @param {MultiToken} [token]\n   * @returns {Opts[L] | any}\n   */\n  getObj(key, operator, token) {\n    let obj = this.o[key];\n    if (typeof obj === 'function' && operator != null) {\n      obj = obj(operator, token.t, token);\n    }\n    return obj;\n  },\n  /**\n   * Convert the given token to a rendered element that may be added to the\n   * calling-interface's DOM\n   * @param {MultiToken} token Token to render to an HTML element\n   * @returns {any} Render result; e.g., HTML string, DOM element, React\n   *   Component, etc.\n   */\n  render(token) {\n    const ir = token.render(this); // intermediate representation\n    const renderFn = this.get('render', null, token) || this.defaultRender;\n    return renderFn(ir, token.t, token);\n  }\n};\nfunction noop(val) {\n  return val;\n}\n\nvar options = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tdefaults: defaults,\n\tOptions: Options,\n\tassign: assign\n});\n\n/******************************************************************************\n\tMulti-Tokens\n\tTokens composed of arrays of TextTokens\n******************************************************************************/\n\n/**\n * @param {string} value\n * @param {Token[]} tokens\n */\nfunction MultiToken(value, tokens) {\n  this.t = 'token';\n  this.v = value;\n  this.tk = tokens;\n}\n\n/**\n * Abstract class used for manufacturing tokens of text tokens. That is rather\n * than the value for a token being a small string of text, it's value an array\n * of text tokens.\n *\n * Used for grouping together URLs, emails, hashtags, and other potential\n * creations.\n * @class MultiToken\n * @property {string} t\n * @property {string} v\n * @property {Token[]} tk\n * @abstract\n */\nMultiToken.prototype = {\n  isLink: false,\n  /**\n   * Return the string this token represents.\n   * @return {string}\n   */\n  toString() {\n    return this.v;\n  },\n  /**\n   * What should the value for this token be in the `href` HTML attribute?\n   * Returns the `.toString` value by default.\n   * @param {string} [scheme]\n   * @return {string}\n  */\n  toHref(scheme) {\n    return this.toString();\n  },\n  /**\n   * @param {Options} options Formatting options\n   * @returns {string}\n   */\n  toFormattedString(options) {\n    const val = this.toString();\n    const truncate = options.get('truncate', val, this);\n    const formatted = options.get('format', val, this);\n    return truncate && formatted.length > truncate ? formatted.substring(0, truncate) + '…' : formatted;\n  },\n  /**\n   *\n   * @param {Options} options\n   * @returns {string}\n   */\n  toFormattedHref(options) {\n    return options.get('formatHref', this.toHref(options.get('defaultProtocol')), this);\n  },\n  /**\n   * The start index of this token in the original input string\n   * @returns {number}\n   */\n  startIndex() {\n    return this.tk[0].s;\n  },\n  /**\n   * The end index of this token in the original input string (up to this\n   * index but not including it)\n   * @returns {number}\n   */\n  endIndex() {\n    return this.tk[this.tk.length - 1].e;\n  },\n  /**\n  \tReturns an object  of relevant values for this token, which includes keys\n  \t* type - Kind of token ('url', 'email', etc.)\n  \t* value - Original text\n  \t* href - The value that should be added to the anchor tag's href\n  \t\tattribute\n  \t\t@method toObject\n  \t@param {string} [protocol] `'http'` by default\n  */\n  toObject(protocol) {\n    if (protocol === void 0) {\n      protocol = defaults.defaultProtocol;\n    }\n    return {\n      type: this.t,\n      value: this.toString(),\n      isLink: this.isLink,\n      href: this.toHref(protocol),\n      start: this.startIndex(),\n      end: this.endIndex()\n    };\n  },\n  /**\n   *\n   * @param {Options} options Formatting option\n   */\n  toFormattedObject(options) {\n    return {\n      type: this.t,\n      value: this.toFormattedString(options),\n      isLink: this.isLink,\n      href: this.toFormattedHref(options),\n      start: this.startIndex(),\n      end: this.endIndex()\n    };\n  },\n  /**\n   * Whether this token should be rendered as a link according to the given options\n   * @param {Options} options\n   * @returns {boolean}\n   */\n  validate(options) {\n    return options.get('validate', this.toString(), this);\n  },\n  /**\n   * Return an object that represents how this link should be rendered.\n   * @param {Options} options Formattinng options\n   */\n  render(options) {\n    const token = this;\n    const href = this.toHref(options.get('defaultProtocol'));\n    const formattedHref = options.get('formatHref', href, this);\n    const tagName = options.get('tagName', href, token);\n    const content = this.toFormattedString(options);\n    const attributes = {};\n    const className = options.get('className', href, token);\n    const target = options.get('target', href, token);\n    const rel = options.get('rel', href, token);\n    const attrs = options.getObj('attributes', href, token);\n    const eventListeners = options.getObj('events', href, token);\n    attributes.href = formattedHref;\n    if (className) {\n      attributes.class = className;\n    }\n    if (target) {\n      attributes.target = target;\n    }\n    if (rel) {\n      attributes.rel = rel;\n    }\n    if (attrs) {\n      assign(attributes, attrs);\n    }\n    return {\n      tagName,\n      attributes,\n      content,\n      eventListeners\n    };\n  }\n};\n\n/**\n * Create a new token that can be emitted by the parser state machine\n * @param {string} type readable type of the token\n * @param {object} props properties to assign or override, including isLink = true or false\n * @returns {new (value: string, tokens: Token[]) => MultiToken} new token class\n */\nfunction createTokenClass(type, props) {\n  class Token extends MultiToken {\n    constructor(value, tokens) {\n      super(value, tokens);\n      this.t = type;\n    }\n  }\n  for (const p in props) {\n    Token.prototype[p] = props[p];\n  }\n  Token.t = type;\n  return Token;\n}\n\n/**\n\tRepresents a list of tokens making up a valid email address\n*/\nconst Email = createTokenClass('email', {\n  isLink: true,\n  toHref() {\n    return 'mailto:' + this.toString();\n  }\n});\n\n/**\n\tRepresents some plain text\n*/\nconst Text = createTokenClass('text');\n\n/**\n\tMulti-linebreak token - represents a line break\n\t@class Nl\n*/\nconst Nl = createTokenClass('nl');\n\n/**\n\tRepresents a list of text tokens making up a valid URL\n\t@class Url\n*/\nconst Url = createTokenClass('url', {\n  isLink: true,\n  /**\n  \tLowercases relevant parts of the domain and adds the protocol if\n  \trequired. Note that this will not escape unsafe HTML characters in the\n  \tURL.\n  \t\t@param {string} [scheme] default scheme (e.g., 'https')\n  \t@return {string} the full href\n  */\n  toHref(scheme) {\n    if (scheme === void 0) {\n      scheme = defaults.defaultProtocol;\n    }\n    // Check if already has a prefix scheme\n    return this.hasProtocol() ? this.v : `${scheme}://${this.v}`;\n  },\n  /**\n   * Check whether this URL token has a protocol\n   * @return {boolean}\n   */\n  hasProtocol() {\n    const tokens = this.tk;\n    return tokens.length >= 2 && tokens[0].t !== LOCALHOST && tokens[1].t === COLON;\n  }\n});\n\nvar multi = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tMultiToken: MultiToken,\n\tBase: MultiToken,\n\tcreateTokenClass: createTokenClass,\n\tEmail: Email,\n\tText: Text,\n\tNl: Nl,\n\tUrl: Url\n});\n\n/**\n\tNot exactly parser, more like the second-stage scanner (although we can\n\ttheoretically hotswap the code here with a real parser in the future... but\n\tfor a little URL-finding utility abstract syntax trees may be a little\n\toverkill).\n\n\tURL format: http://en.wikipedia.org/wiki/URI_scheme\n\tEmail format: http://en.wikipedia.org/wiki/EmailAddress (links to RFC in\n\treference)\n\n\t@module linkify\n\t@submodule parser\n\t@main run\n*/\nconst makeState = arg => new State(arg);\n\n/**\n * Generate the parser multi token-based state machine\n * @param {{ groups: Collections<string> }} tokens\n */\nfunction init$1(_ref) {\n  let {\n    groups\n  } = _ref;\n  // Types of characters the URL can definitely end in\n  const qsAccepting = groups.domain.concat([AMPERSAND, ASTERISK, AT, BACKSLASH, BACKTICK, CARET, DOLLAR, EQUALS, HYPHEN, NUM, PERCENT, PIPE, PLUS, POUND, SLASH, SYM, TILDE, UNDERSCORE]);\n\n  // Types of tokens that can follow a URL and be part of the query string\n  // but cannot be the very last characters\n  // Characters that cannot appear in the URL at all should be excluded\n  const qsNonAccepting = [APOSTROPHE, COLON, COMMA, DOT, EXCLAMATION, QUERY, QUOTE, SEMI, OPENANGLEBRACKET, CLOSEANGLEBRACKET, OPENBRACE, CLOSEBRACE, CLOSEBRACKET, OPENBRACKET, OPENPAREN, CLOSEPAREN, FULLWIDTHLEFTPAREN, FULLWIDTHRIGHTPAREN, LEFTCORNERBRACKET, RIGHTCORNERBRACKET, LEFTWHITECORNERBRACKET, RIGHTWHITECORNERBRACKET, FULLWIDTHLESSTHAN, FULLWIDTHGREATERTHAN];\n\n  // For addresses without the mailto prefix\n  // Tokens allowed in the localpart of the email\n  const localpartAccepting = [AMPERSAND, APOSTROPHE, ASTERISK, BACKSLASH, BACKTICK, CARET, DOLLAR, EQUALS, HYPHEN, OPENBRACE, CLOSEBRACE, PERCENT, PIPE, PLUS, POUND, QUERY, SLASH, SYM, TILDE, UNDERSCORE];\n\n  // The universal starting state.\n  /**\n   * @type State<Token>\n   */\n  const Start = makeState();\n  const Localpart = tt(Start, TILDE); // Local part of the email address\n  ta(Localpart, localpartAccepting, Localpart);\n  ta(Localpart, groups.domain, Localpart);\n  const Domain = makeState(),\n    Scheme = makeState(),\n    SlashScheme = makeState();\n  ta(Start, groups.domain, Domain); // parsed string ends with a potential domain name (A)\n  ta(Start, groups.scheme, Scheme); // e.g., 'mailto'\n  ta(Start, groups.slashscheme, SlashScheme); // e.g., 'http'\n\n  ta(Domain, localpartAccepting, Localpart);\n  ta(Domain, groups.domain, Domain);\n  const LocalpartAt = tt(Domain, AT); // Local part of the email address plus @\n\n  tt(Localpart, AT, LocalpartAt); // close to an email address now\n\n  // Local part of an email address can be e.g. 'http' or 'mailto'\n  tt(Scheme, AT, LocalpartAt);\n  tt(SlashScheme, AT, LocalpartAt);\n  const LocalpartDot = tt(Localpart, DOT); // Local part of the email address plus '.' (localpart cannot end in .)\n  ta(LocalpartDot, localpartAccepting, Localpart);\n  ta(LocalpartDot, groups.domain, Localpart);\n  const EmailDomain = makeState();\n  ta(LocalpartAt, groups.domain, EmailDomain); // parsed string starts with local email info + @ with a potential domain name\n  ta(EmailDomain, groups.domain, EmailDomain);\n  const EmailDomainDot = tt(EmailDomain, DOT); // domain followed by DOT\n  ta(EmailDomainDot, groups.domain, EmailDomain);\n  const Email$1 = makeState(Email); // Possible email address (could have more tlds)\n  ta(EmailDomainDot, groups.tld, Email$1);\n  ta(EmailDomainDot, groups.utld, Email$1);\n  tt(LocalpartAt, LOCALHOST, Email$1);\n\n  // Hyphen can jump back to a domain name\n  const EmailDomainHyphen = tt(EmailDomain, HYPHEN); // parsed string starts with local email info + @ with a potential domain name\n  ta(EmailDomainHyphen, groups.domain, EmailDomain);\n  ta(Email$1, groups.domain, EmailDomain);\n  tt(Email$1, DOT, EmailDomainDot);\n  tt(Email$1, HYPHEN, EmailDomainHyphen);\n\n  // Final possible email states\n  const EmailColon = tt(Email$1, COLON); // URL followed by colon (potential port number here)\n  /*const EmailColonPort = */\n  ta(EmailColon, groups.numeric, Email); // URL followed by colon and port number\n\n  // Account for dots and hyphens. Hyphens are usually parts of domain names\n  // (but not TLDs)\n  const DomainHyphen = tt(Domain, HYPHEN); // domain followed by hyphen\n  const DomainDot = tt(Domain, DOT); // domain followed by DOT\n  ta(DomainHyphen, groups.domain, Domain);\n  ta(DomainDot, localpartAccepting, Localpart);\n  ta(DomainDot, groups.domain, Domain);\n  const DomainDotTld = makeState(Url); // Simplest possible URL with no query string\n  ta(DomainDot, groups.tld, DomainDotTld);\n  ta(DomainDot, groups.utld, DomainDotTld);\n  ta(DomainDotTld, groups.domain, Domain);\n  ta(DomainDotTld, localpartAccepting, Localpart);\n  tt(DomainDotTld, DOT, DomainDot);\n  tt(DomainDotTld, HYPHEN, DomainHyphen);\n  tt(DomainDotTld, AT, LocalpartAt);\n  const DomainDotTldColon = tt(DomainDotTld, COLON); // URL followed by colon (potential port number here)\n  const DomainDotTldColonPort = makeState(Url); // TLD followed by a port number\n  ta(DomainDotTldColon, groups.numeric, DomainDotTldColonPort);\n\n  // Long URL with optional port and maybe query string\n  const Url$1 = makeState(Url);\n\n  // URL with extra symbols at the end, followed by an opening bracket\n  const UrlNonaccept = makeState(); // URL followed by some symbols (will not be part of the final URL)\n\n  // Query strings\n  ta(Url$1, qsAccepting, Url$1);\n  ta(Url$1, qsNonAccepting, UrlNonaccept);\n  ta(UrlNonaccept, qsAccepting, Url$1);\n  ta(UrlNonaccept, qsNonAccepting, UrlNonaccept);\n\n  // Become real URLs after `SLASH` or `COLON NUM SLASH`\n  // Here works with or without scheme:// prefix\n  tt(DomainDotTld, SLASH, Url$1);\n  tt(DomainDotTldColonPort, SLASH, Url$1);\n\n  // Note that domains that begin with schemes are treated slighly differently\n  const SchemeColon = tt(Scheme, COLON); // e.g., 'mailto:'\n  const SlashSchemeColon = tt(SlashScheme, COLON); // e.g., 'http:'\n  const SlashSchemeColonSlash = tt(SlashSchemeColon, SLASH); // e.g., 'http:/'\n\n  const UriPrefix = tt(SlashSchemeColonSlash, SLASH); // e.g., 'http://'\n\n  // Scheme states can transition to domain states\n  ta(Scheme, groups.domain, Domain);\n  tt(Scheme, DOT, DomainDot);\n  tt(Scheme, HYPHEN, DomainHyphen);\n  ta(SlashScheme, groups.domain, Domain);\n  tt(SlashScheme, DOT, DomainDot);\n  tt(SlashScheme, HYPHEN, DomainHyphen);\n\n  // Force URL with scheme prefix followed by anything sane\n  ta(SchemeColon, groups.domain, Url$1);\n  tt(SchemeColon, SLASH, Url$1);\n  ta(UriPrefix, groups.domain, Url$1);\n  ta(UriPrefix, qsAccepting, Url$1);\n  tt(UriPrefix, SLASH, Url$1);\n  const bracketPairs = [[OPENBRACE, CLOSEBRACE],\n  // {}\n  [OPENBRACKET, CLOSEBRACKET],\n  // []\n  [OPENPAREN, CLOSEPAREN],\n  // ()\n  [OPENANGLEBRACKET, CLOSEANGLEBRACKET],\n  // <>\n  [FULLWIDTHLEFTPAREN, FULLWIDTHRIGHTPAREN],\n  // （）\n  [LEFTCORNERBRACKET, RIGHTCORNERBRACKET],\n  // 「」\n  [LEFTWHITECORNERBRACKET, RIGHTWHITECORNERBRACKET],\n  // 『』\n  [FULLWIDTHLESSTHAN, FULLWIDTHGREATERTHAN] // ＜＞\n  ];\n\n  for (let i = 0; i < bracketPairs.length; i++) {\n    const [OPEN, CLOSE] = bracketPairs[i];\n    const UrlOpen = tt(Url$1, OPEN); // URL followed by open bracket\n\n    // Continue not accepting for open brackets\n    tt(UrlNonaccept, OPEN, UrlOpen);\n\n    // Closing bracket component. This character WILL be included in the URL\n    tt(UrlOpen, CLOSE, Url$1);\n\n    // URL that beings with an opening bracket, followed by a symbols.\n    // Note that the final state can still be `UrlOpen` (if the URL has a\n    // single opening bracket for some reason).\n    const UrlOpenQ = makeState(Url);\n    ta(UrlOpen, qsAccepting, UrlOpenQ);\n    const UrlOpenSyms = makeState(); // UrlOpen followed by some symbols it cannot end it\n    ta(UrlOpen, qsNonAccepting);\n\n    // URL that begins with an opening bracket, followed by some symbols\n    ta(UrlOpenQ, qsAccepting, UrlOpenQ);\n    ta(UrlOpenQ, qsNonAccepting, UrlOpenSyms);\n    ta(UrlOpenSyms, qsAccepting, UrlOpenQ);\n    ta(UrlOpenSyms, qsNonAccepting, UrlOpenSyms);\n\n    // Close brace/bracket to become regular URL\n    tt(UrlOpenQ, CLOSE, Url$1);\n    tt(UrlOpenSyms, CLOSE, Url$1);\n  }\n  tt(Start, LOCALHOST, DomainDotTld); // localhost is a valid URL state\n  tt(Start, NL$1, Nl); // single new line\n\n  return {\n    start: Start,\n    tokens: tk\n  };\n}\n\n/**\n * Run the parser state machine on a list of scanned string-based tokens to\n * create a list of multi tokens, each of which represents a URL, email address,\n * plain text, etc.\n *\n * @param {State<MultiToken>} start parser start state\n * @param {string} input the original input used to generate the given tokens\n * @param {Token[]} tokens list of scanned tokens\n * @returns {MultiToken[]}\n */\nfunction run(start, input, tokens) {\n  let len = tokens.length;\n  let cursor = 0;\n  let multis = [];\n  let textTokens = [];\n  while (cursor < len) {\n    let state = start;\n    let secondState = null;\n    let nextState = null;\n    let multiLength = 0;\n    let latestAccepting = null;\n    let sinceAccepts = -1;\n    while (cursor < len && !(secondState = state.go(tokens[cursor].t))) {\n      // Starting tokens with nowhere to jump to.\n      // Consider these to be just plain text\n      textTokens.push(tokens[cursor++]);\n    }\n    while (cursor < len && (nextState = secondState || state.go(tokens[cursor].t))) {\n      // Get the next state\n      secondState = null;\n      state = nextState;\n\n      // Keep track of the latest accepting state\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts++;\n      }\n      cursor++;\n      multiLength++;\n    }\n    if (sinceAccepts < 0) {\n      // No accepting state was found, part of a regular text token add\n      // the first text token to the text tokens array and try again from\n      // the next\n      cursor -= multiLength;\n      if (cursor < len) {\n        textTokens.push(tokens[cursor]);\n        cursor++;\n      }\n    } else {\n      // Accepting state!\n      // First close off the textTokens (if available)\n      if (textTokens.length > 0) {\n        multis.push(initMultiToken(Text, input, textTokens));\n        textTokens = [];\n      }\n\n      // Roll back to the latest accepting state\n      cursor -= sinceAccepts;\n      multiLength -= sinceAccepts;\n\n      // Create a new multitoken\n      const Multi = latestAccepting.t;\n      const subtokens = tokens.slice(cursor - multiLength, cursor);\n      multis.push(initMultiToken(Multi, input, subtokens));\n    }\n  }\n\n  // Finally close off the textTokens (if available)\n  if (textTokens.length > 0) {\n    multis.push(initMultiToken(Text, input, textTokens));\n  }\n  return multis;\n}\n\n/**\n * Utility function for instantiating a new multitoken with all the relevant\n * fields during parsing.\n * @param {new (value: string, tokens: Token[]) => MultiToken} Multi class to instantiate\n * @param {string} input original input string\n * @param {Token[]} tokens consecutive tokens scanned from input string\n * @returns {MultiToken}\n */\nfunction initMultiToken(Multi, input, tokens) {\n  const startIdx = tokens[0].s;\n  const endIdx = tokens[tokens.length - 1].e;\n  const value = input.slice(startIdx, endIdx);\n  return new Multi(value, tokens);\n}\n\nconst warn = typeof console !== 'undefined' && console && console.warn || (() => {});\nconst warnAdvice = 'until manual call of linkify.init(). Register all schemes and plugins before invoking linkify the first time.';\n\n// Side-effect initialization state\nconst INIT = {\n  scanner: null,\n  parser: null,\n  tokenQueue: [],\n  pluginQueue: [],\n  customSchemes: [],\n  initialized: false\n};\n\n/**\n * @typedef {{\n * \tstart: State<string>,\n * \ttokens: { groups: Collections<string> } & typeof tk\n * }} ScannerInit\n */\n\n/**\n * @typedef {{\n * \tstart: State<MultiToken>,\n * \ttokens: typeof multi\n * }} ParserInit\n */\n\n/**\n * @typedef {(arg: { scanner: ScannerInit }) => void} TokenPlugin\n */\n\n/**\n * @typedef {(arg: { scanner: ScannerInit, parser: ParserInit }) => void} Plugin\n */\n\n/**\n * De-register all plugins and reset the internal state-machine. Used for\n * testing; not required in practice.\n * @private\n */\nfunction reset() {\n  State.groups = {};\n  INIT.scanner = null;\n  INIT.parser = null;\n  INIT.tokenQueue = [];\n  INIT.pluginQueue = [];\n  INIT.customSchemes = [];\n  INIT.initialized = false;\n}\n\n/**\n * Register a token plugin to allow the scanner to recognize additional token\n * types before the parser state machine is constructed from the results.\n * @param {string} name of plugin to register\n * @param {TokenPlugin} plugin function that accepts the scanner state machine\n * and available scanner tokens and collections and extends the state machine to\n * recognize additional tokens or groups.\n */\nfunction registerTokenPlugin(name, plugin) {\n  if (typeof plugin !== 'function') {\n    throw new Error(`linkifyjs: Invalid token plugin ${plugin} (expects function)`);\n  }\n  for (let i = 0; i < INIT.tokenQueue.length; i++) {\n    if (name === INIT.tokenQueue[i][0]) {\n      warn(`linkifyjs: token plugin \"${name}\" already registered - will be overwritten`);\n      INIT.tokenQueue[i] = [name, plugin];\n      return;\n    }\n  }\n  INIT.tokenQueue.push([name, plugin]);\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register token plugin \"${name}\" ${warnAdvice}`);\n  }\n}\n\n/**\n * Register a linkify plugin\n * @param {string} name of plugin to register\n * @param {Plugin} plugin function that accepts the parser state machine and\n * extends the parser to recognize additional link types\n */\nfunction registerPlugin(name, plugin) {\n  if (typeof plugin !== 'function') {\n    throw new Error(`linkifyjs: Invalid plugin ${plugin} (expects function)`);\n  }\n  for (let i = 0; i < INIT.pluginQueue.length; i++) {\n    if (name === INIT.pluginQueue[i][0]) {\n      warn(`linkifyjs: plugin \"${name}\" already registered - will be overwritten`);\n      INIT.pluginQueue[i] = [name, plugin];\n      return;\n    }\n  }\n  INIT.pluginQueue.push([name, plugin]);\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register plugin \"${name}\" ${warnAdvice}`);\n  }\n}\n\n/**\n * Detect URLs with the following additional protocol. Anything with format\n * \"protocol://...\" will be considered a link. If `optionalSlashSlash` is set to\n * `true`, anything with format \"protocol:...\" will be considered a link.\n * @param {string} protocol\n * @param {boolean} [optionalSlashSlash]\n */\nfunction registerCustomProtocol(scheme, optionalSlashSlash) {\n  if (optionalSlashSlash === void 0) {\n    optionalSlashSlash = false;\n  }\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register custom scheme \"${scheme}\" ${warnAdvice}`);\n  }\n  if (!/^[0-9a-z]+(-[0-9a-z]+)*$/.test(scheme)) {\n    throw new Error(`linkifyjs: incorrect scheme format.\n1. Must only contain digits, lowercase ASCII letters or \"-\"\n2. Cannot start or end with \"-\"\n3. \"-\" cannot repeat`);\n  }\n  INIT.customSchemes.push([scheme, optionalSlashSlash]);\n}\n\n/**\n * Initialize the linkify state machine. Called automatically the first time\n * linkify is called on a string, but may be called manually as well.\n */\nfunction init() {\n  // Initialize scanner state machine and plugins\n  INIT.scanner = init$2(INIT.customSchemes);\n  for (let i = 0; i < INIT.tokenQueue.length; i++) {\n    INIT.tokenQueue[i][1]({\n      scanner: INIT.scanner\n    });\n  }\n\n  // Initialize parser state machine and plugins\n  INIT.parser = init$1(INIT.scanner.tokens);\n  for (let i = 0; i < INIT.pluginQueue.length; i++) {\n    INIT.pluginQueue[i][1]({\n      scanner: INIT.scanner,\n      parser: INIT.parser\n    });\n  }\n  INIT.initialized = true;\n}\n\n/**\n * Parse a string into tokens that represent linkable and non-linkable sub-components\n * @param {string} str\n * @return {MultiToken[]} tokens\n */\nfunction tokenize(str) {\n  if (!INIT.initialized) {\n    init();\n  }\n  return run(INIT.parser.start, str, run$1(INIT.scanner.start, str));\n}\n\n/**\n * Find a list of linkable items in the given string.\n * @param {string} str string to find links in\n * @param {string | Opts} [type] either formatting options or specific type of\n * links to find, e.g., 'url' or 'email'\n * @param {Opts} [opts] formatting options for final output. Cannot be specified\n * if opts already provided in `type` argument\n */\nfunction find(str, type, opts) {\n  if (type === void 0) {\n    type = null;\n  }\n  if (opts === void 0) {\n    opts = null;\n  }\n  if (type && typeof type === 'object') {\n    if (opts) {\n      throw Error(`linkifyjs: Invalid link type ${type}; must be a string`);\n    }\n    opts = type;\n    type = null;\n  }\n  const options = new Options(opts);\n  const tokens = tokenize(str);\n  const filtered = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.isLink && (!type || token.t === type) && options.check(token)) {\n      filtered.push(token.toFormattedObject(options));\n    }\n  }\n  return filtered;\n}\n\n/**\n * Is the given string valid linkable text of some sort. Note that this does not\n * trim the text for you.\n *\n * Optionally pass in a second `type` param, which is the type of link to test\n * for.\n *\n * For example,\n *\n *     linkify.test(str, 'email');\n *\n * Returns `true` if str is a valid email.\n * @param {string} str string to test for links\n * @param {string} [type] optional specific link type to look for\n * @returns boolean true/false\n */\nfunction test(str, type) {\n  if (type === void 0) {\n    type = null;\n  }\n  const tokens = tokenize(str);\n  return tokens.length === 1 && tokens[0].isLink && (!type || tokens[0].t === type);\n}\n\nexport { MultiToken, Options, State, createTokenClass, find, init, multi, options, regexp, registerCustomProtocol, registerPlugin, registerTokenPlugin, reset, stringToArray, test, tokenize };\n","import { combineTransactionSteps, getChangedRanges, findChildrenInRange, getMarksBetween, getAttributes, Mark, mergeAttributes, markPasteRule } from '@tiptap/core';\nimport { find, registerCustomProtocol, reset } from 'linkifyjs';\nimport { Plugin, PluginKey } from '@tiptap/pm/state';\n\nfunction autolink(options) {\r\n    return new Plugin({\r\n        key: new PluginKey('autolink'),\r\n        appendTransaction: (transactions, oldState, newState) => {\r\n            const docChanges = transactions.some(transaction => transaction.docChanged) && !oldState.doc.eq(newState.doc);\r\n            const preventAutolink = transactions.some(transaction => transaction.getMeta('preventAutolink'));\r\n            if (!docChanges || preventAutolink) {\r\n                return;\r\n            }\r\n            const { tr } = newState;\r\n            const transform = combineTransactionSteps(oldState.doc, [...transactions]);\r\n            const changes = getChangedRanges(transform);\r\n            changes.forEach(({ newRange }) => {\r\n                // Now let’s see if we can add new links.\r\n                const nodesInChangedRanges = findChildrenInRange(newState.doc, newRange, node => node.isTextblock);\r\n                let textBlock;\r\n                let textBeforeWhitespace;\r\n                if (nodesInChangedRanges.length > 1) {\r\n                    // Grab the first node within the changed ranges (ex. the first of two paragraphs when hitting enter).\r\n                    textBlock = nodesInChangedRanges[0];\r\n                    textBeforeWhitespace = newState.doc.textBetween(textBlock.pos, textBlock.pos + textBlock.node.nodeSize, undefined, ' ');\r\n                }\r\n                else if (nodesInChangedRanges.length\r\n                    // We want to make sure to include the block seperator argument to treat hard breaks like spaces.\r\n                    && newState.doc.textBetween(newRange.from, newRange.to, ' ', ' ').endsWith(' ')) {\r\n                    textBlock = nodesInChangedRanges[0];\r\n                    textBeforeWhitespace = newState.doc.textBetween(textBlock.pos, newRange.to, undefined, ' ');\r\n                }\r\n                if (textBlock && textBeforeWhitespace) {\r\n                    const wordsBeforeWhitespace = textBeforeWhitespace.split(' ').filter(s => s !== '');\r\n                    if (wordsBeforeWhitespace.length <= 0) {\r\n                        return false;\r\n                    }\r\n                    const lastWordBeforeSpace = wordsBeforeWhitespace[wordsBeforeWhitespace.length - 1];\r\n                    const lastWordAndBlockOffset = textBlock.pos + textBeforeWhitespace.lastIndexOf(lastWordBeforeSpace);\r\n                    if (!lastWordBeforeSpace) {\r\n                        return false;\r\n                    }\r\n                    find(lastWordBeforeSpace)\r\n                        .filter(link => link.isLink)\r\n                        // Calculate link position.\r\n                        .map(link => ({\r\n                        ...link,\r\n                        from: lastWordAndBlockOffset + link.start + 1,\r\n                        to: lastWordAndBlockOffset + link.end + 1,\r\n                    }))\r\n                        // ignore link inside code mark\r\n                        .filter(link => {\r\n                        if (!newState.schema.marks.code) {\r\n                            return true;\r\n                        }\r\n                        return !newState.doc.rangeHasMark(link.from, link.to, newState.schema.marks.code);\r\n                    })\r\n                        // validate link\r\n                        .filter(link => {\r\n                        if (options.validate) {\r\n                            return options.validate(link.value);\r\n                        }\r\n                        return true;\r\n                    })\r\n                        // Add link mark.\r\n                        .forEach(link => {\r\n                        if (getMarksBetween(link.from, link.to, newState.doc).some(item => item.mark.type === options.type)) {\r\n                            return;\r\n                        }\r\n                        tr.addMark(link.from, link.to, options.type.create({\r\n                            href: link.href,\r\n                        }));\r\n                    });\r\n                }\r\n            });\r\n            if (!tr.steps.length) {\r\n                return;\r\n            }\r\n            return tr;\r\n        },\r\n    });\r\n}\n\nfunction clickHandler(options) {\r\n    return new Plugin({\r\n        key: new PluginKey('handleClickLink'),\r\n        props: {\r\n            handleClick: (view, pos, event) => {\r\n                var _a, _b;\r\n                if (event.button !== 0) {\r\n                    return false;\r\n                }\r\n                const eventTarget = event.target;\r\n                if (eventTarget.nodeName !== 'A') {\r\n                    return false;\r\n                }\r\n                const attrs = getAttributes(view.state, options.type.name);\r\n                const link = event.target;\r\n                const href = (_a = link === null || link === void 0 ? void 0 : link.href) !== null && _a !== void 0 ? _a : attrs.href;\r\n                const target = (_b = link === null || link === void 0 ? void 0 : link.target) !== null && _b !== void 0 ? _b : attrs.target;\r\n                if (link && href) {\r\n                    if (view.editable) {\r\n                        window.open(href, target);\r\n                    }\r\n                    return true;\r\n                }\r\n                return false;\r\n            },\r\n        },\r\n    });\r\n}\n\nfunction pasteHandler(options) {\r\n    return new Plugin({\r\n        key: new PluginKey('handlePasteLink'),\r\n        props: {\r\n            handlePaste: (view, event, slice) => {\r\n                var _a;\r\n                const { state } = view;\r\n                const { selection } = state;\r\n                const { empty } = selection;\r\n                if (empty) {\r\n                    return false;\r\n                }\r\n                let textContent = '';\r\n                slice.content.forEach(node => {\r\n                    textContent += node.textContent;\r\n                });\r\n                const link = find(textContent).find(item => item.isLink && item.value === textContent);\r\n                if (!textContent || !link) {\r\n                    return false;\r\n                }\r\n                const html = (_a = event.clipboardData) === null || _a === void 0 ? void 0 : _a.getData('text/html');\r\n                const hrefRegex = /href=\"([^\"]*)\"/;\r\n                const existingLink = html === null || html === void 0 ? void 0 : html.match(hrefRegex);\r\n                const url = existingLink ? existingLink[1] : link.href;\r\n                options.editor.commands.setMark(options.type, {\r\n                    href: url,\r\n                });\r\n                return true;\r\n            },\r\n        },\r\n    });\r\n}\n\nconst Link = Mark.create({\r\n    name: 'link',\r\n    priority: 1000,\r\n    keepOnSplit: false,\r\n    onCreate() {\r\n        this.options.protocols.forEach(protocol => {\r\n            if (typeof protocol === 'string') {\r\n                registerCustomProtocol(protocol);\r\n                return;\r\n            }\r\n            registerCustomProtocol(protocol.scheme, protocol.optionalSlashes);\r\n        });\r\n    },\r\n    onDestroy() {\r\n        reset();\r\n    },\r\n    inclusive() {\r\n        return this.options.autolink;\r\n    },\r\n    addOptions() {\r\n        return {\r\n            openOnClick: true,\r\n            linkOnPaste: true,\r\n            autolink: true,\r\n            protocols: [],\r\n            HTMLAttributes: {\r\n                target: '_blank',\r\n                rel: 'noopener noreferrer nofollow',\r\n                class: null,\r\n            },\r\n            validate: undefined,\r\n        };\r\n    },\r\n    addAttributes() {\r\n        return {\r\n            href: {\r\n                default: null,\r\n            },\r\n            target: {\r\n                default: this.options.HTMLAttributes.target,\r\n            },\r\n            rel: {\r\n                default: this.options.HTMLAttributes.rel,\r\n            },\r\n            class: {\r\n                default: this.options.HTMLAttributes.class,\r\n            },\r\n        };\r\n    },\r\n    parseHTML() {\r\n        return [{ tag: 'a[href]:not([href *= \"javascript:\" i])' }];\r\n    },\r\n    renderHTML({ HTMLAttributes }) {\r\n        var _a;\r\n        // False positive; we're explicitly checking for javascript: links to ignore them\r\n        // eslint-disable-next-line no-script-url\r\n        if ((_a = HTMLAttributes.href) === null || _a === void 0 ? void 0 : _a.startsWith('javascript:')) {\r\n            // strip out the href\r\n            return ['a', mergeAttributes(this.options.HTMLAttributes, { ...HTMLAttributes, href: '' }), 0];\r\n        }\r\n        return ['a', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\r\n    },\r\n    addCommands() {\r\n        return {\r\n            setLink: attributes => ({ chain }) => {\r\n                return chain().setMark(this.name, attributes).setMeta('preventAutolink', true).run();\r\n            },\r\n            toggleLink: attributes => ({ chain }) => {\r\n                return chain()\r\n                    .toggleMark(this.name, attributes, { extendEmptyMarkRange: true })\r\n                    .setMeta('preventAutolink', true)\r\n                    .run();\r\n            },\r\n            unsetLink: () => ({ chain }) => {\r\n                return chain()\r\n                    .unsetMark(this.name, { extendEmptyMarkRange: true })\r\n                    .setMeta('preventAutolink', true)\r\n                    .run();\r\n            },\r\n        };\r\n    },\r\n    addPasteRules() {\r\n        return [\r\n            markPasteRule({\r\n                find: text => find(text)\r\n                    .filter(link => {\r\n                    if (this.options.validate) {\r\n                        return this.options.validate(link.value);\r\n                    }\r\n                    return true;\r\n                })\r\n                    .filter(link => link.isLink)\r\n                    .map(link => ({\r\n                    text: link.value,\r\n                    index: link.start,\r\n                    data: link,\r\n                })),\r\n                type: this.type,\r\n                getAttributes: (match, pasteEvent) => {\r\n                    var _a, _b;\r\n                    const html = (_a = pasteEvent === null || pasteEvent === void 0 ? void 0 : pasteEvent.clipboardData) === null || _a === void 0 ? void 0 : _a.getData('text/html');\r\n                    const hrefRegex = /href=\"([^\"]*)\"/;\r\n                    const existingLink = html === null || html === void 0 ? void 0 : html.match(hrefRegex);\r\n                    if (existingLink) {\r\n                        return {\r\n                            href: existingLink[1],\r\n                        };\r\n                    }\r\n                    return {\r\n                        href: (_b = match.data) === null || _b === void 0 ? void 0 : _b.href,\r\n                    };\r\n                },\r\n            }),\r\n        ];\r\n    },\r\n    addProseMirrorPlugins() {\r\n        const plugins = [];\r\n        if (this.options.autolink) {\r\n            plugins.push(autolink({\r\n                type: this.type,\r\n                validate: this.options.validate,\r\n            }));\r\n        }\r\n        if (this.options.openOnClick) {\r\n            plugins.push(clickHandler({\r\n                type: this.type,\r\n            }));\r\n        }\r\n        if (this.options.linkOnPaste) {\r\n            plugins.push(pasteHandler({\r\n                editor: this.editor,\r\n                type: this.type,\r\n            }));\r\n        }\r\n        return plugins;\r\n    },\r\n});\n\nexport { Link, Link as default };\n//# sourceMappingURL=index.js.map\n","import { Mark, mergeAttributes, isMacOS, markInputRule, markPasteRule } from '@tiptap/core';\n\nconst inputRegex = /(?:^|\\s)((?:~~)((?:[^~]+))(?:~~))$/;\r\nconst pasteRegex = /(?:^|\\s)((?:~~)((?:[^~]+))(?:~~))/g;\r\nconst Strike = Mark.create({\r\n    name: 'strike',\r\n    addOptions() {\r\n        return {\r\n            HTMLAttributes: {},\r\n        };\r\n    },\r\n    parseHTML() {\r\n        return [\r\n            {\r\n                tag: 's',\r\n            },\r\n            {\r\n                tag: 'del',\r\n            },\r\n            {\r\n                tag: 'strike',\r\n            },\r\n            {\r\n                style: 'text-decoration',\r\n                consuming: false,\r\n                getAttrs: style => (style.includes('line-through') ? {} : false),\r\n            },\r\n        ];\r\n    },\r\n    renderHTML({ HTMLAttributes }) {\r\n        return ['s', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\r\n    },\r\n    addCommands() {\r\n        return {\r\n            setStrike: () => ({ commands }) => {\r\n                return commands.setMark(this.name);\r\n            },\r\n            toggleStrike: () => ({ commands }) => {\r\n                return commands.toggleMark(this.name);\r\n            },\r\n            unsetStrike: () => ({ commands }) => {\r\n                return commands.unsetMark(this.name);\r\n            },\r\n        };\r\n    },\r\n    addKeyboardShortcuts() {\r\n        const shortcuts = {};\r\n        if (isMacOS()) {\r\n            shortcuts['Mod-Shift-s'] = () => this.editor.commands.toggleStrike();\r\n        }\r\n        else {\r\n            shortcuts['Ctrl-Shift-s'] = () => this.editor.commands.toggleStrike();\r\n        }\r\n        return shortcuts;\r\n    },\r\n    addInputRules() {\r\n        return [\r\n            markInputRule({\r\n                find: inputRegex,\r\n                type: this.type,\r\n            }),\r\n        ];\r\n    },\r\n    addPasteRules() {\r\n        return [\r\n            markPasteRule({\r\n                find: pasteRegex,\r\n                type: this.type,\r\n            }),\r\n        ];\r\n    },\r\n});\n\nexport { Strike, Strike as default, inputRegex, pasteRegex };\n//# sourceMappingURL=index.js.map\n","import { Node } from '@tiptap/core';\n\nconst Text = Node.create({\r\n    name: 'text',\r\n    group: 'inline',\r\n});\n\nexport { Text, Text as default };\n//# sourceMappingURL=index.js.map\n","import { Mark, mergeAttributes } from '@tiptap/core';\n\nconst Underline = Mark.create({\r\n    name: 'underline',\r\n    addOptions() {\r\n        return {\r\n            HTMLAttributes: {},\r\n        };\r\n    },\r\n    parseHTML() {\r\n        return [\r\n            {\r\n                tag: 'u',\r\n            },\r\n            {\r\n                style: 'text-decoration',\r\n                consuming: false,\r\n                getAttrs: style => (style.includes('underline') ? {} : false),\r\n            },\r\n        ];\r\n    },\r\n    renderHTML({ HTMLAttributes }) {\r\n        return ['u', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\r\n    },\r\n    addCommands() {\r\n        return {\r\n            setUnderline: () => ({ commands }) => {\r\n                return commands.setMark(this.name);\r\n            },\r\n            toggleUnderline: () => ({ commands }) => {\r\n                return commands.toggleMark(this.name);\r\n            },\r\n            unsetUnderline: () => ({ commands }) => {\r\n                return commands.unsetMark(this.name);\r\n            },\r\n        };\r\n    },\r\n    addKeyboardShortcuts() {\r\n        return {\r\n            'Mod-u': () => this.editor.commands.toggleUnderline(),\r\n            'Mod-U': () => this.editor.commands.toggleUnderline(),\r\n        };\r\n    },\r\n});\n\nexport { Underline, Underline as default };\n//# sourceMappingURL=index.js.map\n","import { Node, NodeType } from \"prosemirror-model\";\n\nexport type BlockInfoWithoutPositions = {\n  id: string;\n  node: Node;\n  contentNode: Node;\n  contentType: NodeType;\n  numChildBlocks: number;\n};\n\nexport type BlockInfo = BlockInfoWithoutPositions & {\n  startPos: number;\n  endPos: number;\n  depth: number;\n};\n\n/**\n * Helper function for `getBlockInfoFromPos`, returns information regarding\n * provided blockContainer node.\n * @param blockContainer The blockContainer node to retrieve info for.\n */\nexport function getBlockInfo(blockContainer: Node): BlockInfoWithoutPositions {\n  const id = blockContainer.attrs[\"id\"];\n  const contentNode = blockContainer.firstChild!;\n  const contentType = contentNode.type;\n  const numChildBlocks =\n    blockContainer.childCount === 2 ? blockContainer.lastChild!.childCount : 0;\n\n  return {\n    id,\n    node: blockContainer,\n    contentNode,\n    contentType,\n    numChildBlocks,\n  };\n}\n\n/**\n * Retrieves information regarding the nearest blockContainer node in a\n * ProseMirror doc, relative to a position.\n * @param doc The ProseMirror doc.\n * @param pos An integer position.\n * @returns A BlockInfo object for the nearest blockContainer node.\n */\nexport function getBlockInfoFromPos(doc: Node, pos: number): BlockInfo {\n  // If the position is outside the outer block group, we need to move it to the\n  // nearest block. This happens when the collaboration plugin is active, where\n  // the selection is placed at the very end of the doc.\n  const outerBlockGroupStartPos = 1;\n  const outerBlockGroupEndPos = doc.nodeSize - 2;\n  if (pos <= outerBlockGroupStartPos) {\n    pos = outerBlockGroupStartPos + 1;\n\n    while (\n      doc.resolve(pos).parent.type.name !== \"blockContainer\" &&\n      pos < outerBlockGroupEndPos\n    ) {\n      pos++;\n    }\n  } else if (pos >= outerBlockGroupEndPos) {\n    pos = outerBlockGroupEndPos - 1;\n\n    while (\n      doc.resolve(pos).parent.type.name !== \"blockContainer\" &&\n      pos > outerBlockGroupStartPos\n    ) {\n      pos--;\n    }\n  }\n\n  // This gets triggered when a node selection on a block is active, i.e. when\n  // you drag and drop a block.\n  if (doc.resolve(pos).parent.type.name === \"blockGroup\") {\n    pos++;\n  }\n\n  const $pos = doc.resolve(pos);\n\n  const maxDepth = $pos.depth;\n  let node = $pos.node(maxDepth);\n  let depth = maxDepth;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    if (depth < 0) {\n      throw new Error(\n        \"Could not find blockContainer node. This can only happen if the underlying BlockNote schema has been edited.\"\n      );\n    }\n\n    if (node.type.name === \"blockContainer\") {\n      break;\n    }\n\n    depth -= 1;\n    node = $pos.node(depth);\n  }\n\n  const { id, contentNode, contentType, numChildBlocks } = getBlockInfo(node);\n\n  const startPos = $pos.start(depth);\n  const endPos = $pos.end(depth);\n\n  return {\n    id,\n    node,\n    contentNode,\n    contentType,\n    numChildBlocks,\n    startPos,\n    endPos,\n    depth,\n  };\n}\n","import { Props, PropSchema } from \"./blockTypes\";\n\nexport const defaultProps = {\n  backgroundColor: {\n    default: \"default\" as const,\n  },\n  textColor: {\n    default: \"default\" as const,\n  },\n  textAlignment: {\n    default: \"left\" as const,\n    values: [\"left\", \"center\", \"right\", \"justify\"] as const,\n  },\n} satisfies PropSchema;\n\nexport type DefaultProps = Props<typeof defaultProps>;\n","import { Extension } from \"@tiptap/core\";\nimport { getBlockInfoFromPos } from \"../Blocks/helpers/getBlockInfoFromPos\";\nimport { defaultProps } from \"../Blocks/api/defaultProps\";\n\ndeclare module \"@tiptap/core\" {\n  interface Commands<ReturnType> {\n    blockBackgroundColor: {\n      setBlockBackgroundColor: (\n        posInBlock: number,\n        color: string\n      ) => ReturnType;\n    };\n  }\n}\n\nexport const BackgroundColorExtension = Extension.create({\n  name: \"blockBackgroundColor\",\n\n  addGlobalAttributes() {\n    return [\n      {\n        types: [\"blockContainer\"],\n        attributes: {\n          backgroundColor: {\n            default: defaultProps.backgroundColor.default,\n            parseHTML: (element) =>\n              element.hasAttribute(\"data-background-color\")\n                ? element.getAttribute(\"data-background-color\")\n                : defaultProps.backgroundColor.default,\n            renderHTML: (attributes) =>\n              attributes.backgroundColor !==\n                defaultProps.backgroundColor.default && {\n                \"data-background-color\": attributes.backgroundColor,\n              },\n          },\n        },\n      },\n    ];\n  },\n\n  addCommands() {\n    return {\n      setBlockBackgroundColor:\n        (posInBlock, color) =>\n        ({ state, view }) => {\n          const blockInfo = getBlockInfoFromPos(state.doc, posInBlock);\n          if (blockInfo === undefined) {\n            return false;\n          }\n\n          state.tr.setNodeAttribute(\n            blockInfo.startPos - 1,\n            \"backgroundColor\",\n            color\n          );\n\n          view.focus();\n\n          return true;\n        },\n    };\n  },\n});\n","import { Mark } from \"@tiptap/core\";\nimport { defaultProps } from \"../Blocks/api/defaultProps\";\n\ndeclare module \"@tiptap/core\" {\n  interface Commands<ReturnType> {\n    backgroundColor: {\n      setBackgroundColor: (color: string) => ReturnType;\n    };\n  }\n}\n\nexport const BackgroundColorMark = Mark.create({\n  name: \"backgroundColor\",\n\n  addAttributes() {\n    return {\n      color: {\n        default: undefined,\n        parseHTML: (element) => element.getAttribute(\"data-background-color\"),\n        renderHTML: (attributes) => ({\n          \"data-background-color\": attributes.color,\n        }),\n      },\n    };\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: \"span\",\n        getAttrs: (element) => {\n          if (typeof element === \"string\") {\n            return false;\n          }\n\n          if (element.hasAttribute(\"data-background-color\")) {\n            return { color: element.getAttribute(\"data-background-color\") };\n          }\n\n          return false;\n        },\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return [\"span\", HTMLAttributes, 0];\n  },\n\n  addCommands() {\n    return {\n      setBackgroundColor:\n        (color) =>\n        ({ commands }) => {\n          if (color !== defaultProps.backgroundColor.default) {\n            return commands.setMark(this.name, { color: color });\n          }\n\n          return commands.unsetMark(this.name);\n        },\n    };\n  },\n});\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import {\n  combineTransactionSteps,\n  Extension,\n  findChildrenInRange,\n  getChangedRanges,\n} from \"@tiptap/core\";\nimport { Fragment, Slice } from \"prosemirror-model\";\nimport { Plugin, PluginKey } from \"prosemirror-state\";\nimport { v4 } from \"uuid\";\n\n/**\n * Code from Tiptap UniqueID extension (https://tiptap.dev/api/extensions/unique-id)\n * This extension is licensed under MIT (even though it's part of Tiptap pro).\n *\n * If you're a user of BlockNote, we still recommend to support their awesome work and become a sponsor!\n * https://tiptap.dev/pro\n */\n\n/**\n * Removes duplicated values within an array.\n * Supports numbers, strings and objects.\n */\nfunction removeDuplicates(array: any, by = JSON.stringify) {\n  const seen: any = {};\n  return array.filter((item: any) => {\n    const key = by(item);\n    return Object.prototype.hasOwnProperty.call(seen, key)\n      ? false\n      : (seen[key] = true);\n  });\n}\n\n/**\n * Returns a list of duplicated items within an array.\n */\nfunction findDuplicates(items: any) {\n  const filtered = items.filter(\n    (el: any, index: number) => items.indexOf(el) !== index\n  );\n  const duplicates = removeDuplicates(filtered);\n  return duplicates;\n}\n\nconst UniqueID = Extension.create({\n  name: \"uniqueID\",\n  // we’ll set a very high priority to make sure this runs first\n  // and is compatible with `appendTransaction` hooks of other extensions\n  priority: 10000,\n  addOptions() {\n    return {\n      attributeName: \"id\",\n      types: [],\n      generateID: () => {\n        // Use mock ID if tests are running.\n        if (typeof window !== \"undefined\" && (window as any).__TEST_OPTIONS) {\n          const testOptions = (window as any).__TEST_OPTIONS;\n          if (testOptions.mockID === undefined) {\n            testOptions.mockID = 0;\n          } else {\n            testOptions.mockID++;\n          }\n\n          return testOptions.mockID.toString() as string;\n        }\n\n        return v4();\n      },\n      filterTransaction: null,\n    };\n  },\n  addGlobalAttributes() {\n    return [\n      {\n        types: this.options.types,\n        attributes: {\n          [this.options.attributeName]: {\n            default: null,\n            parseHTML: (element) =>\n              element.getAttribute(`data-${this.options.attributeName}`),\n            renderHTML: (attributes) => ({\n              [`data-${this.options.attributeName}`]:\n                attributes[this.options.attributeName],\n            }),\n          },\n        },\n      },\n    ];\n  },\n  // check initial content for missing ids\n  // onCreate() {\n  //   // Don’t do this when the collaboration extension is active\n  //   // because this may update the content, so Y.js tries to merge these changes.\n  //   // This leads to empty block nodes.\n  //   // See: https://github.com/ueberdosis/tiptap/issues/2400\n  //   if (\n  //     this.editor.extensionManager.extensions.find(\n  //       (extension) => extension.name === \"collaboration\"\n  //     )\n  //   ) {\n  //     return;\n  //   }\n  //   const { view, state } = this.editor;\n  //   const { tr, doc } = state;\n  //   const { types, attributeName, generateID } = this.options;\n  //   const nodesWithoutId = findChildren(doc, (node) => {\n  //     return (\n  //       types.includes(node.type.name) && node.attrs[attributeName] === null\n  //     );\n  //   });\n  //   nodesWithoutId.forEach(({ node, pos }) => {\n  //     tr.setNodeMarkup(pos, undefined, {\n  //       ...node.attrs,\n  //       [attributeName]: generateID(),\n  //     });\n  //   });\n  //   tr.setMeta(\"addToHistory\", false);\n  //   view.dispatch(tr);\n  // },\n  addProseMirrorPlugins() {\n    let dragSourceElement: any = null;\n    let transformPasted = false;\n    return [\n      new Plugin({\n        key: new PluginKey(\"uniqueID\"),\n        appendTransaction: (transactions, oldState, newState) => {\n          // console.log(\"appendTransaction\");\n          const docChanges =\n            transactions.some((transaction) => transaction.docChanged) &&\n            !oldState.doc.eq(newState.doc);\n          const filterTransactions =\n            this.options.filterTransaction &&\n            transactions.some((tr) => {\n              let _a, _b;\n              return !((_b = (_a = this.options).filterTransaction) === null ||\n              _b === void 0\n                ? void 0\n                : _b.call(_a, tr));\n            });\n          if (!docChanges || filterTransactions) {\n            return;\n          }\n          const { tr } = newState;\n          const { types, attributeName, generateID } = this.options;\n          const transform = combineTransactionSteps(\n            oldState.doc,\n            transactions as any\n          );\n          const { mapping } = transform;\n          // get changed ranges based on the old state\n          const changes = getChangedRanges(transform);\n\n          changes.forEach(({ newRange }) => {\n            const newNodes = findChildrenInRange(\n              newState.doc,\n              newRange,\n              (node) => {\n                return types.includes(node.type.name);\n              }\n            );\n            const newIds = newNodes\n              .map(({ node }) => node.attrs[attributeName])\n              .filter((id) => id !== null);\n            const duplicatedNewIds = findDuplicates(newIds);\n            newNodes.forEach(({ node, pos }) => {\n              let _a;\n              // instead of checking `node.attrs[attributeName]` directly\n              // we look at the current state of the node within `tr.doc`.\n              // this helps to prevent adding new ids to the same node\n              // if the node changed multiple times within one transaction\n              const id =\n                (_a = tr.doc.nodeAt(pos)) === null || _a === void 0\n                  ? void 0\n                  : _a.attrs[attributeName];\n              if (id === null) {\n                // edge case, when using collaboration, yjs will set the id to null in `_forceRerender`\n                // when loading the editor\n                // this checks for this case and keeps it at initialBlockId so there will be no change\n                const initialDoc = oldState.doc.type.createAndFill()!.content;\n                const wasInitial =\n                  oldState.doc.content.findDiffStart(initialDoc) === null;\n\n                if (wasInitial) {\n                  // the old state was the \"initial content\"\n                  const jsonNode = JSON.parse(\n                    JSON.stringify(newState.doc.toJSON())\n                  );\n                  jsonNode.content[0].content[0].attrs.id = \"initialBlockId\";\n                  // would the new state with the fix also be the \"initial content\"?\n                  if (\n                    JSON.stringify(jsonNode.content) ===\n                    JSON.stringify(initialDoc.toJSON())\n                  ) {\n                    // yes, apply the fix\n                    tr.setNodeMarkup(pos, undefined, {\n                      ...node.attrs,\n                      [attributeName]: \"initialBlockId\",\n                    });\n                    return;\n                  }\n                }\n\n                tr.setNodeMarkup(pos, undefined, {\n                  ...node.attrs,\n                  [attributeName]: generateID(),\n                });\n                return;\n              }\n              // check if the node doesn’t exist in the old state\n              const { deleted } = mapping.invert().mapResult(pos);\n              const newNode = deleted && duplicatedNewIds.includes(id);\n              if (newNode) {\n                tr.setNodeMarkup(pos, undefined, {\n                  ...node.attrs,\n                  [attributeName]: generateID(),\n                });\n              }\n            });\n          });\n          if (!tr.steps.length) {\n            return;\n          }\n          return tr;\n        },\n        // we register a global drag handler to track the current drag source element\n        view(view) {\n          const handleDragstart = (event: any) => {\n            let _a;\n            dragSourceElement = (\n              (_a = view.dom.parentElement) === null || _a === void 0\n                ? void 0\n                : _a.contains(event.target)\n            )\n              ? view.dom.parentElement\n              : null;\n          };\n          window.addEventListener(\"dragstart\", handleDragstart);\n          return {\n            destroy() {\n              window.removeEventListener(\"dragstart\", handleDragstart);\n            },\n          };\n        },\n        props: {\n          // `handleDOMEvents` is called before `transformPasted`\n          // so we can do some checks before\n          handleDOMEvents: {\n            // only create new ids for dropped content while holding `alt`\n            // or content is dragged from another editor\n            drop: (view, event: any) => {\n              let _a;\n              if (\n                dragSourceElement !== view.dom.parentElement ||\n                ((_a = event.dataTransfer) === null || _a === void 0\n                  ? void 0\n                  : _a.effectAllowed) === \"copy\"\n              ) {\n                dragSourceElement = null;\n                transformPasted = true;\n              }\n              return false;\n            },\n            // always create new ids on pasted content\n            paste: () => {\n              transformPasted = true;\n              return false;\n            },\n          },\n          // we’ll remove ids for every pasted node\n          // so we can create a new one within `appendTransaction`\n          transformPasted: (slice) => {\n            if (!transformPasted) {\n              return slice;\n            }\n            const { types, attributeName } = this.options;\n            const removeId = (fragment: any) => {\n              const list: any[] = [];\n              fragment.forEach((node: any) => {\n                // don’t touch text nodes\n                if (node.isText) {\n                  list.push(node);\n                  return;\n                }\n                // check for any other child nodes\n                if (!types.includes(node.type.name)) {\n                  list.push(node.copy(removeId(node.content)));\n                  return;\n                }\n                // remove id\n                const nodeWithoutId = node.type.create(\n                  {\n                    ...node.attrs,\n                    [attributeName]: null,\n                  },\n                  removeId(node.content),\n                  node.marks\n                );\n                list.push(nodeWithoutId);\n              });\n              return Fragment.from(list);\n            };\n            // reset check\n            transformPasted = false;\n            return new Slice(\n              removeId(slice.content),\n              slice.openStart,\n              slice.openEnd\n            );\n          },\n        },\n      }),\n    ];\n  },\n});\n\nexport { UniqueID as default, UniqueID };\n//# sourceMappingURL=tiptap-extension-unique-id.esm.js.map\n","export const isAppleOS = () =>\n  /Mac/.test(navigator.platform) ||\n  (/AppleWebKit/.test(navigator.userAgent) &&\n    /Mobile\\/\\w+/.test(navigator.userAgent));\n\nexport function formatKeyboardShortcut(shortcut: string) {\n  if (isAppleOS()) {\n    return shortcut.replace(\"Mod\", \"⌘\");\n  } else {\n    return shortcut.replace(\"Mod\", \"Ctrl\");\n  }\n}\n\nexport function mergeCSSClasses(...classes: string[]) {\n  return classes.filter((c) => c).join(\" \");\n}\n\nexport class UnreachableCaseError extends Error {\n  constructor(val: never) {\n    super(`Unreachable case: ${val}`);\n  }\n}\n","import { Mark } from \"@tiptap/pm/model\";\nimport { Node, Schema } from \"prosemirror-model\";\nimport {\n  Block,\n  BlockSchema,\n  PartialBlock,\n} from \"../../extensions/Blocks/api/blockTypes\";\nimport {\n  ColorStyle,\n  InlineContent,\n  PartialInlineContent,\n  PartialLink,\n  StyledText,\n  Styles,\n  ToggledStyle,\n} from \"../../extensions/Blocks/api/inlineContentTypes\";\nimport { getBlockInfo } from \"../../extensions/Blocks/helpers/getBlockInfoFromPos\";\nimport UniqueID from \"../../extensions/UniqueID/UniqueID\";\nimport { UnreachableCaseError } from \"../../shared/utils\";\n\nconst toggleStyles = new Set<ToggledStyle>([\n  \"bold\",\n  \"italic\",\n  \"underline\",\n  \"strike\",\n  \"code\",\n]);\nconst colorStyles = new Set<ColorStyle>([\"textColor\", \"backgroundColor\"]);\nconst tableBlocks: string[] = [\"table\", \"tableRow\", \"tableHeader\", \"tableCell\"];\n\n/**\n * Convert a StyledText inline element to a\n * prosemirror text node with the appropriate marks\n */\nfunction styledTextToNodes(styledText: StyledText, schema: Schema): Node[] {\n  const marks: Mark[] = [];\n\n  for (const [style, value] of Object.entries(styledText.styles)) {\n    if (toggleStyles.has(style as ToggledStyle)) {\n      marks.push(schema.mark(style));\n    } else if (colorStyles.has(style as ColorStyle)) {\n      marks.push(schema.mark(style, { color: value }));\n    }\n  }\n\n  return (\n    styledText.text\n      // Splits text & line breaks.\n      .split(/(\\n)/g)\n      // If the content ends with a line break, an empty string is added to the\n      // end, which this removes.\n      .filter((text) => text.length > 0)\n      // Converts text & line breaks to nodes.\n      .map((text) => {\n        if (text === \"\\n\") {\n          return schema.nodes[\"hardBreak\"].create();\n        } else {\n          return schema.text(text, marks);\n        }\n      })\n  );\n}\n\n/**\n * Converts a Link inline content element to\n * prosemirror text nodes with the appropriate marks\n */\nfunction linkToNodes(link: PartialLink, schema: Schema): Node[] {\n  const linkMark = schema.marks.link.create({\n    href: link.href,\n  });\n\n  return styledTextArrayToNodes(link.content, schema).map((node) => {\n    if (node.type.name === \"text\") {\n      return node.mark([...node.marks, linkMark]);\n    }\n\n    if (node.type.name === \"hardBreak\") {\n      return node;\n    }\n    throw new Error(\"unexpected node type\");\n  });\n}\n\n/**\n * Converts an array of StyledText inline content elements to\n * prosemirror text nodes with the appropriate marks\n */\nfunction styledTextArrayToNodes(\n  content: string | StyledText[],\n  schema: Schema\n): Node[] {\n  const nodes: Node[] = [];\n\n  if (typeof content === \"string\") {\n    nodes.push(\n      ...styledTextToNodes({ type: \"text\", text: content, styles: {} }, schema)\n    );\n    return nodes;\n  }\n\n  for (const styledText of content) {\n    nodes.push(...styledTextToNodes(styledText, schema));\n  }\n  return nodes;\n}\n\n/**\n * converts an array of inline content elements to prosemirror nodes\n */\nexport function inlineContentToNodes(\n  blockContent: PartialInlineContent[],\n  schema: Schema\n): Node[] {\n  const nodes: Node[] = [];\n\n  for (const content of blockContent) {\n    if (content.type === \"link\") {\n      nodes.push(...linkToNodes(content, schema));\n    } else if (content.type === \"text\") {\n      nodes.push(...styledTextArrayToNodes([content], schema));\n    } else {\n      throw new UnreachableCaseError(content);\n    }\n  }\n  return nodes;\n}\n\n/**\n * Converts a BlockNote block to a TipTap node.\n */\nexport function blockToNode<BSchema extends BlockSchema>(\n  block: PartialBlock<BSchema>,\n  schema: Schema\n) {\n  if (block.type === \"table\") {\n    return customBlockToNode(block, schema);\n  }\n\n  let id = block.id;\n\n  if (id === undefined) {\n    id = UniqueID.options.generateID();\n  }\n\n  let type = block.type;\n\n  if (type === undefined) {\n    type = \"paragraph\";\n  }\n\n  let contentNode: Node;\n\n  if (!block.content) {\n    contentNode = schema.nodes[type].create(block.props);\n  } else if (typeof block.content === \"string\") {\n    contentNode = schema.nodes[type].create(\n      block.props,\n      schema.text(block.content)\n    );\n  } else {\n    const nodes = inlineContentToNodes(block.content, schema);\n    contentNode = schema.nodes[type].create(block.props, nodes);\n  }\n\n  const children: Node[] = [];\n\n  if (block.children) {\n    for (const child of block.children) {\n      children.push(blockToNode(child, schema));\n    }\n  }\n\n  const groupNode = schema.nodes[\"blockGroup\"].create({}, children);\n\n  return schema.nodes[\"blockContainer\"].create(\n    {\n      id: id,\n      ...block.props,\n    },\n    children.length > 0 ? [contentNode, groupNode] : contentNode\n  );\n}\n\nexport function initialTableBlock<BSchema extends BlockSchema>(\n  block: PartialBlock<BSchema>,\n  schema: Schema\n) {\n  const tableProps = {\n    ...(schema.nodes.table as any).defaultAttrs,\n    ...(block.props || {}),\n  };\n  const { rows = 3, cols = 3, withHeaderRow = true } = { ...tableProps };\n  block.props = { ...tableProps };\n  block.children = [];\n  for (let i = 0; i < rows; i++) {\n    const children = new Array(cols);\n    withHeaderRow && i === 0\n      ? children.fill({\n          type: \"tableHeader\",\n          children: [\n            {\n              type: \"paragraph\",\n              content: [],\n            },\n          ],\n          props: { backgroundColor: \"var(--background-main)\" },\n        })\n      : children.fill({\n          type: \"tableCell\",\n          children: [\n            {\n              type: \"paragraph\",\n              content: [],\n            },\n          ],\n        });\n    block.children.push({ type: \"tableRow\", children });\n  }\n}\n\nexport function customBlockToNode<BSchema extends BlockSchema>(\n  block: PartialBlock<BSchema>,\n  schema: Schema\n) {\n  let id = block.id;\n\n  if (id === undefined) {\n    id = UniqueID.options.generateID();\n  }\n\n  let type = block.type;\n\n  if (type === undefined) {\n    type = \"paragraph\";\n  }\n\n  if (block.type === \"table\" && !block.children?.length) {\n    initialTableBlock(block, schema);\n  }\n\n  let contentNode: Node;\n\n  const children: Node[] = [];\n  if (block.children) {\n    for (const child of block.children) {\n      children.push(customBlockToNode(child, schema));\n    }\n  }\n\n  if (tableBlocks.includes(type.toString())) {\n    contentNode = schema.nodes[type].create({ id, ...block.props }, children);\n  } else {\n    if (!block.content) {\n      contentNode = schema.nodes[type].create(block.props);\n    } else if (typeof block.content === \"string\") {\n      contentNode = schema.nodes[type].create(\n        block.props,\n        schema.text(block.content)\n      );\n    } else {\n      const nodes = inlineContentToNodes(block.content, schema);\n      contentNode = schema.nodes[type].create(block.props, nodes);\n    }\n  }\n\n  const containerNode = schema.nodes[\"blockContainer\"].create(\n    {\n      id: id,\n      ...block.props,\n    },\n    children.length > 0\n      ? [contentNode, schema.nodes[\"blockGroup\"].create({}, children)]\n      : contentNode\n  );\n\n  const result = tableBlocks.includes(type.toString())\n    ? contentNode\n    : containerNode;\n  return result;\n}\n\n/**\n * Converts an internal (prosemirror) content node to a BlockNote InlineContent array.\n */\nexport function contentNodeToInlineContent(contentNode: Node) {\n  const content: InlineContent[] = [];\n  let currentContent: InlineContent | undefined = undefined;\n\n  // Most of the logic below is for handling links because in ProseMirror links are marks\n  // while in BlockNote links are a type of inline content\n  const getContent = (node: Node) => {\n    // hardBreak nodes do not have an InlineContent equivalent, instead we\n    // add a newline to the previous node.\n    if (!node) return;\n    if (node.type.name === \"hardBreak\") {\n      if (currentContent) {\n        // Current content exists.\n        if (currentContent.type === \"text\") {\n          // Current content is text.\n          currentContent.text += \"\\n\";\n        } else if (currentContent.type === \"link\") {\n          // Current content is a link.\n          currentContent.content[currentContent.content.length - 1].text +=\n            \"\\n\";\n        }\n      } else {\n        // Current content does not exist.\n        currentContent = {\n          type: \"text\",\n          text: \"\\n\",\n          styles: {},\n        };\n      }\n\n      return;\n    }\n\n    const styles: Styles = {};\n    let linkMark: Mark | undefined;\n\n    for (const mark of node.marks) {\n      if (mark.type.name === \"link\") {\n        linkMark = mark;\n      } else if (toggleStyles.has(mark.type.name as ToggledStyle)) {\n        styles[mark.type.name as ToggledStyle] = true;\n      } else if (colorStyles.has(mark.type.name as ColorStyle)) {\n        styles[mark.type.name as ColorStyle] = mark.attrs.color;\n      } else {\n        throw Error(\"Mark is of an unrecognized type: \" + mark.type.name);\n      }\n    }\n\n    // Parsing links and text.\n    // Current content exists.\n    if (currentContent) {\n      // Current content is text.\n      if (currentContent.type === \"text\") {\n        if (!linkMark) {\n          // Node is text (same type as current content).\n          if (\n            JSON.stringify(currentContent.styles) === JSON.stringify(styles)\n          ) {\n            // Styles are the same.\n            currentContent.text += node.textContent;\n          } else {\n            // Styles are different.\n            content.push(currentContent);\n            currentContent = {\n              type: \"text\",\n              text: node.textContent,\n              styles,\n            };\n          }\n        } else {\n          // Node is a link (different type to current content).\n          content.push(currentContent);\n          currentContent = {\n            type: \"link\",\n            href: linkMark.attrs.href,\n            content: [\n              {\n                type: \"text\",\n                text: node.textContent,\n                styles,\n              },\n            ],\n          };\n        }\n      } else if (currentContent.type === \"link\") {\n        // Current content is a link.\n        if (linkMark) {\n          // Node is a link (same type as current content).\n          // Link URLs are the same.\n          if (currentContent.href === linkMark.attrs.href) {\n            // Styles are the same.\n            if (\n              JSON.stringify(\n                currentContent.content[currentContent.content.length - 1].styles\n              ) === JSON.stringify(styles)\n            ) {\n              currentContent.content[currentContent.content.length - 1].text +=\n                node.textContent;\n            } else {\n              // Styles are different.\n              currentContent.content.push({\n                type: \"text\",\n                text: node.textContent,\n                styles,\n              });\n            }\n          } else {\n            // Link URLs are different.\n            content.push(currentContent);\n            currentContent = {\n              type: \"link\",\n              href: linkMark.attrs.href,\n              content: [\n                {\n                  type: \"text\",\n                  text: node.textContent,\n                  styles,\n                },\n              ],\n            };\n          }\n        } else {\n          // Node is text (different type to current content).\n          content.push(currentContent);\n          currentContent = {\n            type: \"text\",\n            text: node.textContent,\n            styles,\n          };\n        }\n      }\n    }\n    // Current content does not exist.\n    else {\n      // Node is text.\n      if (!linkMark) {\n        currentContent = {\n          type: \"text\",\n          text: node.textContent,\n          styles,\n        };\n      }\n      // Node is a link.\n      else {\n        currentContent = {\n          type: \"link\",\n          href: linkMark.attrs.href,\n          content: [\n            {\n              type: \"text\",\n              text: node.textContent,\n              styles,\n            },\n          ],\n        };\n      }\n    }\n  };\n\n  if (contentNode?.childCount > 0) {\n    contentNode.content.forEach((node) => {\n      getContent(node);\n    });\n  } else {\n    getContent(contentNode);\n  }\n\n  if (currentContent) {\n    content.push(currentContent);\n  }\n\n  return content;\n}\n\n/**\n * Convert a TipTap node to a BlockNote block.\n */\nexport function nodeToBlock<BSchema extends BlockSchema>(\n  node: Node,\n  blockSchema: BSchema,\n  blockCache?: WeakMap<Node, Block<BSchema>>\n): Block<BSchema> {\n  if (node.type.name !== \"blockContainer\") {\n    throw Error(\n      \"Node must be of type blockContainer, but is of type\" +\n        node.type.name +\n        \".\"\n    );\n  }\n\n  const cachedBlock = blockCache?.get(node);\n\n  if (cachedBlock) {\n    return cachedBlock;\n  }\n\n  const blockInfo = getBlockInfo(node);\n  if (blockInfo.contentType.name === \"table\") {\n    return customNodeToBlock(\n      blockInfo.contentNode,\n      blockSchema,\n      blockCache,\n      blockInfo.id\n    );\n  }\n\n  let id = blockInfo.id;\n\n  // Only used for blocks converted from other formats.\n  if (id === null) {\n    id = UniqueID.options.generateID();\n  }\n\n  const props: any = {};\n  for (const [attr, value] of Object.entries({\n    ...node.attrs,\n    ...blockInfo.contentNode.attrs,\n  })) {\n    const blockSpec = blockSchema[blockInfo.contentType.name];\n    if (!blockSpec) {\n      throw Error(\n        \"Block is of an unrecognized type: \" + blockInfo.contentType.name\n      );\n    }\n\n    const propSchema = blockSpec.propSchema;\n\n    if (attr in propSchema) {\n      props[attr] = value;\n    }\n  }\n  const blockSpec = blockSchema[blockInfo.contentType.name];\n\n  const children: Block<BSchema>[] = [];\n  for (let i = 0; i < blockInfo.numChildBlocks; i++) {\n    children.push(\n      nodeToBlock(node.lastChild!.child(i), blockSchema, blockCache)\n    );\n  }\n\n  const block: Block<BSchema> = {\n    id,\n    type: blockSpec.node.name,\n    props,\n    content:\n      blockSpec.node.config.content === \"inline*\"\n        ? contentNodeToInlineContent(blockInfo.contentNode)\n        : undefined,\n    children,\n  } as Block<BSchema>;\n\n  blockCache?.set(node, block);\n\n  return block;\n}\n\nexport function customNodeToBlock<BSchema extends BlockSchema>(\n  node: Node,\n  blockSchema: BSchema,\n  blockCache?: WeakMap<Node, Block<BSchema>>,\n  containerId?: string\n): Block<BSchema> {\n  if (node.type.name === \"blockContainer\") {\n    return nodeToBlock(node, blockSchema, blockCache);\n  }\n\n  const cachedBlock = blockCache?.get(node);\n\n  if (cachedBlock) {\n    return cachedBlock;\n  }\n\n  const id = containerId || (UniqueID.options.generateID() as string);\n\n  const children: Block<BSchema>[] = [];\n  if (node?.childCount > 1 || tableBlocks.includes(node.type.name)) {\n    node.content.forEach((node) => {\n      children.push(customNodeToBlock(node, blockSchema, blockCache));\n    });\n  }\n\n  const props: any = {};\n  for (const [attr, value] of Object.entries({\n    ...node.attrs,\n    ...node.firstChild?.attrs,\n  })) {\n    const blockSpec = blockSchema[node.type.name];\n    if (!blockSpec) {\n      throw Error(\"Block is of an unrecognized type: \" + node.type.name);\n    }\n\n    const propSchema = blockSpec.propSchema;\n\n    if (attr in propSchema) {\n      props[attr] = value;\n    }\n  }\n\n  let content = undefined;\n  const blockSpec = blockSchema[node.type.name];\n  if (blockSpec.node.config.content === \"inline*\") {\n    content = contentNodeToInlineContent(node.firstChild!);\n  }\n\n  const block: Block<BSchema> = {\n    id,\n    type: node.type.name,\n    props,\n    content,\n    children,\n  } as Block<BSchema>;\n\n  blockCache?.set(node, block);\n\n  return block;\n}\n","import { findChildren } from \"@tiptap/core\";\nimport { Plugin, PluginKey } from \"prosemirror-state\";\nimport { Decoration, DecorationSet } from \"prosemirror-view\";\n\nconst PLUGIN_KEY = new PluginKey(`previous-blocks`);\n\nconst nodeAttributes: Record<string, string> = {\n  // Numbered List Items\n  index: \"index\",\n  // Headings\n  level: \"level\",\n  // All Blocks\n  type: \"type\",\n  depth: \"depth\",\n  \"depth-change\": \"depth-change\",\n};\n\n/**\n * This plugin tracks transformation of Block node attributes, so we can support CSS transitions.\n *\n * Problem it solves: ProseMirror recreates the DOM when transactions happen. So when a transaction changes a Node attribute,\n * it results in a completely new DOM element. This means CSS transitions don't work.\n *\n * Solution: When attributes change on a node, this plugin sets a data-* attribute with the \"previous\" value. This way we can still use CSS transitions. (See block.module.css)\n */\nexport const PreviousBlockTypePlugin = () => {\n  let timeout: any;\n  return new Plugin({\n    key: PLUGIN_KEY,\n    view(_editorView) {\n      return {\n        update: async (view, _prevState) => {\n          if (this.key?.getState(view.state).updatedBlocks.size > 0) {\n            // use setTimeout 0 to clear the decorations so that at least\n            // for one DOM-render the decorations have been applied\n            timeout = setTimeout(() => {\n              view.dispatch(\n                view.state.tr.setMeta(PLUGIN_KEY, { clearUpdate: true })\n              );\n            }, 0);\n          }\n        },\n        destroy: () => {\n          if (timeout) {\n            clearTimeout(timeout);\n          }\n        },\n      };\n    },\n    state: {\n      init() {\n        return {\n          // Block attributes, by block ID, from just before the previous transaction.\n          prevTransactionOldBlockAttrs: {} as any,\n          // Block attributes, by block ID, from just before the current transaction.\n          currentTransactionOldBlockAttrs: {} as any,\n          // Set of IDs of blocks whose attributes changed from the current transaction.\n          updatedBlocks: new Set<string>(),\n        };\n      },\n\n      apply(transaction, prev, oldState, newState) {\n        prev.currentTransactionOldBlockAttrs = {};\n        prev.updatedBlocks.clear();\n\n        if (!transaction.docChanged || oldState.doc.eq(newState.doc)) {\n          return prev;\n        }\n\n        // TODO: Instead of iterating through the entire document, only check nodes affected by the transactions. Will\n        //  also probably require checking nodes affected by the previous transaction too.\n        // We didn't get this to work yet:\n        // const transform = combineTransactionSteps(oldState.doc, [transaction]);\n        // // const { mapping } = transform;\n        // const changes = getChangedRanges(transform);\n        //\n        // changes.forEach(({ oldRange, newRange }) => {\n        // const oldNodes = findChildrenInRange(\n        //   oldState.doc,\n        //   oldRange,\n        //   (node) => node.attrs.id\n        // );\n        //\n        // const newNodes = findChildrenInRange(\n        //   newState.doc,\n        //   newRange,\n        //   (node) => node.attrs.id\n        // );\n\n        const currentTransactionOriginalOldBlockAttrs = {} as any;\n\n        const oldNodes = findChildren(oldState.doc, (node) => node.attrs.id);\n        const oldNodesById = new Map(\n          oldNodes.map((node) => [node.node.attrs.id, node])\n        );\n        const newNodes = findChildren(newState.doc, (node) => node.attrs.id);\n\n        // Traverses all block containers in the new editor state.\n        for (const node of newNodes) {\n          const oldNode = oldNodesById.get(node.node.attrs.id);\n\n          const oldContentNode = oldNode?.node.firstChild;\n          const newContentNode = node.node.firstChild;\n\n          if (oldNode && oldContentNode && newContentNode) {\n            const newAttrs = {\n              index: newContentNode.attrs.index,\n              level: newContentNode.attrs.level,\n              type: newContentNode.type.name,\n              depth: newState.doc.resolve(node.pos).depth,\n            };\n\n            let oldAttrs = {\n              index: oldContentNode.attrs.index,\n              level: oldContentNode.attrs.level,\n              type: oldContentNode.type.name,\n              depth: oldState.doc.resolve(oldNode.pos).depth,\n            };\n\n            currentTransactionOriginalOldBlockAttrs[node.node.attrs.id] =\n              oldAttrs;\n\n            // Whenever a transaction is appended by the OrderedListItemIndexPlugin, it's given the metadata:\n            // { \"orderedListIndexing\": true }\n            // These appended transactions happen immediately after any transaction which causes ordered list item\n            // indices to require updating, including those which trigger animations. Therefore, these animations are\n            // immediately overridden when the PreviousBlockTypePlugin processes the appended transaction, despite only\n            // the listItemIndex attribute changing. To solve this, oldAttrs must be edited for transactions with the\n            // \"orderedListIndexing\" metadata, so the correct animation can be re-triggered.\n            if (transaction.getMeta(\"numberedListIndexing\")) {\n              // If the block existed before the transaction, gets the attributes from before the previous transaction\n              // (i.e. the transaction that caused list item indices to need updating).\n              if (node.node.attrs.id in prev.prevTransactionOldBlockAttrs) {\n                oldAttrs =\n                  prev.prevTransactionOldBlockAttrs[node.node.attrs.id];\n              }\n\n              // Stops list item indices themselves being animated (looks smoother), unless the block's content type is\n              // changing from a numbered list item to something else.\n              if (newAttrs.type === \"numberedListItem\") {\n                oldAttrs.index = newAttrs.index;\n              }\n            }\n\n            prev.currentTransactionOldBlockAttrs[node.node.attrs.id] = oldAttrs;\n\n            // TODO: faster deep equal?\n            if (JSON.stringify(oldAttrs) !== JSON.stringify(newAttrs)) {\n              (oldAttrs as any)[\"depth-change\"] =\n                oldAttrs.depth - newAttrs.depth;\n\n              // for debugging:\n              // console.log(\n              //   \"id:\",\n              //   node.node.attrs.id,\n              //   \"previousBlockTypePlugin changes detected, oldAttrs\",\n              //   oldAttrs,\n              //   \"new\",\n              //   newAttrs\n              // );\n\n              prev.updatedBlocks.add(node.node.attrs.id);\n            }\n          }\n        }\n\n        prev.prevTransactionOldBlockAttrs =\n          currentTransactionOriginalOldBlockAttrs;\n\n        return prev;\n      },\n    },\n    props: {\n      decorations(state) {\n        const pluginState = (this as Plugin).getState(state);\n        if (pluginState.updatedBlocks.size === 0) {\n          return undefined;\n        }\n\n        const decorations: Decoration[] = [];\n\n        state.doc.descendants((node, pos) => {\n          if (!node.attrs.id) {\n            return;\n          }\n\n          if (!pluginState.updatedBlocks.has(node.attrs.id)) {\n            return;\n          }\n\n          const prevAttrs =\n            pluginState.currentTransactionOldBlockAttrs[node.attrs.id];\n          const decorationAttrs: any = {};\n\n          for (const [nodeAttr, val] of Object.entries(prevAttrs)) {\n            decorationAttrs[\"data-prev-\" + nodeAttributes[nodeAttr]] =\n              val || \"none\";\n          }\n\n          // for debugging:\n          // console.log(\n          //   \"previousBlockTypePlugin committing decorations\",\n          //   decorationAttrs\n          // );\n\n          const decoration = Decoration.node(pos, pos + node.nodeSize, {\n            ...decorationAttrs,\n          });\n\n          decorations.push(decoration);\n        });\n\n        return DecorationSet.create(state.doc, decorations);\n      },\n    },\n  });\n};\n","// Object containing all possible block attributes.\nconst BlockAttributes: Record<string, string> = {\n  blockColor: \"data-block-color\",\n  blockStyle: \"data-block-style\",\n  id: \"data-id\",\n  depth: \"data-depth\",\n  depthChange: \"data-depth-change\",\n};\n\nexport default BlockAttributes;\n","import { Plugin, PluginKey } from \"prosemirror-state\";\n\nconst PLUGIN_KEY = new PluginKey(\"non-editable-block\");\n// Prevent typing for blocks without inline content, as this would otherwise\n// convert them into paragraph blocks.\nexport const NonEditableBlockPlugin = () => {\n  return new Plugin({\n    key: PLUGIN_KEY,\n    props: {\n      handleKeyDown: (view, event) => {\n        if (\"node\" in view.state.selection) {\n          event.preventDefault();\n        }\n      },\n    },\n  });\n};\n","import { mergeAttributes, Node } from \"@tiptap/core\";\nimport { Fragment, Node as PMNode, Slice } from \"prosemirror-model\";\nimport { NodeSelection, TextSelection } from \"prosemirror-state\";\nimport {\n  blockToNode,\n  inlineContentToNodes,\n} from \"../../../api/nodeConversions/nodeConversions\";\n\nimport {\n  BlockNoteDOMAttributes,\n  BlockSchema,\n  PartialBlock,\n} from \"../api/blockTypes\";\nimport { getBlockInfoFromPos } from \"../helpers/getBlockInfoFromPos\";\nimport { PreviousBlockTypePlugin } from \"../PreviousBlockTypePlugin\";\nimport styles from \"./Block.module.css\";\nimport BlockAttributes from \"./BlockAttributes\";\nimport { mergeCSSClasses } from \"../../../shared/utils\";\nimport { NonEditableBlockPlugin } from \"../NonEditableBlockPlugin\";\n\ndeclare module \"@tiptap/core\" {\n  interface Commands<ReturnType> {\n    block: {\n      BNCreateBlock: (pos: number) => ReturnType;\n      BNDeleteBlock: (posInBlock: number) => ReturnType;\n      BNMergeBlocks: (posBetweenBlocks: number) => ReturnType;\n      BNSplitBlock: (posInBlock: number, keepType: boolean) => ReturnType;\n      BNUpdateBlock: <BSchema extends BlockSchema>(\n        posInBlock: number,\n        block: PartialBlock<BSchema>\n      ) => ReturnType;\n      BNCreateOrUpdateBlock: <BSchema extends BlockSchema>(\n        posInBlock: number,\n        block: PartialBlock<BSchema>\n      ) => ReturnType;\n    };\n  }\n}\n\n/**\n * The main \"Block node\" documents consist of\n */\nexport const BlockContainer = Node.create<{\n  domAttributes?: BlockNoteDOMAttributes;\n}>({\n  name: \"blockContainer\",\n  group: \"blockContainer\",\n  // A block always contains content, and optionally a blockGroup which contains nested blocks\n  content: \"(blockContent blockGroup?) | block\",\n  // Ensures content-specific keyboard handlers trigger first.\n  priority: 50,\n  defining: true,\n\n  parseHTML() {\n    return [\n      {\n        tag: \"div\",\n        getAttrs: (element) => {\n          if (typeof element === \"string\") {\n            return false;\n          }\n\n          const attrs: Record<string, string> = {};\n          for (const [nodeAttr, HTMLAttr] of Object.entries(BlockAttributes)) {\n            if (element.getAttribute(HTMLAttr)) {\n              attrs[nodeAttr] = element.getAttribute(HTMLAttr)!;\n            }\n          }\n\n          if (element.getAttribute(\"data-node-type\") === \"blockContainer\") {\n            return attrs;\n          }\n\n          return false;\n        },\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    const domAttributes = this.options.domAttributes?.blockContainer || {};\n\n    return [\n      \"div\",\n      mergeAttributes(HTMLAttributes, {\n        class: styles.blockOuter,\n        \"data-node-type\": \"block-outer\",\n      }),\n      [\n        \"div\",\n        mergeAttributes(\n          {\n            ...domAttributes,\n            class: mergeCSSClasses(styles.block, domAttributes.class),\n            \"data-node-type\": this.name,\n          },\n          HTMLAttributes\n        ),\n        0,\n      ],\n    ];\n  },\n\n  addCommands() {\n    return {\n      // Creates a new text block at a given position.\n      BNCreateBlock:\n        (pos) =>\n        ({ state, dispatch }) => {\n          const newBlock =\n            state.schema.nodes[\"blockContainer\"].createAndFill()!;\n\n          if (dispatch) {\n            state.tr.insert(pos, newBlock);\n          }\n\n          return true;\n        },\n      // Deletes a block at a given position.\n      BNDeleteBlock:\n        (posInBlock) =>\n        ({ state, dispatch }) => {\n          const blockInfo = getBlockInfoFromPos(state.doc, posInBlock);\n          if (blockInfo === undefined) {\n            return false;\n          }\n\n          const { startPos, endPos } = blockInfo;\n\n          if (dispatch) {\n            state.tr.deleteRange(startPos, endPos);\n          }\n\n          return true;\n        },\n      // Updates a block at a given position.\n      BNUpdateBlock:\n        (posInBlock, block) =>\n        ({ state, dispatch }) => {\n          const blockInfo = getBlockInfoFromPos(state.doc, posInBlock);\n          if (blockInfo === undefined) {\n            return false;\n          }\n\n          const { startPos, endPos, node, contentNode } = blockInfo;\n\n          if (dispatch) {\n            // Adds blockGroup node with child blocks if necessary.\n            if (block.children !== undefined) {\n              const childNodes = [];\n\n              // Creates ProseMirror nodes for each child block, including their descendants.\n              for (const child of block.children) {\n                childNodes.push(blockToNode(child, state.schema));\n              }\n\n              // Checks if a blockGroup node already exists.\n              if (node.childCount === 2) {\n                // Replaces all child nodes in the existing blockGroup with the ones created earlier.\n                state.tr.replace(\n                  startPos + contentNode.nodeSize + 1,\n                  endPos - 1,\n                  new Slice(Fragment.from(childNodes), 0, 0)\n                );\n              } else {\n                // Inserts a new blockGroup containing the child nodes created earlier.\n                state.tr.insert(\n                  startPos + contentNode.nodeSize,\n                  state.schema.nodes[\"blockGroup\"].create({}, childNodes)\n                );\n              }\n            }\n\n            // Replaces the blockContent node's content if necessary.\n            if (block.content !== undefined) {\n              let content: PMNode[] = [];\n\n              // Checks if the provided content is a string or InlineContent[] type.\n              if (typeof block.content === \"string\") {\n                // Adds a single text node with no marks to the content.\n                content.push(state.schema.text(block.content));\n              } else {\n                // Adds a text node with the provided styles converted into marks to the content, for each InlineContent\n                // object.\n                content = inlineContentToNodes(block.content, state.schema);\n              }\n\n              // Replaces the contents of the blockContent node with the previously created text node(s).\n              state.tr.replace(\n                startPos + 1,\n                startPos + contentNode.nodeSize - 1,\n                new Slice(Fragment.from(content), 0, 0)\n              );\n            }\n\n            // Since some block types contain inline content and others don't,\n            // we either need to call setNodeMarkup to just update type &\n            // attributes, or replaceWith to replace the whole blockContent.\n            const oldType = contentNode.type.name;\n            const newType = block.type || oldType;\n\n            const oldContentType = state.schema.nodes[oldType].spec.content;\n            const newContentType = state.schema.nodes[newType].spec.content;\n\n            if (oldContentType === \"inline*\" && newContentType === \"\") {\n              // Replaces the blockContent node with one of the new type and\n              // adds the provided props as attributes. Also preserves all\n              // existing attributes that are compatible with the new type.\n              // Need to reset the selection since replacing the block content\n              // sets it to the next block.\n              state.tr\n                .replaceWith(\n                  startPos,\n                  endPos,\n                  state.schema.nodes[newType].create({\n                    ...contentNode.attrs,\n                    ...block.props,\n                  })\n                )\n                .setSelection(\n                  new NodeSelection(state.tr.doc.resolve(startPos))\n                );\n            } else {\n              // Changes the blockContent node type and adds the provided props\n              // as attributes. Also preserves all existing attributes that are\n              // compatible with the new type.\n              state.tr.setNodeMarkup(\n                startPos,\n                block.type === undefined\n                  ? undefined\n                  : state.schema.nodes[block.type],\n                {\n                  ...contentNode.attrs,\n                  ...block.props,\n                }\n              );\n            }\n\n            // Adds all provided props as attributes to the parent blockContainer node too, and also preserves existing\n            // attributes.\n            state.tr.setNodeMarkup(startPos - 1, undefined, {\n              ...node.attrs,\n              ...block.props,\n            });\n          }\n\n          return true;\n        },\n      // Appends the text contents of a block to the nearest previous block, given a position between them. Children of\n      // the merged block are moved out of it first, rather than also being merged.\n      //\n      // In the example below, the position passed into the function is between Block1 and Block2.\n      //\n      // Block1\n      //    Block2\n      // Block3\n      //    Block4\n      //        Block5\n      //\n      // Becomes:\n      //\n      // Block1\n      //    Block2Block3\n      // Block4\n      //     Block5\n      BNMergeBlocks:\n        (posBetweenBlocks) =>\n        ({ state, dispatch }) => {\n          const nextNodeIsBlock =\n            state.doc.resolve(posBetweenBlocks + 1).node().type.name ===\n            \"blockContainer\";\n          const prevNodeIsBlock =\n            state.doc.resolve(posBetweenBlocks - 1).node().type.name ===\n            \"blockContainer\";\n\n          if (!nextNodeIsBlock || !prevNodeIsBlock) {\n            return false;\n          }\n\n          const nextBlockInfo = getBlockInfoFromPos(\n            state.doc,\n            posBetweenBlocks + 1\n          );\n\n          const { node, contentNode, startPos, endPos, depth } = nextBlockInfo!;\n\n          // Removes a level of nesting all children of the next block by 1 level, if it contains both content and block\n          // group nodes.\n          if (node.childCount === 2) {\n            const childBlocksStart = state.doc.resolve(\n              startPos + contentNode.nodeSize + 1\n            );\n            const childBlocksEnd = state.doc.resolve(endPos - 1);\n            const childBlocksRange =\n              childBlocksStart.blockRange(childBlocksEnd);\n\n            // Moves the block group node inside the block into the block group node that the current block is in.\n            if (dispatch) {\n              state.tr.lift(childBlocksRange!, depth - 1);\n            }\n          }\n\n          let prevBlockEndPos = posBetweenBlocks - 1;\n          let prevBlockInfo = getBlockInfoFromPos(state.doc, prevBlockEndPos);\n\n          // Finds the nearest previous block, regardless of nesting level.\n          while (prevBlockInfo!.numChildBlocks > 0) {\n            prevBlockEndPos--;\n            prevBlockInfo = getBlockInfoFromPos(state.doc, prevBlockEndPos);\n            if (prevBlockInfo === undefined) {\n              return false;\n            }\n          }\n\n          // Deletes next block and adds its text content to the nearest previous block.\n\n          if (dispatch) {\n            dispatch(\n              state.tr\n                .deleteRange(startPos, startPos + contentNode.nodeSize)\n                .replace(\n                  prevBlockEndPos - 1,\n                  startPos,\n                  new Slice(contentNode.content, 0, 0)\n                )\n                .scrollIntoView()\n            );\n\n            state.tr.setSelection(\n              new TextSelection(state.doc.resolve(prevBlockEndPos - 1))\n            );\n          }\n\n          return true;\n        },\n      // Splits a block at a given position. Content after the position is moved to a new block below, at the same\n      // nesting level.\n      BNSplitBlock:\n        (posInBlock, keepType) =>\n        ({ state, dispatch }) => {\n          const blockInfo = getBlockInfoFromPos(state.doc, posInBlock);\n          if (blockInfo === undefined) {\n            return false;\n          }\n\n          const { contentNode, contentType, startPos, endPos, depth } =\n            blockInfo;\n\n          const originalBlockContent = state.doc.cut(startPos + 1, posInBlock);\n          const newBlockContent = state.doc.cut(posInBlock, endPos - 1);\n\n          const newBlock =\n            state.schema.nodes[\"blockContainer\"].createAndFill()!;\n\n          const newBlockInsertionPos = endPos + 1;\n          const newBlockContentPos = newBlockInsertionPos + 2;\n\n          if (dispatch) {\n            // Creates a new block. Since the schema requires it to have a content node, a paragraph node is created\n            // automatically, spanning newBlockContentPos to newBlockContentPos + 1.\n            state.tr.insert(newBlockInsertionPos, newBlock);\n\n            // Replaces the content of the newly created block's content node. Doesn't replace the whole content node so\n            // its type doesn't change.\n            state.tr.replace(\n              newBlockContentPos,\n              newBlockContentPos + 1,\n              newBlockContent.content.size > 0\n                ? new Slice(\n                    Fragment.from(newBlockContent),\n                    depth + 2,\n                    depth + 2\n                  )\n                : undefined\n            );\n\n            // Changes the type of the content node. The range doesn't matter as long as both from and to positions are\n            // within the content node.\n            if (keepType) {\n              state.tr.setBlockType(\n                newBlockContentPos,\n                newBlockContentPos,\n                state.schema.node(contentType).type,\n                contentNode.attrs\n              );\n            }\n\n            // Sets the selection to the start of the new block's content node.\n            state.tr.setSelection(\n              new TextSelection(state.doc.resolve(newBlockContentPos))\n            );\n\n            // Replaces the content of the original block's content node. Doesn't replace the whole content node so its\n            // type doesn't change.\n            state.tr.replace(\n              startPos + 1,\n              endPos - 1,\n              originalBlockContent.content.size > 0\n                ? new Slice(\n                    Fragment.from(originalBlockContent),\n                    depth + 2,\n                    depth + 2\n                  )\n                : undefined\n            );\n          }\n\n          return true;\n        },\n    };\n  },\n\n  addProseMirrorPlugins() {\n    return [PreviousBlockTypePlugin(), NonEditableBlockPlugin()];\n  },\n\n  addKeyboardShortcuts() {\n    // handleBackspace is partially adapted from https://github.com/ueberdosis/tiptap/blob/ed56337470efb4fd277128ab7ef792b37cfae992/packages/core/src/extensions/keymap.ts\n    const handleBackspace = () =>\n      this.editor.commands.first(({ commands }) => [\n        // Deletes the selection if it's not empty.\n        () => commands.deleteSelection(),\n        // Undoes an input rule if one was triggered in the last editor state change.\n        () => commands.undoInputRule(),\n        // Reverts block content type to a paragraph if the selection is at the start of the block.\n        () =>\n          commands.command(({ state }) => {\n            const { contentType } = getBlockInfoFromPos(\n              state.doc,\n              state.selection.from\n            )!;\n\n            const selectionAtBlockStart =\n              state.selection.$anchor.parentOffset === 0;\n            const isParagraph = contentType.name === \"paragraph\";\n\n            if (selectionAtBlockStart && !isParagraph) {\n              return commands.BNUpdateBlock(state.selection.from, {\n                type: \"paragraph\",\n                props: {},\n              });\n            }\n\n            return false;\n          }),\n        // Removes a level of nesting if the block is indented if the selection is at the start of the block.\n        () =>\n          commands.command(({ state }) => {\n            const selectionAtBlockStart =\n              state.selection.$anchor.parentOffset === 0;\n\n            if (selectionAtBlockStart) {\n              return commands.liftListItem(\"blockContainer\");\n            }\n\n            return false;\n          }),\n        // Merges block with the previous one if it isn't indented, isn't the first block in the doc, and the selection\n        // is at the start of the block.\n        () =>\n          commands.command(({ state }) => {\n            const { depth, startPos } = getBlockInfoFromPos(\n              state.doc,\n              state.selection.from\n            )!;\n\n            const selectionAtBlockStart =\n              state.selection.$anchor.parentOffset === 0;\n            const selectionEmpty =\n              state.selection.anchor === state.selection.head;\n            const blockAtDocStart = startPos === 2;\n\n            const posBetweenBlocks = startPos - 1;\n\n            if (\n              !blockAtDocStart &&\n              selectionAtBlockStart &&\n              selectionEmpty &&\n              depth === 2\n            ) {\n              return commands.BNMergeBlocks(posBetweenBlocks);\n            }\n\n            return false;\n          }),\n      ]);\n\n    const handleDelete = () =>\n      this.editor.commands.first(({ commands }) => [\n        // Deletes the selection if it's not empty.\n        () => commands.deleteSelection(),\n        // Merges block with the next one (at the same nesting level or lower),\n        // if one exists, the block has no children, and the selection is at the\n        // end of the block.\n        () =>\n          commands.command(({ state }) => {\n            const { node, contentNode, depth, endPos } = getBlockInfoFromPos(\n              state.doc,\n              state.selection.from\n            )!;\n\n            const blockAtDocEnd = false;\n            const selectionAtBlockEnd =\n              state.selection.$anchor.parentOffset ===\n              contentNode.firstChild!.nodeSize;\n            const selectionEmpty =\n              state.selection.anchor === state.selection.head;\n            const hasChildBlocks = node.childCount === 2;\n\n            if (\n              !blockAtDocEnd &&\n              selectionAtBlockEnd &&\n              selectionEmpty &&\n              !hasChildBlocks\n            ) {\n              let oldDepth = depth;\n              let newPos = endPos + 2;\n              let newDepth = state.doc.resolve(newPos).depth;\n\n              while (newDepth < oldDepth) {\n                oldDepth = newDepth;\n                newPos += 2;\n                newDepth = state.doc.resolve(newPos).depth;\n              }\n\n              return commands.BNMergeBlocks(newPos - 1);\n            }\n\n            return false;\n          }),\n      ]);\n\n    const handleEnter = () =>\n      this.editor.commands.first(({ commands }) => [\n        // Removes a level of nesting if the block is empty & indented, while the selection is also empty & at the start\n        // of the block.\n        () =>\n          commands.command(({ state }) => {\n            const { node, depth } = getBlockInfoFromPos(\n              state.doc,\n              state.selection.from\n            )!;\n\n            const selectionAtBlockStart =\n              state.selection.$anchor.parentOffset === 0;\n            const selectionEmpty =\n              state.selection.anchor === state.selection.head;\n            const blockEmpty = node.textContent.length === 0;\n            const blockIndented = depth > 2;\n\n            if (\n              selectionAtBlockStart &&\n              selectionEmpty &&\n              blockEmpty &&\n              blockIndented\n            ) {\n              return commands.liftListItem(\"blockContainer\");\n            }\n\n            return false;\n          }),\n        // Creates a new block and moves the selection to it if the current one is empty, while the selection is also\n        // empty & at the start of the block.\n        () =>\n          commands.command(({ state, chain }) => {\n            const { node, endPos } = getBlockInfoFromPos(\n              state.doc,\n              state.selection.from\n            )!;\n\n            const selectionAtBlockStart =\n              state.selection.$anchor.parentOffset === 0;\n            const selectionEmpty =\n              state.selection.anchor === state.selection.head;\n            const blockEmpty = node.textContent.length === 0;\n\n            if (selectionAtBlockStart && selectionEmpty && blockEmpty) {\n              const newBlockInsertionPos = endPos + 1;\n              const newBlockContentPos = newBlockInsertionPos + 2;\n\n              chain()\n                .BNCreateBlock(newBlockInsertionPos)\n                .setTextSelection(newBlockContentPos)\n                .run();\n\n              return true;\n            }\n\n            return false;\n          }),\n        // Splits the current block, moving content inside that's after the cursor to a new text block below. Also\n        // deletes the selection beforehand, if it's not empty.\n        () =>\n          commands.command(({ state, chain }) => {\n            const { node } = getBlockInfoFromPos(\n              state.doc,\n              state.selection.from\n            )!;\n\n            const selectionAtBlockStart =\n              state.selection.$anchor.parentOffset === 0;\n            const blockEmpty = node.textContent.length === 0;\n\n            if (!blockEmpty) {\n              chain()\n                .deleteSelection()\n                .BNSplitBlock(state.selection.from, selectionAtBlockStart)\n                .run();\n\n              return true;\n            }\n\n            return false;\n          }),\n      ]);\n\n    return {\n      Backspace: handleBackspace,\n      Delete: handleDelete,\n      Enter: handleEnter,\n      // Always returning true for tab key presses ensures they're not captured by the browser. Otherwise, they blur the\n      // editor since the browser will try to use tab for keyboard navigation.\n      Tab: () => {\n        this.editor.commands.sinkListItem(\"blockContainer\");\n        return true;\n      },\n      \"Shift-Tab\": () => {\n        this.editor.commands.liftListItem(\"blockContainer\");\n        return true;\n      },\n      \"Mod-Alt-0\": () =>\n        this.editor.commands.BNCreateBlock(\n          this.editor.state.selection.anchor + 2\n        ),\n    };\n  },\n});\n","import { mergeAttributes, Node } from \"@tiptap/core\";\nimport styles from \"./Block.module.css\";\nimport { BlockNoteDOMAttributes } from \"../api/blockTypes\";\nimport { mergeCSSClasses } from \"../../../shared/utils\";\n\nexport const BlockGroup = Node.create<{\n  domAttributes?: BlockNoteDOMAttributes;\n}>({\n  name: \"blockGroup\",\n  group: \"blockGroup\",\n  content: \"blockContainer+\",\n\n  parseHTML() {\n    return [\n      {\n        tag: \"div\",\n        getAttrs: (element) => {\n          if (typeof element === \"string\") {\n            return false;\n          }\n\n          if (element.getAttribute(\"data-node-type\") === \"blockGroup\") {\n            // Null means the element matches, but we don't want to add any attributes to the node.\n            return null;\n          }\n\n          return false;\n        },\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    const blockGroupDOMAttributes =\n      this.options.domAttributes?.blockGroup || {};\n\n    return [\n      \"div\",\n      mergeAttributes(\n        {\n          ...blockGroupDOMAttributes,\n          class: mergeCSSClasses(\n            styles.blockGroup,\n            blockGroupDOMAttributes.class\n          ),\n          \"data-node-type\": \"blockGroup\",\n        },\n        HTMLAttributes\n      ),\n      0,\n    ];\n  },\n});\n","import { Node } from \"@tiptap/core\";\nexport { BlockContainer } from \"./nodes/BlockContainer\";\nexport { BlockGroup } from \"./nodes/BlockGroup\";\nexport const Doc = Node.create({\n  name: \"doc\",\n  topNode: true,\n  content: \"blockGroup\",\n});\n","import { Extension } from \"@tiptap/core\";\nimport { Plugin } from \"prosemirror-state\";\nimport { DOMSerializer, Schema } from \"prosemirror-model\";\n\nconst customBlockSerializer = (schema: Schema) => {\n  const defaultSerializer = DOMSerializer.fromSchema(schema);\n\n  return new DOMSerializer(\n    {\n      ...defaultSerializer.nodes,\n      // TODO: If a serializer is defined in the config for a custom block, it\n      //  should be added here. We still need to figure out how the serializer\n      //  should be defined in the custom blocks API though, and implement that,\n      //  before we can do this.\n    },\n    defaultSerializer.marks\n  );\n};\nexport const CustomBlockSerializerExtension = Extension.create({\n  addProseMirrorPlugins() {\n    return [\n      new Plugin({\n        props: {\n          clipboardSerializer: customBlockSerializer(this.editor.schema),\n        },\n      }),\n    ];\n  },\n});","// from https://raw.githubusercontent.com/ueberdosis/tiptap/develop/packages/core/src/EventEmitter.ts (MIT)\n\ntype StringKeyOf<T> = Extract<keyof T, string>;\ntype CallbackType<\n  T extends Record<string, any>,\n  EventName extends StringKeyOf<T>\n> = T[EventName] extends any[] ? T[EventName] : [T[EventName]];\ntype CallbackFunction<\n  T extends Record<string, any>,\n  EventName extends StringKeyOf<T>\n> = (...props: CallbackType<T, EventName>) => any;\n\nexport class EventEmitter<T extends Record<string, any>> {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private callbacks: { [key: string]: Function[] } = {};\n\n  public on<EventName extends StringKeyOf<T>>(\n    event: EventName,\n    fn: CallbackFunction<T, EventName>\n  ) {\n    if (!this.callbacks[event]) {\n      this.callbacks[event] = [];\n    }\n\n    this.callbacks[event].push(fn);\n\n    return () => this.off(event, fn);\n  }\n\n  protected emit<EventName extends StringKeyOf<T>>(\n    event: EventName,\n    ...args: CallbackType<T, EventName>\n  ) {\n    const callbacks = this.callbacks[event];\n\n    if (callbacks) {\n      callbacks.forEach((callback) => callback.apply(this, args));\n    }\n  }\n\n  public off<EventName extends StringKeyOf<T>>(\n    event: EventName,\n    fn?: CallbackFunction<T, EventName>\n  ) {\n    const callbacks = this.callbacks[event];\n\n    if (callbacks) {\n      if (fn) {\n        this.callbacks[event] = callbacks.filter((callback) => callback !== fn);\n      } else {\n        delete this.callbacks[event];\n      }\n    }\n  }\n\n  protected removeAllListeners(): void {\n    this.callbacks = {};\n  }\n}\n","import { findParentNode } from \"@tiptap/core\";\n\nexport const findBlock = findParentNode(\n  (node) => node.type.name === \"blockContainer\"\n);\n","import { EditorState, Plugin, PluginKey } from \"prosemirror-state\";\nimport { Decoration, DecorationSet, EditorView } from \"prosemirror-view\";\nimport { BlockNoteEditor } from \"../../../BlockNoteEditor\";\nimport { BlockSchema } from \"../../../extensions/Blocks/api/blockTypes\";\nimport { findBlock } from \"../../../extensions/Blocks/helpers/findBlock\";\nimport { BaseUiElementState } from \"../../BaseUiElementTypes\";\nimport { SuggestionItem } from \"./SuggestionItem\";\n\nexport type SuggestionsMenuState<T extends SuggestionItem> =\n  BaseUiElementState & {\n    // The suggested items to display.\n    filteredItems: T[];\n    // The index of the suggested item that's currently hovered by the keyboard.\n    keyboardHoveredItemIndex: number;\n  };\n\nclass SuggestionsMenuView<\n  T extends SuggestionItem,\n  BSchema extends BlockSchema\n> {\n  private suggestionsMenuState?: SuggestionsMenuState<T>;\n  public updateSuggestionsMenu: () => void;\n\n  pluginState: SuggestionPluginState<T>;\n\n  constructor(\n    private readonly editor: BlockNoteEditor<BSchema>,\n    private readonly pluginKey: PluginKey,\n    updateSuggestionsMenu: (\n      suggestionsMenuState: SuggestionsMenuState<T>\n    ) => void = () => {\n      // noop\n    }\n  ) {\n    this.pluginState = getDefaultPluginState<T>();\n\n    this.updateSuggestionsMenu = () => {\n      if (!this.suggestionsMenuState) {\n        throw new Error(\"Attempting to update uninitialized suggestions menu\");\n      }\n\n      updateSuggestionsMenu(this.suggestionsMenuState);\n    };\n\n    document.addEventListener(\"scroll\", this.handleScroll);\n  }\n\n  handleScroll = () => {\n    if (this.suggestionsMenuState?.show) {\n      const decorationNode = document.querySelector(\n        `[data-decoration-id=\"${this.pluginState.decorationId}\"]`\n      );\n      this.suggestionsMenuState.referencePos =\n        decorationNode!.getBoundingClientRect();\n      this.updateSuggestionsMenu();\n    }\n  };\n\n  update(view: EditorView, prevState: EditorState) {\n    const prev = this.pluginKey.getState(prevState);\n    const next = this.pluginKey.getState(view.state);\n\n    // See how the state changed\n    const started = !prev.active && next.active;\n    const stopped = prev.active && !next.active;\n    // TODO: Currently also true for cases in which an update isn't needed so selected list item index updates still\n    //  cause the view to update. May need to be more strict.\n    const changed = prev.active && next.active;\n\n    // Cancel when suggestion isn't active\n    if (!started && !changed && !stopped) {\n      return;\n    }\n\n    this.pluginState = stopped ? prev : next;\n\n    if (stopped || !this.editor.isEditable) {\n      this.suggestionsMenuState!.show = false;\n      this.updateSuggestionsMenu();\n\n      return;\n    }\n\n    const decorationNode = document.querySelector(\n      `[data-decoration-id=\"${this.pluginState.decorationId}\"]`\n    );\n\n    if (this.editor.isEditable) {\n      this.suggestionsMenuState = {\n        show: true,\n        referencePos: decorationNode!.getBoundingClientRect(),\n        filteredItems: this.pluginState.items,\n        keyboardHoveredItemIndex: this.pluginState.keyboardHoveredItemIndex!,\n      };\n\n      this.updateSuggestionsMenu();\n    }\n  }\n\n  destroy() {\n    document.removeEventListener(\"scroll\", this.handleScroll);\n  }\n}\n\ntype SuggestionPluginState<T extends SuggestionItem> = {\n  // True when the menu is shown, false when hidden.\n  active: boolean;\n  // The character that triggered the menu being shown. Allowing the trigger to be different to the default\n  // trigger allows other extensions to open it programmatically.\n  triggerCharacter: string | undefined;\n  // The editor position just after the trigger character, i.e. where the user query begins. Used to figure out\n  // which menu items to show and can also be used to delete the trigger character.\n  queryStartPos: number | undefined;\n  // The items that should be shown in the menu.\n  items: T[];\n  // The index of the item in the menu that's currently hovered using the keyboard.\n  keyboardHoveredItemIndex: number | undefined;\n  // The number of characters typed after the last query that matched with at least 1 item. Used to close the\n  // menu if the user keeps entering queries that don't return any results.\n  notFoundCount: number | undefined;\n  decorationId: string | undefined;\n};\n\nfunction getDefaultPluginState<\n  T extends SuggestionItem\n>(): SuggestionPluginState<T> {\n  return {\n    active: false,\n    triggerCharacter: undefined,\n    queryStartPos: undefined,\n    items: [] as T[],\n    keyboardHoveredItemIndex: undefined,\n    notFoundCount: 0,\n    decorationId: undefined,\n  };\n}\n\n/**\n * A ProseMirror plugin for suggestions, designed to make '/'-commands possible as well as mentions.\n *\n * This is basically a simplified version of TipTap's [Suggestions](https://github.com/ueberdosis/tiptap/tree/db92a9b313c5993b723c85cd30256f1d4a0b65e1/packages/suggestion) plugin.\n *\n * This version is adapted from the aforementioned version in the following ways:\n * - This version supports generic items instead of only strings (to allow for more advanced filtering for example)\n * - This version hides some unnecessary complexity from the user of the plugin.\n * - This version handles key events differently\n */\nexport const setupSuggestionsMenu = <\n  T extends SuggestionItem,\n  BSchema extends BlockSchema\n>(\n  editor: BlockNoteEditor<BSchema>,\n  updateSuggestionsMenu: (\n    suggestionsMenuState: SuggestionsMenuState<T>\n  ) => void,\n\n  pluginKey: PluginKey,\n  defaultTriggerCharacter: string,\n  items: (query: string) => T[] = () => [],\n  onSelectItem: (props: {\n    item: T;\n    editor: BlockNoteEditor<BSchema>;\n  }) => void = () => {\n    // noop\n  }\n) => {\n  // Assertions\n  if (defaultTriggerCharacter.length !== 1) {\n    throw new Error(\"'char' should be a single character\");\n  }\n\n  let suggestionsPluginView: SuggestionsMenuView<T, BSchema>;\n\n  const deactivate = (view: EditorView) => {\n    view.dispatch(view.state.tr.setMeta(pluginKey, { deactivate: true }));\n  };\n\n  return {\n    plugin: new Plugin({\n      key: pluginKey,\n\n      view: () => {\n        suggestionsPluginView = new SuggestionsMenuView<T, BSchema>(\n          editor,\n          pluginKey,\n\n          updateSuggestionsMenu\n        );\n        return suggestionsPluginView;\n      },\n\n      state: {\n        // Initialize the plugin's internal state.\n        init(): SuggestionPluginState<T> {\n          return getDefaultPluginState<T>();\n        },\n\n        // Apply changes to the plugin state from an editor transaction.\n        apply(transaction, prev, oldState, newState): SuggestionPluginState<T> {\n          // TODO: More clearly define which transactions should be ignored.\n          if (transaction.getMeta(\"orderedListIndexing\") !== undefined) {\n            return prev;\n          }\n\n          // Checks if the menu should be shown.\n          if (transaction.getMeta(pluginKey)?.activate) {\n            return {\n              active: true,\n              triggerCharacter:\n                transaction.getMeta(pluginKey)?.triggerCharacter || \"\",\n              queryStartPos: newState.selection.from,\n              items: items(\"\"),\n              keyboardHoveredItemIndex: 0,\n              // TODO: Maybe should be 1 if the menu has no possible items? Probably redundant since a menu with no items\n              //  is useless in practice.\n              notFoundCount: 0,\n              decorationId: `id_${Math.floor(Math.random() * 0xffffffff)}`,\n            };\n          }\n\n          // Checks if the menu is hidden, in which case it doesn't need to be hidden or updated.\n          if (!prev.active) {\n            return prev;\n          }\n\n          const next = { ...prev };\n\n          // Updates which menu items to show by checking which items the current query (the text between the trigger\n          // character and caret) matches with.\n          next.items = items(\n            newState.doc.textBetween(\n              prev.queryStartPos!,\n              newState.selection.from\n            )\n          );\n\n          // Updates notFoundCount if the query doesn't match any items.\n          next.notFoundCount = 0;\n          if (next.items.length === 0) {\n            // Checks how many characters were typed or deleted since the last transaction, and updates the notFoundCount\n            // accordingly. Also ensures the notFoundCount does not become negative.\n            next.notFoundCount = Math.max(\n              0,\n              prev.notFoundCount! +\n                (newState.selection.from - oldState.selection.from)\n            );\n          }\n\n          // Hides the menu. This is done after items and notFoundCount are already updated as notFoundCount is needed to\n          // check if the menu should be hidden.\n          if (\n            // Highlighting text should hide the menu.\n            newState.selection.from !== newState.selection.to ||\n            // Transactions with plugin metadata {deactivate: true} should hide the menu.\n            transaction.getMeta(pluginKey)?.deactivate ||\n            // Certain mouse events should hide the menu.\n            // TODO: Change to global mousedown listener.\n            transaction.getMeta(\"focus\") ||\n            transaction.getMeta(\"blur\") ||\n            transaction.getMeta(\"pointer\") ||\n            // Moving the caret before the character which triggered the menu should hide it.\n            (prev.active && newState.selection.from < prev.queryStartPos!) ||\n            // Entering more than 3 characters, after the last query that matched with at least 1 menu item, should hide\n            // the menu.\n            next.notFoundCount > 3\n          ) {\n            return getDefaultPluginState<T>();\n          }\n\n          // Updates keyboardHoveredItemIndex if the up or down arrow key was\n          // pressed, or resets it if the keyboard cursor moved.\n          if (\n            transaction.getMeta(pluginKey)?.selectedItemIndexChanged !==\n            undefined\n          ) {\n            let newIndex =\n              transaction.getMeta(pluginKey).selectedItemIndexChanged;\n\n            // Allows selection to jump between first and last items.\n            if (newIndex < 0) {\n              newIndex = prev.items.length - 1;\n            } else if (newIndex >= prev.items.length) {\n              newIndex = 0;\n            }\n\n            next.keyboardHoveredItemIndex = newIndex;\n          } else if (oldState.selection.from !== newState.selection.from) {\n            next.keyboardHoveredItemIndex = 0;\n          }\n\n          return next;\n        },\n      },\n\n      props: {\n        handleKeyDown(view, event) {\n          const menuIsActive = (this as Plugin).getState(view.state).active;\n\n          // Shows the menu if the default trigger character was pressed and the menu isn't active.\n          if (event.key === defaultTriggerCharacter && !menuIsActive) {\n            view.dispatch(\n              view.state.tr\n                .insertText(defaultTriggerCharacter)\n                .scrollIntoView()\n                .setMeta(pluginKey, {\n                  activate: true,\n                  triggerCharacter: defaultTriggerCharacter,\n                })\n            );\n\n            return true;\n          }\n\n          // Doesn't handle other keystrokes if the menu isn't active.\n          if (!menuIsActive) {\n            return false;\n          }\n\n          // Handles keystrokes for navigating the menu.\n          const {\n            triggerCharacter,\n            queryStartPos,\n            items,\n            keyboardHoveredItemIndex,\n          } = pluginKey.getState(view.state);\n\n          // Moves the keyboard selection to the previous item.\n          if (event.key === \"ArrowUp\") {\n            view.dispatch(\n              view.state.tr.setMeta(pluginKey, {\n                selectedItemIndexChanged: keyboardHoveredItemIndex - 1,\n              })\n            );\n            return true;\n          }\n\n          // Moves the keyboard selection to the next item.\n          if (event.key === \"ArrowDown\") {\n            view.dispatch(\n              view.state.tr.setMeta(pluginKey, {\n                selectedItemIndexChanged: keyboardHoveredItemIndex + 1,\n              })\n            );\n            return true;\n          }\n\n          // Selects an item and closes the menu.\n          if (event.key === \"Enter\") {\n            if (items.length === 0) {\n              return true;\n            }\n\n            deactivate(view);\n            editor._tiptapEditor\n              .chain()\n              .focus()\n              .deleteRange({\n                from: queryStartPos! - triggerCharacter!.length,\n                to: editor._tiptapEditor.state.selection.from,\n              })\n              .run();\n\n            onSelectItem({\n              item: items[keyboardHoveredItemIndex],\n              editor: editor,\n            });\n\n            return true;\n          }\n\n          // Closes the menu.\n          if (event.key === \"Escape\") {\n            deactivate(view);\n            return true;\n          }\n\n          return false;\n        },\n\n        // Setup decorator on the currently active suggestion.\n        decorations(state) {\n          const { active, decorationId, queryStartPos, triggerCharacter } = (\n            this as Plugin\n          ).getState(state);\n\n          if (!active) {\n            return null;\n          }\n\n          // If the menu was opened programmatically by another extension, it may not use a trigger character. In this\n          // case, the decoration is set on the whole block instead, as the decoration range would otherwise be empty.\n          if (triggerCharacter === \"\") {\n            const blockNode = findBlock(state.selection);\n            if (blockNode) {\n              return DecorationSet.create(state.doc, [\n                Decoration.node(\n                  blockNode.pos,\n                  blockNode.pos + blockNode.node.nodeSize,\n                  {\n                    nodeName: \"span\",\n                    class: \"suggestion-decorator\",\n                    \"data-decoration-id\": decorationId,\n                  }\n                ),\n              ]);\n            }\n          }\n          // Creates an inline decoration around the trigger character.\n          return DecorationSet.create(state.doc, [\n            Decoration.inline(\n              queryStartPos - triggerCharacter.length,\n              queryStartPos,\n              {\n                nodeName: \"span\",\n                class: \"suggestion-decorator\",\n                \"data-decoration-id\": decorationId,\n              }\n            ),\n          ]);\n        },\n      },\n    }),\n    itemCallback: (item: T) => {\n      deactivate(editor._tiptapEditor.view);\n      editor._tiptapEditor\n        .chain()\n        .focus()\n        .deleteRange({\n          from:\n            suggestionsPluginView.pluginState.queryStartPos! -\n            suggestionsPluginView.pluginState.triggerCharacter!.length,\n          to: editor._tiptapEditor.state.selection.from,\n        })\n        .run();\n\n      onSelectItem({\n        item: item,\n        editor: editor,\n      });\n    },\n  };\n};\n","import { Plugin, PluginKey } from \"prosemirror-state\";\n\nimport { BlockNoteEditor } from \"../../BlockNoteEditor\";\nimport { EventEmitter } from \"../../shared/EventEmitter\";\nimport {\n  SuggestionsMenuState,\n  setupSuggestionsMenu,\n} from \"../../shared/plugins/suggestion/SuggestionPlugin\";\nimport { BlockSchema } from \"../Blocks/api/blockTypes\";\nimport { BaseSlashMenuItem } from \"./BaseSlashMenuItem\";\n\nexport const slashMenuPluginKey = new PluginKey(\"SlashMenuPlugin\");\n\nexport class SlashMenuProsemirrorPlugin<\n  BSchema extends BlockSchema,\n  SlashMenuItem extends BaseSlashMenuItem<BSchema>\n> extends EventEmitter<any> {\n  public readonly plugin: Plugin;\n  public readonly itemCallback: (item: SlashMenuItem) => void;\n\n  constructor(editor: BlockNoteEditor<BSchema>, items: SlashMenuItem[]) {\n    super();\n    const suggestions = setupSuggestionsMenu<SlashMenuItem, BSchema>(\n      editor,\n      (state) => {\n        this.emit(\"update\", state);\n      },\n      slashMenuPluginKey,\n      \"/\",\n      (query) =>\n        items.filter(\n          ({ name, aliases }: SlashMenuItem) =>\n            name.toLowerCase().startsWith(query.toLowerCase()) ||\n            (aliases &&\n              aliases.filter((alias) =>\n                alias.toLowerCase().startsWith(query.toLowerCase())\n              ).length !== 0)\n        ),\n      ({ item, editor }) => item.execute(editor)\n    );\n\n    this.plugin = suggestions.plugin;\n    this.itemCallback = suggestions.itemCallback;\n  }\n\n  public onUpdate(\n    callback: (state: SuggestionsMenuState<SlashMenuItem>) => void\n  ) {\n    return this.on(\"update\", callback);\n  }\n}\n","import { Editor, Extension } from \"@tiptap/core\";\nimport { Node as ProsemirrorNode } from \"prosemirror-model\";\nimport { Plugin, PluginKey } from \"prosemirror-state\";\nimport { Decoration, DecorationSet } from \"prosemirror-view\";\nimport { slashMenuPluginKey } from \"../SlashMenu/SlashMenuPlugin\";\n\nconst PLUGIN_KEY = new PluginKey(`blocknote-placeholder`);\n\n/**\n * This is a modified version of the tiptap\n * placeholder plugin, that also sets hasAnchorClass\n *\n * It does not set a data-placeholder (text is currently done in css)\n *\n */\nexport interface PlaceholderOptions {\n  emptyEditorClass: string;\n  emptyNodeClass: string;\n  isFilterClass: string;\n  hasAnchorClass: string;\n  placeholder:\n    | ((PlaceholderProps: {\n        editor: Editor;\n        node: ProsemirrorNode;\n        pos: number;\n        hasAnchor: boolean;\n      }) => string)\n    | string;\n  showOnlyWhenEditable: boolean;\n  showOnlyCurrent: boolean;\n  includeChildren: boolean;\n}\n\nexport const Placeholder = Extension.create<PlaceholderOptions>({\n  name: \"placeholder\",\n\n  addOptions() {\n    return {\n      emptyEditorClass: \"is-editor-empty\",\n      emptyNodeClass: \"is-empty\",\n      isFilterClass: \"is-filter\",\n      hasAnchorClass: \"has-anchor\",\n      placeholder: \"Write something …\",\n      showOnlyWhenEditable: true,\n      showOnlyCurrent: true,\n      includeChildren: false,\n    };\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      new Plugin({\n        key: PLUGIN_KEY,\n        props: {\n          decorations: (state) => {\n            const { doc, selection } = state;\n            // Get state of slash menu\n            const menuState = slashMenuPluginKey.getState(state);\n            const active =\n              this.editor.isEditable || !this.options.showOnlyWhenEditable;\n            const { anchor } = selection;\n            const decorations: Decoration[] = [];\n\n            if (!active) {\n              return;\n            }\n\n            doc.descendants((node, pos) => {\n              const hasAnchor = anchor >= pos && anchor <= pos + node.nodeSize;\n              const isEmpty = !node.isLeaf && !node.childCount;\n\n              if ((hasAnchor || !this.options.showOnlyCurrent) && isEmpty) {\n                const classes = [this.options.emptyNodeClass];\n\n                // TODO: Doesn't work?\n                if (this.editor.isEmpty) {\n                  classes.push(this.options.emptyEditorClass);\n                }\n\n                if (hasAnchor) {\n                  classes.push(this.options.hasAnchorClass);\n                }\n\n                // If slash menu is of drag type and active, show the filter placeholder\n                if (menuState?.triggerCharacter === \"\" && menuState?.active) {\n                  classes.push(this.options.isFilterClass);\n                }\n                // using widget, didn't work (caret position bug)\n                // const decoration = Decoration.widget(\n                //   pos + 1,\n                //   () => {\n                //     const el = document.createElement(\"span\");\n                //     el.innerText = \"hello\";\n                //     return el;\n                //   },\n                //   { side: 0 }\n\n                // Code that sets variables / classes\n                // const ph =\n                //   typeof this.options.placeholder === \"function\"\n                //     ? this.options.placeholder({\n                //         editor: this.editor,\n                //         node,\n                //         pos,\n                //         hasAnchor,\n                //       })\n                //     : this.options.placeholder;\n                // const decoration = Decoration.node(pos, pos + node.nodeSize, {\n                //   class: classes.join(\" \"),\n                //   style: `--placeholder:'${ph.replaceAll(\"'\", \"\\\\'\")}';`,\n                //   \"data-placeholder\": ph,\n                // });\n\n                // Latest version, only set isEmpty and hasAnchor, rest is done via CSS\n\n                const decoration = Decoration.node(pos, pos + node.nodeSize, {\n                  class: classes.join(\" \"),\n                });\n                decorations.push(decoration);\n              }\n\n              return this.options.includeChildren;\n            });\n\n            return DecorationSet.create(doc, decorations);\n          },\n        },\n      }),\n    ];\n  },\n});\n","import { Extension } from \"@tiptap/core\";\nimport { getBlockInfoFromPos } from \"../Blocks/helpers/getBlockInfoFromPos\";\n\ndeclare module \"@tiptap/core\" {\n  interface Commands<ReturnType> {\n    textAlignment: {\n      setTextAlignment: (\n        textAlignment: \"left\" | \"center\" | \"right\" | \"justify\"\n      ) => ReturnType;\n    };\n  }\n}\n\nexport const TextAlignmentExtension = Extension.create({\n  name: \"textAlignment\",\n\n  addGlobalAttributes() {\n    return [\n      {\n        // Attribute is applied to block content instead of container so that child blocks don't inherit the text\n        // alignment styling.\n        types: [\"paragraph\", \"heading\", \"bulletListItem\", \"numberedListItem\"],\n        attributes: {\n          textAlignment: {\n            default: \"left\",\n            parseHTML: (element) => element.getAttribute(\"data-text-alignment\"),\n            renderHTML: (attributes) =>\n              attributes.textAlignment !== \"left\" && {\n                \"data-text-alignment\": attributes.textAlignment,\n              },\n          },\n        },\n      },\n    ];\n  },\n\n  addCommands() {\n    return {\n      setTextAlignment:\n        (textAlignment) =>\n        ({ state }) => {\n          const positionsBeforeSelectedContent = [];\n\n          const blockInfo = getBlockInfoFromPos(\n            state.doc,\n            state.selection.from\n          );\n          if (blockInfo === undefined) {\n            return false;\n          }\n\n          // Finds all blockContent nodes that the current selection is in.\n          let pos = blockInfo.startPos;\n          while (pos < state.selection.to) {\n            if (\n              state.doc.resolve(pos).node().type.spec.group === \"blockContent\"\n            ) {\n              positionsBeforeSelectedContent.push(pos - 1);\n\n              pos += state.doc.resolve(pos).node().nodeSize - 1;\n            } else {\n              pos += 1;\n            }\n          }\n\n          // Sets text alignment for all blockContent nodes that the current selection is in.\n          for (const pos of positionsBeforeSelectedContent) {\n            state.tr.setNodeAttribute(pos, \"textAlignment\", textAlignment);\n          }\n\n          return true;\n        },\n    };\n  },\n});\n","import { Extension } from \"@tiptap/core\";\nimport { getBlockInfoFromPos } from \"../Blocks/helpers/getBlockInfoFromPos\";\nimport { defaultProps } from \"../Blocks/api/defaultProps\";\n\ndeclare module \"@tiptap/core\" {\n  interface Commands<ReturnType> {\n    blockTextColor: {\n      setBlockTextColor: (posInBlock: number, color: string) => ReturnType;\n    };\n  }\n}\n\nexport const TextColorExtension = Extension.create({\n  name: \"blockTextColor\",\n\n  addGlobalAttributes() {\n    return [\n      {\n        types: [\"blockContainer\"],\n        attributes: {\n          textColor: {\n            default: defaultProps.textColor.default,\n            parseHTML: (element) =>\n              element.hasAttribute(\"data-text-color\")\n                ? element.getAttribute(\"data-text-color\")\n                : defaultProps.textColor.default,\n            renderHTML: (attributes) =>\n              attributes.textColor !== defaultProps.textColor.default && {\n                \"data-text-color\": attributes.textColor,\n              },\n          },\n        },\n      },\n    ];\n  },\n\n  addCommands() {\n    return {\n      setBlockTextColor:\n        (posInBlock, color) =>\n        ({ state, view }) => {\n          const blockInfo = getBlockInfoFromPos(state.doc, posInBlock);\n          if (blockInfo === undefined) {\n            return false;\n          }\n\n          state.tr.setNodeAttribute(blockInfo.startPos - 1, \"textColor\", color);\n\n          view.focus();\n\n          return true;\n        },\n    };\n  },\n});\n","import { Mark } from \"@tiptap/core\";\nimport { defaultProps } from \"../Blocks/api/defaultProps\";\n\ndeclare module \"@tiptap/core\" {\n  interface Commands<ReturnType> {\n    textColor: {\n      setTextColor: (color: string) => ReturnType;\n    };\n  }\n}\n\nexport const TextColorMark = Mark.create({\n  name: \"textColor\",\n\n  addAttributes() {\n    return {\n      color: {\n        default: undefined,\n        parseHTML: (element) => element.getAttribute(\"data-text-color\"),\n        renderHTML: (attributes) => ({\n          \"data-text-color\": attributes.color,\n        }),\n      },\n    };\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: \"span\",\n        getAttrs: (element) => {\n          if (typeof element === \"string\") {\n            return false;\n          }\n\n          if (element.hasAttribute(\"data-text-color\")) {\n            return { color: element.getAttribute(\"data-text-color\") };\n          }\n\n          return false;\n        },\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return [\"span\", HTMLAttributes, 0];\n  },\n\n  addCommands() {\n    return {\n      setTextColor:\n        (color) =>\n        ({ commands }) => {\n          if (color !== defaultProps.textColor.default) {\n            return commands.setMark(this.name, { color: color });\n          }\n\n          return commands.unsetMark(this.name);\n        },\n    };\n  },\n});\n","import { Extension } from \"@tiptap/core\";\nimport { Plugin, PluginKey } from \"prosemirror-state\";\n\n// based on https://github.com/ueberdosis/tiptap/blob/40a9404c94c7fef7900610c195536384781ae101/demos/src/Experiments/TrailingNode/Vue/trailing-node.ts\n\n/**\n * Extension based on:\n * - https://github.com/ueberdosis/tiptap/blob/v1/packages/tiptap-extensions/src/extensions/TrailingNode.js\n * - https://github.com/remirror/remirror/blob/e0f1bec4a1e8073ce8f5500d62193e52321155b9/packages/prosemirror-trailing-node/src/trailing-node-plugin.ts\n */\n\nexport interface TrailingNodeOptions {\n  node: string;\n}\n\n/**\n * Add a trailing node to the document so the user can always click at the bottom of the document and start typing\n */\nexport const TrailingNode = Extension.create<TrailingNodeOptions>({\n  name: \"trailingNode\",\n\n  addProseMirrorPlugins() {\n    const plugin = new PluginKey(this.name);\n    // const disabledNodes = Object.entries(this.editor.schema.nodes)\n    //   .map(([, value]) => value)\n    //   .filter((node) => this.options.notAfter.includes(node.name));\n\n    return [\n      new Plugin({\n        key: plugin,\n        appendTransaction: (_, __, state) => {\n          const { doc, tr, schema } = state;\n          const shouldInsertNodeAtEnd = plugin.getState(state);\n          const endPosition = doc.content.size - 2;\n          const type = schema.nodes[\"blockContainer\"];\n          const contentType = schema.nodes[\"paragraph\"];\n          if (!shouldInsertNodeAtEnd) {\n            return;\n          }\n\n          return tr.insert(\n            endPosition,\n            type.create(undefined, contentType.create())\n          );\n        },\n        state: {\n          init: (_, _state) => {\n            // (maybe fix): use same logic as apply() here\n            // so it works when initializing\n          },\n          apply: (tr, value) => {\n            if (!tr.docChanged) {\n              return value;\n            }\n\n            let lastNode = tr.doc.lastChild;\n\n            if (!lastNode || lastNode.type.name !== \"blockGroup\") {\n              throw new Error(\"Expected blockGroup\");\n            }\n\n            lastNode = lastNode.lastChild;\n\n            if (!lastNode || lastNode.type.name !== \"blockContainer\") {\n              throw new Error(\"Expected blockContainer\");\n            }\n\n            const lastContentNode = lastNode.firstChild;\n\n            if (!lastContentNode) {\n              throw new Error(\"Expected blockContent\");\n            }\n\n            // If last node is not empty (size > 4) or it doesn't contain\n            // inline content, we need to add a trailing node.\n            return (\n              lastNode.nodeSize > 4 ||\n              lastContentNode.type.spec.content !== \"inline*\"\n            );\n          },\n        },\n      }),\n    ];\n  },\n});\n","import { Extension } from \"@tiptap/core\";\r\nimport { Plugin } from \"prosemirror-state\";\r\nimport { BlockNoteEditor } from \"../../BlockNoteEditor\";\r\nimport { BlockSchema } from \"../Blocks/api/blockTypes\";\r\n\r\nconst acceptedMIMETypes = [\r\n  \"blocknote/html\",\r\n  \"text/html\",\r\n  \"text/plain\",\r\n] as const;\r\n\r\nexport const createPasteFromClipboardExtension = <BSchema extends BlockSchema>(\r\n  editor: BlockNoteEditor<BSchema>\r\n) =>\r\n  Extension.create<{ editor: BlockNoteEditor<BSchema> }, undefined>({\r\n    name: \"pasteFromClipboard\",\r\n    addProseMirrorPlugins() {\r\n      return [\r\n        new Plugin({\r\n          props: {\r\n            handleDOMEvents: {\r\n              paste(_view, event) {\r\n                event.preventDefault();\r\n                let format: (typeof acceptedMIMETypes)[number] | null = null;\r\n\r\n                for (const mimeType of acceptedMIMETypes) {\r\n                  if (event.clipboardData!.types.includes(mimeType)) {\r\n                    format = mimeType;\r\n                    break;\r\n                  }\r\n                }\r\n\r\n                if (format !== null) {\r\n                  const data = event.clipboardData!.getData(format);\r\n                  if (format === \"text/html\") {\r\n                    // const htmlNode = nestedListsToBlockNoteStructure(\r\n                    //   data.trim()\r\n                    // );\r\n\r\n                    // data = htmlNode.innerHTML;\r\n                    console.log(\"paste\", data);\r\n                  }\r\n                  editor._tiptapEditor.view.pasteHTML(data);\r\n                }\r\n\r\n                return true;\r\n              },\r\n            },\r\n          },\r\n        }),\r\n      ];\r\n    },\r\n  });\r\n","import { Extension } from \"@tiptap/core\";\r\nimport { Plugin } from \"prosemirror-state\";\r\n// import { createExternalHTMLExporter } from \"./html/externalHTMLExporter\";\r\n// import { createInternalHTMLSerializer } from \"./html/internalHTMLSerializer\";\r\n// import { cleanHTMLToMarkdown } from \"./markdown/markdownExporter\";\r\nimport { BlockNoteEditor } from \"../../BlockNoteEditor\";\r\nimport { BlockSchema } from \"../Blocks/api/blockTypes\";\r\n\r\nexport const createCopyToClipboardExtension = <BSchema extends BlockSchema>(\r\n  editor: BlockNoteEditor<BSchema>\r\n) =>\r\n  Extension.create<{ editor: BlockNoteEditor<BSchema> }, undefined>({\r\n    name: \"copyToClipboard\",\r\n    addProseMirrorPlugins() {\r\n      const tiptap = this.editor;\r\n      // const schema = this.editor.schema;\r\n      return [\r\n        new Plugin({\r\n          props: {\r\n            handleDOMEvents: {\r\n              copy(_view, event) {\r\n                // Stops the default browser copy behaviour.\r\n                event.preventDefault();\r\n                event.clipboardData!.clearData();\r\n\r\n                const selectedFragment =\r\n                  tiptap.state.selection.content().content;\r\n\r\n                // const internalHTMLSerializer = createInternalHTMLSerializer(\r\n                //   schema,\r\n                //   editor\r\n                // );\r\n                // const internalHTML =\r\n                //   internalHTMLSerializer.serializeProseMirrorFragment(\r\n                //     selectedFragment\r\n                //   );\r\n\r\n                // const externalHTMLExporter = createExternalHTMLExporter(\r\n                //   schema,\r\n                //   editor\r\n                // );\r\n                // const externalHTML =\r\n                //   externalHTMLExporter.exportProseMirrorFragment(\r\n                //     selectedFragment\r\n                //   );\r\n\r\n                // const plainText = cleanHTMLToMarkdown(externalHTML);\r\n\r\n                // TODO: Writing to other MIME types not working in Safari for\r\n                //  some reason.\r\n                // event.clipboardData!.setData(\"blocknote/html\", internalHTML);\r\n                // event.clipboardData!.setData(\"text/html\", externalHTML);\r\n                event.clipboardData!.setData(\r\n                  \"text/plain\",\r\n                  selectedFragment.textBetween(0, selectedFragment.size)\r\n                );\r\n                console.log(editor, selectedFragment);\r\n                // Prevent default PM handler to be called\r\n                return true;\r\n              },\r\n            },\r\n          },\r\n        }),\r\n      ];\r\n    },\r\n  });\r\n","import { Extensions, extensions } from \"@tiptap/core\";\n\nimport { BlockNoteEditor } from \"./BlockNoteEditor\";\n\nimport { Bold } from \"@tiptap/extension-bold\";\nimport { Code } from \"@tiptap/extension-code\";\nimport Collaboration from \"@tiptap/extension-collaboration\";\nimport CollaborationCursor from \"@tiptap/extension-collaboration-cursor\";\nimport { Dropcursor } from \"@tiptap/extension-dropcursor\";\nimport { Gapcursor } from \"@tiptap/extension-gapcursor\";\nimport { HardBreak } from \"@tiptap/extension-hard-break\";\nimport { History } from \"@tiptap/extension-history\";\nimport { Italic } from \"@tiptap/extension-italic\";\nimport { Link } from \"@tiptap/extension-link\";\nimport { Strike } from \"@tiptap/extension-strike\";\nimport { Text } from \"@tiptap/extension-text\";\nimport { Underline } from \"@tiptap/extension-underline\";\nimport * as Y from \"yjs\";\nimport styles from \"./editor.module.css\";\nimport { BackgroundColorExtension } from \"./extensions/BackgroundColor/BackgroundColorExtension\";\nimport { BackgroundColorMark } from \"./extensions/BackgroundColor/BackgroundColorMark\";\nimport { BlockContainer, BlockGroup, Doc } from \"./extensions/Blocks\";\nimport {\n  BlockNoteDOMAttributes,\n  BlockSchema,\n} from \"./extensions/Blocks/api/blockTypes\";\nimport { CustomBlockSerializerExtension } from \"./extensions/Blocks/api/serialization\";\nimport blockStyles from \"./extensions/Blocks/nodes/Block.module.css\";\nimport { Placeholder } from \"./extensions/Placeholder/PlaceholderExtension\";\nimport { TextAlignmentExtension } from \"./extensions/TextAlignment/TextAlignmentExtension\";\nimport { TextColorExtension } from \"./extensions/TextColor/TextColorExtension\";\nimport { TextColorMark } from \"./extensions/TextColor/TextColorMark\";\nimport { TrailingNode } from \"./extensions/TrailingNode/TrailingNodeExtension\";\nimport UniqueID from \"./extensions/UniqueID/UniqueID\";\nimport { createPasteFromClipboardExtension } from \"./extensions/Paste/PastePlugin\";\nimport { createCopyToClipboardExtension } from \"./extensions/Copy/CopyPlugin\";\n\n/**\n * Get all the Tiptap extensions BlockNote is configured with by default\n */\nexport const getBlockNoteExtensions = <BSchema extends BlockSchema>(opts: {\n  editor: BlockNoteEditor<BSchema>;\n  domAttributes: Partial<BlockNoteDOMAttributes>;\n  blockSchema: BSchema;\n  collaboration?: {\n    fragment: Y.XmlFragment;\n    user: {\n      name: string;\n      color: string;\n    };\n    provider: any;\n    renderCursor?: (user: any) => HTMLElement;\n  };\n}) => {\n  const ret: Extensions = [\n    extensions.ClipboardTextSerializer,\n    extensions.Commands,\n    extensions.Editable,\n    extensions.FocusEvents,\n    extensions.Tabindex,\n\n    // DevTools,\n    Gapcursor,\n\n    // DropCursor,\n    Placeholder.configure({\n      emptyNodeClass: blockStyles.isEmpty,\n      hasAnchorClass: blockStyles.hasAnchor,\n      isFilterClass: blockStyles.isFilter,\n      includeChildren: true,\n      showOnlyCurrent: false,\n    }),\n    UniqueID.configure({\n      types: [\"blockContainer\"],\n    }),\n    HardBreak,\n    // Comments,\n\n    // basics:\n    Text,\n\n    // marks:\n    Bold,\n    Code,\n    Italic,\n    Strike,\n    Underline,\n    Link,\n    TextColorMark,\n    TextColorExtension,\n    BackgroundColorMark,\n    BackgroundColorExtension,\n    TextAlignmentExtension,\n\n    // nodes\n    Doc,\n    BlockContainer.configure({\n      domAttributes: opts.domAttributes,\n    }),\n    BlockGroup.configure({\n      domAttributes: opts.domAttributes,\n    }),\n    ...Object.values(opts.blockSchema).map((blockSpec) =>\n      blockSpec.node.configure({\n        editor: opts.editor,\n        domAttributes: opts.domAttributes,\n      })\n    ),\n    CustomBlockSerializerExtension,\n    createCopyToClipboardExtension(opts.editor),\n    createPasteFromClipboardExtension(opts.editor),\n\n    Dropcursor.configure({ width: 5, color: \"#ddeeff\" }),\n    // This needs to be at the bottom of this list, because Key events (such as enter, when selecting a /command),\n    // should be handled before Enter handlers in other components like splitListItem\n    TrailingNode,\n  ];\n\n  if (opts.collaboration) {\n    ret.push(\n      Collaboration.configure({\n        fragment: opts.collaboration.fragment,\n      })\n    );\n    if (opts.collaboration.provider?.awareness) {\n      const defaultRender = (user: { color: string; name: string }) => {\n        const cursor = document.createElement(\"span\");\n\n        cursor.classList.add(styles[\"collaboration-cursor__caret\"]);\n        cursor.setAttribute(\"style\", `border-color: ${user.color}`);\n\n        const label = document.createElement(\"span\");\n\n        label.classList.add(styles[\"collaboration-cursor__label\"]);\n        label.setAttribute(\"style\", `background-color: ${user.color}`);\n        label.insertBefore(document.createTextNode(user.name), null);\n\n        const nonbreakingSpace1 = document.createTextNode(\"\\u2060\");\n        const nonbreakingSpace2 = document.createTextNode(\"\\u2060\");\n        cursor.insertBefore(nonbreakingSpace1, null);\n        cursor.insertBefore(label, null);\n        cursor.insertBefore(nonbreakingSpace2, null);\n        return cursor;\n      };\n      ret.push(\n        CollaborationCursor.configure({\n          user: opts.collaboration.user,\n          render: opts.collaboration.renderCursor || defaultRender,\n          provider: opts.collaboration.provider,\n        })\n      );\n    }\n  } else {\n    // disable history extension when collaboration is enabled as Yjs takes care of undo / redo\n    ret.push(History);\n  }\n\n  return ret;\n};\n","import { Node } from \"prosemirror-model\";\n\n/**\n * Get a TipTap node by id\n */\nexport function getNodeById(\n  id: string,\n  doc: Node\n): { node: Node; posBeforeNode: number } {\n  let targetNode: Node | undefined = undefined;\n  let posBeforeNode: number | undefined = undefined;\n\n  doc.firstChild!.descendants((node, pos) => {\n    // Skips traversing nodes after node with target ID has been found.\n    if (targetNode) {\n      return false;\n    }\n\n    // Keeps traversing nodes if block with target ID has not been found.\n    if (node.type.name !== \"blockContainer\" || node.attrs.id !== id) {\n      return true;\n    }\n\n    targetNode = node;\n    posBeforeNode = pos + 1;\n\n    return false;\n  });\n\n  if (targetNode === undefined || posBeforeNode === undefined) {\n    throw Error(\"Could not find block in the editor with matching ID.\");\n  }\n\n  return {\n    node: targetNode,\n    posBeforeNode: posBeforeNode,\n  };\n}\n","import { Editor } from \"@tiptap/core\";\nimport { Node } from \"prosemirror-model\";\nimport {\n  BlockIdentifier,\n  BlockSchema,\n  PartialBlock,\n} from \"../../extensions/Blocks/api/blockTypes\";\nimport { blockToNode } from \"../nodeConversions/nodeConversions\";\nimport { getNodeById } from \"../util/nodeUtil\";\n\nexport function insertBlocks<BSchema extends BlockSchema>(\n  blocksToInsert: PartialBlock<BSchema>[],\n  referenceBlock: BlockIdentifier,\n  placement: \"before\" | \"after\" | \"nested\" = \"before\",\n  editor: Editor\n): void {\n  const id =\n    typeof referenceBlock === \"string\" ? referenceBlock : referenceBlock.id;\n\n  const nodesToInsert: Node[] = [];\n  for (const blockSpec of blocksToInsert) {\n    nodesToInsert.push(blockToNode(blockSpec, editor.schema));\n  }\n\n  let insertionPos = -1;\n\n  const { node, posBeforeNode } = getNodeById(id, editor.state.doc);\n\n  if (placement === \"before\") {\n    insertionPos = posBeforeNode;\n  }\n\n  if (placement === \"after\") {\n    insertionPos = posBeforeNode + node.nodeSize;\n  }\n\n  if (placement === \"nested\") {\n    // Case if block doesn't already have children.\n    if (node.childCount < 2) {\n      insertionPos = posBeforeNode + node.firstChild!.nodeSize + 1;\n\n      const blockGroupNode = editor.state.schema.nodes[\"blockGroup\"].create(\n        {},\n        nodesToInsert\n      );\n\n      editor.view.dispatch(\n        editor.state.tr.insert(insertionPos, blockGroupNode)\n      );\n\n      return;\n    }\n\n    insertionPos = posBeforeNode + node.firstChild!.nodeSize + 2;\n  }\n\n  editor.view.dispatch(editor.state.tr.insert(insertionPos, nodesToInsert));\n}\n\nexport function updateBlock<BSchema extends BlockSchema>(\n  blockToUpdate: BlockIdentifier,\n  update: PartialBlock<BSchema>,\n  editor: Editor\n) {\n  const id =\n    typeof blockToUpdate === \"string\" ? blockToUpdate : blockToUpdate.id;\n  const { posBeforeNode } = getNodeById(id, editor.state.doc);\n\n  editor.commands.BNUpdateBlock(posBeforeNode + 1, update);\n}\n\nexport function removeBlocks(\n  blocksToRemove: BlockIdentifier[],\n  editor: Editor\n) {\n  const idsOfBlocksToRemove = new Set<string>(\n    blocksToRemove.map((block) =>\n      typeof block === \"string\" ? block : block.id\n    )\n  );\n\n  let removedSize = 0;\n\n  editor.state.doc.descendants((node, pos) => {\n    // Skips traversing nodes after all target blocks have been removed.\n    if (idsOfBlocksToRemove.size === 0) {\n      return false;\n    }\n\n    // Keeps traversing nodes if block with target ID has not been found.\n    if (\n      node.type.name !== \"blockContainer\" ||\n      !idsOfBlocksToRemove.has(node.attrs.id)\n    ) {\n      return true;\n    }\n\n    idsOfBlocksToRemove.delete(node.attrs.id);\n    const oldDocSize = editor.state.doc.nodeSize;\n\n    editor.commands.BNDeleteBlock(pos - removedSize + 1);\n\n    const newDocSize = editor.state.doc.nodeSize;\n    removedSize += oldDocSize - newDocSize;\n\n    return false;\n  });\n\n  if (idsOfBlocksToRemove.size > 0) {\n    const notFoundIds = [...idsOfBlocksToRemove].join(\"\\n\");\n\n    throw Error(\n      \"Blocks with the following IDs could not be found in the editor: \" +\n        notFoundIds\n    );\n  }\n}\n\nexport function replaceBlocks<BSchema extends BlockSchema>(\n  blocksToRemove: BlockIdentifier[],\n  blocksToInsert: PartialBlock<BSchema>[],\n  editor: Editor\n) {\n  insertBlocks(blocksToInsert, blocksToRemove[0], \"before\", editor);\n  removeBlocks(blocksToRemove, editor);\n}\n","'use strict';\n\nconst UNDEFINED_CODE_POINTS = [\n    0xfffe,\n    0xffff,\n    0x1fffe,\n    0x1ffff,\n    0x2fffe,\n    0x2ffff,\n    0x3fffe,\n    0x3ffff,\n    0x4fffe,\n    0x4ffff,\n    0x5fffe,\n    0x5ffff,\n    0x6fffe,\n    0x6ffff,\n    0x7fffe,\n    0x7ffff,\n    0x8fffe,\n    0x8ffff,\n    0x9fffe,\n    0x9ffff,\n    0xafffe,\n    0xaffff,\n    0xbfffe,\n    0xbffff,\n    0xcfffe,\n    0xcffff,\n    0xdfffe,\n    0xdffff,\n    0xefffe,\n    0xeffff,\n    0xffffe,\n    0xfffff,\n    0x10fffe,\n    0x10ffff\n];\n\nexports.REPLACEMENT_CHARACTER = '\\uFFFD';\n\nexports.CODE_POINTS = {\n    EOF: -1,\n    NULL: 0x00,\n    TABULATION: 0x09,\n    CARRIAGE_RETURN: 0x0d,\n    LINE_FEED: 0x0a,\n    FORM_FEED: 0x0c,\n    SPACE: 0x20,\n    EXCLAMATION_MARK: 0x21,\n    QUOTATION_MARK: 0x22,\n    NUMBER_SIGN: 0x23,\n    AMPERSAND: 0x26,\n    APOSTROPHE: 0x27,\n    HYPHEN_MINUS: 0x2d,\n    SOLIDUS: 0x2f,\n    DIGIT_0: 0x30,\n    DIGIT_9: 0x39,\n    SEMICOLON: 0x3b,\n    LESS_THAN_SIGN: 0x3c,\n    EQUALS_SIGN: 0x3d,\n    GREATER_THAN_SIGN: 0x3e,\n    QUESTION_MARK: 0x3f,\n    LATIN_CAPITAL_A: 0x41,\n    LATIN_CAPITAL_F: 0x46,\n    LATIN_CAPITAL_X: 0x58,\n    LATIN_CAPITAL_Z: 0x5a,\n    RIGHT_SQUARE_BRACKET: 0x5d,\n    GRAVE_ACCENT: 0x60,\n    LATIN_SMALL_A: 0x61,\n    LATIN_SMALL_F: 0x66,\n    LATIN_SMALL_X: 0x78,\n    LATIN_SMALL_Z: 0x7a,\n    REPLACEMENT_CHARACTER: 0xfffd\n};\n\nexports.CODE_POINT_SEQUENCES = {\n    DASH_DASH_STRING: [0x2d, 0x2d], //--\n    DOCTYPE_STRING: [0x44, 0x4f, 0x43, 0x54, 0x59, 0x50, 0x45], //DOCTYPE\n    CDATA_START_STRING: [0x5b, 0x43, 0x44, 0x41, 0x54, 0x41, 0x5b], //[CDATA[\n    SCRIPT_STRING: [0x73, 0x63, 0x72, 0x69, 0x70, 0x74], //script\n    PUBLIC_STRING: [0x50, 0x55, 0x42, 0x4c, 0x49, 0x43], //PUBLIC\n    SYSTEM_STRING: [0x53, 0x59, 0x53, 0x54, 0x45, 0x4d] //SYSTEM\n};\n\n//Surrogates\nexports.isSurrogate = function(cp) {\n    return cp >= 0xd800 && cp <= 0xdfff;\n};\n\nexports.isSurrogatePair = function(cp) {\n    return cp >= 0xdc00 && cp <= 0xdfff;\n};\n\nexports.getSurrogatePairCodePoint = function(cp1, cp2) {\n    return (cp1 - 0xd800) * 0x400 + 0x2400 + cp2;\n};\n\n//NOTE: excluding NULL and ASCII whitespace\nexports.isControlCodePoint = function(cp) {\n    return (\n        (cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f)\n    );\n};\n\nexports.isUndefinedCodePoint = function(cp) {\n    return (cp >= 0xfdd0 && cp <= 0xfdef) || UNDEFINED_CODE_POINTS.indexOf(cp) > -1;\n};\n","'use strict';\n\nmodule.exports = {\n    controlCharacterInInputStream: 'control-character-in-input-stream',\n    noncharacterInInputStream: 'noncharacter-in-input-stream',\n    surrogateInInputStream: 'surrogate-in-input-stream',\n    nonVoidHtmlElementStartTagWithTrailingSolidus: 'non-void-html-element-start-tag-with-trailing-solidus',\n    endTagWithAttributes: 'end-tag-with-attributes',\n    endTagWithTrailingSolidus: 'end-tag-with-trailing-solidus',\n    unexpectedSolidusInTag: 'unexpected-solidus-in-tag',\n    unexpectedNullCharacter: 'unexpected-null-character',\n    unexpectedQuestionMarkInsteadOfTagName: 'unexpected-question-mark-instead-of-tag-name',\n    invalidFirstCharacterOfTagName: 'invalid-first-character-of-tag-name',\n    unexpectedEqualsSignBeforeAttributeName: 'unexpected-equals-sign-before-attribute-name',\n    missingEndTagName: 'missing-end-tag-name',\n    unexpectedCharacterInAttributeName: 'unexpected-character-in-attribute-name',\n    unknownNamedCharacterReference: 'unknown-named-character-reference',\n    missingSemicolonAfterCharacterReference: 'missing-semicolon-after-character-reference',\n    unexpectedCharacterAfterDoctypeSystemIdentifier: 'unexpected-character-after-doctype-system-identifier',\n    unexpectedCharacterInUnquotedAttributeValue: 'unexpected-character-in-unquoted-attribute-value',\n    eofBeforeTagName: 'eof-before-tag-name',\n    eofInTag: 'eof-in-tag',\n    missingAttributeValue: 'missing-attribute-value',\n    missingWhitespaceBetweenAttributes: 'missing-whitespace-between-attributes',\n    missingWhitespaceAfterDoctypePublicKeyword: 'missing-whitespace-after-doctype-public-keyword',\n    missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers:\n        'missing-whitespace-between-doctype-public-and-system-identifiers',\n    missingWhitespaceAfterDoctypeSystemKeyword: 'missing-whitespace-after-doctype-system-keyword',\n    missingQuoteBeforeDoctypePublicIdentifier: 'missing-quote-before-doctype-public-identifier',\n    missingQuoteBeforeDoctypeSystemIdentifier: 'missing-quote-before-doctype-system-identifier',\n    missingDoctypePublicIdentifier: 'missing-doctype-public-identifier',\n    missingDoctypeSystemIdentifier: 'missing-doctype-system-identifier',\n    abruptDoctypePublicIdentifier: 'abrupt-doctype-public-identifier',\n    abruptDoctypeSystemIdentifier: 'abrupt-doctype-system-identifier',\n    cdataInHtmlContent: 'cdata-in-html-content',\n    incorrectlyOpenedComment: 'incorrectly-opened-comment',\n    eofInScriptHtmlCommentLikeText: 'eof-in-script-html-comment-like-text',\n    eofInDoctype: 'eof-in-doctype',\n    nestedComment: 'nested-comment',\n    abruptClosingOfEmptyComment: 'abrupt-closing-of-empty-comment',\n    eofInComment: 'eof-in-comment',\n    incorrectlyClosedComment: 'incorrectly-closed-comment',\n    eofInCdata: 'eof-in-cdata',\n    absenceOfDigitsInNumericCharacterReference: 'absence-of-digits-in-numeric-character-reference',\n    nullCharacterReference: 'null-character-reference',\n    surrogateCharacterReference: 'surrogate-character-reference',\n    characterReferenceOutsideUnicodeRange: 'character-reference-outside-unicode-range',\n    controlCharacterReference: 'control-character-reference',\n    noncharacterCharacterReference: 'noncharacter-character-reference',\n    missingWhitespaceBeforeDoctypeName: 'missing-whitespace-before-doctype-name',\n    missingDoctypeName: 'missing-doctype-name',\n    invalidCharacterSequenceAfterDoctypeName: 'invalid-character-sequence-after-doctype-name',\n    duplicateAttribute: 'duplicate-attribute',\n    nonConformingDoctype: 'non-conforming-doctype',\n    missingDoctype: 'missing-doctype',\n    misplacedDoctype: 'misplaced-doctype',\n    endTagWithoutMatchingOpenElement: 'end-tag-without-matching-open-element',\n    closingOfElementWithOpenChildElements: 'closing-of-element-with-open-child-elements',\n    disallowedContentInNoscriptInHead: 'disallowed-content-in-noscript-in-head',\n    openElementsLeftAfterEof: 'open-elements-left-after-eof',\n    abandonedHeadElementChild: 'abandoned-head-element-child',\n    misplacedStartTagForHeadElement: 'misplaced-start-tag-for-head-element',\n    nestedNoscriptInHead: 'nested-noscript-in-head',\n    eofInElementThatCanContainOnlyText: 'eof-in-element-that-can-contain-only-text'\n};\n","'use strict';\n\nconst unicode = require('../common/unicode');\nconst ERR = require('../common/error-codes');\n\n//Aliases\nconst $ = unicode.CODE_POINTS;\n\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nclass Preprocessor {\n    constructor() {\n        this.html = null;\n\n        this.pos = -1;\n        this.lastGapPos = -1;\n        this.lastCharPos = -1;\n\n        this.gapStack = [];\n\n        this.skipNextNewLine = false;\n\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n    }\n\n    _err() {\n        // NOTE: err reporting is noop by default. Enabled by mixin.\n    }\n\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.lastCharPos) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n\n            if (unicode.isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n\n                //NOTE: add gap that should be avoided during retreat\n                this._addGap();\n\n                return unicode.getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n\n        //NOTE: we are at the end of a chunk, therefore we can't infer surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n\n        return cp;\n    }\n\n    dropParsedChunk() {\n        if (this.pos > this.bufferWaterline) {\n            this.lastCharPos -= this.pos;\n            this.html = this.html.substring(this.pos);\n            this.pos = 0;\n            this.lastGapPos = -1;\n            this.gapStack = [];\n        }\n    }\n\n    write(chunk, isLastChunk) {\n        if (this.html) {\n            this.html += chunk;\n        } else {\n            this.html = chunk;\n        }\n\n        this.lastCharPos = this.html.length - 1;\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1, this.html.length);\n\n        this.lastCharPos = this.html.length - 1;\n        this.endOfChunkHit = false;\n    }\n\n    advance() {\n        this.pos++;\n\n        if (this.pos > this.lastCharPos) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n\n        let cp = this.html.charCodeAt(this.pos);\n\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (this.skipNextNewLine && cp === $.LINE_FEED) {\n            this.skipNextNewLine = false;\n            this._addGap();\n            return this.advance();\n        }\n\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n\n        this.skipNextNewLine = false;\n\n        if (unicode.isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange =\n            (cp > 0x1f && cp < 0x7f) || cp === $.LINE_FEED || cp === $.CARRIAGE_RETURN || (cp > 0x9f && cp < 0xfdd0);\n\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n\n        return cp;\n    }\n\n    _checkForProblematicCharacters(cp) {\n        if (unicode.isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        } else if (unicode.isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n\n    retreat() {\n        if (this.pos === this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n\n        this.pos--;\n    }\n}\n\nmodule.exports = Preprocessor;\n","'use strict';\n\n//NOTE: this file contains auto-generated array mapped radix tree that is used for the named entity references consumption\n//(details: https://github.com/inikulin/parse5/tree/master/scripts/generate-named-entity-data/README.md)\nmodule.exports = new Uint16Array([4,52,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,106,303,412,810,1432,1701,1796,1987,2114,2360,2420,2484,3170,3251,4140,4393,4575,4610,5106,5512,5728,6117,6274,6315,6345,6427,6516,7002,7910,8733,9323,9870,10170,10631,10893,11318,11386,11467,12773,13092,14474,14922,15448,15542,16419,17666,18166,18611,19004,19095,19298,19397,4,16,69,77,97,98,99,102,103,108,109,110,111,112,114,115,116,117,140,150,158,169,176,194,199,210,216,222,226,242,256,266,283,294,108,105,103,5,198,1,59,148,1,198,80,5,38,1,59,156,1,38,99,117,116,101,5,193,1,59,167,1,193,114,101,118,101,59,1,258,4,2,105,121,182,191,114,99,5,194,1,59,189,1,194,59,1,1040,114,59,3,55349,56580,114,97,118,101,5,192,1,59,208,1,192,112,104,97,59,1,913,97,99,114,59,1,256,100,59,1,10835,4,2,103,112,232,237,111,110,59,1,260,102,59,3,55349,56632,112,108,121,70,117,110,99,116,105,111,110,59,1,8289,105,110,103,5,197,1,59,264,1,197,4,2,99,115,272,277,114,59,3,55349,56476,105,103,110,59,1,8788,105,108,100,101,5,195,1,59,292,1,195,109,108,5,196,1,59,301,1,196,4,8,97,99,101,102,111,114,115,117,321,350,354,383,388,394,400,405,4,2,99,114,327,336,107,115,108,97,115,104,59,1,8726,4,2,118,119,342,345,59,1,10983,101,100,59,1,8966,121,59,1,1041,4,3,99,114,116,362,369,379,97,117,115,101,59,1,8757,110,111,117,108,108,105,115,59,1,8492,97,59,1,914,114,59,3,55349,56581,112,102,59,3,55349,56633,101,118,101,59,1,728,99,114,59,1,8492,109,112,101,113,59,1,8782,4,14,72,79,97,99,100,101,102,104,105,108,111,114,115,117,442,447,456,504,542,547,569,573,577,616,678,784,790,796,99,121,59,1,1063,80,89,5,169,1,59,454,1,169,4,3,99,112,121,464,470,497,117,116,101,59,1,262,4,2,59,105,476,478,1,8914,116,97,108,68,105,102,102,101,114,101,110,116,105,97,108,68,59,1,8517,108,101,121,115,59,1,8493,4,4,97,101,105,111,514,520,530,535,114,111,110,59,1,268,100,105,108,5,199,1,59,528,1,199,114,99,59,1,264,110,105,110,116,59,1,8752,111,116,59,1,266,4,2,100,110,553,560,105,108,108,97,59,1,184,116,101,114,68,111,116,59,1,183,114,59,1,8493,105,59,1,935,114,99,108,101,4,4,68,77,80,84,591,596,603,609,111,116,59,1,8857,105,110,117,115,59,1,8854,108,117,115,59,1,8853,105,109,101,115,59,1,8855,111,4,2,99,115,623,646,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8754,101,67,117,114,108,121,4,2,68,81,658,671,111,117,98,108,101,81,117,111,116,101,59,1,8221,117,111,116,101,59,1,8217,4,4,108,110,112,117,688,701,736,753,111,110,4,2,59,101,696,698,1,8759,59,1,10868,4,3,103,105,116,709,717,722,114,117,101,110,116,59,1,8801,110,116,59,1,8751,111,117,114,73,110,116,101,103,114,97,108,59,1,8750,4,2,102,114,742,745,59,1,8450,111,100,117,99,116,59,1,8720,110,116,101,114,67,108,111,99,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8755,111,115,115,59,1,10799,99,114,59,3,55349,56478,112,4,2,59,67,803,805,1,8915,97,112,59,1,8781,4,11,68,74,83,90,97,99,101,102,105,111,115,834,850,855,860,865,888,903,916,921,1011,1415,4,2,59,111,840,842,1,8517,116,114,97,104,100,59,1,10513,99,121,59,1,1026,99,121,59,1,1029,99,121,59,1,1039,4,3,103,114,115,873,879,883,103,101,114,59,1,8225,114,59,1,8609,104,118,59,1,10980,4,2,97,121,894,900,114,111,110,59,1,270,59,1,1044,108,4,2,59,116,910,912,1,8711,97,59,1,916,114,59,3,55349,56583,4,2,97,102,927,998,4,2,99,109,933,992,114,105,116,105,99,97,108,4,4,65,68,71,84,950,957,978,985,99,117,116,101,59,1,180,111,4,2,116,117,964,967,59,1,729,98,108,101,65,99,117,116,101,59,1,733,114,97,118,101,59,1,96,105,108,100,101,59,1,732,111,110,100,59,1,8900,102,101,114,101,110,116,105,97,108,68,59,1,8518,4,4,112,116,117,119,1021,1026,1048,1249,102,59,3,55349,56635,4,3,59,68,69,1034,1036,1041,1,168,111,116,59,1,8412,113,117,97,108,59,1,8784,98,108,101,4,6,67,68,76,82,85,86,1065,1082,1101,1189,1211,1236,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8751,111,4,2,116,119,1089,1092,59,1,168,110,65,114,114,111,119,59,1,8659,4,2,101,111,1107,1141,102,116,4,3,65,82,84,1117,1124,1136,114,114,111,119,59,1,8656,105,103,104,116,65,114,114,111,119,59,1,8660,101,101,59,1,10980,110,103,4,2,76,82,1149,1177,101,102,116,4,2,65,82,1158,1165,114,114,111,119,59,1,10232,105,103,104,116,65,114,114,111,119,59,1,10234,105,103,104,116,65,114,114,111,119,59,1,10233,105,103,104,116,4,2,65,84,1199,1206,114,114,111,119,59,1,8658,101,101,59,1,8872,112,4,2,65,68,1218,1225,114,114,111,119,59,1,8657,111,119,110,65,114,114,111,119,59,1,8661,101,114,116,105,99,97,108,66,97,114,59,1,8741,110,4,6,65,66,76,82,84,97,1264,1292,1299,1352,1391,1408,114,114,111,119,4,3,59,66,85,1276,1278,1283,1,8595,97,114,59,1,10515,112,65,114,114,111,119,59,1,8693,114,101,118,101,59,1,785,101,102,116,4,3,82,84,86,1310,1323,1334,105,103,104,116,86,101,99,116,111,114,59,1,10576,101,101,86,101,99,116,111,114,59,1,10590,101,99,116,111,114,4,2,59,66,1345,1347,1,8637,97,114,59,1,10582,105,103,104,116,4,2,84,86,1362,1373,101,101,86,101,99,116,111,114,59,1,10591,101,99,116,111,114,4,2,59,66,1384,1386,1,8641,97,114,59,1,10583,101,101,4,2,59,65,1399,1401,1,8868,114,114,111,119,59,1,8615,114,114,111,119,59,1,8659,4,2,99,116,1421,1426,114,59,3,55349,56479,114,111,107,59,1,272,4,16,78,84,97,99,100,102,103,108,109,111,112,113,115,116,117,120,1466,1470,1478,1489,1515,1520,1525,1536,1544,1593,1609,1617,1650,1664,1668,1677,71,59,1,330,72,5,208,1,59,1476,1,208,99,117,116,101,5,201,1,59,1487,1,201,4,3,97,105,121,1497,1503,1512,114,111,110,59,1,282,114,99,5,202,1,59,1510,1,202,59,1,1069,111,116,59,1,278,114,59,3,55349,56584,114,97,118,101,5,200,1,59,1534,1,200,101,109,101,110,116,59,1,8712,4,2,97,112,1550,1555,99,114,59,1,274,116,121,4,2,83,86,1563,1576,109,97,108,108,83,113,117,97,114,101,59,1,9723,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59,1,9643,4,2,103,112,1599,1604,111,110,59,1,280,102,59,3,55349,56636,115,105,108,111,110,59,1,917,117,4,2,97,105,1624,1640,108,4,2,59,84,1631,1633,1,10869,105,108,100,101,59,1,8770,108,105,98,114,105,117,109,59,1,8652,4,2,99,105,1656,1660,114,59,1,8496,109,59,1,10867,97,59,1,919,109,108,5,203,1,59,1675,1,203,4,2,105,112,1683,1689,115,116,115,59,1,8707,111,110,101,110,116,105,97,108,69,59,1,8519,4,5,99,102,105,111,115,1713,1717,1722,1762,1791,121,59,1,1060,114,59,3,55349,56585,108,108,101,100,4,2,83,86,1732,1745,109,97,108,108,83,113,117,97,114,101,59,1,9724,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59,1,9642,4,3,112,114,117,1770,1775,1781,102,59,3,55349,56637,65,108,108,59,1,8704,114,105,101,114,116,114,102,59,1,8497,99,114,59,1,8497,4,12,74,84,97,98,99,100,102,103,111,114,115,116,1822,1827,1834,1848,1855,1877,1882,1887,1890,1896,1978,1984,99,121,59,1,1027,5,62,1,59,1832,1,62,109,109,97,4,2,59,100,1843,1845,1,915,59,1,988,114,101,118,101,59,1,286,4,3,101,105,121,1863,1869,1874,100,105,108,59,1,290,114,99,59,1,284,59,1,1043,111,116,59,1,288,114,59,3,55349,56586,59,1,8921,112,102,59,3,55349,56638,101,97,116,101,114,4,6,69,70,71,76,83,84,1915,1933,1944,1953,1959,1971,113,117,97,108,4,2,59,76,1925,1927,1,8805,101,115,115,59,1,8923,117,108,108,69,113,117,97,108,59,1,8807,114,101,97,116,101,114,59,1,10914,101,115,115,59,1,8823,108,97,110,116,69,113,117,97,108,59,1,10878,105,108,100,101,59,1,8819,99,114,59,3,55349,56482,59,1,8811,4,8,65,97,99,102,105,111,115,117,2005,2012,2026,2032,2036,2049,2073,2089,82,68,99,121,59,1,1066,4,2,99,116,2018,2023,101,107,59,1,711,59,1,94,105,114,99,59,1,292,114,59,1,8460,108,98,101,114,116,83,112,97,99,101,59,1,8459,4,2,112,114,2055,2059,102,59,1,8461,105,122,111,110,116,97,108,76,105,110,101,59,1,9472,4,2,99,116,2079,2083,114,59,1,8459,114,111,107,59,1,294,109,112,4,2,68,69,2097,2107,111,119,110,72,117,109,112,59,1,8782,113,117,97,108,59,1,8783,4,14,69,74,79,97,99,100,102,103,109,110,111,115,116,117,2144,2149,2155,2160,2171,2189,2194,2198,2209,2245,2307,2329,2334,2341,99,121,59,1,1045,108,105,103,59,1,306,99,121,59,1,1025,99,117,116,101,5,205,1,59,2169,1,205,4,2,105,121,2177,2186,114,99,5,206,1,59,2184,1,206,59,1,1048,111,116,59,1,304,114,59,1,8465,114,97,118,101,5,204,1,59,2207,1,204,4,3,59,97,112,2217,2219,2238,1,8465,4,2,99,103,2225,2229,114,59,1,298,105,110,97,114,121,73,59,1,8520,108,105,101,115,59,1,8658,4,2,116,118,2251,2281,4,2,59,101,2257,2259,1,8748,4,2,103,114,2265,2271,114,97,108,59,1,8747,115,101,99,116,105,111,110,59,1,8898,105,115,105,98,108,101,4,2,67,84,2293,2300,111,109,109,97,59,1,8291,105,109,101,115,59,1,8290,4,3,103,112,116,2315,2320,2325,111,110,59,1,302,102,59,3,55349,56640,97,59,1,921,99,114,59,1,8464,105,108,100,101,59,1,296,4,2,107,109,2347,2352,99,121,59,1,1030,108,5,207,1,59,2358,1,207,4,5,99,102,111,115,117,2372,2386,2391,2397,2414,4,2,105,121,2378,2383,114,99,59,1,308,59,1,1049,114,59,3,55349,56589,112,102,59,3,55349,56641,4,2,99,101,2403,2408,114,59,3,55349,56485,114,99,121,59,1,1032,107,99,121,59,1,1028,4,7,72,74,97,99,102,111,115,2436,2441,2446,2452,2467,2472,2478,99,121,59,1,1061,99,121,59,1,1036,112,112,97,59,1,922,4,2,101,121,2458,2464,100,105,108,59,1,310,59,1,1050,114,59,3,55349,56590,112,102,59,3,55349,56642,99,114,59,3,55349,56486,4,11,74,84,97,99,101,102,108,109,111,115,116,2508,2513,2520,2562,2585,2981,2986,3004,3011,3146,3167,99,121,59,1,1033,5,60,1,59,2518,1,60,4,5,99,109,110,112,114,2532,2538,2544,2548,2558,117,116,101,59,1,313,98,100,97,59,1,923,103,59,1,10218,108,97,99,101,116,114,102,59,1,8466,114,59,1,8606,4,3,97,101,121,2570,2576,2582,114,111,110,59,1,317,100,105,108,59,1,315,59,1,1051,4,2,102,115,2591,2907,116,4,10,65,67,68,70,82,84,85,86,97,114,2614,2663,2672,2728,2735,2760,2820,2870,2888,2895,4,2,110,114,2620,2633,103,108,101,66,114,97,99,107,101,116,59,1,10216,114,111,119,4,3,59,66,82,2644,2646,2651,1,8592,97,114,59,1,8676,105,103,104,116,65,114,114,111,119,59,1,8646,101,105,108,105,110,103,59,1,8968,111,4,2,117,119,2679,2692,98,108,101,66,114,97,99,107,101,116,59,1,10214,110,4,2,84,86,2699,2710,101,101,86,101,99,116,111,114,59,1,10593,101,99,116,111,114,4,2,59,66,2721,2723,1,8643,97,114,59,1,10585,108,111,111,114,59,1,8970,105,103,104,116,4,2,65,86,2745,2752,114,114,111,119,59,1,8596,101,99,116,111,114,59,1,10574,4,2,101,114,2766,2792,101,4,3,59,65,86,2775,2777,2784,1,8867,114,114,111,119,59,1,8612,101,99,116,111,114,59,1,10586,105,97,110,103,108,101,4,3,59,66,69,2806,2808,2813,1,8882,97,114,59,1,10703,113,117,97,108,59,1,8884,112,4,3,68,84,86,2829,2841,2852,111,119,110,86,101,99,116,111,114,59,1,10577,101,101,86,101,99,116,111,114,59,1,10592,101,99,116,111,114,4,2,59,66,2863,2865,1,8639,97,114,59,1,10584,101,99,116,111,114,4,2,59,66,2881,2883,1,8636,97,114,59,1,10578,114,114,111,119,59,1,8656,105,103,104,116,97,114,114,111,119,59,1,8660,115,4,6,69,70,71,76,83,84,2922,2936,2947,2956,2962,2974,113,117,97,108,71,114,101,97,116,101,114,59,1,8922,117,108,108,69,113,117,97,108,59,1,8806,114,101,97,116,101,114,59,1,8822,101,115,115,59,1,10913,108,97,110,116,69,113,117,97,108,59,1,10877,105,108,100,101,59,1,8818,114,59,3,55349,56591,4,2,59,101,2992,2994,1,8920,102,116,97,114,114,111,119,59,1,8666,105,100,111,116,59,1,319,4,3,110,112,119,3019,3110,3115,103,4,4,76,82,108,114,3030,3058,3070,3098,101,102,116,4,2,65,82,3039,3046,114,114,111,119,59,1,10229,105,103,104,116,65,114,114,111,119,59,1,10231,105,103,104,116,65,114,114,111,119,59,1,10230,101,102,116,4,2,97,114,3079,3086,114,114,111,119,59,1,10232,105,103,104,116,97,114,114,111,119,59,1,10234,105,103,104,116,97,114,114,111,119,59,1,10233,102,59,3,55349,56643,101,114,4,2,76,82,3123,3134,101,102,116,65,114,114,111,119,59,1,8601,105,103,104,116,65,114,114,111,119,59,1,8600,4,3,99,104,116,3154,3158,3161,114,59,1,8466,59,1,8624,114,111,107,59,1,321,59,1,8810,4,8,97,99,101,102,105,111,115,117,3188,3192,3196,3222,3227,3237,3243,3248,112,59,1,10501,121,59,1,1052,4,2,100,108,3202,3213,105,117,109,83,112,97,99,101,59,1,8287,108,105,110,116,114,102,59,1,8499,114,59,3,55349,56592,110,117,115,80,108,117,115,59,1,8723,112,102,59,3,55349,56644,99,114,59,1,8499,59,1,924,4,9,74,97,99,101,102,111,115,116,117,3271,3276,3283,3306,3422,3427,4120,4126,4137,99,121,59,1,1034,99,117,116,101,59,1,323,4,3,97,101,121,3291,3297,3303,114,111,110,59,1,327,100,105,108,59,1,325,59,1,1053,4,3,103,115,119,3314,3380,3415,97,116,105,118,101,4,3,77,84,86,3327,3340,3365,101,100,105,117,109,83,112,97,99,101,59,1,8203,104,105,4,2,99,110,3348,3357,107,83,112,97,99,101,59,1,8203,83,112,97,99,101,59,1,8203,101,114,121,84,104,105,110,83,112,97,99,101,59,1,8203,116,101,100,4,2,71,76,3389,3405,114,101,97,116,101,114,71,114,101,97,116,101,114,59,1,8811,101,115,115,76,101,115,115,59,1,8810,76,105,110,101,59,1,10,114,59,3,55349,56593,4,4,66,110,112,116,3437,3444,3460,3464,114,101,97,107,59,1,8288,66,114,101,97,107,105,110,103,83,112,97,99,101,59,1,160,102,59,1,8469,4,13,59,67,68,69,71,72,76,78,80,82,83,84,86,3492,3494,3517,3536,3578,3657,3685,3784,3823,3860,3915,4066,4107,1,10988,4,2,111,117,3500,3510,110,103,114,117,101,110,116,59,1,8802,112,67,97,112,59,1,8813,111,117,98,108,101,86,101,114,116,105,99,97,108,66,97,114,59,1,8742,4,3,108,113,120,3544,3552,3571,101,109,101,110,116,59,1,8713,117,97,108,4,2,59,84,3561,3563,1,8800,105,108,100,101,59,3,8770,824,105,115,116,115,59,1,8708,114,101,97,116,101,114,4,7,59,69,70,71,76,83,84,3600,3602,3609,3621,3631,3637,3650,1,8815,113,117,97,108,59,1,8817,117,108,108,69,113,117,97,108,59,3,8807,824,114,101,97,116,101,114,59,3,8811,824,101,115,115,59,1,8825,108,97,110,116,69,113,117,97,108,59,3,10878,824,105,108,100,101,59,1,8821,117,109,112,4,2,68,69,3666,3677,111,119,110,72,117,109,112,59,3,8782,824,113,117,97,108,59,3,8783,824,101,4,2,102,115,3692,3724,116,84,114,105,97,110,103,108,101,4,3,59,66,69,3709,3711,3717,1,8938,97,114,59,3,10703,824,113,117,97,108,59,1,8940,115,4,6,59,69,71,76,83,84,3739,3741,3748,3757,3764,3777,1,8814,113,117,97,108,59,1,8816,114,101,97,116,101,114,59,1,8824,101,115,115,59,3,8810,824,108,97,110,116,69,113,117,97,108,59,3,10877,824,105,108,100,101,59,1,8820,101,115,116,101,100,4,2,71,76,3795,3812,114,101,97,116,101,114,71,114,101,97,116,101,114,59,3,10914,824,101,115,115,76,101,115,115,59,3,10913,824,114,101,99,101,100,101,115,4,3,59,69,83,3838,3840,3848,1,8832,113,117,97,108,59,3,10927,824,108,97,110,116,69,113,117,97,108,59,1,8928,4,2,101,105,3866,3881,118,101,114,115,101,69,108,101,109,101,110,116,59,1,8716,103,104,116,84,114,105,97,110,103,108,101,4,3,59,66,69,3900,3902,3908,1,8939,97,114,59,3,10704,824,113,117,97,108,59,1,8941,4,2,113,117,3921,3973,117,97,114,101,83,117,4,2,98,112,3933,3952,115,101,116,4,2,59,69,3942,3945,3,8847,824,113,117,97,108,59,1,8930,101,114,115,101,116,4,2,59,69,3963,3966,3,8848,824,113,117,97,108,59,1,8931,4,3,98,99,112,3981,4000,4045,115,101,116,4,2,59,69,3990,3993,3,8834,8402,113,117,97,108,59,1,8840,99,101,101,100,115,4,4,59,69,83,84,4015,4017,4025,4037,1,8833,113,117,97,108,59,3,10928,824,108,97,110,116,69,113,117,97,108,59,1,8929,105,108,100,101,59,3,8831,824,101,114,115,101,116,4,2,59,69,4056,4059,3,8835,8402,113,117,97,108,59,1,8841,105,108,100,101,4,4,59,69,70,84,4080,4082,4089,4100,1,8769,113,117,97,108,59,1,8772,117,108,108,69,113,117,97,108,59,1,8775,105,108,100,101,59,1,8777,101,114,116,105,99,97,108,66,97,114,59,1,8740,99,114,59,3,55349,56489,105,108,100,101,5,209,1,59,4135,1,209,59,1,925,4,14,69,97,99,100,102,103,109,111,112,114,115,116,117,118,4170,4176,4187,4205,4212,4217,4228,4253,4259,4292,4295,4316,4337,4346,108,105,103,59,1,338,99,117,116,101,5,211,1,59,4185,1,211,4,2,105,121,4193,4202,114,99,5,212,1,59,4200,1,212,59,1,1054,98,108,97,99,59,1,336,114,59,3,55349,56594,114,97,118,101,5,210,1,59,4226,1,210,4,3,97,101,105,4236,4241,4246,99,114,59,1,332,103,97,59,1,937,99,114,111,110,59,1,927,112,102,59,3,55349,56646,101,110,67,117,114,108,121,4,2,68,81,4272,4285,111,117,98,108,101,81,117,111,116,101,59,1,8220,117,111,116,101,59,1,8216,59,1,10836,4,2,99,108,4301,4306,114,59,3,55349,56490,97,115,104,5,216,1,59,4314,1,216,105,4,2,108,109,4323,4332,100,101,5,213,1,59,4330,1,213,101,115,59,1,10807,109,108,5,214,1,59,4344,1,214,101,114,4,2,66,80,4354,4380,4,2,97,114,4360,4364,114,59,1,8254,97,99,4,2,101,107,4372,4375,59,1,9182,101,116,59,1,9140,97,114,101,110,116,104,101,115,105,115,59,1,9180,4,9,97,99,102,104,105,108,111,114,115,4413,4422,4426,4431,4435,4438,4448,4471,4561,114,116,105,97,108,68,59,1,8706,121,59,1,1055,114,59,3,55349,56595,105,59,1,934,59,1,928,117,115,77,105,110,117,115,59,1,177,4,2,105,112,4454,4467,110,99,97,114,101,112,108,97,110,101,59,1,8460,102,59,1,8473,4,4,59,101,105,111,4481,4483,4526,4531,1,10939,99,101,100,101,115,4,4,59,69,83,84,4498,4500,4507,4519,1,8826,113,117,97,108,59,1,10927,108,97,110,116,69,113,117,97,108,59,1,8828,105,108,100,101,59,1,8830,109,101,59,1,8243,4,2,100,112,4537,4543,117,99,116,59,1,8719,111,114,116,105,111,110,4,2,59,97,4555,4557,1,8759,108,59,1,8733,4,2,99,105,4567,4572,114,59,3,55349,56491,59,1,936,4,4,85,102,111,115,4585,4594,4599,4604,79,84,5,34,1,59,4592,1,34,114,59,3,55349,56596,112,102,59,1,8474,99,114,59,3,55349,56492,4,12,66,69,97,99,101,102,104,105,111,114,115,117,4636,4642,4650,4681,4704,4763,4767,4771,5047,5069,5081,5094,97,114,114,59,1,10512,71,5,174,1,59,4648,1,174,4,3,99,110,114,4658,4664,4668,117,116,101,59,1,340,103,59,1,10219,114,4,2,59,116,4675,4677,1,8608,108,59,1,10518,4,3,97,101,121,4689,4695,4701,114,111,110,59,1,344,100,105,108,59,1,342,59,1,1056,4,2,59,118,4710,4712,1,8476,101,114,115,101,4,2,69,85,4722,4748,4,2,108,113,4728,4736,101,109,101,110,116,59,1,8715,117,105,108,105,98,114,105,117,109,59,1,8651,112,69,113,117,105,108,105,98,114,105,117,109,59,1,10607,114,59,1,8476,111,59,1,929,103,104,116,4,8,65,67,68,70,84,85,86,97,4792,4840,4849,4905,4912,4972,5022,5040,4,2,110,114,4798,4811,103,108,101,66,114,97,99,107,101,116,59,1,10217,114,111,119,4,3,59,66,76,4822,4824,4829,1,8594,97,114,59,1,8677,101,102,116,65,114,114,111,119,59,1,8644,101,105,108,105,110,103,59,1,8969,111,4,2,117,119,4856,4869,98,108,101,66,114,97,99,107,101,116,59,1,10215,110,4,2,84,86,4876,4887,101,101,86,101,99,116,111,114,59,1,10589,101,99,116,111,114,4,2,59,66,4898,4900,1,8642,97,114,59,1,10581,108,111,111,114,59,1,8971,4,2,101,114,4918,4944,101,4,3,59,65,86,4927,4929,4936,1,8866,114,114,111,119,59,1,8614,101,99,116,111,114,59,1,10587,105,97,110,103,108,101,4,3,59,66,69,4958,4960,4965,1,8883,97,114,59,1,10704,113,117,97,108,59,1,8885,112,4,3,68,84,86,4981,4993,5004,111,119,110,86,101,99,116,111,114,59,1,10575,101,101,86,101,99,116,111,114,59,1,10588,101,99,116,111,114,4,2,59,66,5015,5017,1,8638,97,114,59,1,10580,101,99,116,111,114,4,2,59,66,5033,5035,1,8640,97,114,59,1,10579,114,114,111,119,59,1,8658,4,2,112,117,5053,5057,102,59,1,8477,110,100,73,109,112,108,105,101,115,59,1,10608,105,103,104,116,97,114,114,111,119,59,1,8667,4,2,99,104,5087,5091,114,59,1,8475,59,1,8625,108,101,68,101,108,97,121,101,100,59,1,10740,4,13,72,79,97,99,102,104,105,109,111,113,115,116,117,5134,5150,5157,5164,5198,5203,5259,5265,5277,5283,5374,5380,5385,4,2,67,99,5140,5146,72,99,121,59,1,1065,121,59,1,1064,70,84,99,121,59,1,1068,99,117,116,101,59,1,346,4,5,59,97,101,105,121,5176,5178,5184,5190,5195,1,10940,114,111,110,59,1,352,100,105,108,59,1,350,114,99,59,1,348,59,1,1057,114,59,3,55349,56598,111,114,116,4,4,68,76,82,85,5216,5227,5238,5250,111,119,110,65,114,114,111,119,59,1,8595,101,102,116,65,114,114,111,119,59,1,8592,105,103,104,116,65,114,114,111,119,59,1,8594,112,65,114,114,111,119,59,1,8593,103,109,97,59,1,931,97,108,108,67,105,114,99,108,101,59,1,8728,112,102,59,3,55349,56650,4,2,114,117,5289,5293,116,59,1,8730,97,114,101,4,4,59,73,83,85,5306,5308,5322,5367,1,9633,110,116,101,114,115,101,99,116,105,111,110,59,1,8851,117,4,2,98,112,5329,5347,115,101,116,4,2,59,69,5338,5340,1,8847,113,117,97,108,59,1,8849,101,114,115,101,116,4,2,59,69,5358,5360,1,8848,113,117,97,108,59,1,8850,110,105,111,110,59,1,8852,99,114,59,3,55349,56494,97,114,59,1,8902,4,4,98,99,109,112,5395,5420,5475,5478,4,2,59,115,5401,5403,1,8912,101,116,4,2,59,69,5411,5413,1,8912,113,117,97,108,59,1,8838,4,2,99,104,5426,5468,101,101,100,115,4,4,59,69,83,84,5440,5442,5449,5461,1,8827,113,117,97,108,59,1,10928,108,97,110,116,69,113,117,97,108,59,1,8829,105,108,100,101,59,1,8831,84,104,97,116,59,1,8715,59,1,8721,4,3,59,101,115,5486,5488,5507,1,8913,114,115,101,116,4,2,59,69,5498,5500,1,8835,113,117,97,108,59,1,8839,101,116,59,1,8913,4,11,72,82,83,97,99,102,104,105,111,114,115,5536,5546,5552,5567,5579,5602,5607,5655,5695,5701,5711,79,82,78,5,222,1,59,5544,1,222,65,68,69,59,1,8482,4,2,72,99,5558,5563,99,121,59,1,1035,121,59,1,1062,4,2,98,117,5573,5576,59,1,9,59,1,932,4,3,97,101,121,5587,5593,5599,114,111,110,59,1,356,100,105,108,59,1,354,59,1,1058,114,59,3,55349,56599,4,2,101,105,5613,5631,4,2,114,116,5619,5627,101,102,111,114,101,59,1,8756,97,59,1,920,4,2,99,110,5637,5647,107,83,112,97,99,101,59,3,8287,8202,83,112,97,99,101,59,1,8201,108,100,101,4,4,59,69,70,84,5668,5670,5677,5688,1,8764,113,117,97,108,59,1,8771,117,108,108,69,113,117,97,108,59,1,8773,105,108,100,101,59,1,8776,112,102,59,3,55349,56651,105,112,108,101,68,111,116,59,1,8411,4,2,99,116,5717,5722,114,59,3,55349,56495,114,111,107,59,1,358,4,14,97,98,99,100,102,103,109,110,111,112,114,115,116,117,5758,5789,5805,5823,5830,5835,5846,5852,5921,5937,6089,6095,6101,6108,4,2,99,114,5764,5774,117,116,101,5,218,1,59,5772,1,218,114,4,2,59,111,5781,5783,1,8607,99,105,114,59,1,10569,114,4,2,99,101,5796,5800,121,59,1,1038,118,101,59,1,364,4,2,105,121,5811,5820,114,99,5,219,1,59,5818,1,219,59,1,1059,98,108,97,99,59,1,368,114,59,3,55349,56600,114,97,118,101,5,217,1,59,5844,1,217,97,99,114,59,1,362,4,2,100,105,5858,5905,101,114,4,2,66,80,5866,5892,4,2,97,114,5872,5876,114,59,1,95,97,99,4,2,101,107,5884,5887,59,1,9183,101,116,59,1,9141,97,114,101,110,116,104,101,115,105,115,59,1,9181,111,110,4,2,59,80,5913,5915,1,8899,108,117,115,59,1,8846,4,2,103,112,5927,5932,111,110,59,1,370,102,59,3,55349,56652,4,8,65,68,69,84,97,100,112,115,5955,5985,5996,6009,6026,6033,6044,6075,114,114,111,119,4,3,59,66,68,5967,5969,5974,1,8593,97,114,59,1,10514,111,119,110,65,114,114,111,119,59,1,8645,111,119,110,65,114,114,111,119,59,1,8597,113,117,105,108,105,98,114,105,117,109,59,1,10606,101,101,4,2,59,65,6017,6019,1,8869,114,114,111,119,59,1,8613,114,114,111,119,59,1,8657,111,119,110,97,114,114,111,119,59,1,8661,101,114,4,2,76,82,6052,6063,101,102,116,65,114,114,111,119,59,1,8598,105,103,104,116,65,114,114,111,119,59,1,8599,105,4,2,59,108,6082,6084,1,978,111,110,59,1,933,105,110,103,59,1,366,99,114,59,3,55349,56496,105,108,100,101,59,1,360,109,108,5,220,1,59,6115,1,220,4,9,68,98,99,100,101,102,111,115,118,6137,6143,6148,6152,6166,6250,6255,6261,6267,97,115,104,59,1,8875,97,114,59,1,10987,121,59,1,1042,97,115,104,4,2,59,108,6161,6163,1,8873,59,1,10982,4,2,101,114,6172,6175,59,1,8897,4,3,98,116,121,6183,6188,6238,97,114,59,1,8214,4,2,59,105,6194,6196,1,8214,99,97,108,4,4,66,76,83,84,6209,6214,6220,6231,97,114,59,1,8739,105,110,101,59,1,124,101,112,97,114,97,116,111,114,59,1,10072,105,108,100,101,59,1,8768,84,104,105,110,83,112,97,99,101,59,1,8202,114,59,3,55349,56601,112,102,59,3,55349,56653,99,114,59,3,55349,56497,100,97,115,104,59,1,8874,4,5,99,101,102,111,115,6286,6292,6298,6303,6309,105,114,99,59,1,372,100,103,101,59,1,8896,114,59,3,55349,56602,112,102,59,3,55349,56654,99,114,59,3,55349,56498,4,4,102,105,111,115,6325,6330,6333,6339,114,59,3,55349,56603,59,1,926,112,102,59,3,55349,56655,99,114,59,3,55349,56499,4,9,65,73,85,97,99,102,111,115,117,6365,6370,6375,6380,6391,6405,6410,6416,6422,99,121,59,1,1071,99,121,59,1,1031,99,121,59,1,1070,99,117,116,101,5,221,1,59,6389,1,221,4,2,105,121,6397,6402,114,99,59,1,374,59,1,1067,114,59,3,55349,56604,112,102,59,3,55349,56656,99,114,59,3,55349,56500,109,108,59,1,376,4,8,72,97,99,100,101,102,111,115,6445,6450,6457,6472,6477,6501,6505,6510,99,121,59,1,1046,99,117,116,101,59,1,377,4,2,97,121,6463,6469,114,111,110,59,1,381,59,1,1047,111,116,59,1,379,4,2,114,116,6483,6497,111,87,105,100,116,104,83,112,97,99,101,59,1,8203,97,59,1,918,114,59,1,8488,112,102,59,1,8484,99,114,59,3,55349,56501,4,16,97,98,99,101,102,103,108,109,110,111,112,114,115,116,117,119,6550,6561,6568,6612,6622,6634,6645,6672,6699,6854,6870,6923,6933,6963,6974,6983,99,117,116,101,5,225,1,59,6559,1,225,114,101,118,101,59,1,259,4,6,59,69,100,105,117,121,6582,6584,6588,6591,6600,6609,1,8766,59,3,8766,819,59,1,8767,114,99,5,226,1,59,6598,1,226,116,101,5,180,1,59,6607,1,180,59,1,1072,108,105,103,5,230,1,59,6620,1,230,4,2,59,114,6628,6630,1,8289,59,3,55349,56606,114,97,118,101,5,224,1,59,6643,1,224,4,2,101,112,6651,6667,4,2,102,112,6657,6663,115,121,109,59,1,8501,104,59,1,8501,104,97,59,1,945,4,2,97,112,6678,6692,4,2,99,108,6684,6688,114,59,1,257,103,59,1,10815,5,38,1,59,6697,1,38,4,2,100,103,6705,6737,4,5,59,97,100,115,118,6717,6719,6724,6727,6734,1,8743,110,100,59,1,10837,59,1,10844,108,111,112,101,59,1,10840,59,1,10842,4,7,59,101,108,109,114,115,122,6753,6755,6758,6762,6814,6835,6848,1,8736,59,1,10660,101,59,1,8736,115,100,4,2,59,97,6770,6772,1,8737,4,8,97,98,99,100,101,102,103,104,6790,6793,6796,6799,6802,6805,6808,6811,59,1,10664,59,1,10665,59,1,10666,59,1,10667,59,1,10668,59,1,10669,59,1,10670,59,1,10671,116,4,2,59,118,6821,6823,1,8735,98,4,2,59,100,6830,6832,1,8894,59,1,10653,4,2,112,116,6841,6845,104,59,1,8738,59,1,197,97,114,114,59,1,9084,4,2,103,112,6860,6865,111,110,59,1,261,102,59,3,55349,56658,4,7,59,69,97,101,105,111,112,6886,6888,6891,6897,6900,6904,6908,1,8776,59,1,10864,99,105,114,59,1,10863,59,1,8778,100,59,1,8779,115,59,1,39,114,111,120,4,2,59,101,6917,6919,1,8776,113,59,1,8778,105,110,103,5,229,1,59,6931,1,229,4,3,99,116,121,6941,6946,6949,114,59,3,55349,56502,59,1,42,109,112,4,2,59,101,6957,6959,1,8776,113,59,1,8781,105,108,100,101,5,227,1,59,6972,1,227,109,108,5,228,1,59,6981,1,228,4,2,99,105,6989,6997,111,110,105,110,116,59,1,8755,110,116,59,1,10769,4,16,78,97,98,99,100,101,102,105,107,108,110,111,112,114,115,117,7036,7041,7119,7135,7149,7155,7219,7224,7347,7354,7463,7489,7786,7793,7814,7866,111,116,59,1,10989,4,2,99,114,7047,7094,107,4,4,99,101,112,115,7058,7064,7073,7080,111,110,103,59,1,8780,112,115,105,108,111,110,59,1,1014,114,105,109,101,59,1,8245,105,109,4,2,59,101,7088,7090,1,8765,113,59,1,8909,4,2,118,119,7100,7105,101,101,59,1,8893,101,100,4,2,59,103,7113,7115,1,8965,101,59,1,8965,114,107,4,2,59,116,7127,7129,1,9141,98,114,107,59,1,9142,4,2,111,121,7141,7146,110,103,59,1,8780,59,1,1073,113,117,111,59,1,8222,4,5,99,109,112,114,116,7167,7181,7188,7193,7199,97,117,115,4,2,59,101,7176,7178,1,8757,59,1,8757,112,116,121,118,59,1,10672,115,105,59,1,1014,110,111,117,59,1,8492,4,3,97,104,119,7207,7210,7213,59,1,946,59,1,8502,101,101,110,59,1,8812,114,59,3,55349,56607,103,4,7,99,111,115,116,117,118,119,7241,7262,7288,7305,7328,7335,7340,4,3,97,105,117,7249,7253,7258,112,59,1,8898,114,99,59,1,9711,112,59,1,8899,4,3,100,112,116,7270,7275,7281,111,116,59,1,10752,108,117,115,59,1,10753,105,109,101,115,59,1,10754,4,2,113,116,7294,7300,99,117,112,59,1,10758,97,114,59,1,9733,114,105,97,110,103,108,101,4,2,100,117,7318,7324,111,119,110,59,1,9661,112,59,1,9651,112,108,117,115,59,1,10756,101,101,59,1,8897,101,100,103,101,59,1,8896,97,114,111,119,59,1,10509,4,3,97,107,111,7362,7436,7458,4,2,99,110,7368,7432,107,4,3,108,115,116,7377,7386,7394,111,122,101,110,103,101,59,1,10731,113,117,97,114,101,59,1,9642,114,105,97,110,103,108,101,4,4,59,100,108,114,7411,7413,7419,7425,1,9652,111,119,110,59,1,9662,101,102,116,59,1,9666,105,103,104,116,59,1,9656,107,59,1,9251,4,2,49,51,7442,7454,4,2,50,52,7448,7451,59,1,9618,59,1,9617,52,59,1,9619,99,107,59,1,9608,4,2,101,111,7469,7485,4,2,59,113,7475,7478,3,61,8421,117,105,118,59,3,8801,8421,116,59,1,8976,4,4,112,116,119,120,7499,7504,7517,7523,102,59,3,55349,56659,4,2,59,116,7510,7512,1,8869,111,109,59,1,8869,116,105,101,59,1,8904,4,12,68,72,85,86,98,100,104,109,112,116,117,118,7549,7571,7597,7619,7655,7660,7682,7708,7715,7721,7728,7750,4,4,76,82,108,114,7559,7562,7565,7568,59,1,9559,59,1,9556,59,1,9558,59,1,9555,4,5,59,68,85,100,117,7583,7585,7588,7591,7594,1,9552,59,1,9574,59,1,9577,59,1,9572,59,1,9575,4,4,76,82,108,114,7607,7610,7613,7616,59,1,9565,59,1,9562,59,1,9564,59,1,9561,4,7,59,72,76,82,104,108,114,7635,7637,7640,7643,7646,7649,7652,1,9553,59,1,9580,59,1,9571,59,1,9568,59,1,9579,59,1,9570,59,1,9567,111,120,59,1,10697,4,4,76,82,108,114,7670,7673,7676,7679,59,1,9557,59,1,9554,59,1,9488,59,1,9484,4,5,59,68,85,100,117,7694,7696,7699,7702,7705,1,9472,59,1,9573,59,1,9576,59,1,9516,59,1,9524,105,110,117,115,59,1,8863,108,117,115,59,1,8862,105,109,101,115,59,1,8864,4,4,76,82,108,114,7738,7741,7744,7747,59,1,9563,59,1,9560,59,1,9496,59,1,9492,4,7,59,72,76,82,104,108,114,7766,7768,7771,7774,7777,7780,7783,1,9474,59,1,9578,59,1,9569,59,1,9566,59,1,9532,59,1,9508,59,1,9500,114,105,109,101,59,1,8245,4,2,101,118,7799,7804,118,101,59,1,728,98,97,114,5,166,1,59,7812,1,166,4,4,99,101,105,111,7824,7829,7834,7846,114,59,3,55349,56503,109,105,59,1,8271,109,4,2,59,101,7841,7843,1,8765,59,1,8909,108,4,3,59,98,104,7855,7857,7860,1,92,59,1,10693,115,117,98,59,1,10184,4,2,108,109,7872,7885,108,4,2,59,101,7879,7881,1,8226,116,59,1,8226,112,4,3,59,69,101,7894,7896,7899,1,8782,59,1,10926,4,2,59,113,7905,7907,1,8783,59,1,8783,4,15,97,99,100,101,102,104,105,108,111,114,115,116,117,119,121,7942,8021,8075,8080,8121,8126,8157,8279,8295,8430,8446,8485,8491,8707,8726,4,3,99,112,114,7950,7956,8007,117,116,101,59,1,263,4,6,59,97,98,99,100,115,7970,7972,7977,7984,7998,8003,1,8745,110,100,59,1,10820,114,99,117,112,59,1,10825,4,2,97,117,7990,7994,112,59,1,10827,112,59,1,10823,111,116,59,1,10816,59,3,8745,65024,4,2,101,111,8013,8017,116,59,1,8257,110,59,1,711,4,4,97,101,105,117,8031,8046,8056,8061,4,2,112,114,8037,8041,115,59,1,10829,111,110,59,1,269,100,105,108,5,231,1,59,8054,1,231,114,99,59,1,265,112,115,4,2,59,115,8069,8071,1,10828,109,59,1,10832,111,116,59,1,267,4,3,100,109,110,8088,8097,8104,105,108,5,184,1,59,8095,1,184,112,116,121,118,59,1,10674,116,5,162,2,59,101,8112,8114,1,162,114,100,111,116,59,1,183,114,59,3,55349,56608,4,3,99,101,105,8134,8138,8154,121,59,1,1095,99,107,4,2,59,109,8146,8148,1,10003,97,114,107,59,1,10003,59,1,967,114,4,7,59,69,99,101,102,109,115,8174,8176,8179,8258,8261,8268,8273,1,9675,59,1,10691,4,3,59,101,108,8187,8189,8193,1,710,113,59,1,8791,101,4,2,97,100,8200,8223,114,114,111,119,4,2,108,114,8210,8216,101,102,116,59,1,8634,105,103,104,116,59,1,8635,4,5,82,83,97,99,100,8235,8238,8241,8246,8252,59,1,174,59,1,9416,115,116,59,1,8859,105,114,99,59,1,8858,97,115,104,59,1,8861,59,1,8791,110,105,110,116,59,1,10768,105,100,59,1,10991,99,105,114,59,1,10690,117,98,115,4,2,59,117,8288,8290,1,9827,105,116,59,1,9827,4,4,108,109,110,112,8305,8326,8376,8400,111,110,4,2,59,101,8313,8315,1,58,4,2,59,113,8321,8323,1,8788,59,1,8788,4,2,109,112,8332,8344,97,4,2,59,116,8339,8341,1,44,59,1,64,4,3,59,102,108,8352,8354,8358,1,8705,110,59,1,8728,101,4,2,109,120,8365,8371,101,110,116,59,1,8705,101,115,59,1,8450,4,2,103,105,8382,8395,4,2,59,100,8388,8390,1,8773,111,116,59,1,10861,110,116,59,1,8750,4,3,102,114,121,8408,8412,8417,59,3,55349,56660,111,100,59,1,8720,5,169,2,59,115,8424,8426,1,169,114,59,1,8471,4,2,97,111,8436,8441,114,114,59,1,8629,115,115,59,1,10007,4,2,99,117,8452,8457,114,59,3,55349,56504,4,2,98,112,8463,8474,4,2,59,101,8469,8471,1,10959,59,1,10961,4,2,59,101,8480,8482,1,10960,59,1,10962,100,111,116,59,1,8943,4,7,100,101,108,112,114,118,119,8507,8522,8536,8550,8600,8697,8702,97,114,114,4,2,108,114,8516,8519,59,1,10552,59,1,10549,4,2,112,115,8528,8532,114,59,1,8926,99,59,1,8927,97,114,114,4,2,59,112,8545,8547,1,8630,59,1,10557,4,6,59,98,99,100,111,115,8564,8566,8573,8587,8592,8596,1,8746,114,99,97,112,59,1,10824,4,2,97,117,8579,8583,112,59,1,10822,112,59,1,10826,111,116,59,1,8845,114,59,1,10821,59,3,8746,65024,4,4,97,108,114,118,8610,8623,8663,8672,114,114,4,2,59,109,8618,8620,1,8631,59,1,10556,121,4,3,101,118,119,8632,8651,8656,113,4,2,112,115,8639,8645,114,101,99,59,1,8926,117,99,99,59,1,8927,101,101,59,1,8910,101,100,103,101,59,1,8911,101,110,5,164,1,59,8670,1,164,101,97,114,114,111,119,4,2,108,114,8684,8690,101,102,116,59,1,8630,105,103,104,116,59,1,8631,101,101,59,1,8910,101,100,59,1,8911,4,2,99,105,8713,8721,111,110,105,110,116,59,1,8754,110,116,59,1,8753,108,99,116,121,59,1,9005,4,19,65,72,97,98,99,100,101,102,104,105,106,108,111,114,115,116,117,119,122,8773,8778,8783,8821,8839,8854,8887,8914,8930,8944,9036,9041,9058,9197,9227,9258,9281,9297,9305,114,114,59,1,8659,97,114,59,1,10597,4,4,103,108,114,115,8793,8799,8805,8809,103,101,114,59,1,8224,101,116,104,59,1,8504,114,59,1,8595,104,4,2,59,118,8816,8818,1,8208,59,1,8867,4,2,107,108,8827,8834,97,114,111,119,59,1,10511,97,99,59,1,733,4,2,97,121,8845,8851,114,111,110,59,1,271,59,1,1076,4,3,59,97,111,8862,8864,8880,1,8518,4,2,103,114,8870,8876,103,101,114,59,1,8225,114,59,1,8650,116,115,101,113,59,1,10871,4,3,103,108,109,8895,8902,8907,5,176,1,59,8900,1,176,116,97,59,1,948,112,116,121,118,59,1,10673,4,2,105,114,8920,8926,115,104,116,59,1,10623,59,3,55349,56609,97,114,4,2,108,114,8938,8941,59,1,8643,59,1,8642,4,5,97,101,103,115,118,8956,8986,8989,8996,9001,109,4,3,59,111,115,8965,8967,8983,1,8900,110,100,4,2,59,115,8975,8977,1,8900,117,105,116,59,1,9830,59,1,9830,59,1,168,97,109,109,97,59,1,989,105,110,59,1,8946,4,3,59,105,111,9009,9011,9031,1,247,100,101,5,247,2,59,111,9020,9022,1,247,110,116,105,109,101,115,59,1,8903,110,120,59,1,8903,99,121,59,1,1106,99,4,2,111,114,9048,9053,114,110,59,1,8990,111,112,59,1,8973,4,5,108,112,116,117,119,9070,9076,9081,9130,9144,108,97,114,59,1,36,102,59,3,55349,56661,4,5,59,101,109,112,115,9093,9095,9109,9116,9122,1,729,113,4,2,59,100,9102,9104,1,8784,111,116,59,1,8785,105,110,117,115,59,1,8760,108,117,115,59,1,8724,113,117,97,114,101,59,1,8865,98,108,101,98,97,114,119,101,100,103,101,59,1,8966,110,4,3,97,100,104,9153,9160,9172,114,114,111,119,59,1,8595,111,119,110,97,114,114,111,119,115,59,1,8650,97,114,112,111,111,110,4,2,108,114,9184,9190,101,102,116,59,1,8643,105,103,104,116,59,1,8642,4,2,98,99,9203,9211,107,97,114,111,119,59,1,10512,4,2,111,114,9217,9222,114,110,59,1,8991,111,112,59,1,8972,4,3,99,111,116,9235,9248,9252,4,2,114,121,9241,9245,59,3,55349,56505,59,1,1109,108,59,1,10742,114,111,107,59,1,273,4,2,100,114,9264,9269,111,116,59,1,8945,105,4,2,59,102,9276,9278,1,9663,59,1,9662,4,2,97,104,9287,9292,114,114,59,1,8693,97,114,59,1,10607,97,110,103,108,101,59,1,10662,4,2,99,105,9311,9315,121,59,1,1119,103,114,97,114,114,59,1,10239,4,18,68,97,99,100,101,102,103,108,109,110,111,112,113,114,115,116,117,120,9361,9376,9398,9439,9444,9447,9462,9495,9531,9585,9598,9614,9659,9755,9771,9792,9808,9826,4,2,68,111,9367,9372,111,116,59,1,10871,116,59,1,8785,4,2,99,115,9382,9392,117,116,101,5,233,1,59,9390,1,233,116,101,114,59,1,10862,4,4,97,105,111,121,9408,9414,9430,9436,114,111,110,59,1,283,114,4,2,59,99,9421,9423,1,8790,5,234,1,59,9428,1,234,108,111,110,59,1,8789,59,1,1101,111,116,59,1,279,59,1,8519,4,2,68,114,9453,9458,111,116,59,1,8786,59,3,55349,56610,4,3,59,114,115,9470,9472,9482,1,10906,97,118,101,5,232,1,59,9480,1,232,4,2,59,100,9488,9490,1,10902,111,116,59,1,10904,4,4,59,105,108,115,9505,9507,9515,9518,1,10905,110,116,101,114,115,59,1,9191,59,1,8467,4,2,59,100,9524,9526,1,10901,111,116,59,1,10903,4,3,97,112,115,9539,9544,9564,99,114,59,1,275,116,121,4,3,59,115,118,9554,9556,9561,1,8709,101,116,59,1,8709,59,1,8709,112,4,2,49,59,9571,9583,4,2,51,52,9577,9580,59,1,8196,59,1,8197,1,8195,4,2,103,115,9591,9594,59,1,331,112,59,1,8194,4,2,103,112,9604,9609,111,110,59,1,281,102,59,3,55349,56662,4,3,97,108,115,9622,9635,9640,114,4,2,59,115,9629,9631,1,8917,108,59,1,10723,117,115,59,1,10865,105,4,3,59,108,118,9649,9651,9656,1,949,111,110,59,1,949,59,1,1013,4,4,99,115,117,118,9669,9686,9716,9747,4,2,105,111,9675,9680,114,99,59,1,8790,108,111,110,59,1,8789,4,2,105,108,9692,9696,109,59,1,8770,97,110,116,4,2,103,108,9705,9710,116,114,59,1,10902,101,115,115,59,1,10901,4,3,97,101,105,9724,9729,9734,108,115,59,1,61,115,116,59,1,8799,118,4,2,59,68,9741,9743,1,8801,68,59,1,10872,112,97,114,115,108,59,1,10725,4,2,68,97,9761,9766,111,116,59,1,8787,114,114,59,1,10609,4,3,99,100,105,9779,9783,9788,114,59,1,8495,111,116,59,1,8784,109,59,1,8770,4,2,97,104,9798,9801,59,1,951,5,240,1,59,9806,1,240,4,2,109,114,9814,9822,108,5,235,1,59,9820,1,235,111,59,1,8364,4,3,99,105,112,9834,9838,9843,108,59,1,33,115,116,59,1,8707,4,2,101,111,9849,9859,99,116,97,116,105,111,110,59,1,8496,110,101,110,116,105,97,108,101,59,1,8519,4,12,97,99,101,102,105,106,108,110,111,112,114,115,9896,9910,9914,9921,9954,9960,9967,9989,9994,10027,10036,10164,108,108,105,110,103,100,111,116,115,101,113,59,1,8786,121,59,1,1092,109,97,108,101,59,1,9792,4,3,105,108,114,9929,9935,9950,108,105,103,59,1,64259,4,2,105,108,9941,9945,103,59,1,64256,105,103,59,1,64260,59,3,55349,56611,108,105,103,59,1,64257,108,105,103,59,3,102,106,4,3,97,108,116,9975,9979,9984,116,59,1,9837,105,103,59,1,64258,110,115,59,1,9649,111,102,59,1,402,4,2,112,114,10000,10005,102,59,3,55349,56663,4,2,97,107,10011,10016,108,108,59,1,8704,4,2,59,118,10022,10024,1,8916,59,1,10969,97,114,116,105,110,116,59,1,10765,4,2,97,111,10042,10159,4,2,99,115,10048,10155,4,6,49,50,51,52,53,55,10062,10102,10114,10135,10139,10151,4,6,50,51,52,53,54,56,10076,10083,10086,10093,10096,10099,5,189,1,59,10081,1,189,59,1,8531,5,188,1,59,10091,1,188,59,1,8533,59,1,8537,59,1,8539,4,2,51,53,10108,10111,59,1,8532,59,1,8534,4,3,52,53,56,10122,10129,10132,5,190,1,59,10127,1,190,59,1,8535,59,1,8540,53,59,1,8536,4,2,54,56,10145,10148,59,1,8538,59,1,8541,56,59,1,8542,108,59,1,8260,119,110,59,1,8994,99,114,59,3,55349,56507,4,17,69,97,98,99,100,101,102,103,105,106,108,110,111,114,115,116,118,10206,10217,10247,10254,10268,10273,10358,10363,10374,10380,10385,10406,10458,10464,10470,10497,10610,4,2,59,108,10212,10214,1,8807,59,1,10892,4,3,99,109,112,10225,10231,10244,117,116,101,59,1,501,109,97,4,2,59,100,10239,10241,1,947,59,1,989,59,1,10886,114,101,118,101,59,1,287,4,2,105,121,10260,10265,114,99,59,1,285,59,1,1075,111,116,59,1,289,4,4,59,108,113,115,10283,10285,10288,10308,1,8805,59,1,8923,4,3,59,113,115,10296,10298,10301,1,8805,59,1,8807,108,97,110,116,59,1,10878,4,4,59,99,100,108,10318,10320,10324,10345,1,10878,99,59,1,10921,111,116,4,2,59,111,10332,10334,1,10880,4,2,59,108,10340,10342,1,10882,59,1,10884,4,2,59,101,10351,10354,3,8923,65024,115,59,1,10900,114,59,3,55349,56612,4,2,59,103,10369,10371,1,8811,59,1,8921,109,101,108,59,1,8503,99,121,59,1,1107,4,4,59,69,97,106,10395,10397,10400,10403,1,8823,59,1,10898,59,1,10917,59,1,10916,4,4,69,97,101,115,10416,10419,10434,10453,59,1,8809,112,4,2,59,112,10426,10428,1,10890,114,111,120,59,1,10890,4,2,59,113,10440,10442,1,10888,4,2,59,113,10448,10450,1,10888,59,1,8809,105,109,59,1,8935,112,102,59,3,55349,56664,97,118,101,59,1,96,4,2,99,105,10476,10480,114,59,1,8458,109,4,3,59,101,108,10489,10491,10494,1,8819,59,1,10894,59,1,10896,5,62,6,59,99,100,108,113,114,10512,10514,10527,10532,10538,10545,1,62,4,2,99,105,10520,10523,59,1,10919,114,59,1,10874,111,116,59,1,8919,80,97,114,59,1,10645,117,101,115,116,59,1,10876,4,5,97,100,101,108,115,10557,10574,10579,10599,10605,4,2,112,114,10563,10570,112,114,111,120,59,1,10886,114,59,1,10616,111,116,59,1,8919,113,4,2,108,113,10586,10592,101,115,115,59,1,8923,108,101,115,115,59,1,10892,101,115,115,59,1,8823,105,109,59,1,8819,4,2,101,110,10616,10626,114,116,110,101,113,113,59,3,8809,65024,69,59,3,8809,65024,4,10,65,97,98,99,101,102,107,111,115,121,10653,10658,10713,10718,10724,10760,10765,10786,10850,10875,114,114,59,1,8660,4,4,105,108,109,114,10668,10674,10678,10684,114,115,112,59,1,8202,102,59,1,189,105,108,116,59,1,8459,4,2,100,114,10690,10695,99,121,59,1,1098,4,3,59,99,119,10703,10705,10710,1,8596,105,114,59,1,10568,59,1,8621,97,114,59,1,8463,105,114,99,59,1,293,4,3,97,108,114,10732,10748,10754,114,116,115,4,2,59,117,10741,10743,1,9829,105,116,59,1,9829,108,105,112,59,1,8230,99,111,110,59,1,8889,114,59,3,55349,56613,115,4,2,101,119,10772,10779,97,114,111,119,59,1,10533,97,114,111,119,59,1,10534,4,5,97,109,111,112,114,10798,10803,10809,10839,10844,114,114,59,1,8703,116,104,116,59,1,8763,107,4,2,108,114,10816,10827,101,102,116,97,114,114,111,119,59,1,8617,105,103,104,116,97,114,114,111,119,59,1,8618,102,59,3,55349,56665,98,97,114,59,1,8213,4,3,99,108,116,10858,10863,10869,114,59,3,55349,56509,97,115,104,59,1,8463,114,111,107,59,1,295,4,2,98,112,10881,10887,117,108,108,59,1,8259,104,101,110,59,1,8208,4,15,97,99,101,102,103,105,106,109,110,111,112,113,115,116,117,10925,10936,10958,10977,10990,11001,11039,11045,11101,11192,11220,11226,11237,11285,11299,99,117,116,101,5,237,1,59,10934,1,237,4,3,59,105,121,10944,10946,10955,1,8291,114,99,5,238,1,59,10953,1,238,59,1,1080,4,2,99,120,10964,10968,121,59,1,1077,99,108,5,161,1,59,10975,1,161,4,2,102,114,10983,10986,59,1,8660,59,3,55349,56614,114,97,118,101,5,236,1,59,10999,1,236,4,4,59,105,110,111,11011,11013,11028,11034,1,8520,4,2,105,110,11019,11024,110,116,59,1,10764,116,59,1,8749,102,105,110,59,1,10716,116,97,59,1,8489,108,105,103,59,1,307,4,3,97,111,112,11053,11092,11096,4,3,99,103,116,11061,11065,11088,114,59,1,299,4,3,101,108,112,11073,11076,11082,59,1,8465,105,110,101,59,1,8464,97,114,116,59,1,8465,104,59,1,305,102,59,1,8887,101,100,59,1,437,4,5,59,99,102,111,116,11113,11115,11121,11136,11142,1,8712,97,114,101,59,1,8453,105,110,4,2,59,116,11129,11131,1,8734,105,101,59,1,10717,100,111,116,59,1,305,4,5,59,99,101,108,112,11154,11156,11161,11179,11186,1,8747,97,108,59,1,8890,4,2,103,114,11167,11173,101,114,115,59,1,8484,99,97,108,59,1,8890,97,114,104,107,59,1,10775,114,111,100,59,1,10812,4,4,99,103,112,116,11202,11206,11211,11216,121,59,1,1105,111,110,59,1,303,102,59,3,55349,56666,97,59,1,953,114,111,100,59,1,10812,117,101,115,116,5,191,1,59,11235,1,191,4,2,99,105,11243,11248,114,59,3,55349,56510,110,4,5,59,69,100,115,118,11261,11263,11266,11271,11282,1,8712,59,1,8953,111,116,59,1,8949,4,2,59,118,11277,11279,1,8948,59,1,8947,59,1,8712,4,2,59,105,11291,11293,1,8290,108,100,101,59,1,297,4,2,107,109,11305,11310,99,121,59,1,1110,108,5,239,1,59,11316,1,239,4,6,99,102,109,111,115,117,11332,11346,11351,11357,11363,11380,4,2,105,121,11338,11343,114,99,59,1,309,59,1,1081,114,59,3,55349,56615,97,116,104,59,1,567,112,102,59,3,55349,56667,4,2,99,101,11369,11374,114,59,3,55349,56511,114,99,121,59,1,1112,107,99,121,59,1,1108,4,8,97,99,102,103,104,106,111,115,11404,11418,11433,11438,11445,11450,11455,11461,112,112,97,4,2,59,118,11413,11415,1,954,59,1,1008,4,2,101,121,11424,11430,100,105,108,59,1,311,59,1,1082,114,59,3,55349,56616,114,101,101,110,59,1,312,99,121,59,1,1093,99,121,59,1,1116,112,102,59,3,55349,56668,99,114,59,3,55349,56512,4,23,65,66,69,72,97,98,99,100,101,102,103,104,106,108,109,110,111,112,114,115,116,117,118,11515,11538,11544,11555,11560,11721,11780,11818,11868,12136,12160,12171,12203,12208,12246,12275,12327,12509,12523,12569,12641,12732,12752,4,3,97,114,116,11523,11528,11532,114,114,59,1,8666,114,59,1,8656,97,105,108,59,1,10523,97,114,114,59,1,10510,4,2,59,103,11550,11552,1,8806,59,1,10891,97,114,59,1,10594,4,9,99,101,103,109,110,112,113,114,116,11580,11586,11594,11600,11606,11624,11627,11636,11694,117,116,101,59,1,314,109,112,116,121,118,59,1,10676,114,97,110,59,1,8466,98,100,97,59,1,955,103,4,3,59,100,108,11615,11617,11620,1,10216,59,1,10641,101,59,1,10216,59,1,10885,117,111,5,171,1,59,11634,1,171,114,4,8,59,98,102,104,108,112,115,116,11655,11657,11669,11673,11677,11681,11685,11690,1,8592,4,2,59,102,11663,11665,1,8676,115,59,1,10527,115,59,1,10525,107,59,1,8617,112,59,1,8619,108,59,1,10553,105,109,59,1,10611,108,59,1,8610,4,3,59,97,101,11702,11704,11709,1,10923,105,108,59,1,10521,4,2,59,115,11715,11717,1,10925,59,3,10925,65024,4,3,97,98,114,11729,11734,11739,114,114,59,1,10508,114,107,59,1,10098,4,2,97,107,11745,11758,99,4,2,101,107,11752,11755,59,1,123,59,1,91,4,2,101,115,11764,11767,59,1,10635,108,4,2,100,117,11774,11777,59,1,10639,59,1,10637,4,4,97,101,117,121,11790,11796,11811,11815,114,111,110,59,1,318,4,2,100,105,11802,11807,105,108,59,1,316,108,59,1,8968,98,59,1,123,59,1,1083,4,4,99,113,114,115,11828,11832,11845,11864,97,59,1,10550,117,111,4,2,59,114,11840,11842,1,8220,59,1,8222,4,2,100,117,11851,11857,104,97,114,59,1,10599,115,104,97,114,59,1,10571,104,59,1,8626,4,5,59,102,103,113,115,11880,11882,12008,12011,12031,1,8804,116,4,5,97,104,108,114,116,11895,11913,11935,11947,11996,114,114,111,119,4,2,59,116,11905,11907,1,8592,97,105,108,59,1,8610,97,114,112,111,111,110,4,2,100,117,11925,11931,111,119,110,59,1,8637,112,59,1,8636,101,102,116,97,114,114,111,119,115,59,1,8647,105,103,104,116,4,3,97,104,115,11959,11974,11984,114,114,111,119,4,2,59,115,11969,11971,1,8596,59,1,8646,97,114,112,111,111,110,115,59,1,8651,113,117,105,103,97,114,114,111,119,59,1,8621,104,114,101,101,116,105,109,101,115,59,1,8907,59,1,8922,4,3,59,113,115,12019,12021,12024,1,8804,59,1,8806,108,97,110,116,59,1,10877,4,5,59,99,100,103,115,12043,12045,12049,12070,12083,1,10877,99,59,1,10920,111,116,4,2,59,111,12057,12059,1,10879,4,2,59,114,12065,12067,1,10881,59,1,10883,4,2,59,101,12076,12079,3,8922,65024,115,59,1,10899,4,5,97,100,101,103,115,12095,12103,12108,12126,12131,112,112,114,111,120,59,1,10885,111,116,59,1,8918,113,4,2,103,113,12115,12120,116,114,59,1,8922,103,116,114,59,1,10891,116,114,59,1,8822,105,109,59,1,8818,4,3,105,108,114,12144,12150,12156,115,104,116,59,1,10620,111,111,114,59,1,8970,59,3,55349,56617,4,2,59,69,12166,12168,1,8822,59,1,10897,4,2,97,98,12177,12198,114,4,2,100,117,12184,12187,59,1,8637,4,2,59,108,12193,12195,1,8636,59,1,10602,108,107,59,1,9604,99,121,59,1,1113,4,5,59,97,99,104,116,12220,12222,12227,12235,12241,1,8810,114,114,59,1,8647,111,114,110,101,114,59,1,8990,97,114,100,59,1,10603,114,105,59,1,9722,4,2,105,111,12252,12258,100,111,116,59,1,320,117,115,116,4,2,59,97,12267,12269,1,9136,99,104,101,59,1,9136,4,4,69,97,101,115,12285,12288,12303,12322,59,1,8808,112,4,2,59,112,12295,12297,1,10889,114,111,120,59,1,10889,4,2,59,113,12309,12311,1,10887,4,2,59,113,12317,12319,1,10887,59,1,8808,105,109,59,1,8934,4,8,97,98,110,111,112,116,119,122,12345,12359,12364,12421,12446,12467,12474,12490,4,2,110,114,12351,12355,103,59,1,10220,114,59,1,8701,114,107,59,1,10214,103,4,3,108,109,114,12373,12401,12409,101,102,116,4,2,97,114,12382,12389,114,114,111,119,59,1,10229,105,103,104,116,97,114,114,111,119,59,1,10231,97,112,115,116,111,59,1,10236,105,103,104,116,97,114,114,111,119,59,1,10230,112,97,114,114,111,119,4,2,108,114,12433,12439,101,102,116,59,1,8619,105,103,104,116,59,1,8620,4,3,97,102,108,12454,12458,12462,114,59,1,10629,59,3,55349,56669,117,115,59,1,10797,105,109,101,115,59,1,10804,4,2,97,98,12480,12485,115,116,59,1,8727,97,114,59,1,95,4,3,59,101,102,12498,12500,12506,1,9674,110,103,101,59,1,9674,59,1,10731,97,114,4,2,59,108,12517,12519,1,40,116,59,1,10643,4,5,97,99,104,109,116,12535,12540,12548,12561,12564,114,114,59,1,8646,111,114,110,101,114,59,1,8991,97,114,4,2,59,100,12556,12558,1,8651,59,1,10605,59,1,8206,114,105,59,1,8895,4,6,97,99,104,105,113,116,12583,12589,12594,12597,12614,12635,113,117,111,59,1,8249,114,59,3,55349,56513,59,1,8624,109,4,3,59,101,103,12606,12608,12611,1,8818,59,1,10893,59,1,10895,4,2,98,117,12620,12623,59,1,91,111,4,2,59,114,12630,12632,1,8216,59,1,8218,114,111,107,59,1,322,5,60,8,59,99,100,104,105,108,113,114,12660,12662,12675,12680,12686,12692,12698,12705,1,60,4,2,99,105,12668,12671,59,1,10918,114,59,1,10873,111,116,59,1,8918,114,101,101,59,1,8907,109,101,115,59,1,8905,97,114,114,59,1,10614,117,101,115,116,59,1,10875,4,2,80,105,12711,12716,97,114,59,1,10646,4,3,59,101,102,12724,12726,12729,1,9667,59,1,8884,59,1,9666,114,4,2,100,117,12739,12746,115,104,97,114,59,1,10570,104,97,114,59,1,10598,4,2,101,110,12758,12768,114,116,110,101,113,113,59,3,8808,65024,69,59,3,8808,65024,4,14,68,97,99,100,101,102,104,105,108,110,111,112,115,117,12803,12809,12893,12908,12914,12928,12933,12937,13011,13025,13032,13049,13052,13069,68,111,116,59,1,8762,4,4,99,108,112,114,12819,12827,12849,12887,114,5,175,1,59,12825,1,175,4,2,101,116,12833,12836,59,1,9794,4,2,59,101,12842,12844,1,10016,115,101,59,1,10016,4,2,59,115,12855,12857,1,8614,116,111,4,4,59,100,108,117,12869,12871,12877,12883,1,8614,111,119,110,59,1,8615,101,102,116,59,1,8612,112,59,1,8613,107,101,114,59,1,9646,4,2,111,121,12899,12905,109,109,97,59,1,10793,59,1,1084,97,115,104,59,1,8212,97,115,117,114,101,100,97,110,103,108,101,59,1,8737,114,59,3,55349,56618,111,59,1,8487,4,3,99,100,110,12945,12954,12985,114,111,5,181,1,59,12952,1,181,4,4,59,97,99,100,12964,12966,12971,12976,1,8739,115,116,59,1,42,105,114,59,1,10992,111,116,5,183,1,59,12983,1,183,117,115,4,3,59,98,100,12995,12997,13000,1,8722,59,1,8863,4,2,59,117,13006,13008,1,8760,59,1,10794,4,2,99,100,13017,13021,112,59,1,10971,114,59,1,8230,112,108,117,115,59,1,8723,4,2,100,112,13038,13044,101,108,115,59,1,8871,102,59,3,55349,56670,59,1,8723,4,2,99,116,13058,13063,114,59,3,55349,56514,112,111,115,59,1,8766,4,3,59,108,109,13077,13079,13087,1,956,116,105,109,97,112,59,1,8888,97,112,59,1,8888,4,24,71,76,82,86,97,98,99,100,101,102,103,104,105,106,108,109,111,112,114,115,116,117,118,119,13142,13165,13217,13229,13247,13330,13359,13414,13420,13508,13513,13579,13602,13626,13631,13762,13767,13855,13936,13995,14214,14285,14312,14432,4,2,103,116,13148,13152,59,3,8921,824,4,2,59,118,13158,13161,3,8811,8402,59,3,8811,824,4,3,101,108,116,13173,13200,13204,102,116,4,2,97,114,13181,13188,114,114,111,119,59,1,8653,105,103,104,116,97,114,114,111,119,59,1,8654,59,3,8920,824,4,2,59,118,13210,13213,3,8810,8402,59,3,8810,824,105,103,104,116,97,114,114,111,119,59,1,8655,4,2,68,100,13235,13241,97,115,104,59,1,8879,97,115,104,59,1,8878,4,5,98,99,110,112,116,13259,13264,13270,13275,13308,108,97,59,1,8711,117,116,101,59,1,324,103,59,3,8736,8402,4,5,59,69,105,111,112,13287,13289,13293,13298,13302,1,8777,59,3,10864,824,100,59,3,8779,824,115,59,1,329,114,111,120,59,1,8777,117,114,4,2,59,97,13316,13318,1,9838,108,4,2,59,115,13325,13327,1,9838,59,1,8469,4,2,115,117,13336,13344,112,5,160,1,59,13342,1,160,109,112,4,2,59,101,13352,13355,3,8782,824,59,3,8783,824,4,5,97,101,111,117,121,13371,13385,13391,13407,13411,4,2,112,114,13377,13380,59,1,10819,111,110,59,1,328,100,105,108,59,1,326,110,103,4,2,59,100,13399,13401,1,8775,111,116,59,3,10861,824,112,59,1,10818,59,1,1085,97,115,104,59,1,8211,4,7,59,65,97,100,113,115,120,13436,13438,13443,13466,13472,13478,13494,1,8800,114,114,59,1,8663,114,4,2,104,114,13450,13454,107,59,1,10532,4,2,59,111,13460,13462,1,8599,119,59,1,8599,111,116,59,3,8784,824,117,105,118,59,1,8802,4,2,101,105,13484,13489,97,114,59,1,10536,109,59,3,8770,824,105,115,116,4,2,59,115,13503,13505,1,8708,59,1,8708,114,59,3,55349,56619,4,4,69,101,115,116,13523,13527,13563,13568,59,3,8807,824,4,3,59,113,115,13535,13537,13559,1,8817,4,3,59,113,115,13545,13547,13551,1,8817,59,3,8807,824,108,97,110,116,59,3,10878,824,59,3,10878,824,105,109,59,1,8821,4,2,59,114,13574,13576,1,8815,59,1,8815,4,3,65,97,112,13587,13592,13597,114,114,59,1,8654,114,114,59,1,8622,97,114,59,1,10994,4,3,59,115,118,13610,13612,13623,1,8715,4,2,59,100,13618,13620,1,8956,59,1,8954,59,1,8715,99,121,59,1,1114,4,7,65,69,97,100,101,115,116,13647,13652,13656,13661,13665,13737,13742,114,114,59,1,8653,59,3,8806,824,114,114,59,1,8602,114,59,1,8229,4,4,59,102,113,115,13675,13677,13703,13725,1,8816,116,4,2,97,114,13684,13691,114,114,111,119,59,1,8602,105,103,104,116,97,114,114,111,119,59,1,8622,4,3,59,113,115,13711,13713,13717,1,8816,59,3,8806,824,108,97,110,116,59,3,10877,824,4,2,59,115,13731,13734,3,10877,824,59,1,8814,105,109,59,1,8820,4,2,59,114,13748,13750,1,8814,105,4,2,59,101,13757,13759,1,8938,59,1,8940,105,100,59,1,8740,4,2,112,116,13773,13778,102,59,3,55349,56671,5,172,3,59,105,110,13787,13789,13829,1,172,110,4,4,59,69,100,118,13800,13802,13806,13812,1,8713,59,3,8953,824,111,116,59,3,8949,824,4,3,97,98,99,13820,13823,13826,59,1,8713,59,1,8951,59,1,8950,105,4,2,59,118,13836,13838,1,8716,4,3,97,98,99,13846,13849,13852,59,1,8716,59,1,8958,59,1,8957,4,3,97,111,114,13863,13892,13899,114,4,4,59,97,115,116,13874,13876,13883,13888,1,8742,108,108,101,108,59,1,8742,108,59,3,11005,8421,59,3,8706,824,108,105,110,116,59,1,10772,4,3,59,99,101,13907,13909,13914,1,8832,117,101,59,1,8928,4,2,59,99,13920,13923,3,10927,824,4,2,59,101,13929,13931,1,8832,113,59,3,10927,824,4,4,65,97,105,116,13946,13951,13971,13982,114,114,59,1,8655,114,114,4,3,59,99,119,13961,13963,13967,1,8603,59,3,10547,824,59,3,8605,824,103,104,116,97,114,114,111,119,59,1,8603,114,105,4,2,59,101,13990,13992,1,8939,59,1,8941,4,7,99,104,105,109,112,113,117,14011,14036,14060,14080,14085,14090,14106,4,4,59,99,101,114,14021,14023,14028,14032,1,8833,117,101,59,1,8929,59,3,10928,824,59,3,55349,56515,111,114,116,4,2,109,112,14045,14050,105,100,59,1,8740,97,114,97,108,108,101,108,59,1,8742,109,4,2,59,101,14067,14069,1,8769,4,2,59,113,14075,14077,1,8772,59,1,8772,105,100,59,1,8740,97,114,59,1,8742,115,117,4,2,98,112,14098,14102,101,59,1,8930,101,59,1,8931,4,3,98,99,112,14114,14157,14171,4,4,59,69,101,115,14124,14126,14130,14133,1,8836,59,3,10949,824,59,1,8840,101,116,4,2,59,101,14141,14144,3,8834,8402,113,4,2,59,113,14151,14153,1,8840,59,3,10949,824,99,4,2,59,101,14164,14166,1,8833,113,59,3,10928,824,4,4,59,69,101,115,14181,14183,14187,14190,1,8837,59,3,10950,824,59,1,8841,101,116,4,2,59,101,14198,14201,3,8835,8402,113,4,2,59,113,14208,14210,1,8841,59,3,10950,824,4,4,103,105,108,114,14224,14228,14238,14242,108,59,1,8825,108,100,101,5,241,1,59,14236,1,241,103,59,1,8824,105,97,110,103,108,101,4,2,108,114,14254,14269,101,102,116,4,2,59,101,14263,14265,1,8938,113,59,1,8940,105,103,104,116,4,2,59,101,14279,14281,1,8939,113,59,1,8941,4,2,59,109,14291,14293,1,957,4,3,59,101,115,14301,14303,14308,1,35,114,111,59,1,8470,112,59,1,8199,4,9,68,72,97,100,103,105,108,114,115,14332,14338,14344,14349,14355,14369,14376,14408,14426,97,115,104,59,1,8877,97,114,114,59,1,10500,112,59,3,8781,8402,97,115,104,59,1,8876,4,2,101,116,14361,14365,59,3,8805,8402,59,3,62,8402,110,102,105,110,59,1,10718,4,3,65,101,116,14384,14389,14393,114,114,59,1,10498,59,3,8804,8402,4,2,59,114,14399,14402,3,60,8402,105,101,59,3,8884,8402,4,2,65,116,14414,14419,114,114,59,1,10499,114,105,101,59,3,8885,8402,105,109,59,3,8764,8402,4,3,65,97,110,14440,14445,14468,114,114,59,1,8662,114,4,2,104,114,14452,14456,107,59,1,10531,4,2,59,111,14462,14464,1,8598,119,59,1,8598,101,97,114,59,1,10535,4,18,83,97,99,100,101,102,103,104,105,108,109,111,112,114,115,116,117,118,14512,14515,14535,14560,14597,14603,14618,14643,14657,14662,14701,14741,14747,14769,14851,14877,14907,14916,59,1,9416,4,2,99,115,14521,14531,117,116,101,5,243,1,59,14529,1,243,116,59,1,8859,4,2,105,121,14541,14557,114,4,2,59,99,14548,14550,1,8858,5,244,1,59,14555,1,244,59,1,1086,4,5,97,98,105,111,115,14572,14577,14583,14587,14591,115,104,59,1,8861,108,97,99,59,1,337,118,59,1,10808,116,59,1,8857,111,108,100,59,1,10684,108,105,103,59,1,339,4,2,99,114,14609,14614,105,114,59,1,10687,59,3,55349,56620,4,3,111,114,116,14626,14630,14640,110,59,1,731,97,118,101,5,242,1,59,14638,1,242,59,1,10689,4,2,98,109,14649,14654,97,114,59,1,10677,59,1,937,110,116,59,1,8750,4,4,97,99,105,116,14672,14677,14693,14698,114,114,59,1,8634,4,2,105,114,14683,14687,114,59,1,10686,111,115,115,59,1,10683,110,101,59,1,8254,59,1,10688,4,3,97,101,105,14709,14714,14719,99,114,59,1,333,103,97,59,1,969,4,3,99,100,110,14727,14733,14736,114,111,110,59,1,959,59,1,10678,117,115,59,1,8854,112,102,59,3,55349,56672,4,3,97,101,108,14755,14759,14764,114,59,1,10679,114,112,59,1,10681,117,115,59,1,8853,4,7,59,97,100,105,111,115,118,14785,14787,14792,14831,14837,14841,14848,1,8744,114,114,59,1,8635,4,4,59,101,102,109,14802,14804,14817,14824,1,10845,114,4,2,59,111,14811,14813,1,8500,102,59,1,8500,5,170,1,59,14822,1,170,5,186,1,59,14829,1,186,103,111,102,59,1,8886,114,59,1,10838,108,111,112,101,59,1,10839,59,1,10843,4,3,99,108,111,14859,14863,14873,114,59,1,8500,97,115,104,5,248,1,59,14871,1,248,108,59,1,8856,105,4,2,108,109,14884,14893,100,101,5,245,1,59,14891,1,245,101,115,4,2,59,97,14901,14903,1,8855,115,59,1,10806,109,108,5,246,1,59,14914,1,246,98,97,114,59,1,9021,4,12,97,99,101,102,104,105,108,109,111,114,115,117,14948,14992,14996,15033,15038,15068,15090,15189,15192,15222,15427,15441,114,4,4,59,97,115,116,14959,14961,14976,14989,1,8741,5,182,2,59,108,14968,14970,1,182,108,101,108,59,1,8741,4,2,105,108,14982,14986,109,59,1,10995,59,1,11005,59,1,8706,121,59,1,1087,114,4,5,99,105,109,112,116,15009,15014,15019,15024,15027,110,116,59,1,37,111,100,59,1,46,105,108,59,1,8240,59,1,8869,101,110,107,59,1,8241,114,59,3,55349,56621,4,3,105,109,111,15046,15057,15063,4,2,59,118,15052,15054,1,966,59,1,981,109,97,116,59,1,8499,110,101,59,1,9742,4,3,59,116,118,15076,15078,15087,1,960,99,104,102,111,114,107,59,1,8916,59,1,982,4,2,97,117,15096,15119,110,4,2,99,107,15103,15115,107,4,2,59,104,15110,15112,1,8463,59,1,8462,118,59,1,8463,115,4,9,59,97,98,99,100,101,109,115,116,15140,15142,15148,15151,15156,15168,15171,15179,15184,1,43,99,105,114,59,1,10787,59,1,8862,105,114,59,1,10786,4,2,111,117,15162,15165,59,1,8724,59,1,10789,59,1,10866,110,5,177,1,59,15177,1,177,105,109,59,1,10790,119,111,59,1,10791,59,1,177,4,3,105,112,117,15200,15208,15213,110,116,105,110,116,59,1,10773,102,59,3,55349,56673,110,100,5,163,1,59,15220,1,163,4,10,59,69,97,99,101,105,110,111,115,117,15244,15246,15249,15253,15258,15334,15347,15367,15416,15421,1,8826,59,1,10931,112,59,1,10935,117,101,59,1,8828,4,2,59,99,15264,15266,1,10927,4,6,59,97,99,101,110,115,15280,15282,15290,15299,15303,15329,1,8826,112,112,114,111,120,59,1,10935,117,114,108,121,101,113,59,1,8828,113,59,1,10927,4,3,97,101,115,15311,15319,15324,112,112,114,111,120,59,1,10937,113,113,59,1,10933,105,109,59,1,8936,105,109,59,1,8830,109,101,4,2,59,115,15342,15344,1,8242,59,1,8473,4,3,69,97,115,15355,15358,15362,59,1,10933,112,59,1,10937,105,109,59,1,8936,4,3,100,102,112,15375,15378,15404,59,1,8719,4,3,97,108,115,15386,15392,15398,108,97,114,59,1,9006,105,110,101,59,1,8978,117,114,102,59,1,8979,4,2,59,116,15410,15412,1,8733,111,59,1,8733,105,109,59,1,8830,114,101,108,59,1,8880,4,2,99,105,15433,15438,114,59,3,55349,56517,59,1,968,110,99,115,112,59,1,8200,4,6,102,105,111,112,115,117,15462,15467,15472,15478,15485,15491,114,59,3,55349,56622,110,116,59,1,10764,112,102,59,3,55349,56674,114,105,109,101,59,1,8279,99,114,59,3,55349,56518,4,3,97,101,111,15499,15520,15534,116,4,2,101,105,15506,15515,114,110,105,111,110,115,59,1,8461,110,116,59,1,10774,115,116,4,2,59,101,15528,15530,1,63,113,59,1,8799,116,5,34,1,59,15540,1,34,4,21,65,66,72,97,98,99,100,101,102,104,105,108,109,110,111,112,114,115,116,117,120,15586,15609,15615,15620,15796,15855,15893,15931,15977,16001,16039,16183,16204,16222,16228,16285,16312,16318,16363,16408,16416,4,3,97,114,116,15594,15599,15603,114,114,59,1,8667,114,59,1,8658,97,105,108,59,1,10524,97,114,114,59,1,10511,97,114,59,1,10596,4,7,99,100,101,110,113,114,116,15636,15651,15656,15664,15687,15696,15770,4,2,101,117,15642,15646,59,3,8765,817,116,101,59,1,341,105,99,59,1,8730,109,112,116,121,118,59,1,10675,103,4,4,59,100,101,108,15675,15677,15680,15683,1,10217,59,1,10642,59,1,10661,101,59,1,10217,117,111,5,187,1,59,15694,1,187,114,4,11,59,97,98,99,102,104,108,112,115,116,119,15721,15723,15727,15739,15742,15746,15750,15754,15758,15763,15767,1,8594,112,59,1,10613,4,2,59,102,15733,15735,1,8677,115,59,1,10528,59,1,10547,115,59,1,10526,107,59,1,8618,112,59,1,8620,108,59,1,10565,105,109,59,1,10612,108,59,1,8611,59,1,8605,4,2,97,105,15776,15781,105,108,59,1,10522,111,4,2,59,110,15788,15790,1,8758,97,108,115,59,1,8474,4,3,97,98,114,15804,15809,15814,114,114,59,1,10509,114,107,59,1,10099,4,2,97,107,15820,15833,99,4,2,101,107,15827,15830,59,1,125,59,1,93,4,2,101,115,15839,15842,59,1,10636,108,4,2,100,117,15849,15852,59,1,10638,59,1,10640,4,4,97,101,117,121,15865,15871,15886,15890,114,111,110,59,1,345,4,2,100,105,15877,15882,105,108,59,1,343,108,59,1,8969,98,59,1,125,59,1,1088,4,4,99,108,113,115,15903,15907,15914,15927,97,59,1,10551,100,104,97,114,59,1,10601,117,111,4,2,59,114,15922,15924,1,8221,59,1,8221,104,59,1,8627,4,3,97,99,103,15939,15966,15970,108,4,4,59,105,112,115,15950,15952,15957,15963,1,8476,110,101,59,1,8475,97,114,116,59,1,8476,59,1,8477,116,59,1,9645,5,174,1,59,15975,1,174,4,3,105,108,114,15985,15991,15997,115,104,116,59,1,10621,111,111,114,59,1,8971,59,3,55349,56623,4,2,97,111,16007,16028,114,4,2,100,117,16014,16017,59,1,8641,4,2,59,108,16023,16025,1,8640,59,1,10604,4,2,59,118,16034,16036,1,961,59,1,1009,4,3,103,110,115,16047,16167,16171,104,116,4,6,97,104,108,114,115,116,16063,16081,16103,16130,16143,16155,114,114,111,119,4,2,59,116,16073,16075,1,8594,97,105,108,59,1,8611,97,114,112,111,111,110,4,2,100,117,16093,16099,111,119,110,59,1,8641,112,59,1,8640,101,102,116,4,2,97,104,16112,16120,114,114,111,119,115,59,1,8644,97,114,112,111,111,110,115,59,1,8652,105,103,104,116,97,114,114,111,119,115,59,1,8649,113,117,105,103,97,114,114,111,119,59,1,8605,104,114,101,101,116,105,109,101,115,59,1,8908,103,59,1,730,105,110,103,100,111,116,115,101,113,59,1,8787,4,3,97,104,109,16191,16196,16201,114,114,59,1,8644,97,114,59,1,8652,59,1,8207,111,117,115,116,4,2,59,97,16214,16216,1,9137,99,104,101,59,1,9137,109,105,100,59,1,10990,4,4,97,98,112,116,16238,16252,16257,16278,4,2,110,114,16244,16248,103,59,1,10221,114,59,1,8702,114,107,59,1,10215,4,3,97,102,108,16265,16269,16273,114,59,1,10630,59,3,55349,56675,117,115,59,1,10798,105,109,101,115,59,1,10805,4,2,97,112,16291,16304,114,4,2,59,103,16298,16300,1,41,116,59,1,10644,111,108,105,110,116,59,1,10770,97,114,114,59,1,8649,4,4,97,99,104,113,16328,16334,16339,16342,113,117,111,59,1,8250,114,59,3,55349,56519,59,1,8625,4,2,98,117,16348,16351,59,1,93,111,4,2,59,114,16358,16360,1,8217,59,1,8217,4,3,104,105,114,16371,16377,16383,114,101,101,59,1,8908,109,101,115,59,1,8906,105,4,4,59,101,102,108,16394,16396,16399,16402,1,9657,59,1,8885,59,1,9656,116,114,105,59,1,10702,108,117,104,97,114,59,1,10600,59,1,8478,4,19,97,98,99,100,101,102,104,105,108,109,111,112,113,114,115,116,117,119,122,16459,16466,16472,16572,16590,16672,16687,16746,16844,16850,16924,16963,16988,17115,17121,17154,17206,17614,17656,99,117,116,101,59,1,347,113,117,111,59,1,8218,4,10,59,69,97,99,101,105,110,112,115,121,16494,16496,16499,16513,16518,16531,16536,16556,16564,16569,1,8827,59,1,10932,4,2,112,114,16505,16508,59,1,10936,111,110,59,1,353,117,101,59,1,8829,4,2,59,100,16524,16526,1,10928,105,108,59,1,351,114,99,59,1,349,4,3,69,97,115,16544,16547,16551,59,1,10934,112,59,1,10938,105,109,59,1,8937,111,108,105,110,116,59,1,10771,105,109,59,1,8831,59,1,1089,111,116,4,3,59,98,101,16582,16584,16587,1,8901,59,1,8865,59,1,10854,4,7,65,97,99,109,115,116,120,16606,16611,16634,16642,16646,16652,16668,114,114,59,1,8664,114,4,2,104,114,16618,16622,107,59,1,10533,4,2,59,111,16628,16630,1,8600,119,59,1,8600,116,5,167,1,59,16640,1,167,105,59,1,59,119,97,114,59,1,10537,109,4,2,105,110,16659,16665,110,117,115,59,1,8726,59,1,8726,116,59,1,10038,114,4,2,59,111,16679,16682,3,55349,56624,119,110,59,1,8994,4,4,97,99,111,121,16697,16702,16716,16739,114,112,59,1,9839,4,2,104,121,16708,16713,99,121,59,1,1097,59,1,1096,114,116,4,2,109,112,16724,16729,105,100,59,1,8739,97,114,97,108,108,101,108,59,1,8741,5,173,1,59,16744,1,173,4,2,103,109,16752,16770,109,97,4,3,59,102,118,16762,16764,16767,1,963,59,1,962,59,1,962,4,8,59,100,101,103,108,110,112,114,16788,16790,16795,16806,16817,16828,16832,16838,1,8764,111,116,59,1,10858,4,2,59,113,16801,16803,1,8771,59,1,8771,4,2,59,69,16812,16814,1,10910,59,1,10912,4,2,59,69,16823,16825,1,10909,59,1,10911,101,59,1,8774,108,117,115,59,1,10788,97,114,114,59,1,10610,97,114,114,59,1,8592,4,4,97,101,105,116,16860,16883,16891,16904,4,2,108,115,16866,16878,108,115,101,116,109,105,110,117,115,59,1,8726,104,112,59,1,10803,112,97,114,115,108,59,1,10724,4,2,100,108,16897,16900,59,1,8739,101,59,1,8995,4,2,59,101,16910,16912,1,10922,4,2,59,115,16918,16920,1,10924,59,3,10924,65024,4,3,102,108,112,16932,16938,16958,116,99,121,59,1,1100,4,2,59,98,16944,16946,1,47,4,2,59,97,16952,16954,1,10692,114,59,1,9023,102,59,3,55349,56676,97,4,2,100,114,16970,16985,101,115,4,2,59,117,16978,16980,1,9824,105,116,59,1,9824,59,1,8741,4,3,99,115,117,16996,17028,17089,4,2,97,117,17002,17015,112,4,2,59,115,17009,17011,1,8851,59,3,8851,65024,112,4,2,59,115,17022,17024,1,8852,59,3,8852,65024,117,4,2,98,112,17035,17062,4,3,59,101,115,17043,17045,17048,1,8847,59,1,8849,101,116,4,2,59,101,17056,17058,1,8847,113,59,1,8849,4,3,59,101,115,17070,17072,17075,1,8848,59,1,8850,101,116,4,2,59,101,17083,17085,1,8848,113,59,1,8850,4,3,59,97,102,17097,17099,17112,1,9633,114,4,2,101,102,17106,17109,59,1,9633,59,1,9642,59,1,9642,97,114,114,59,1,8594,4,4,99,101,109,116,17131,17136,17142,17148,114,59,3,55349,56520,116,109,110,59,1,8726,105,108,101,59,1,8995,97,114,102,59,1,8902,4,2,97,114,17160,17172,114,4,2,59,102,17167,17169,1,9734,59,1,9733,4,2,97,110,17178,17202,105,103,104,116,4,2,101,112,17188,17197,112,115,105,108,111,110,59,1,1013,104,105,59,1,981,115,59,1,175,4,5,98,99,109,110,112,17218,17351,17420,17423,17427,4,9,59,69,100,101,109,110,112,114,115,17238,17240,17243,17248,17261,17267,17279,17285,17291,1,8834,59,1,10949,111,116,59,1,10941,4,2,59,100,17254,17256,1,8838,111,116,59,1,10947,117,108,116,59,1,10945,4,2,69,101,17273,17276,59,1,10955,59,1,8842,108,117,115,59,1,10943,97,114,114,59,1,10617,4,3,101,105,117,17299,17335,17339,116,4,3,59,101,110,17308,17310,17322,1,8834,113,4,2,59,113,17317,17319,1,8838,59,1,10949,101,113,4,2,59,113,17330,17332,1,8842,59,1,10955,109,59,1,10951,4,2,98,112,17345,17348,59,1,10965,59,1,10963,99,4,6,59,97,99,101,110,115,17366,17368,17376,17385,17389,17415,1,8827,112,112,114,111,120,59,1,10936,117,114,108,121,101,113,59,1,8829,113,59,1,10928,4,3,97,101,115,17397,17405,17410,112,112,114,111,120,59,1,10938,113,113,59,1,10934,105,109,59,1,8937,105,109,59,1,8831,59,1,8721,103,59,1,9834,4,13,49,50,51,59,69,100,101,104,108,109,110,112,115,17455,17462,17469,17476,17478,17481,17496,17509,17524,17530,17536,17548,17554,5,185,1,59,17460,1,185,5,178,1,59,17467,1,178,5,179,1,59,17474,1,179,1,8835,59,1,10950,4,2,111,115,17487,17491,116,59,1,10942,117,98,59,1,10968,4,2,59,100,17502,17504,1,8839,111,116,59,1,10948,115,4,2,111,117,17516,17520,108,59,1,10185,98,59,1,10967,97,114,114,59,1,10619,117,108,116,59,1,10946,4,2,69,101,17542,17545,59,1,10956,59,1,8843,108,117,115,59,1,10944,4,3,101,105,117,17562,17598,17602,116,4,3,59,101,110,17571,17573,17585,1,8835,113,4,2,59,113,17580,17582,1,8839,59,1,10950,101,113,4,2,59,113,17593,17595,1,8843,59,1,10956,109,59,1,10952,4,2,98,112,17608,17611,59,1,10964,59,1,10966,4,3,65,97,110,17622,17627,17650,114,114,59,1,8665,114,4,2,104,114,17634,17638,107,59,1,10534,4,2,59,111,17644,17646,1,8601,119,59,1,8601,119,97,114,59,1,10538,108,105,103,5,223,1,59,17664,1,223,4,13,97,98,99,100,101,102,104,105,111,112,114,115,119,17694,17709,17714,17737,17742,17749,17754,17860,17905,17957,17964,18090,18122,4,2,114,117,17700,17706,103,101,116,59,1,8982,59,1,964,114,107,59,1,9140,4,3,97,101,121,17722,17728,17734,114,111,110,59,1,357,100,105,108,59,1,355,59,1,1090,111,116,59,1,8411,108,114,101,99,59,1,8981,114,59,3,55349,56625,4,4,101,105,107,111,17764,17805,17836,17851,4,2,114,116,17770,17786,101,4,2,52,102,17777,17780,59,1,8756,111,114,101,59,1,8756,97,4,3,59,115,118,17795,17797,17802,1,952,121,109,59,1,977,59,1,977,4,2,99,110,17811,17831,107,4,2,97,115,17818,17826,112,112,114,111,120,59,1,8776,105,109,59,1,8764,115,112,59,1,8201,4,2,97,115,17842,17846,112,59,1,8776,105,109,59,1,8764,114,110,5,254,1,59,17858,1,254,4,3,108,109,110,17868,17873,17901,100,101,59,1,732,101,115,5,215,3,59,98,100,17884,17886,17898,1,215,4,2,59,97,17892,17894,1,8864,114,59,1,10801,59,1,10800,116,59,1,8749,4,3,101,112,115,17913,17917,17953,97,59,1,10536,4,4,59,98,99,102,17927,17929,17934,17939,1,8868,111,116,59,1,9014,105,114,59,1,10993,4,2,59,111,17945,17948,3,55349,56677,114,107,59,1,10970,97,59,1,10537,114,105,109,101,59,1,8244,4,3,97,105,112,17972,17977,18082,100,101,59,1,8482,4,7,97,100,101,109,112,115,116,17993,18051,18056,18059,18066,18072,18076,110,103,108,101,4,5,59,100,108,113,114,18009,18011,18017,18032,18035,1,9653,111,119,110,59,1,9663,101,102,116,4,2,59,101,18026,18028,1,9667,113,59,1,8884,59,1,8796,105,103,104,116,4,2,59,101,18045,18047,1,9657,113,59,1,8885,111,116,59,1,9708,59,1,8796,105,110,117,115,59,1,10810,108,117,115,59,1,10809,98,59,1,10701,105,109,101,59,1,10811,101,122,105,117,109,59,1,9186,4,3,99,104,116,18098,18111,18116,4,2,114,121,18104,18108,59,3,55349,56521,59,1,1094,99,121,59,1,1115,114,111,107,59,1,359,4,2,105,111,18128,18133,120,116,59,1,8812,104,101,97,100,4,2,108,114,18143,18154,101,102,116,97,114,114,111,119,59,1,8606,105,103,104,116,97,114,114,111,119,59,1,8608,4,18,65,72,97,98,99,100,102,103,104,108,109,111,112,114,115,116,117,119,18204,18209,18214,18234,18250,18268,18292,18308,18319,18343,18379,18397,18413,18504,18547,18553,18584,18603,114,114,59,1,8657,97,114,59,1,10595,4,2,99,114,18220,18230,117,116,101,5,250,1,59,18228,1,250,114,59,1,8593,114,4,2,99,101,18241,18245,121,59,1,1118,118,101,59,1,365,4,2,105,121,18256,18265,114,99,5,251,1,59,18263,1,251,59,1,1091,4,3,97,98,104,18276,18281,18287,114,114,59,1,8645,108,97,99,59,1,369,97,114,59,1,10606,4,2,105,114,18298,18304,115,104,116,59,1,10622,59,3,55349,56626,114,97,118,101,5,249,1,59,18317,1,249,4,2,97,98,18325,18338,114,4,2,108,114,18332,18335,59,1,8639,59,1,8638,108,107,59,1,9600,4,2,99,116,18349,18374,4,2,111,114,18355,18369,114,110,4,2,59,101,18363,18365,1,8988,114,59,1,8988,111,112,59,1,8975,114,105,59,1,9720,4,2,97,108,18385,18390,99,114,59,1,363,5,168,1,59,18395,1,168,4,2,103,112,18403,18408,111,110,59,1,371,102,59,3,55349,56678,4,6,97,100,104,108,115,117,18427,18434,18445,18470,18475,18494,114,114,111,119,59,1,8593,111,119,110,97,114,114,111,119,59,1,8597,97,114,112,111,111,110,4,2,108,114,18457,18463,101,102,116,59,1,8639,105,103,104,116,59,1,8638,117,115,59,1,8846,105,4,3,59,104,108,18484,18486,18489,1,965,59,1,978,111,110,59,1,965,112,97,114,114,111,119,115,59,1,8648,4,3,99,105,116,18512,18537,18542,4,2,111,114,18518,18532,114,110,4,2,59,101,18526,18528,1,8989,114,59,1,8989,111,112,59,1,8974,110,103,59,1,367,114,105,59,1,9721,99,114,59,3,55349,56522,4,3,100,105,114,18561,18566,18572,111,116,59,1,8944,108,100,101,59,1,361,105,4,2,59,102,18579,18581,1,9653,59,1,9652,4,2,97,109,18590,18595,114,114,59,1,8648,108,5,252,1,59,18601,1,252,97,110,103,108,101,59,1,10663,4,15,65,66,68,97,99,100,101,102,108,110,111,112,114,115,122,18643,18648,18661,18667,18847,18851,18857,18904,18909,18915,18931,18937,18943,18949,18996,114,114,59,1,8661,97,114,4,2,59,118,18656,18658,1,10984,59,1,10985,97,115,104,59,1,8872,4,2,110,114,18673,18679,103,114,116,59,1,10652,4,7,101,107,110,112,114,115,116,18695,18704,18711,18720,18742,18754,18810,112,115,105,108,111,110,59,1,1013,97,112,112,97,59,1,1008,111,116,104,105,110,103,59,1,8709,4,3,104,105,114,18728,18732,18735,105,59,1,981,59,1,982,111,112,116,111,59,1,8733,4,2,59,104,18748,18750,1,8597,111,59,1,1009,4,2,105,117,18760,18766,103,109,97,59,1,962,4,2,98,112,18772,18791,115,101,116,110,101,113,4,2,59,113,18784,18787,3,8842,65024,59,3,10955,65024,115,101,116,110,101,113,4,2,59,113,18803,18806,3,8843,65024,59,3,10956,65024,4,2,104,114,18816,18822,101,116,97,59,1,977,105,97,110,103,108,101,4,2,108,114,18834,18840,101,102,116,59,1,8882,105,103,104,116,59,1,8883,121,59,1,1074,97,115,104,59,1,8866,4,3,101,108,114,18865,18884,18890,4,3,59,98,101,18873,18875,18880,1,8744,97,114,59,1,8891,113,59,1,8794,108,105,112,59,1,8942,4,2,98,116,18896,18901,97,114,59,1,124,59,1,124,114,59,3,55349,56627,116,114,105,59,1,8882,115,117,4,2,98,112,18923,18927,59,3,8834,8402,59,3,8835,8402,112,102,59,3,55349,56679,114,111,112,59,1,8733,116,114,105,59,1,8883,4,2,99,117,18955,18960,114,59,3,55349,56523,4,2,98,112,18966,18981,110,4,2,69,101,18973,18977,59,3,10955,65024,59,3,8842,65024,110,4,2,69,101,18988,18992,59,3,10956,65024,59,3,8843,65024,105,103,122,97,103,59,1,10650,4,7,99,101,102,111,112,114,115,19020,19026,19061,19066,19072,19075,19089,105,114,99,59,1,373,4,2,100,105,19032,19055,4,2,98,103,19038,19043,97,114,59,1,10847,101,4,2,59,113,19050,19052,1,8743,59,1,8793,101,114,112,59,1,8472,114,59,3,55349,56628,112,102,59,3,55349,56680,59,1,8472,4,2,59,101,19081,19083,1,8768,97,116,104,59,1,8768,99,114,59,3,55349,56524,4,14,99,100,102,104,105,108,109,110,111,114,115,117,118,119,19125,19146,19152,19157,19173,19176,19192,19197,19202,19236,19252,19269,19286,19291,4,3,97,105,117,19133,19137,19142,112,59,1,8898,114,99,59,1,9711,112,59,1,8899,116,114,105,59,1,9661,114,59,3,55349,56629,4,2,65,97,19163,19168,114,114,59,1,10234,114,114,59,1,10231,59,1,958,4,2,65,97,19182,19187,114,114,59,1,10232,114,114,59,1,10229,97,112,59,1,10236,105,115,59,1,8955,4,3,100,112,116,19210,19215,19230,111,116,59,1,10752,4,2,102,108,19221,19225,59,3,55349,56681,117,115,59,1,10753,105,109,101,59,1,10754,4,2,65,97,19242,19247,114,114,59,1,10233,114,114,59,1,10230,4,2,99,113,19258,19263,114,59,3,55349,56525,99,117,112,59,1,10758,4,2,112,116,19275,19281,108,117,115,59,1,10756,114,105,59,1,9651,101,101,59,1,8897,101,100,103,101,59,1,8896,4,8,97,99,101,102,105,111,115,117,19316,19335,19349,19357,19362,19367,19373,19379,99,4,2,117,121,19323,19332,116,101,5,253,1,59,19330,1,253,59,1,1103,4,2,105,121,19341,19346,114,99,59,1,375,59,1,1099,110,5,165,1,59,19355,1,165,114,59,3,55349,56630,99,121,59,1,1111,112,102,59,3,55349,56682,99,114,59,3,55349,56526,4,2,99,109,19385,19389,121,59,1,1102,108,5,255,1,59,19395,1,255,4,10,97,99,100,101,102,104,105,111,115,119,19419,19426,19441,19446,19462,19467,19472,19480,19486,19492,99,117,116,101,59,1,378,4,2,97,121,19432,19438,114,111,110,59,1,382,59,1,1079,111,116,59,1,380,4,2,101,116,19452,19458,116,114,102,59,1,8488,97,59,1,950,114,59,3,55349,56631,99,121,59,1,1078,103,114,97,114,114,59,1,8669,112,102,59,3,55349,56683,99,114,59,3,55349,56527,4,2,106,110,19498,19501,59,1,8205,106,59,1,8204]);","'use strict';\n\nconst Preprocessor = require('./preprocessor');\nconst unicode = require('../common/unicode');\nconst neTree = require('./named-entity-data');\nconst ERR = require('../common/error-codes');\n\n//Aliases\nconst $ = unicode.CODE_POINTS;\nconst $$ = unicode.CODE_POINT_SEQUENCES;\n\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = {\n    0x80: 0x20ac,\n    0x82: 0x201a,\n    0x83: 0x0192,\n    0x84: 0x201e,\n    0x85: 0x2026,\n    0x86: 0x2020,\n    0x87: 0x2021,\n    0x88: 0x02c6,\n    0x89: 0x2030,\n    0x8a: 0x0160,\n    0x8b: 0x2039,\n    0x8c: 0x0152,\n    0x8e: 0x017d,\n    0x91: 0x2018,\n    0x92: 0x2019,\n    0x93: 0x201c,\n    0x94: 0x201d,\n    0x95: 0x2022,\n    0x96: 0x2013,\n    0x97: 0x2014,\n    0x98: 0x02dc,\n    0x99: 0x2122,\n    0x9a: 0x0161,\n    0x9b: 0x203a,\n    0x9c: 0x0153,\n    0x9e: 0x017e,\n    0x9f: 0x0178\n};\n\n// Named entity tree flags\nconst HAS_DATA_FLAG = 1 << 0;\nconst DATA_DUPLET_FLAG = 1 << 1;\nconst HAS_BRANCHES_FLAG = 1 << 2;\nconst MAX_BRANCH_MARKER_VALUE = HAS_DATA_FLAG | DATA_DUPLET_FLAG | HAS_BRANCHES_FLAG;\n\n//States\nconst DATA_STATE = 'DATA_STATE';\nconst RCDATA_STATE = 'RCDATA_STATE';\nconst RAWTEXT_STATE = 'RAWTEXT_STATE';\nconst SCRIPT_DATA_STATE = 'SCRIPT_DATA_STATE';\nconst PLAINTEXT_STATE = 'PLAINTEXT_STATE';\nconst TAG_OPEN_STATE = 'TAG_OPEN_STATE';\nconst END_TAG_OPEN_STATE = 'END_TAG_OPEN_STATE';\nconst TAG_NAME_STATE = 'TAG_NAME_STATE';\nconst RCDATA_LESS_THAN_SIGN_STATE = 'RCDATA_LESS_THAN_SIGN_STATE';\nconst RCDATA_END_TAG_OPEN_STATE = 'RCDATA_END_TAG_OPEN_STATE';\nconst RCDATA_END_TAG_NAME_STATE = 'RCDATA_END_TAG_NAME_STATE';\nconst RAWTEXT_LESS_THAN_SIGN_STATE = 'RAWTEXT_LESS_THAN_SIGN_STATE';\nconst RAWTEXT_END_TAG_OPEN_STATE = 'RAWTEXT_END_TAG_OPEN_STATE';\nconst RAWTEXT_END_TAG_NAME_STATE = 'RAWTEXT_END_TAG_NAME_STATE';\nconst SCRIPT_DATA_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_LESS_THAN_SIGN_STATE';\nconst SCRIPT_DATA_END_TAG_OPEN_STATE = 'SCRIPT_DATA_END_TAG_OPEN_STATE';\nconst SCRIPT_DATA_END_TAG_NAME_STATE = 'SCRIPT_DATA_END_TAG_NAME_STATE';\nconst SCRIPT_DATA_ESCAPE_START_STATE = 'SCRIPT_DATA_ESCAPE_START_STATE';\nconst SCRIPT_DATA_ESCAPE_START_DASH_STATE = 'SCRIPT_DATA_ESCAPE_START_DASH_STATE';\nconst SCRIPT_DATA_ESCAPED_STATE = 'SCRIPT_DATA_ESCAPED_STATE';\nconst SCRIPT_DATA_ESCAPED_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_STATE';\nconst SCRIPT_DATA_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_DASH_STATE';\nconst SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE';\nconst SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE';\nconst SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE';\nconst SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE';\nconst SCRIPT_DATA_DOUBLE_ESCAPED_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_STATE';\nconst SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE';\nconst SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE';\nconst SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE';\nconst SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE';\nconst BEFORE_ATTRIBUTE_NAME_STATE = 'BEFORE_ATTRIBUTE_NAME_STATE';\nconst ATTRIBUTE_NAME_STATE = 'ATTRIBUTE_NAME_STATE';\nconst AFTER_ATTRIBUTE_NAME_STATE = 'AFTER_ATTRIBUTE_NAME_STATE';\nconst BEFORE_ATTRIBUTE_VALUE_STATE = 'BEFORE_ATTRIBUTE_VALUE_STATE';\nconst ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE';\nconst ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE';\nconst ATTRIBUTE_VALUE_UNQUOTED_STATE = 'ATTRIBUTE_VALUE_UNQUOTED_STATE';\nconst AFTER_ATTRIBUTE_VALUE_QUOTED_STATE = 'AFTER_ATTRIBUTE_VALUE_QUOTED_STATE';\nconst SELF_CLOSING_START_TAG_STATE = 'SELF_CLOSING_START_TAG_STATE';\nconst BOGUS_COMMENT_STATE = 'BOGUS_COMMENT_STATE';\nconst MARKUP_DECLARATION_OPEN_STATE = 'MARKUP_DECLARATION_OPEN_STATE';\nconst COMMENT_START_STATE = 'COMMENT_START_STATE';\nconst COMMENT_START_DASH_STATE = 'COMMENT_START_DASH_STATE';\nconst COMMENT_STATE = 'COMMENT_STATE';\nconst COMMENT_LESS_THAN_SIGN_STATE = 'COMMENT_LESS_THAN_SIGN_STATE';\nconst COMMENT_LESS_THAN_SIGN_BANG_STATE = 'COMMENT_LESS_THAN_SIGN_BANG_STATE';\nconst COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE = 'COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE';\nconst COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE = 'COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE';\nconst COMMENT_END_DASH_STATE = 'COMMENT_END_DASH_STATE';\nconst COMMENT_END_STATE = 'COMMENT_END_STATE';\nconst COMMENT_END_BANG_STATE = 'COMMENT_END_BANG_STATE';\nconst DOCTYPE_STATE = 'DOCTYPE_STATE';\nconst BEFORE_DOCTYPE_NAME_STATE = 'BEFORE_DOCTYPE_NAME_STATE';\nconst DOCTYPE_NAME_STATE = 'DOCTYPE_NAME_STATE';\nconst AFTER_DOCTYPE_NAME_STATE = 'AFTER_DOCTYPE_NAME_STATE';\nconst AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE = 'AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE';\nconst BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE';\nconst DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE';\nconst DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE';\nconst AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE = 'AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE';\nconst BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE = 'BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE';\nconst AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE = 'AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE';\nconst BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE';\nconst DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE';\nconst DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE';\nconst AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE';\nconst BOGUS_DOCTYPE_STATE = 'BOGUS_DOCTYPE_STATE';\nconst CDATA_SECTION_STATE = 'CDATA_SECTION_STATE';\nconst CDATA_SECTION_BRACKET_STATE = 'CDATA_SECTION_BRACKET_STATE';\nconst CDATA_SECTION_END_STATE = 'CDATA_SECTION_END_STATE';\nconst CHARACTER_REFERENCE_STATE = 'CHARACTER_REFERENCE_STATE';\nconst NAMED_CHARACTER_REFERENCE_STATE = 'NAMED_CHARACTER_REFERENCE_STATE';\nconst AMBIGUOUS_AMPERSAND_STATE = 'AMBIGUOS_AMPERSAND_STATE';\nconst NUMERIC_CHARACTER_REFERENCE_STATE = 'NUMERIC_CHARACTER_REFERENCE_STATE';\nconst HEXADEMICAL_CHARACTER_REFERENCE_START_STATE = 'HEXADEMICAL_CHARACTER_REFERENCE_START_STATE';\nconst DECIMAL_CHARACTER_REFERENCE_START_STATE = 'DECIMAL_CHARACTER_REFERENCE_START_STATE';\nconst HEXADEMICAL_CHARACTER_REFERENCE_STATE = 'HEXADEMICAL_CHARACTER_REFERENCE_STATE';\nconst DECIMAL_CHARACTER_REFERENCE_STATE = 'DECIMAL_CHARACTER_REFERENCE_STATE';\nconst NUMERIC_CHARACTER_REFERENCE_END_STATE = 'NUMERIC_CHARACTER_REFERENCE_END_STATE';\n\n//Utils\n\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\n\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\n\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\n\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\n\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\n\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\n\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\n}\n\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\n}\n\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\n\nfunction toAsciiLowerCodePoint(cp) {\n    return cp + 0x0020;\n}\n\n//NOTE: String.fromCharCode() function can handle only characters from BMP subset.\n//So, we need to workaround this manually.\n//(see: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/fromCharCode#Getting_it_to_work_with_higher_values)\nfunction toChar(cp) {\n    if (cp <= 0xffff) {\n        return String.fromCharCode(cp);\n    }\n\n    cp -= 0x10000;\n    return String.fromCharCode(((cp >>> 10) & 0x3ff) | 0xd800) + String.fromCharCode(0xdc00 | (cp & 0x3ff));\n}\n\nfunction toAsciiLowerChar(cp) {\n    return String.fromCharCode(toAsciiLowerCodePoint(cp));\n}\n\nfunction findNamedEntityTreeBranch(nodeIx, cp) {\n    const branchCount = neTree[++nodeIx];\n    let lo = ++nodeIx;\n    let hi = lo + branchCount - 1;\n\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midCp = neTree[mid];\n\n        if (midCp < cp) {\n            lo = mid + 1;\n        } else if (midCp > cp) {\n            hi = mid - 1;\n        } else {\n            return neTree[mid + branchCount];\n        }\n    }\n\n    return -1;\n}\n\n//Tokenizer\nclass Tokenizer {\n    constructor() {\n        this.preprocessor = new Preprocessor();\n\n        this.tokenQueue = [];\n\n        this.allowCDATA = false;\n\n        this.state = DATA_STATE;\n        this.returnState = '';\n\n        this.charRefCode = -1;\n        this.tempBuff = [];\n        this.lastStartTagName = '';\n\n        this.consumedAfterSnapshot = -1;\n        this.active = false;\n\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = null;\n    }\n\n    //Errors\n    _err() {\n        // NOTE: err reporting is noop by default. Enabled by mixin.\n    }\n\n    _errOnNextCodePoint(err) {\n        this._consume();\n        this._err(err);\n        this._unconsume();\n    }\n\n    //API\n    getNextToken() {\n        while (!this.tokenQueue.length && this.active) {\n            this.consumedAfterSnapshot = 0;\n\n            const cp = this._consume();\n\n            if (!this._ensureHibernation()) {\n                this[this.state](cp);\n            }\n        }\n\n        return this.tokenQueue.shift();\n    }\n\n    write(chunk, isLastChunk) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n    }\n\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n    }\n\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            for (; this.consumedAfterSnapshot > 0; this.consumedAfterSnapshot--) {\n                this.preprocessor.retreat();\n            }\n\n            this.active = false;\n            this.tokenQueue.push({ type: Tokenizer.HIBERNATION_TOKEN });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n\n    _unconsume() {\n        this.consumedAfterSnapshot--;\n        this.preprocessor.retreat();\n    }\n\n    _reconsumeInState(state) {\n        this.state = state;\n        this._unconsume();\n    }\n\n    _consumeSequenceIfMatch(pattern, startCp, caseSensitive) {\n        let consumedCount = 0;\n        let isMatch = true;\n        const patternLength = pattern.length;\n        let patternPos = 0;\n        let cp = startCp;\n        let patternCp = void 0;\n\n        for (; patternPos < patternLength; patternPos++) {\n            if (patternPos > 0) {\n                cp = this._consume();\n                consumedCount++;\n            }\n\n            if (cp === $.EOF) {\n                isMatch = false;\n                break;\n            }\n\n            patternCp = pattern[patternPos];\n\n            if (cp !== patternCp && (caseSensitive || cp !== toAsciiLowerCodePoint(patternCp))) {\n                isMatch = false;\n                break;\n            }\n        }\n\n        if (!isMatch) {\n            while (consumedCount--) {\n                this._unconsume();\n            }\n        }\n\n        return isMatch;\n    }\n\n    //Temp buffer\n    _isTempBufferEqualToScriptString() {\n        if (this.tempBuff.length !== $$.SCRIPT_STRING.length) {\n            return false;\n        }\n\n        for (let i = 0; i < this.tempBuff.length; i++) {\n            if (this.tempBuff[i] !== $$.SCRIPT_STRING[i]) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: Tokenizer.START_TAG_TOKEN,\n            tagName: '',\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: []\n        };\n    }\n\n    _createEndTagToken() {\n        this.currentToken = {\n            type: Tokenizer.END_TAG_TOKEN,\n            tagName: '',\n            selfClosing: false,\n            attrs: []\n        };\n    }\n\n    _createCommentToken() {\n        this.currentToken = {\n            type: Tokenizer.COMMENT_TOKEN,\n            data: ''\n        };\n    }\n\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: Tokenizer.DOCTYPE_TOKEN,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null\n        };\n    }\n\n    _createCharacterToken(type, ch) {\n        this.currentCharacterToken = {\n            type: type,\n            chars: ch\n        };\n    }\n\n    _createEOFToken() {\n        this.currentToken = { type: Tokenizer.EOF_TOKEN };\n    }\n\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: ''\n        };\n    }\n\n    _leaveAttrName(toState) {\n        if (Tokenizer.getTokenAttr(this.currentToken, this.currentAttr.name) === null) {\n            this.currentToken.attrs.push(this.currentAttr);\n        } else {\n            this._err(ERR.duplicateAttribute);\n        }\n\n        this.state = toState;\n    }\n\n    _leaveAttrValue(toState) {\n        this.state = toState;\n    }\n\n    //Token emission\n    _emitCurrentToken() {\n        this._emitCurrentCharacterToken();\n\n        const ct = this.currentToken;\n\n        this.currentToken = null;\n\n        //NOTE: store emited start tag's tagName to determine is the following end tag token is appropriate.\n        if (ct.type === Tokenizer.START_TAG_TOKEN) {\n            this.lastStartTagName = ct.tagName;\n        } else if (ct.type === Tokenizer.END_TAG_TOKEN) {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n        }\n\n        this.tokenQueue.push(ct);\n    }\n\n    _emitCurrentCharacterToken() {\n        if (this.currentCharacterToken) {\n            this.tokenQueue.push(this.currentCharacterToken);\n            this.currentCharacterToken = null;\n        }\n    }\n\n    _emitEOFToken() {\n        this._createEOFToken();\n        this._emitCurrentToken();\n    }\n\n    //Characters emission\n\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)NULL_CHARACTER_TOKEN - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)WHITESPACE_CHARACTER_TOKEN - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)CHARACTER_TOKEN - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken && this.currentCharacterToken.type !== type) {\n            this._emitCurrentCharacterToken();\n        }\n\n        if (this.currentCharacterToken) {\n            this.currentCharacterToken.chars += ch;\n        } else {\n            this._createCharacterToken(type, ch);\n        }\n    }\n\n    _emitCodePoint(cp) {\n        let type = Tokenizer.CHARACTER_TOKEN;\n\n        if (isWhitespace(cp)) {\n            type = Tokenizer.WHITESPACE_CHARACTER_TOKEN;\n        } else if (cp === $.NULL) {\n            type = Tokenizer.NULL_CHARACTER_TOKEN;\n        }\n\n        this._appendCharToCurrentCharacterToken(type, toChar(cp));\n    }\n\n    _emitSeveralCodePoints(codePoints) {\n        for (let i = 0; i < codePoints.length; i++) {\n            this._emitCodePoint(codePoints[i]);\n        }\n    }\n\n    //NOTE: used then we emit character explicitly. This is always a non-whitespace and a non-null character.\n    //So we can avoid additional checks here.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(Tokenizer.CHARACTER_TOKEN, ch);\n    }\n\n    // Character reference helpers\n    _matchNamedCharacterReference(startCp) {\n        let result = null;\n        let excess = 1;\n        let i = findNamedEntityTreeBranch(0, startCp);\n\n        this.tempBuff.push(startCp);\n\n        while (i > -1) {\n            const current = neTree[i];\n            const inNode = current < MAX_BRANCH_MARKER_VALUE;\n            const nodeWithData = inNode && current & HAS_DATA_FLAG;\n\n            if (nodeWithData) {\n                //NOTE: we use greedy search, so we continue lookup at this point\n                result = current & DATA_DUPLET_FLAG ? [neTree[++i], neTree[++i]] : [neTree[++i]];\n                excess = 0;\n            }\n\n            const cp = this._consume();\n\n            this.tempBuff.push(cp);\n            excess++;\n\n            if (cp === $.EOF) {\n                break;\n            }\n\n            if (inNode) {\n                i = current & HAS_BRANCHES_FLAG ? findNamedEntityTreeBranch(i, cp) : -1;\n            } else {\n                i = cp === current ? ++i : -1;\n            }\n        }\n\n        while (excess--) {\n            this.tempBuff.pop();\n            this._unconsume();\n        }\n\n        return result;\n    }\n\n    _isCharacterReferenceInAttribute() {\n        return (\n            this.returnState === ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE ||\n            this.returnState === ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE ||\n            this.returnState === ATTRIBUTE_VALUE_UNQUOTED_STATE\n        );\n    }\n\n    _isCharacterReferenceAttributeQuirk(withSemicolon) {\n        if (!withSemicolon && this._isCharacterReferenceInAttribute()) {\n            const nextCp = this._consume();\n\n            this._unconsume();\n\n            return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n        }\n\n        return false;\n    }\n\n    _flushCodePointsConsumedAsCharacterReference() {\n        if (this._isCharacterReferenceInAttribute()) {\n            for (let i = 0; i < this.tempBuff.length; i++) {\n                this.currentAttr.value += toChar(this.tempBuff[i]);\n            }\n        } else {\n            this._emitSeveralCodePoints(this.tempBuff);\n        }\n\n        this.tempBuff = [];\n    }\n\n    // State machine\n\n    // Data state\n    //------------------------------------------------------------------\n    [DATA_STATE](cp) {\n        this.preprocessor.dropParsedChunk();\n\n        if (cp === $.LESS_THAN_SIGN) {\n            this.state = TAG_OPEN_STATE;\n        } else if (cp === $.AMPERSAND) {\n            this.returnState = DATA_STATE;\n            this.state = CHARACTER_REFERENCE_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitCodePoint(cp);\n        } else if (cp === $.EOF) {\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    //  RCDATA state\n    //------------------------------------------------------------------\n    [RCDATA_STATE](cp) {\n        this.preprocessor.dropParsedChunk();\n\n        if (cp === $.AMPERSAND) {\n            this.returnState = RCDATA_STATE;\n            this.state = CHARACTER_REFERENCE_STATE;\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = RCDATA_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    [RAWTEXT_STATE](cp) {\n        this.preprocessor.dropParsedChunk();\n\n        if (cp === $.LESS_THAN_SIGN) {\n            this.state = RAWTEXT_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_STATE](cp) {\n        this.preprocessor.dropParsedChunk();\n\n        if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    [PLAINTEXT_STATE](cp) {\n        this.preprocessor.dropParsedChunk();\n\n        if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Tag open state\n    //------------------------------------------------------------------\n    [TAG_OPEN_STATE](cp) {\n        if (cp === $.EXCLAMATION_MARK) {\n            this.state = MARKUP_DECLARATION_OPEN_STATE;\n        } else if (cp === $.SOLIDUS) {\n            this.state = END_TAG_OPEN_STATE;\n        } else if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this._reconsumeInState(TAG_NAME_STATE);\n        } else if (cp === $.QUESTION_MARK) {\n            this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n            this._createCommentToken();\n            this._reconsumeInState(BOGUS_COMMENT_STATE);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofBeforeTagName);\n            this._emitChars('<');\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.invalidFirstCharacterOfTagName);\n            this._emitChars('<');\n            this._reconsumeInState(DATA_STATE);\n        }\n    }\n\n    // End tag open state\n    //------------------------------------------------------------------\n    [END_TAG_OPEN_STATE](cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this._reconsumeInState(TAG_NAME_STATE);\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingEndTagName);\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofBeforeTagName);\n            this._emitChars('</');\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.invalidFirstCharacterOfTagName);\n            this._createCommentToken();\n            this._reconsumeInState(BOGUS_COMMENT_STATE);\n        }\n    }\n\n    // Tag name state\n    //------------------------------------------------------------------\n    [TAG_NAME_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n        } else if (cp === $.SOLIDUS) {\n            this.state = SELF_CLOSING_START_TAG_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (isAsciiUpper(cp)) {\n            this.currentToken.tagName += toAsciiLowerChar(cp);\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.tagName += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this.currentToken.tagName += toChar(cp);\n        }\n    }\n\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    [RCDATA_LESS_THAN_SIGN_STATE](cp) {\n        if (cp === $.SOLIDUS) {\n            this.tempBuff = [];\n            this.state = RCDATA_END_TAG_OPEN_STATE;\n        } else {\n            this._emitChars('<');\n            this._reconsumeInState(RCDATA_STATE);\n        }\n    }\n\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    [RCDATA_END_TAG_OPEN_STATE](cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this._reconsumeInState(RCDATA_END_TAG_NAME_STATE);\n        } else {\n            this._emitChars('</');\n            this._reconsumeInState(RCDATA_STATE);\n        }\n    }\n\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    [RCDATA_END_TAG_NAME_STATE](cp) {\n        if (isAsciiUpper(cp)) {\n            this.currentToken.tagName += toAsciiLowerChar(cp);\n            this.tempBuff.push(cp);\n        } else if (isAsciiLower(cp)) {\n            this.currentToken.tagName += toChar(cp);\n            this.tempBuff.push(cp);\n        } else {\n            if (this.lastStartTagName === this.currentToken.tagName) {\n                if (isWhitespace(cp)) {\n                    this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                    return;\n                }\n\n                if (cp === $.SOLIDUS) {\n                    this.state = SELF_CLOSING_START_TAG_STATE;\n                    return;\n                }\n\n                if (cp === $.GREATER_THAN_SIGN) {\n                    this.state = DATA_STATE;\n                    this._emitCurrentToken();\n                    return;\n                }\n            }\n\n            this._emitChars('</');\n            this._emitSeveralCodePoints(this.tempBuff);\n            this._reconsumeInState(RCDATA_STATE);\n        }\n    }\n\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    [RAWTEXT_LESS_THAN_SIGN_STATE](cp) {\n        if (cp === $.SOLIDUS) {\n            this.tempBuff = [];\n            this.state = RAWTEXT_END_TAG_OPEN_STATE;\n        } else {\n            this._emitChars('<');\n            this._reconsumeInState(RAWTEXT_STATE);\n        }\n    }\n\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    [RAWTEXT_END_TAG_OPEN_STATE](cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this._reconsumeInState(RAWTEXT_END_TAG_NAME_STATE);\n        } else {\n            this._emitChars('</');\n            this._reconsumeInState(RAWTEXT_STATE);\n        }\n    }\n\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    [RAWTEXT_END_TAG_NAME_STATE](cp) {\n        if (isAsciiUpper(cp)) {\n            this.currentToken.tagName += toAsciiLowerChar(cp);\n            this.tempBuff.push(cp);\n        } else if (isAsciiLower(cp)) {\n            this.currentToken.tagName += toChar(cp);\n            this.tempBuff.push(cp);\n        } else {\n            if (this.lastStartTagName === this.currentToken.tagName) {\n                if (isWhitespace(cp)) {\n                    this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                    return;\n                }\n\n                if (cp === $.SOLIDUS) {\n                    this.state = SELF_CLOSING_START_TAG_STATE;\n                    return;\n                }\n\n                if (cp === $.GREATER_THAN_SIGN) {\n                    this._emitCurrentToken();\n                    this.state = DATA_STATE;\n                    return;\n                }\n            }\n\n            this._emitChars('</');\n            this._emitSeveralCodePoints(this.tempBuff);\n            this._reconsumeInState(RAWTEXT_STATE);\n        }\n    }\n\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_LESS_THAN_SIGN_STATE](cp) {\n        if (cp === $.SOLIDUS) {\n            this.tempBuff = [];\n            this.state = SCRIPT_DATA_END_TAG_OPEN_STATE;\n        } else if (cp === $.EXCLAMATION_MARK) {\n            this.state = SCRIPT_DATA_ESCAPE_START_STATE;\n            this._emitChars('<!');\n        } else {\n            this._emitChars('<');\n            this._reconsumeInState(SCRIPT_DATA_STATE);\n        }\n    }\n\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_END_TAG_OPEN_STATE](cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this._reconsumeInState(SCRIPT_DATA_END_TAG_NAME_STATE);\n        } else {\n            this._emitChars('</');\n            this._reconsumeInState(SCRIPT_DATA_STATE);\n        }\n    }\n\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_END_TAG_NAME_STATE](cp) {\n        if (isAsciiUpper(cp)) {\n            this.currentToken.tagName += toAsciiLowerChar(cp);\n            this.tempBuff.push(cp);\n        } else if (isAsciiLower(cp)) {\n            this.currentToken.tagName += toChar(cp);\n            this.tempBuff.push(cp);\n        } else {\n            if (this.lastStartTagName === this.currentToken.tagName) {\n                if (isWhitespace(cp)) {\n                    this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                    return;\n                } else if (cp === $.SOLIDUS) {\n                    this.state = SELF_CLOSING_START_TAG_STATE;\n                    return;\n                } else if (cp === $.GREATER_THAN_SIGN) {\n                    this._emitCurrentToken();\n                    this.state = DATA_STATE;\n                    return;\n                }\n            }\n\n            this._emitChars('</');\n            this._emitSeveralCodePoints(this.tempBuff);\n            this._reconsumeInState(SCRIPT_DATA_STATE);\n        }\n    }\n\n    // Script data escape start state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPE_START_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = SCRIPT_DATA_ESCAPE_START_DASH_STATE;\n            this._emitChars('-');\n        } else {\n            this._reconsumeInState(SCRIPT_DATA_STATE);\n        }\n    }\n\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPE_START_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;\n            this._emitChars('-');\n        } else {\n            this._reconsumeInState(SCRIPT_DATA_STATE);\n        }\n    }\n\n    // Script data escaped state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPED_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = SCRIPT_DATA_ESCAPED_DASH_STATE;\n            this._emitChars('-');\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPED_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;\n            this._emitChars('-');\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.state = SCRIPT_DATA_ESCAPED_STATE;\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\n            this._emitEOFToken();\n        } else {\n            this.state = SCRIPT_DATA_ESCAPED_STATE;\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPED_DASH_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this._emitChars('-');\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this.state = SCRIPT_DATA_STATE;\n            this._emitChars('>');\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.state = SCRIPT_DATA_ESCAPED_STATE;\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\n            this._emitEOFToken();\n        } else {\n            this.state = SCRIPT_DATA_ESCAPED_STATE;\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE](cp) {\n        if (cp === $.SOLIDUS) {\n            this.tempBuff = [];\n            this.state = SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE;\n        } else if (isAsciiLetter(cp)) {\n            this.tempBuff = [];\n            this._emitChars('<');\n            this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE);\n        } else {\n            this._emitChars('<');\n            this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n        }\n    }\n\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE](cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this._reconsumeInState(SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE);\n        } else {\n            this._emitChars('</');\n            this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n        }\n    }\n\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE](cp) {\n        if (isAsciiUpper(cp)) {\n            this.currentToken.tagName += toAsciiLowerChar(cp);\n            this.tempBuff.push(cp);\n        } else if (isAsciiLower(cp)) {\n            this.currentToken.tagName += toChar(cp);\n            this.tempBuff.push(cp);\n        } else {\n            if (this.lastStartTagName === this.currentToken.tagName) {\n                if (isWhitespace(cp)) {\n                    this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                    return;\n                }\n\n                if (cp === $.SOLIDUS) {\n                    this.state = SELF_CLOSING_START_TAG_STATE;\n                    return;\n                }\n\n                if (cp === $.GREATER_THAN_SIGN) {\n                    this._emitCurrentToken();\n                    this.state = DATA_STATE;\n                    return;\n                }\n            }\n\n            this._emitChars('</');\n            this._emitSeveralCodePoints(this.tempBuff);\n            this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n        }\n    }\n\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE](cp) {\n        if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {\n            this.state = this._isTempBufferEqualToScriptString()\n                ? SCRIPT_DATA_DOUBLE_ESCAPED_STATE\n                : SCRIPT_DATA_ESCAPED_STATE;\n            this._emitCodePoint(cp);\n        } else if (isAsciiUpper(cp)) {\n            this.tempBuff.push(toAsciiLowerCodePoint(cp));\n            this._emitCodePoint(cp);\n        } else if (isAsciiLower(cp)) {\n            this.tempBuff.push(cp);\n            this._emitCodePoint(cp);\n        } else {\n            this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n        }\n    }\n\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_DOUBLE_ESCAPED_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE;\n            this._emitChars('-');\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n            this._emitChars('<');\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE;\n            this._emitChars('-');\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n            this._emitChars('<');\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\n            this._emitEOFToken();\n        } else {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this._emitChars('-');\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n            this._emitChars('<');\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this.state = SCRIPT_DATA_STATE;\n            this._emitChars('>');\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\n            this._emitEOFToken();\n        } else {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE](cp) {\n        if (cp === $.SOLIDUS) {\n            this.tempBuff = [];\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE;\n            this._emitChars('/');\n        } else {\n            this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);\n        }\n    }\n\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE](cp) {\n        if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {\n            this.state = this._isTempBufferEqualToScriptString()\n                ? SCRIPT_DATA_ESCAPED_STATE\n                : SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n\n            this._emitCodePoint(cp);\n        } else if (isAsciiUpper(cp)) {\n            this.tempBuff.push(toAsciiLowerCodePoint(cp));\n            this._emitCodePoint(cp);\n        } else if (isAsciiLower(cp)) {\n            this.tempBuff.push(cp);\n            this._emitCodePoint(cp);\n        } else {\n            this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);\n        }\n    }\n\n    // Before attribute name state\n    //------------------------------------------------------------------\n    [BEFORE_ATTRIBUTE_NAME_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF) {\n            this._reconsumeInState(AFTER_ATTRIBUTE_NAME_STATE);\n        } else if (cp === $.EQUALS_SIGN) {\n            this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n            this._createAttr('=');\n            this.state = ATTRIBUTE_NAME_STATE;\n        } else {\n            this._createAttr('');\n            this._reconsumeInState(ATTRIBUTE_NAME_STATE);\n        }\n    }\n\n    // Attribute name state\n    //------------------------------------------------------------------\n    [ATTRIBUTE_NAME_STATE](cp) {\n        if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF) {\n            this._leaveAttrName(AFTER_ATTRIBUTE_NAME_STATE);\n            this._unconsume();\n        } else if (cp === $.EQUALS_SIGN) {\n            this._leaveAttrName(BEFORE_ATTRIBUTE_VALUE_STATE);\n        } else if (isAsciiUpper(cp)) {\n            this.currentAttr.name += toAsciiLowerChar(cp);\n        } else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN) {\n            this._err(ERR.unexpectedCharacterInAttributeName);\n            this.currentAttr.name += toChar(cp);\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentAttr.name += unicode.REPLACEMENT_CHARACTER;\n        } else {\n            this.currentAttr.name += toChar(cp);\n        }\n    }\n\n    // After attribute name state\n    //------------------------------------------------------------------\n    [AFTER_ATTRIBUTE_NAME_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.SOLIDUS) {\n            this.state = SELF_CLOSING_START_TAG_STATE;\n        } else if (cp === $.EQUALS_SIGN) {\n            this.state = BEFORE_ATTRIBUTE_VALUE_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this._createAttr('');\n            this._reconsumeInState(ATTRIBUTE_NAME_STATE);\n        }\n    }\n\n    // Before attribute value state\n    //------------------------------------------------------------------\n    [BEFORE_ATTRIBUTE_VALUE_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.QUOTATION_MARK) {\n            this.state = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this.state = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingAttributeValue);\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else {\n            this._reconsumeInState(ATTRIBUTE_VALUE_UNQUOTED_STATE);\n        }\n    }\n\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    [ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE](cp) {\n        if (cp === $.QUOTATION_MARK) {\n            this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;\n        } else if (cp === $.AMPERSAND) {\n            this.returnState = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE;\n            this.state = CHARACTER_REFERENCE_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentAttr.value += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this.currentAttr.value += toChar(cp);\n        }\n    }\n\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    [ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE](cp) {\n        if (cp === $.APOSTROPHE) {\n            this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;\n        } else if (cp === $.AMPERSAND) {\n            this.returnState = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE;\n            this.state = CHARACTER_REFERENCE_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentAttr.value += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this.currentAttr.value += toChar(cp);\n        }\n    }\n\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    [ATTRIBUTE_VALUE_UNQUOTED_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);\n        } else if (cp === $.AMPERSAND) {\n            this.returnState = ATTRIBUTE_VALUE_UNQUOTED_STATE;\n            this.state = CHARACTER_REFERENCE_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._leaveAttrValue(DATA_STATE);\n            this._emitCurrentToken();\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentAttr.value += unicode.REPLACEMENT_CHARACTER;\n        } else if (\n            cp === $.QUOTATION_MARK ||\n            cp === $.APOSTROPHE ||\n            cp === $.LESS_THAN_SIGN ||\n            cp === $.EQUALS_SIGN ||\n            cp === $.GRAVE_ACCENT\n        ) {\n            this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n            this.currentAttr.value += toChar(cp);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this.currentAttr.value += toChar(cp);\n        }\n    }\n\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    [AFTER_ATTRIBUTE_VALUE_QUOTED_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);\n        } else if (cp === $.SOLIDUS) {\n            this._leaveAttrValue(SELF_CLOSING_START_TAG_STATE);\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._leaveAttrValue(DATA_STATE);\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingWhitespaceBetweenAttributes);\n            this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);\n        }\n    }\n\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    [SELF_CLOSING_START_TAG_STATE](cp) {\n        if (cp === $.GREATER_THAN_SIGN) {\n            this.currentToken.selfClosing = true;\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.unexpectedSolidusInTag);\n            this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);\n        }\n    }\n\n    // Bogus comment state\n    //------------------------------------------------------------------\n    [BOGUS_COMMENT_STATE](cp) {\n        if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.data += unicode.REPLACEMENT_CHARACTER;\n        } else {\n            this.currentToken.data += toChar(cp);\n        }\n    }\n\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    [MARKUP_DECLARATION_OPEN_STATE](cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH_STRING, cp, true)) {\n            this._createCommentToken();\n            this.state = COMMENT_START_STATE;\n        } else if (this._consumeSequenceIfMatch($$.DOCTYPE_STRING, cp, false)) {\n            this.state = DOCTYPE_STATE;\n        } else if (this._consumeSequenceIfMatch($$.CDATA_START_STRING, cp, true)) {\n            if (this.allowCDATA) {\n                this.state = CDATA_SECTION_STATE;\n            } else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken();\n                this.currentToken.data = '[CDATA[';\n                this.state = BOGUS_COMMENT_STATE;\n            }\n        }\n\n        //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken();\n            this._reconsumeInState(BOGUS_COMMENT_STATE);\n        }\n    }\n\n    // Comment start state\n    //------------------------------------------------------------------\n    [COMMENT_START_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = COMMENT_START_DASH_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.abruptClosingOfEmptyComment);\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else {\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // Comment start dash state\n    //------------------------------------------------------------------\n    [COMMENT_START_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = COMMENT_END_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.abruptClosingOfEmptyComment);\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInComment);\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.data += '-';\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // Comment state\n    //------------------------------------------------------------------\n    [COMMENT_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = COMMENT_END_DASH_STATE;\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.currentToken.data += '<';\n            this.state = COMMENT_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.data += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInComment);\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.data += toChar(cp);\n        }\n    }\n\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    [COMMENT_LESS_THAN_SIGN_STATE](cp) {\n        if (cp === $.EXCLAMATION_MARK) {\n            this.currentToken.data += '!';\n            this.state = COMMENT_LESS_THAN_SIGN_BANG_STATE;\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.currentToken.data += '!';\n        } else {\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    [COMMENT_LESS_THAN_SIGN_BANG_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE;\n        } else {\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    [COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE;\n        } else {\n            this._reconsumeInState(COMMENT_END_DASH_STATE);\n        }\n    }\n\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    [COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE](cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n\n        this._reconsumeInState(COMMENT_END_STATE);\n    }\n\n    // Comment end dash state\n    //------------------------------------------------------------------\n    [COMMENT_END_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = COMMENT_END_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInComment);\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.data += '-';\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // Comment end state\n    //------------------------------------------------------------------\n    [COMMENT_END_STATE](cp) {\n        if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EXCLAMATION_MARK) {\n            this.state = COMMENT_END_BANG_STATE;\n        } else if (cp === $.HYPHEN_MINUS) {\n            this.currentToken.data += '-';\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInComment);\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.data += '--';\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // Comment end bang state\n    //------------------------------------------------------------------\n    [COMMENT_END_BANG_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.currentToken.data += '--!';\n            this.state = COMMENT_END_DASH_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.incorrectlyClosedComment);\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInComment);\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.data += '--!';\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    [DOCTYPE_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this.state = BEFORE_DOCTYPE_NAME_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._reconsumeInState(BEFORE_DOCTYPE_NAME_STATE);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this._createDoctypeToken(null);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingWhitespaceBeforeDoctypeName);\n            this._reconsumeInState(BEFORE_DOCTYPE_NAME_STATE);\n        }\n    }\n\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    [BEFORE_DOCTYPE_NAME_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(toAsciiLowerChar(cp));\n            this.state = DOCTYPE_NAME_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._createDoctypeToken(unicode.REPLACEMENT_CHARACTER);\n            this.state = DOCTYPE_NAME_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingDoctypeName);\n            this._createDoctypeToken(null);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this._createDoctypeToken(null);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._createDoctypeToken(toChar(cp));\n            this.state = DOCTYPE_NAME_STATE;\n        }\n    }\n\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    [DOCTYPE_NAME_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this.state = AFTER_DOCTYPE_NAME_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (isAsciiUpper(cp)) {\n            this.currentToken.name += toAsciiLowerChar(cp);\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.name += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.name += toChar(cp);\n        }\n    }\n\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    [AFTER_DOCTYPE_NAME_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else if (this._consumeSequenceIfMatch($$.PUBLIC_STRING, cp, false)) {\n            this.state = AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE;\n        } else if (this._consumeSequenceIfMatch($$.SYSTEM_STRING, cp, false)) {\n            this.state = AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE;\n        }\n        //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    [AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this.state = BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE;\n        } else if (cp === $.QUOTATION_MARK) {\n            this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n            this.currentToken.publicId = '';\n            this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n            this.currentToken.publicId = '';\n            this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingDoctypePublicIdentifier);\n            this.currentToken.forceQuirks = true;\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    [BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.QUOTATION_MARK) {\n            this.currentToken.publicId = '';\n            this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this.currentToken.publicId = '';\n            this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingDoctypePublicIdentifier);\n            this.currentToken.forceQuirks = true;\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    [DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE](cp) {\n        if (cp === $.QUOTATION_MARK) {\n            this.state = AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.publicId += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.abruptDoctypePublicIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.publicId += toChar(cp);\n        }\n    }\n\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    [DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE](cp) {\n        if (cp === $.APOSTROPHE) {\n            this.state = AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.publicId += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.abruptDoctypePublicIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.publicId += toChar(cp);\n        }\n    }\n\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    [AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this.state = BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.QUOTATION_MARK) {\n            this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    [BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.GREATER_THAN_SIGN) {\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.QUOTATION_MARK) {\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    [AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this.state = BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\n        } else if (cp === $.QUOTATION_MARK) {\n            this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    [BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.QUOTATION_MARK) {\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    [DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE](cp) {\n        if (cp === $.QUOTATION_MARK) {\n            this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.systemId += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.abruptDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.systemId += toChar(cp);\n        }\n    }\n\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    [DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE](cp) {\n        if (cp === $.APOSTROPHE) {\n            this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.systemId += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.abruptDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.systemId += toChar(cp);\n        }\n    }\n\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    [AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.GREATER_THAN_SIGN) {\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    [BOGUS_DOCTYPE_STATE](cp) {\n        if (cp === $.GREATER_THAN_SIGN) {\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n        } else if (cp === $.EOF) {\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        }\n    }\n\n    // CDATA section state\n    //------------------------------------------------------------------\n    [CDATA_SECTION_STATE](cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = CDATA_SECTION_BRACKET_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInCdata);\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    [CDATA_SECTION_BRACKET_STATE](cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = CDATA_SECTION_END_STATE;\n        } else {\n            this._emitChars(']');\n            this._reconsumeInState(CDATA_SECTION_STATE);\n        }\n    }\n\n    // CDATA section end state\n    //------------------------------------------------------------------\n    [CDATA_SECTION_END_STATE](cp) {\n        if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n        } else if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this._emitChars(']');\n        } else {\n            this._emitChars(']]');\n            this._reconsumeInState(CDATA_SECTION_STATE);\n        }\n    }\n\n    // Character reference state\n    //------------------------------------------------------------------\n    [CHARACTER_REFERENCE_STATE](cp) {\n        this.tempBuff = [$.AMPERSAND];\n\n        if (cp === $.NUMBER_SIGN) {\n            this.tempBuff.push(cp);\n            this.state = NUMERIC_CHARACTER_REFERENCE_STATE;\n        } else if (isAsciiAlphaNumeric(cp)) {\n            this._reconsumeInState(NAMED_CHARACTER_REFERENCE_STATE);\n        } else {\n            this._flushCodePointsConsumedAsCharacterReference();\n            this._reconsumeInState(this.returnState);\n        }\n    }\n\n    // Named character reference state\n    //------------------------------------------------------------------\n    [NAMED_CHARACTER_REFERENCE_STATE](cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n\n        //NOTE: matching can be abrupted by hibernation. In that case match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) {\n            this.tempBuff = [$.AMPERSAND];\n        } else if (matchResult) {\n            const withSemicolon = this.tempBuff[this.tempBuff.length - 1] === $.SEMICOLON;\n\n            if (!this._isCharacterReferenceAttributeQuirk(withSemicolon)) {\n                if (!withSemicolon) {\n                    this._errOnNextCodePoint(ERR.missingSemicolonAfterCharacterReference);\n                }\n\n                this.tempBuff = matchResult;\n            }\n\n            this._flushCodePointsConsumedAsCharacterReference();\n            this.state = this.returnState;\n        } else {\n            this._flushCodePointsConsumedAsCharacterReference();\n            this.state = AMBIGUOUS_AMPERSAND_STATE;\n        }\n    }\n\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    [AMBIGUOUS_AMPERSAND_STATE](cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            if (this._isCharacterReferenceInAttribute()) {\n                this.currentAttr.value += toChar(cp);\n            } else {\n                this._emitCodePoint(cp);\n            }\n        } else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n\n            this._reconsumeInState(this.returnState);\n        }\n    }\n\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    [NUMERIC_CHARACTER_REFERENCE_STATE](cp) {\n        this.charRefCode = 0;\n\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\n            this.tempBuff.push(cp);\n            this.state = HEXADEMICAL_CHARACTER_REFERENCE_START_STATE;\n        } else {\n            this._reconsumeInState(DECIMAL_CHARACTER_REFERENCE_START_STATE);\n        }\n    }\n\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    [HEXADEMICAL_CHARACTER_REFERENCE_START_STATE](cp) {\n        if (isAsciiHexDigit(cp)) {\n            this._reconsumeInState(HEXADEMICAL_CHARACTER_REFERENCE_STATE);\n        } else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointsConsumedAsCharacterReference();\n            this._reconsumeInState(this.returnState);\n        }\n    }\n\n    // Decimal character reference start state\n    //------------------------------------------------------------------\n    [DECIMAL_CHARACTER_REFERENCE_START_STATE](cp) {\n        if (isAsciiDigit(cp)) {\n            this._reconsumeInState(DECIMAL_CHARACTER_REFERENCE_STATE);\n        } else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointsConsumedAsCharacterReference();\n            this._reconsumeInState(this.returnState);\n        }\n    }\n\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    [HEXADEMICAL_CHARACTER_REFERENCE_STATE](cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        } else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        } else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        } else if (cp === $.SEMICOLON) {\n            this.state = NUMERIC_CHARACTER_REFERENCE_END_STATE;\n        } else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this._reconsumeInState(NUMERIC_CHARACTER_REFERENCE_END_STATE);\n        }\n    }\n\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    [DECIMAL_CHARACTER_REFERENCE_STATE](cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        } else if (cp === $.SEMICOLON) {\n            this.state = NUMERIC_CHARACTER_REFERENCE_END_STATE;\n        } else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this._reconsumeInState(NUMERIC_CHARACTER_REFERENCE_END_STATE);\n        }\n    }\n\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    [NUMERIC_CHARACTER_REFERENCE_END_STATE]() {\n        if (this.charRefCode === $.NULL) {\n            this._err(ERR.nullCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        } else if (this.charRefCode > 0x10ffff) {\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        } else if (unicode.isSurrogate(this.charRefCode)) {\n            this._err(ERR.surrogateCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        } else if (unicode.isUndefinedCodePoint(this.charRefCode)) {\n            this._err(ERR.noncharacterCharacterReference);\n        } else if (unicode.isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\n            this._err(ERR.controlCharacterReference);\n\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS[this.charRefCode];\n\n            if (replacement) {\n                this.charRefCode = replacement;\n            }\n        }\n\n        this.tempBuff = [this.charRefCode];\n\n        this._flushCodePointsConsumedAsCharacterReference();\n        this._reconsumeInState(this.returnState);\n    }\n}\n\n//Token types\nTokenizer.CHARACTER_TOKEN = 'CHARACTER_TOKEN';\nTokenizer.NULL_CHARACTER_TOKEN = 'NULL_CHARACTER_TOKEN';\nTokenizer.WHITESPACE_CHARACTER_TOKEN = 'WHITESPACE_CHARACTER_TOKEN';\nTokenizer.START_TAG_TOKEN = 'START_TAG_TOKEN';\nTokenizer.END_TAG_TOKEN = 'END_TAG_TOKEN';\nTokenizer.COMMENT_TOKEN = 'COMMENT_TOKEN';\nTokenizer.DOCTYPE_TOKEN = 'DOCTYPE_TOKEN';\nTokenizer.EOF_TOKEN = 'EOF_TOKEN';\nTokenizer.HIBERNATION_TOKEN = 'HIBERNATION_TOKEN';\n\n//Tokenizer initial states for different modes\nTokenizer.MODE = {\n    DATA: DATA_STATE,\n    RCDATA: RCDATA_STATE,\n    RAWTEXT: RAWTEXT_STATE,\n    SCRIPT_DATA: SCRIPT_DATA_STATE,\n    PLAINTEXT: PLAINTEXT_STATE\n};\n\n//Static\nTokenizer.getTokenAttr = function(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n\n    return null;\n};\n\nmodule.exports = Tokenizer;\n","'use strict';\n\nconst NS = (exports.NAMESPACES = {\n    HTML: 'http://www.w3.org/1999/xhtml',\n    MATHML: 'http://www.w3.org/1998/Math/MathML',\n    SVG: 'http://www.w3.org/2000/svg',\n    XLINK: 'http://www.w3.org/1999/xlink',\n    XML: 'http://www.w3.org/XML/1998/namespace',\n    XMLNS: 'http://www.w3.org/2000/xmlns/'\n});\n\nexports.ATTRS = {\n    TYPE: 'type',\n    ACTION: 'action',\n    ENCODING: 'encoding',\n    PROMPT: 'prompt',\n    NAME: 'name',\n    COLOR: 'color',\n    FACE: 'face',\n    SIZE: 'size'\n};\n\nexports.DOCUMENT_MODE = {\n    NO_QUIRKS: 'no-quirks',\n    QUIRKS: 'quirks',\n    LIMITED_QUIRKS: 'limited-quirks'\n};\n\nconst $ = (exports.TAG_NAMES = {\n    A: 'a',\n    ADDRESS: 'address',\n    ANNOTATION_XML: 'annotation-xml',\n    APPLET: 'applet',\n    AREA: 'area',\n    ARTICLE: 'article',\n    ASIDE: 'aside',\n\n    B: 'b',\n    BASE: 'base',\n    BASEFONT: 'basefont',\n    BGSOUND: 'bgsound',\n    BIG: 'big',\n    BLOCKQUOTE: 'blockquote',\n    BODY: 'body',\n    BR: 'br',\n    BUTTON: 'button',\n\n    CAPTION: 'caption',\n    CENTER: 'center',\n    CODE: 'code',\n    COL: 'col',\n    COLGROUP: 'colgroup',\n\n    DD: 'dd',\n    DESC: 'desc',\n    DETAILS: 'details',\n    DIALOG: 'dialog',\n    DIR: 'dir',\n    DIV: 'div',\n    DL: 'dl',\n    DT: 'dt',\n\n    EM: 'em',\n    EMBED: 'embed',\n\n    FIELDSET: 'fieldset',\n    FIGCAPTION: 'figcaption',\n    FIGURE: 'figure',\n    FONT: 'font',\n    FOOTER: 'footer',\n    FOREIGN_OBJECT: 'foreignObject',\n    FORM: 'form',\n    FRAME: 'frame',\n    FRAMESET: 'frameset',\n\n    H1: 'h1',\n    H2: 'h2',\n    H3: 'h3',\n    H4: 'h4',\n    H5: 'h5',\n    H6: 'h6',\n    HEAD: 'head',\n    HEADER: 'header',\n    HGROUP: 'hgroup',\n    HR: 'hr',\n    HTML: 'html',\n\n    I: 'i',\n    IMG: 'img',\n    IMAGE: 'image',\n    INPUT: 'input',\n    IFRAME: 'iframe',\n\n    KEYGEN: 'keygen',\n\n    LABEL: 'label',\n    LI: 'li',\n    LINK: 'link',\n    LISTING: 'listing',\n\n    MAIN: 'main',\n    MALIGNMARK: 'malignmark',\n    MARQUEE: 'marquee',\n    MATH: 'math',\n    MENU: 'menu',\n    META: 'meta',\n    MGLYPH: 'mglyph',\n    MI: 'mi',\n    MO: 'mo',\n    MN: 'mn',\n    MS: 'ms',\n    MTEXT: 'mtext',\n\n    NAV: 'nav',\n    NOBR: 'nobr',\n    NOFRAMES: 'noframes',\n    NOEMBED: 'noembed',\n    NOSCRIPT: 'noscript',\n\n    OBJECT: 'object',\n    OL: 'ol',\n    OPTGROUP: 'optgroup',\n    OPTION: 'option',\n\n    P: 'p',\n    PARAM: 'param',\n    PLAINTEXT: 'plaintext',\n    PRE: 'pre',\n\n    RB: 'rb',\n    RP: 'rp',\n    RT: 'rt',\n    RTC: 'rtc',\n    RUBY: 'ruby',\n\n    S: 's',\n    SCRIPT: 'script',\n    SECTION: 'section',\n    SELECT: 'select',\n    SOURCE: 'source',\n    SMALL: 'small',\n    SPAN: 'span',\n    STRIKE: 'strike',\n    STRONG: 'strong',\n    STYLE: 'style',\n    SUB: 'sub',\n    SUMMARY: 'summary',\n    SUP: 'sup',\n\n    TABLE: 'table',\n    TBODY: 'tbody',\n    TEMPLATE: 'template',\n    TEXTAREA: 'textarea',\n    TFOOT: 'tfoot',\n    TD: 'td',\n    TH: 'th',\n    THEAD: 'thead',\n    TITLE: 'title',\n    TR: 'tr',\n    TRACK: 'track',\n    TT: 'tt',\n\n    U: 'u',\n    UL: 'ul',\n\n    SVG: 'svg',\n\n    VAR: 'var',\n\n    WBR: 'wbr',\n\n    XMP: 'xmp'\n});\n\nexports.SPECIAL_ELEMENTS = {\n    [NS.HTML]: {\n        [$.ADDRESS]: true,\n        [$.APPLET]: true,\n        [$.AREA]: true,\n        [$.ARTICLE]: true,\n        [$.ASIDE]: true,\n        [$.BASE]: true,\n        [$.BASEFONT]: true,\n        [$.BGSOUND]: true,\n        [$.BLOCKQUOTE]: true,\n        [$.BODY]: true,\n        [$.BR]: true,\n        [$.BUTTON]: true,\n        [$.CAPTION]: true,\n        [$.CENTER]: true,\n        [$.COL]: true,\n        [$.COLGROUP]: true,\n        [$.DD]: true,\n        [$.DETAILS]: true,\n        [$.DIR]: true,\n        [$.DIV]: true,\n        [$.DL]: true,\n        [$.DT]: true,\n        [$.EMBED]: true,\n        [$.FIELDSET]: true,\n        [$.FIGCAPTION]: true,\n        [$.FIGURE]: true,\n        [$.FOOTER]: true,\n        [$.FORM]: true,\n        [$.FRAME]: true,\n        [$.FRAMESET]: true,\n        [$.H1]: true,\n        [$.H2]: true,\n        [$.H3]: true,\n        [$.H4]: true,\n        [$.H5]: true,\n        [$.H6]: true,\n        [$.HEAD]: true,\n        [$.HEADER]: true,\n        [$.HGROUP]: true,\n        [$.HR]: true,\n        [$.HTML]: true,\n        [$.IFRAME]: true,\n        [$.IMG]: true,\n        [$.INPUT]: true,\n        [$.LI]: true,\n        [$.LINK]: true,\n        [$.LISTING]: true,\n        [$.MAIN]: true,\n        [$.MARQUEE]: true,\n        [$.MENU]: true,\n        [$.META]: true,\n        [$.NAV]: true,\n        [$.NOEMBED]: true,\n        [$.NOFRAMES]: true,\n        [$.NOSCRIPT]: true,\n        [$.OBJECT]: true,\n        [$.OL]: true,\n        [$.P]: true,\n        [$.PARAM]: true,\n        [$.PLAINTEXT]: true,\n        [$.PRE]: true,\n        [$.SCRIPT]: true,\n        [$.SECTION]: true,\n        [$.SELECT]: true,\n        [$.SOURCE]: true,\n        [$.STYLE]: true,\n        [$.SUMMARY]: true,\n        [$.TABLE]: true,\n        [$.TBODY]: true,\n        [$.TD]: true,\n        [$.TEMPLATE]: true,\n        [$.TEXTAREA]: true,\n        [$.TFOOT]: true,\n        [$.TH]: true,\n        [$.THEAD]: true,\n        [$.TITLE]: true,\n        [$.TR]: true,\n        [$.TRACK]: true,\n        [$.UL]: true,\n        [$.WBR]: true,\n        [$.XMP]: true\n    },\n    [NS.MATHML]: {\n        [$.MI]: true,\n        [$.MO]: true,\n        [$.MN]: true,\n        [$.MS]: true,\n        [$.MTEXT]: true,\n        [$.ANNOTATION_XML]: true\n    },\n    [NS.SVG]: {\n        [$.TITLE]: true,\n        [$.FOREIGN_OBJECT]: true,\n        [$.DESC]: true\n    }\n};\n","'use strict';\n\nconst HTML = require('../common/html');\n\n//Aliases\nconst $ = HTML.TAG_NAMES;\nconst NS = HTML.NAMESPACES;\n\n//Element utils\n\n//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.\n//It's faster than using dictionary.\nfunction isImpliedEndTagRequired(tn) {\n    switch (tn.length) {\n        case 1:\n            return tn === $.P;\n\n        case 2:\n            return tn === $.RB || tn === $.RP || tn === $.RT || tn === $.DD || tn === $.DT || tn === $.LI;\n\n        case 3:\n            return tn === $.RTC;\n\n        case 6:\n            return tn === $.OPTION;\n\n        case 8:\n            return tn === $.OPTGROUP;\n    }\n\n    return false;\n}\n\nfunction isImpliedEndTagRequiredThoroughly(tn) {\n    switch (tn.length) {\n        case 1:\n            return tn === $.P;\n\n        case 2:\n            return (\n                tn === $.RB ||\n                tn === $.RP ||\n                tn === $.RT ||\n                tn === $.DD ||\n                tn === $.DT ||\n                tn === $.LI ||\n                tn === $.TD ||\n                tn === $.TH ||\n                tn === $.TR\n            );\n\n        case 3:\n            return tn === $.RTC;\n\n        case 5:\n            return tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD;\n\n        case 6:\n            return tn === $.OPTION;\n\n        case 7:\n            return tn === $.CAPTION;\n\n        case 8:\n            return tn === $.OPTGROUP || tn === $.COLGROUP;\n    }\n\n    return false;\n}\n\nfunction isScopingElement(tn, ns) {\n    switch (tn.length) {\n        case 2:\n            if (tn === $.TD || tn === $.TH) {\n                return ns === NS.HTML;\n            } else if (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS) {\n                return ns === NS.MATHML;\n            }\n\n            break;\n\n        case 4:\n            if (tn === $.HTML) {\n                return ns === NS.HTML;\n            } else if (tn === $.DESC) {\n                return ns === NS.SVG;\n            }\n\n            break;\n\n        case 5:\n            if (tn === $.TABLE) {\n                return ns === NS.HTML;\n            } else if (tn === $.MTEXT) {\n                return ns === NS.MATHML;\n            } else if (tn === $.TITLE) {\n                return ns === NS.SVG;\n            }\n\n            break;\n\n        case 6:\n            return (tn === $.APPLET || tn === $.OBJECT) && ns === NS.HTML;\n\n        case 7:\n            return (tn === $.CAPTION || tn === $.MARQUEE) && ns === NS.HTML;\n\n        case 8:\n            return tn === $.TEMPLATE && ns === NS.HTML;\n\n        case 13:\n            return tn === $.FOREIGN_OBJECT && ns === NS.SVG;\n\n        case 14:\n            return tn === $.ANNOTATION_XML && ns === NS.MATHML;\n    }\n\n    return false;\n}\n\n//Stack of open elements\nclass OpenElementStack {\n    constructor(document, treeAdapter) {\n        this.stackTop = -1;\n        this.items = [];\n        this.current = document;\n        this.currentTagName = null;\n        this.currentTmplContent = null;\n        this.tmplCount = 0;\n        this.treeAdapter = treeAdapter;\n    }\n\n    //Index of element\n    _indexOf(element) {\n        let idx = -1;\n\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.items[i] === element) {\n                idx = i;\n                break;\n            }\n        }\n        return idx;\n    }\n\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagName === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagName = this.current && this.treeAdapter.getTagName(this.current);\n\n        this.currentTmplContent = this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : null;\n    }\n\n    //Mutations\n    push(element) {\n        this.items[++this.stackTop] = element;\n        this._updateCurrentElement();\n\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n    }\n\n    pop() {\n        this.stackTop--;\n\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n\n        this._updateCurrentElement();\n    }\n\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n\n        this.items[idx] = newElement;\n\n        if (idx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n    }\n\n    insertAfter(referenceElement, newElement) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n\n        this.items.splice(insertionIdx, 0, newElement);\n\n        if (insertionIdx === ++this.stackTop) {\n            this._updateCurrentElement();\n        }\n    }\n\n    popUntilTagNamePopped(tagName) {\n        while (this.stackTop > -1) {\n            const tn = this.currentTagName;\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\n\n            this.pop();\n\n            if (tn === tagName && ns === NS.HTML) {\n                break;\n            }\n        }\n    }\n\n    popUntilElementPopped(element) {\n        while (this.stackTop > -1) {\n            const poppedElement = this.current;\n\n            this.pop();\n\n            if (poppedElement === element) {\n                break;\n            }\n        }\n    }\n\n    popUntilNumberedHeaderPopped() {\n        while (this.stackTop > -1) {\n            const tn = this.currentTagName;\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\n\n            this.pop();\n\n            if (\n                tn === $.H1 ||\n                tn === $.H2 ||\n                tn === $.H3 ||\n                tn === $.H4 ||\n                tn === $.H5 ||\n                (tn === $.H6 && ns === NS.HTML)\n            ) {\n                break;\n            }\n        }\n    }\n\n    popUntilTableCellPopped() {\n        while (this.stackTop > -1) {\n            const tn = this.currentTagName;\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\n\n            this.pop();\n\n            if (tn === $.TD || (tn === $.TH && ns === NS.HTML)) {\n                break;\n            }\n        }\n    }\n\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.stackTop = 0;\n        this._updateCurrentElement();\n    }\n\n    clearBackToTableContext() {\n        while (\n            (this.currentTagName !== $.TABLE && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML) ||\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\n        ) {\n            this.pop();\n        }\n    }\n\n    clearBackToTableBodyContext() {\n        while (\n            (this.currentTagName !== $.TBODY &&\n                this.currentTagName !== $.TFOOT &&\n                this.currentTagName !== $.THEAD &&\n                this.currentTagName !== $.TEMPLATE &&\n                this.currentTagName !== $.HTML) ||\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\n        ) {\n            this.pop();\n        }\n    }\n\n    clearBackToTableRowContext() {\n        while (\n            (this.currentTagName !== $.TR && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML) ||\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\n        ) {\n            this.pop();\n        }\n    }\n\n    remove(element) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.items[i] === element) {\n                this.items.splice(i, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                break;\n            }\n        }\n    }\n\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        const element = this.items[1];\n\n        return element && this.treeAdapter.getTagName(element) === $.BODY ? element : null;\n    }\n\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n\n    getCommonAncestor(element) {\n        let elementIdx = this._indexOf(element);\n\n        return --elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.currentTagName === $.HTML;\n    }\n\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n\n            if (isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (\n                (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) &&\n                ns === NS.HTML\n            ) {\n                return true;\n            }\n\n            if (isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n\n            if ((tn === $.BUTTON && ns === NS.HTML) || isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (ns !== NS.HTML) {\n                continue;\n            }\n\n            if (tn === tagName) {\n                return true;\n            }\n\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (ns !== NS.HTML) {\n                continue;\n            }\n\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (ns !== NS.HTML) {\n                continue;\n            }\n\n            if (tn === tagName) {\n                return true;\n            }\n\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (isImpliedEndTagRequired(this.currentTagName)) {\n            this.pop();\n        }\n    }\n\n    generateImpliedEndTagsThoroughly() {\n        while (isImpliedEndTagRequiredThoroughly(this.currentTagName)) {\n            this.pop();\n        }\n    }\n\n    generateImpliedEndTagsWithExclusion(exclusionTagName) {\n        while (isImpliedEndTagRequired(this.currentTagName) && this.currentTagName !== exclusionTagName) {\n            this.pop();\n        }\n    }\n}\n\nmodule.exports = OpenElementStack;\n","'use strict';\n\n//Const\nconst NOAH_ARK_CAPACITY = 3;\n\n//List of formatting elements\nclass FormattingElementList {\n    constructor(treeAdapter) {\n        this.length = 0;\n        this.entries = [];\n        this.treeAdapter = treeAdapter;\n        this.bookmark = null;\n    }\n\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement) {\n        const candidates = [];\n\n        if (this.length >= NOAH_ARK_CAPACITY) {\n            const neAttrsLength = this.treeAdapter.getAttrList(newElement).length;\n            const neTagName = this.treeAdapter.getTagName(newElement);\n            const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n\n            for (let i = this.length - 1; i >= 0; i--) {\n                const entry = this.entries[i];\n\n                if (entry.type === FormattingElementList.MARKER_ENTRY) {\n                    break;\n                }\n\n                const element = entry.element;\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n\n                const isCandidate =\n                    this.treeAdapter.getTagName(element) === neTagName &&\n                    this.treeAdapter.getNamespaceURI(element) === neNamespaceURI &&\n                    elementAttrs.length === neAttrsLength;\n\n                if (isCandidate) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n\n        return candidates.length < NOAH_ARK_CAPACITY ? [] : candidates;\n    }\n\n    _ensureNoahArkCondition(newElement) {\n        const candidates = this._getNoahArkConditionCandidates(newElement);\n        let cLength = candidates.length;\n\n        if (cLength) {\n            const neAttrs = this.treeAdapter.getAttrList(newElement);\n            const neAttrsLength = neAttrs.length;\n            const neAttrsMap = Object.create(null);\n\n            //NOTE: build attrs map for the new element so we can perform fast lookups\n            for (let i = 0; i < neAttrsLength; i++) {\n                const neAttr = neAttrs[i];\n\n                neAttrsMap[neAttr.name] = neAttr.value;\n            }\n\n            for (let i = 0; i < neAttrsLength; i++) {\n                for (let j = 0; j < cLength; j++) {\n                    const cAttr = candidates[j].attrs[i];\n\n                    if (neAttrsMap[cAttr.name] !== cAttr.value) {\n                        candidates.splice(j, 1);\n                        cLength--;\n                    }\n\n                    if (candidates.length < NOAH_ARK_CAPACITY) {\n                        return;\n                    }\n                }\n            }\n\n            //NOTE: remove bottommost candidates until Noah's Ark condition will not be met\n            for (let i = cLength - 1; i >= NOAH_ARK_CAPACITY - 1; i--) {\n                this.entries.splice(candidates[i].idx, 1);\n                this.length--;\n            }\n        }\n    }\n\n    //Mutations\n    insertMarker() {\n        this.entries.push({ type: FormattingElementList.MARKER_ENTRY });\n        this.length++;\n    }\n\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n\n        this.entries.push({\n            type: FormattingElementList.ELEMENT_ENTRY,\n            element: element,\n            token: token\n        });\n\n        this.length++;\n    }\n\n    insertElementAfterBookmark(element, token) {\n        let bookmarkIdx = this.length - 1;\n\n        for (; bookmarkIdx >= 0; bookmarkIdx--) {\n            if (this.entries[bookmarkIdx] === this.bookmark) {\n                break;\n            }\n        }\n\n        this.entries.splice(bookmarkIdx + 1, 0, {\n            type: FormattingElementList.ELEMENT_ENTRY,\n            element: element,\n            token: token\n        });\n\n        this.length++;\n    }\n\n    removeEntry(entry) {\n        for (let i = this.length - 1; i >= 0; i--) {\n            if (this.entries[i] === entry) {\n                this.entries.splice(i, 1);\n                this.length--;\n                break;\n            }\n        }\n    }\n\n    clearToLastMarker() {\n        while (this.length) {\n            const entry = this.entries.pop();\n\n            this.length--;\n\n            if (entry.type === FormattingElementList.MARKER_ENTRY) {\n                break;\n            }\n        }\n    }\n\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        for (let i = this.length - 1; i >= 0; i--) {\n            const entry = this.entries[i];\n\n            if (entry.type === FormattingElementList.MARKER_ENTRY) {\n                return null;\n            }\n\n            if (this.treeAdapter.getTagName(entry.element) === tagName) {\n                return entry;\n            }\n        }\n\n        return null;\n    }\n\n    getElementEntry(element) {\n        for (let i = this.length - 1; i >= 0; i--) {\n            const entry = this.entries[i];\n\n            if (entry.type === FormattingElementList.ELEMENT_ENTRY && entry.element === element) {\n                return entry;\n            }\n        }\n\n        return null;\n    }\n}\n\n//Entry types\nFormattingElementList.MARKER_ENTRY = 'MARKER_ENTRY';\nFormattingElementList.ELEMENT_ENTRY = 'ELEMENT_ENTRY';\n\nmodule.exports = FormattingElementList;\n","'use strict';\n\nclass Mixin {\n    constructor(host) {\n        const originalMethods = {};\n        const overriddenMethods = this._getOverriddenMethods(this, originalMethods);\n\n        for (const key of Object.keys(overriddenMethods)) {\n            if (typeof overriddenMethods[key] === 'function') {\n                originalMethods[key] = host[key];\n                host[key] = overriddenMethods[key];\n            }\n        }\n    }\n\n    _getOverriddenMethods() {\n        throw new Error('Not implemented');\n    }\n}\n\nMixin.install = function(host, Ctor, opts) {\n    if (!host.__mixins) {\n        host.__mixins = [];\n    }\n\n    for (let i = 0; i < host.__mixins.length; i++) {\n        if (host.__mixins[i].constructor === Ctor) {\n            return host.__mixins[i];\n        }\n    }\n\n    const mixin = new Ctor(host, opts);\n\n    host.__mixins.push(mixin);\n\n    return mixin;\n};\n\nmodule.exports = Mixin;\n","'use strict';\n\nconst Mixin = require('../../utils/mixin');\n\nclass PositionTrackingPreprocessorMixin extends Mixin {\n    constructor(preprocessor) {\n        super(preprocessor);\n\n        this.preprocessor = preprocessor;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n\n        this.offset = 0;\n        this.col = 0;\n        this.line = 1;\n    }\n\n    _getOverriddenMethods(mxn, orig) {\n        return {\n            advance() {\n                const pos = this.pos + 1;\n                const ch = this.html[pos];\n\n                //NOTE: LF should be in the last column of the line\n                if (mxn.isEol) {\n                    mxn.isEol = false;\n                    mxn.line++;\n                    mxn.lineStartPos = pos;\n                }\n\n                if (ch === '\\n' || (ch === '\\r' && this.html[pos + 1] !== '\\n')) {\n                    mxn.isEol = true;\n                }\n\n                mxn.col = pos - mxn.lineStartPos + 1;\n                mxn.offset = mxn.droppedBufferSize + pos;\n\n                return orig.advance.call(this);\n            },\n\n            retreat() {\n                orig.retreat.call(this);\n\n                mxn.isEol = false;\n                mxn.col = this.pos - mxn.lineStartPos + 1;\n            },\n\n            dropParsedChunk() {\n                const prevPos = this.pos;\n\n                orig.dropParsedChunk.call(this);\n\n                const reduction = prevPos - this.pos;\n\n                mxn.lineStartPos -= reduction;\n                mxn.droppedBufferSize += reduction;\n                mxn.offset = mxn.droppedBufferSize + this.pos;\n            }\n        };\n    }\n}\n\nmodule.exports = PositionTrackingPreprocessorMixin;\n","'use strict';\n\nconst Mixin = require('../../utils/mixin');\nconst Tokenizer = require('../../tokenizer');\nconst PositionTrackingPreprocessorMixin = require('../position-tracking/preprocessor-mixin');\n\nclass LocationInfoTokenizerMixin extends Mixin {\n    constructor(tokenizer) {\n        super(tokenizer);\n\n        this.tokenizer = tokenizer;\n        this.posTracker = Mixin.install(tokenizer.preprocessor, PositionTrackingPreprocessorMixin);\n        this.currentAttrLocation = null;\n        this.ctLoc = null;\n    }\n\n    _getCurrentLocation() {\n        return {\n            startLine: this.posTracker.line,\n            startCol: this.posTracker.col,\n            startOffset: this.posTracker.offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1\n        };\n    }\n\n    _attachCurrentAttrLocationInfo() {\n        this.currentAttrLocation.endLine = this.posTracker.line;\n        this.currentAttrLocation.endCol = this.posTracker.col;\n        this.currentAttrLocation.endOffset = this.posTracker.offset;\n\n        const currentToken = this.tokenizer.currentToken;\n        const currentAttr = this.tokenizer.currentAttr;\n\n        if (!currentToken.location.attrs) {\n            currentToken.location.attrs = Object.create(null);\n        }\n\n        currentToken.location.attrs[currentAttr.name] = this.currentAttrLocation;\n    }\n\n    _getOverriddenMethods(mxn, orig) {\n        const methods = {\n            _createStartTagToken() {\n                orig._createStartTagToken.call(this);\n                this.currentToken.location = mxn.ctLoc;\n            },\n\n            _createEndTagToken() {\n                orig._createEndTagToken.call(this);\n                this.currentToken.location = mxn.ctLoc;\n            },\n\n            _createCommentToken() {\n                orig._createCommentToken.call(this);\n                this.currentToken.location = mxn.ctLoc;\n            },\n\n            _createDoctypeToken(initialName) {\n                orig._createDoctypeToken.call(this, initialName);\n                this.currentToken.location = mxn.ctLoc;\n            },\n\n            _createCharacterToken(type, ch) {\n                orig._createCharacterToken.call(this, type, ch);\n                this.currentCharacterToken.location = mxn.ctLoc;\n            },\n\n            _createEOFToken() {\n                orig._createEOFToken.call(this);\n                this.currentToken.location = mxn._getCurrentLocation();\n            },\n\n            _createAttr(attrNameFirstCh) {\n                orig._createAttr.call(this, attrNameFirstCh);\n                mxn.currentAttrLocation = mxn._getCurrentLocation();\n            },\n\n            _leaveAttrName(toState) {\n                orig._leaveAttrName.call(this, toState);\n                mxn._attachCurrentAttrLocationInfo();\n            },\n\n            _leaveAttrValue(toState) {\n                orig._leaveAttrValue.call(this, toState);\n                mxn._attachCurrentAttrLocationInfo();\n            },\n\n            _emitCurrentToken() {\n                const ctLoc = this.currentToken.location;\n\n                //NOTE: if we have pending character token make it's end location equal to the\n                //current token's start location.\n                if (this.currentCharacterToken) {\n                    this.currentCharacterToken.location.endLine = ctLoc.startLine;\n                    this.currentCharacterToken.location.endCol = ctLoc.startCol;\n                    this.currentCharacterToken.location.endOffset = ctLoc.startOffset;\n                }\n\n                if (this.currentToken.type === Tokenizer.EOF_TOKEN) {\n                    ctLoc.endLine = ctLoc.startLine;\n                    ctLoc.endCol = ctLoc.startCol;\n                    ctLoc.endOffset = ctLoc.startOffset;\n                } else {\n                    ctLoc.endLine = mxn.posTracker.line;\n                    ctLoc.endCol = mxn.posTracker.col + 1;\n                    ctLoc.endOffset = mxn.posTracker.offset + 1;\n                }\n\n                orig._emitCurrentToken.call(this);\n            },\n\n            _emitCurrentCharacterToken() {\n                const ctLoc = this.currentCharacterToken && this.currentCharacterToken.location;\n\n                //NOTE: if we have character token and it's location wasn't set in the _emitCurrentToken(),\n                //then set it's location at the current preprocessor position.\n                //We don't need to increment preprocessor position, since character token\n                //emission is always forced by the start of the next character token here.\n                //So, we already have advanced position.\n                if (ctLoc && ctLoc.endOffset === -1) {\n                    ctLoc.endLine = mxn.posTracker.line;\n                    ctLoc.endCol = mxn.posTracker.col;\n                    ctLoc.endOffset = mxn.posTracker.offset;\n                }\n\n                orig._emitCurrentCharacterToken.call(this);\n            }\n        };\n\n        //NOTE: patch initial states for each mode to obtain token start position\n        Object.keys(Tokenizer.MODE).forEach(modeName => {\n            const state = Tokenizer.MODE[modeName];\n\n            methods[state] = function(cp) {\n                mxn.ctLoc = mxn._getCurrentLocation();\n                orig[state].call(this, cp);\n            };\n        });\n\n        return methods;\n    }\n}\n\nmodule.exports = LocationInfoTokenizerMixin;\n","'use strict';\n\nconst Mixin = require('../../utils/mixin');\n\nclass LocationInfoOpenElementStackMixin extends Mixin {\n    constructor(stack, opts) {\n        super(stack);\n\n        this.onItemPop = opts.onItemPop;\n    }\n\n    _getOverriddenMethods(mxn, orig) {\n        return {\n            pop() {\n                mxn.onItemPop(this.current);\n                orig.pop.call(this);\n            },\n\n            popAllUpToHtmlElement() {\n                for (let i = this.stackTop; i > 0; i--) {\n                    mxn.onItemPop(this.items[i]);\n                }\n\n                orig.popAllUpToHtmlElement.call(this);\n            },\n\n            remove(element) {\n                mxn.onItemPop(this.current);\n                orig.remove.call(this, element);\n            }\n        };\n    }\n}\n\nmodule.exports = LocationInfoOpenElementStackMixin;\n","'use strict';\n\nconst Mixin = require('../../utils/mixin');\nconst Tokenizer = require('../../tokenizer');\nconst LocationInfoTokenizerMixin = require('./tokenizer-mixin');\nconst LocationInfoOpenElementStackMixin = require('./open-element-stack-mixin');\nconst HTML = require('../../common/html');\n\n//Aliases\nconst $ = HTML.TAG_NAMES;\n\nclass LocationInfoParserMixin extends Mixin {\n    constructor(parser) {\n        super(parser);\n\n        this.parser = parser;\n        this.treeAdapter = this.parser.treeAdapter;\n        this.posTracker = null;\n        this.lastStartTagToken = null;\n        this.lastFosterParentingLocation = null;\n        this.currentToken = null;\n    }\n\n    _setStartLocation(element) {\n        let loc = null;\n\n        if (this.lastStartTagToken) {\n            loc = Object.assign({}, this.lastStartTagToken.location);\n            loc.startTag = this.lastStartTagToken.location;\n        }\n\n        this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n    }\n\n    _setEndLocation(element, closingToken) {\n        const loc = this.treeAdapter.getNodeSourceCodeLocation(element);\n\n        if (loc) {\n            if (closingToken.location) {\n                const ctLoc = closingToken.location;\n                const tn = this.treeAdapter.getTagName(element);\n\n                // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n                // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n                const isClosingEndTag = closingToken.type === Tokenizer.END_TAG_TOKEN && tn === closingToken.tagName;\n                const endLoc = {};\n                if (isClosingEndTag) {\n                    endLoc.endTag = Object.assign({}, ctLoc);\n                    endLoc.endLine = ctLoc.endLine;\n                    endLoc.endCol = ctLoc.endCol;\n                    endLoc.endOffset = ctLoc.endOffset;\n                } else {\n                    endLoc.endLine = ctLoc.startLine;\n                    endLoc.endCol = ctLoc.startCol;\n                    endLoc.endOffset = ctLoc.startOffset;\n                }\n\n                this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n            }\n        }\n    }\n\n    _getOverriddenMethods(mxn, orig) {\n        return {\n            _bootstrap(document, fragmentContext) {\n                orig._bootstrap.call(this, document, fragmentContext);\n\n                mxn.lastStartTagToken = null;\n                mxn.lastFosterParentingLocation = null;\n                mxn.currentToken = null;\n\n                const tokenizerMixin = Mixin.install(this.tokenizer, LocationInfoTokenizerMixin);\n\n                mxn.posTracker = tokenizerMixin.posTracker;\n\n                Mixin.install(this.openElements, LocationInfoOpenElementStackMixin, {\n                    onItemPop: function(element) {\n                        mxn._setEndLocation(element, mxn.currentToken);\n                    }\n                });\n            },\n\n            _runParsingLoop(scriptHandler) {\n                orig._runParsingLoop.call(this, scriptHandler);\n\n                // NOTE: generate location info for elements\n                // that remains on open element stack\n                for (let i = this.openElements.stackTop; i >= 0; i--) {\n                    mxn._setEndLocation(this.openElements.items[i], mxn.currentToken);\n                }\n            },\n\n            //Token processing\n            _processTokenInForeignContent(token) {\n                mxn.currentToken = token;\n                orig._processTokenInForeignContent.call(this, token);\n            },\n\n            _processToken(token) {\n                mxn.currentToken = token;\n                orig._processToken.call(this, token);\n\n                //NOTE: <body> and <html> are never popped from the stack, so we need to updated\n                //their end location explicitly.\n                const requireExplicitUpdate =\n                    token.type === Tokenizer.END_TAG_TOKEN &&\n                    (token.tagName === $.HTML || (token.tagName === $.BODY && this.openElements.hasInScope($.BODY)));\n\n                if (requireExplicitUpdate) {\n                    for (let i = this.openElements.stackTop; i >= 0; i--) {\n                        const element = this.openElements.items[i];\n\n                        if (this.treeAdapter.getTagName(element) === token.tagName) {\n                            mxn._setEndLocation(element, token);\n                            break;\n                        }\n                    }\n                }\n            },\n\n            //Doctype\n            _setDocumentType(token) {\n                orig._setDocumentType.call(this, token);\n\n                const documentChildren = this.treeAdapter.getChildNodes(this.document);\n                const cnLength = documentChildren.length;\n\n                for (let i = 0; i < cnLength; i++) {\n                    const node = documentChildren[i];\n\n                    if (this.treeAdapter.isDocumentTypeNode(node)) {\n                        this.treeAdapter.setNodeSourceCodeLocation(node, token.location);\n                        break;\n                    }\n                }\n            },\n\n            //Elements\n            _attachElementToTree(element) {\n                //NOTE: _attachElementToTree is called from _appendElement, _insertElement and _insertTemplate methods.\n                //So we will use token location stored in this methods for the element.\n                mxn._setStartLocation(element);\n                mxn.lastStartTagToken = null;\n                orig._attachElementToTree.call(this, element);\n            },\n\n            _appendElement(token, namespaceURI) {\n                mxn.lastStartTagToken = token;\n                orig._appendElement.call(this, token, namespaceURI);\n            },\n\n            _insertElement(token, namespaceURI) {\n                mxn.lastStartTagToken = token;\n                orig._insertElement.call(this, token, namespaceURI);\n            },\n\n            _insertTemplate(token) {\n                mxn.lastStartTagToken = token;\n                orig._insertTemplate.call(this, token);\n\n                const tmplContent = this.treeAdapter.getTemplateContent(this.openElements.current);\n\n                this.treeAdapter.setNodeSourceCodeLocation(tmplContent, null);\n            },\n\n            _insertFakeRootElement() {\n                orig._insertFakeRootElement.call(this);\n                this.treeAdapter.setNodeSourceCodeLocation(this.openElements.current, null);\n            },\n\n            //Comments\n            _appendCommentNode(token, parent) {\n                orig._appendCommentNode.call(this, token, parent);\n\n                const children = this.treeAdapter.getChildNodes(parent);\n                const commentNode = children[children.length - 1];\n\n                this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n            },\n\n            //Text\n            _findFosterParentingLocation() {\n                //NOTE: store last foster parenting location, so we will be able to find inserted text\n                //in case of foster parenting\n                mxn.lastFosterParentingLocation = orig._findFosterParentingLocation.call(this);\n\n                return mxn.lastFosterParentingLocation;\n            },\n\n            _insertCharacters(token) {\n                orig._insertCharacters.call(this, token);\n\n                const hasFosterParent = this._shouldFosterParentOnInsertion();\n\n                const parent =\n                    (hasFosterParent && mxn.lastFosterParentingLocation.parent) ||\n                    this.openElements.currentTmplContent ||\n                    this.openElements.current;\n\n                const siblings = this.treeAdapter.getChildNodes(parent);\n\n                const textNodeIdx =\n                    hasFosterParent && mxn.lastFosterParentingLocation.beforeElement\n                        ? siblings.indexOf(mxn.lastFosterParentingLocation.beforeElement) - 1\n                        : siblings.length - 1;\n\n                const textNode = siblings[textNodeIdx];\n\n                //NOTE: if we have location assigned by another token, then just update end position\n                const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n\n                if (tnLoc) {\n                    const { endLine, endCol, endOffset } = token.location;\n                    this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n                } else {\n                    this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n                }\n            }\n        };\n    }\n}\n\nmodule.exports = LocationInfoParserMixin;\n","'use strict';\n\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingMixinBase extends Mixin {\n    constructor(host, opts) {\n        super(host);\n\n        this.posTracker = null;\n        this.onParseError = opts.onParseError;\n    }\n\n    _setErrorLocation(err) {\n        err.startLine = err.endLine = this.posTracker.line;\n        err.startCol = err.endCol = this.posTracker.col;\n        err.startOffset = err.endOffset = this.posTracker.offset;\n    }\n\n    _reportError(code) {\n        const err = {\n            code: code,\n            startLine: -1,\n            startCol: -1,\n            startOffset: -1,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1\n        };\n\n        this._setErrorLocation(err);\n        this.onParseError(err);\n    }\n\n    _getOverriddenMethods(mxn) {\n        return {\n            _err(code) {\n                mxn._reportError(code);\n            }\n        };\n    }\n}\n\nmodule.exports = ErrorReportingMixinBase;\n","'use strict';\n\nconst ErrorReportingMixinBase = require('./mixin-base');\nconst PositionTrackingPreprocessorMixin = require('../position-tracking/preprocessor-mixin');\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingPreprocessorMixin extends ErrorReportingMixinBase {\n    constructor(preprocessor, opts) {\n        super(preprocessor, opts);\n\n        this.posTracker = Mixin.install(preprocessor, PositionTrackingPreprocessorMixin);\n        this.lastErrOffset = -1;\n    }\n\n    _reportError(code) {\n        //NOTE: avoid reporting error twice on advance/retreat\n        if (this.lastErrOffset !== this.posTracker.offset) {\n            this.lastErrOffset = this.posTracker.offset;\n            super._reportError(code);\n        }\n    }\n}\n\nmodule.exports = ErrorReportingPreprocessorMixin;\n","'use strict';\n\nconst ErrorReportingMixinBase = require('./mixin-base');\nconst ErrorReportingPreprocessorMixin = require('./preprocessor-mixin');\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingTokenizerMixin extends ErrorReportingMixinBase {\n    constructor(tokenizer, opts) {\n        super(tokenizer, opts);\n\n        const preprocessorMixin = Mixin.install(tokenizer.preprocessor, ErrorReportingPreprocessorMixin, opts);\n\n        this.posTracker = preprocessorMixin.posTracker;\n    }\n}\n\nmodule.exports = ErrorReportingTokenizerMixin;\n","'use strict';\n\nconst ErrorReportingMixinBase = require('./mixin-base');\nconst ErrorReportingTokenizerMixin = require('./tokenizer-mixin');\nconst LocationInfoTokenizerMixin = require('../location-info/tokenizer-mixin');\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingParserMixin extends ErrorReportingMixinBase {\n    constructor(parser, opts) {\n        super(parser, opts);\n\n        this.opts = opts;\n        this.ctLoc = null;\n        this.locBeforeToken = false;\n    }\n\n    _setErrorLocation(err) {\n        if (this.ctLoc) {\n            err.startLine = this.ctLoc.startLine;\n            err.startCol = this.ctLoc.startCol;\n            err.startOffset = this.ctLoc.startOffset;\n\n            err.endLine = this.locBeforeToken ? this.ctLoc.startLine : this.ctLoc.endLine;\n            err.endCol = this.locBeforeToken ? this.ctLoc.startCol : this.ctLoc.endCol;\n            err.endOffset = this.locBeforeToken ? this.ctLoc.startOffset : this.ctLoc.endOffset;\n        }\n    }\n\n    _getOverriddenMethods(mxn, orig) {\n        return {\n            _bootstrap(document, fragmentContext) {\n                orig._bootstrap.call(this, document, fragmentContext);\n\n                Mixin.install(this.tokenizer, ErrorReportingTokenizerMixin, mxn.opts);\n                Mixin.install(this.tokenizer, LocationInfoTokenizerMixin);\n            },\n\n            _processInputToken(token) {\n                mxn.ctLoc = token.location;\n\n                orig._processInputToken.call(this, token);\n            },\n\n            _err(code, options) {\n                mxn.locBeforeToken = options && options.beforeToken;\n                mxn._reportError(code);\n            }\n        };\n    }\n}\n\nmodule.exports = ErrorReportingParserMixin;\n","'use strict';\n\nconst { DOCUMENT_MODE } = require('../common/html');\n\n//Node construction\nexports.createDocument = function() {\n    return {\n        nodeName: '#document',\n        mode: DOCUMENT_MODE.NO_QUIRKS,\n        childNodes: []\n    };\n};\n\nexports.createDocumentFragment = function() {\n    return {\n        nodeName: '#document-fragment',\n        childNodes: []\n    };\n};\n\nexports.createElement = function(tagName, namespaceURI, attrs) {\n    return {\n        nodeName: tagName,\n        tagName: tagName,\n        attrs: attrs,\n        namespaceURI: namespaceURI,\n        childNodes: [],\n        parentNode: null\n    };\n};\n\nexports.createCommentNode = function(data) {\n    return {\n        nodeName: '#comment',\n        data: data,\n        parentNode: null\n    };\n};\n\nconst createTextNode = function(value) {\n    return {\n        nodeName: '#text',\n        value: value,\n        parentNode: null\n    };\n};\n\n//Tree mutation\nconst appendChild = (exports.appendChild = function(parentNode, newNode) {\n    parentNode.childNodes.push(newNode);\n    newNode.parentNode = parentNode;\n});\n\nconst insertBefore = (exports.insertBefore = function(parentNode, newNode, referenceNode) {\n    const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n\n    parentNode.childNodes.splice(insertionIdx, 0, newNode);\n    newNode.parentNode = parentNode;\n});\n\nexports.setTemplateContent = function(templateElement, contentElement) {\n    templateElement.content = contentElement;\n};\n\nexports.getTemplateContent = function(templateElement) {\n    return templateElement.content;\n};\n\nexports.setDocumentType = function(document, name, publicId, systemId) {\n    let doctypeNode = null;\n\n    for (let i = 0; i < document.childNodes.length; i++) {\n        if (document.childNodes[i].nodeName === '#documentType') {\n            doctypeNode = document.childNodes[i];\n            break;\n        }\n    }\n\n    if (doctypeNode) {\n        doctypeNode.name = name;\n        doctypeNode.publicId = publicId;\n        doctypeNode.systemId = systemId;\n    } else {\n        appendChild(document, {\n            nodeName: '#documentType',\n            name: name,\n            publicId: publicId,\n            systemId: systemId\n        });\n    }\n};\n\nexports.setDocumentMode = function(document, mode) {\n    document.mode = mode;\n};\n\nexports.getDocumentMode = function(document) {\n    return document.mode;\n};\n\nexports.detachNode = function(node) {\n    if (node.parentNode) {\n        const idx = node.parentNode.childNodes.indexOf(node);\n\n        node.parentNode.childNodes.splice(idx, 1);\n        node.parentNode = null;\n    }\n};\n\nexports.insertText = function(parentNode, text) {\n    if (parentNode.childNodes.length) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n\n        if (prevNode.nodeName === '#text') {\n            prevNode.value += text;\n            return;\n        }\n    }\n\n    appendChild(parentNode, createTextNode(text));\n};\n\nexports.insertTextBefore = function(parentNode, text, referenceNode) {\n    const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n\n    if (prevNode && prevNode.nodeName === '#text') {\n        prevNode.value += text;\n    } else {\n        insertBefore(parentNode, createTextNode(text), referenceNode);\n    }\n};\n\nexports.adoptAttributes = function(recipient, attrs) {\n    const recipientAttrsMap = [];\n\n    for (let i = 0; i < recipient.attrs.length; i++) {\n        recipientAttrsMap.push(recipient.attrs[i].name);\n    }\n\n    for (let j = 0; j < attrs.length; j++) {\n        if (recipientAttrsMap.indexOf(attrs[j].name) === -1) {\n            recipient.attrs.push(attrs[j]);\n        }\n    }\n};\n\n//Tree traversing\nexports.getFirstChild = function(node) {\n    return node.childNodes[0];\n};\n\nexports.getChildNodes = function(node) {\n    return node.childNodes;\n};\n\nexports.getParentNode = function(node) {\n    return node.parentNode;\n};\n\nexports.getAttrList = function(element) {\n    return element.attrs;\n};\n\n//Node data\nexports.getTagName = function(element) {\n    return element.tagName;\n};\n\nexports.getNamespaceURI = function(element) {\n    return element.namespaceURI;\n};\n\nexports.getTextNodeContent = function(textNode) {\n    return textNode.value;\n};\n\nexports.getCommentNodeContent = function(commentNode) {\n    return commentNode.data;\n};\n\nexports.getDocumentTypeNodeName = function(doctypeNode) {\n    return doctypeNode.name;\n};\n\nexports.getDocumentTypeNodePublicId = function(doctypeNode) {\n    return doctypeNode.publicId;\n};\n\nexports.getDocumentTypeNodeSystemId = function(doctypeNode) {\n    return doctypeNode.systemId;\n};\n\n//Node types\nexports.isTextNode = function(node) {\n    return node.nodeName === '#text';\n};\n\nexports.isCommentNode = function(node) {\n    return node.nodeName === '#comment';\n};\n\nexports.isDocumentTypeNode = function(node) {\n    return node.nodeName === '#documentType';\n};\n\nexports.isElementNode = function(node) {\n    return !!node.tagName;\n};\n\n// Source code location\nexports.setNodeSourceCodeLocation = function(node, location) {\n    node.sourceCodeLocation = location;\n};\n\nexports.getNodeSourceCodeLocation = function(node) {\n    return node.sourceCodeLocation;\n};\n\nexports.updateNodeSourceCodeLocation = function(node, endLocation) {\n    node.sourceCodeLocation = Object.assign(node.sourceCodeLocation, endLocation);\n};\n","'use strict';\n\nmodule.exports = function mergeOptions(defaults, options) {\n    options = options || Object.create(null);\n\n    return [defaults, options].reduce((merged, optObj) => {\n        Object.keys(optObj).forEach(key => {\n            merged[key] = optObj[key];\n        });\n\n        return merged;\n    }, Object.create(null));\n};\n","'use strict';\n\nconst { DOCUMENT_MODE } = require('./html');\n\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\n\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//'\n];\n\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = QUIRKS_MODE_PUBLIC_ID_PREFIXES.concat([\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//'\n]);\n\nconst QUIRKS_MODE_PUBLIC_IDS = ['-//w3o//dtd w3 html strict 3.0//en//', '-/w3c/dtd html 4.0 transitional/en', 'html'];\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\n\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = LIMITED_QUIRKS_PUBLIC_ID_PREFIXES.concat([\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//'\n]);\n\n//Utils\nfunction enquoteDoctypeId(id) {\n    const quote = id.indexOf('\"') !== -1 ? \"'\" : '\"';\n\n    return quote + id + quote;\n}\n\nfunction hasPrefix(publicId, prefixes) {\n    for (let i = 0; i < prefixes.length; i++) {\n        if (publicId.indexOf(prefixes[i]) === 0) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n//API\nexports.isConforming = function(token) {\n    return (\n        token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID)\n    );\n};\n\nexports.getDocumentMode = function(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n\n    const systemId = token.systemId;\n\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n\n    let publicId = token.publicId;\n\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n\n        if (QUIRKS_MODE_PUBLIC_IDS.indexOf(publicId) > -1) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n\n    return DOCUMENT_MODE.NO_QUIRKS;\n};\n\nexports.serializeContent = function(name, publicId, systemId) {\n    let str = '!DOCTYPE ';\n\n    if (name) {\n        str += name;\n    }\n\n    if (publicId) {\n        str += ' PUBLIC ' + enquoteDoctypeId(publicId);\n    } else if (systemId) {\n        str += ' SYSTEM';\n    }\n\n    if (systemId !== null) {\n        str += ' ' + enquoteDoctypeId(systemId);\n    }\n\n    return str;\n};\n","'use strict';\n\nconst Tokenizer = require('../tokenizer');\nconst HTML = require('./html');\n\n//Aliases\nconst $ = HTML.TAG_NAMES;\nconst NS = HTML.NAMESPACES;\nconst ATTRS = HTML.ATTRS;\n\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml'\n};\n\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = {\n    attributename: 'attributeName',\n    attributetype: 'attributeType',\n    basefrequency: 'baseFrequency',\n    baseprofile: 'baseProfile',\n    calcmode: 'calcMode',\n    clippathunits: 'clipPathUnits',\n    diffuseconstant: 'diffuseConstant',\n    edgemode: 'edgeMode',\n    filterunits: 'filterUnits',\n    glyphref: 'glyphRef',\n    gradienttransform: 'gradientTransform',\n    gradientunits: 'gradientUnits',\n    kernelmatrix: 'kernelMatrix',\n    kernelunitlength: 'kernelUnitLength',\n    keypoints: 'keyPoints',\n    keysplines: 'keySplines',\n    keytimes: 'keyTimes',\n    lengthadjust: 'lengthAdjust',\n    limitingconeangle: 'limitingConeAngle',\n    markerheight: 'markerHeight',\n    markerunits: 'markerUnits',\n    markerwidth: 'markerWidth',\n    maskcontentunits: 'maskContentUnits',\n    maskunits: 'maskUnits',\n    numoctaves: 'numOctaves',\n    pathlength: 'pathLength',\n    patterncontentunits: 'patternContentUnits',\n    patterntransform: 'patternTransform',\n    patternunits: 'patternUnits',\n    pointsatx: 'pointsAtX',\n    pointsaty: 'pointsAtY',\n    pointsatz: 'pointsAtZ',\n    preservealpha: 'preserveAlpha',\n    preserveaspectratio: 'preserveAspectRatio',\n    primitiveunits: 'primitiveUnits',\n    refx: 'refX',\n    refy: 'refY',\n    repeatcount: 'repeatCount',\n    repeatdur: 'repeatDur',\n    requiredextensions: 'requiredExtensions',\n    requiredfeatures: 'requiredFeatures',\n    specularconstant: 'specularConstant',\n    specularexponent: 'specularExponent',\n    spreadmethod: 'spreadMethod',\n    startoffset: 'startOffset',\n    stddeviation: 'stdDeviation',\n    stitchtiles: 'stitchTiles',\n    surfacescale: 'surfaceScale',\n    systemlanguage: 'systemLanguage',\n    tablevalues: 'tableValues',\n    targetx: 'targetX',\n    targety: 'targetY',\n    textlength: 'textLength',\n    viewbox: 'viewBox',\n    viewtarget: 'viewTarget',\n    xchannelselector: 'xChannelSelector',\n    ychannelselector: 'yChannelSelector',\n    zoomandpan: 'zoomAndPan'\n};\n\nconst XML_ATTRS_ADJUSTMENT_MAP = {\n    'xlink:actuate': { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK },\n    'xlink:arcrole': { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK },\n    'xlink:href': { prefix: 'xlink', name: 'href', namespace: NS.XLINK },\n    'xlink:role': { prefix: 'xlink', name: 'role', namespace: NS.XLINK },\n    'xlink:show': { prefix: 'xlink', name: 'show', namespace: NS.XLINK },\n    'xlink:title': { prefix: 'xlink', name: 'title', namespace: NS.XLINK },\n    'xlink:type': { prefix: 'xlink', name: 'type', namespace: NS.XLINK },\n    'xml:base': { prefix: 'xml', name: 'base', namespace: NS.XML },\n    'xml:lang': { prefix: 'xml', name: 'lang', namespace: NS.XML },\n    'xml:space': { prefix: 'xml', name: 'space', namespace: NS.XML },\n    xmlns: { prefix: '', name: 'xmlns', namespace: NS.XMLNS },\n    'xmlns:xlink': { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }\n};\n\n//SVG tag names adjustment map\nconst SVG_TAG_NAMES_ADJUSTMENT_MAP = (exports.SVG_TAG_NAMES_ADJUSTMENT_MAP = {\n    altglyph: 'altGlyph',\n    altglyphdef: 'altGlyphDef',\n    altglyphitem: 'altGlyphItem',\n    animatecolor: 'animateColor',\n    animatemotion: 'animateMotion',\n    animatetransform: 'animateTransform',\n    clippath: 'clipPath',\n    feblend: 'feBlend',\n    fecolormatrix: 'feColorMatrix',\n    fecomponenttransfer: 'feComponentTransfer',\n    fecomposite: 'feComposite',\n    feconvolvematrix: 'feConvolveMatrix',\n    fediffuselighting: 'feDiffuseLighting',\n    fedisplacementmap: 'feDisplacementMap',\n    fedistantlight: 'feDistantLight',\n    feflood: 'feFlood',\n    fefunca: 'feFuncA',\n    fefuncb: 'feFuncB',\n    fefuncg: 'feFuncG',\n    fefuncr: 'feFuncR',\n    fegaussianblur: 'feGaussianBlur',\n    feimage: 'feImage',\n    femerge: 'feMerge',\n    femergenode: 'feMergeNode',\n    femorphology: 'feMorphology',\n    feoffset: 'feOffset',\n    fepointlight: 'fePointLight',\n    fespecularlighting: 'feSpecularLighting',\n    fespotlight: 'feSpotLight',\n    fetile: 'feTile',\n    feturbulence: 'feTurbulence',\n    foreignobject: 'foreignObject',\n    glyphref: 'glyphRef',\n    lineargradient: 'linearGradient',\n    radialgradient: 'radialGradient',\n    textpath: 'textPath'\n});\n\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = {\n    [$.B]: true,\n    [$.BIG]: true,\n    [$.BLOCKQUOTE]: true,\n    [$.BODY]: true,\n    [$.BR]: true,\n    [$.CENTER]: true,\n    [$.CODE]: true,\n    [$.DD]: true,\n    [$.DIV]: true,\n    [$.DL]: true,\n    [$.DT]: true,\n    [$.EM]: true,\n    [$.EMBED]: true,\n    [$.H1]: true,\n    [$.H2]: true,\n    [$.H3]: true,\n    [$.H4]: true,\n    [$.H5]: true,\n    [$.H6]: true,\n    [$.HEAD]: true,\n    [$.HR]: true,\n    [$.I]: true,\n    [$.IMG]: true,\n    [$.LI]: true,\n    [$.LISTING]: true,\n    [$.MENU]: true,\n    [$.META]: true,\n    [$.NOBR]: true,\n    [$.OL]: true,\n    [$.P]: true,\n    [$.PRE]: true,\n    [$.RUBY]: true,\n    [$.S]: true,\n    [$.SMALL]: true,\n    [$.SPAN]: true,\n    [$.STRONG]: true,\n    [$.STRIKE]: true,\n    [$.SUB]: true,\n    [$.SUP]: true,\n    [$.TABLE]: true,\n    [$.TT]: true,\n    [$.U]: true,\n    [$.UL]: true,\n    [$.VAR]: true\n};\n\n//Check exit from foreign content\nexports.causesExit = function(startTagToken) {\n    const tn = startTagToken.tagName;\n    const isFontWithAttrs =\n        tn === $.FONT &&\n        (Tokenizer.getTokenAttr(startTagToken, ATTRS.COLOR) !== null ||\n            Tokenizer.getTokenAttr(startTagToken, ATTRS.SIZE) !== null ||\n            Tokenizer.getTokenAttr(startTagToken, ATTRS.FACE) !== null);\n\n    return isFontWithAttrs ? true : EXITS_FOREIGN_CONTENT[tn];\n};\n\n//Token adjustments\nexports.adjustTokenMathMLAttrs = function(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n};\n\nexports.adjustTokenSVGAttrs = function(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP[token.attrs[i].name];\n\n        if (adjustedAttrName) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n};\n\nexports.adjustTokenXMLAttrs = function(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP[token.attrs[i].name];\n\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n};\n\nexports.adjustTokenSVGTagName = function(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP[token.tagName];\n\n    if (adjustedTagName) {\n        token.tagName = adjustedTagName;\n    }\n};\n\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\n\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\n\nexports.isIntegrationPoint = function(tn, ns, attrs, foreignNS) {\n    if ((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) {\n        return true;\n    }\n\n    if ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)) {\n        return true;\n    }\n\n    return false;\n};\n","'use strict';\n\nconst Tokenizer = require('../tokenizer');\nconst OpenElementStack = require('./open-element-stack');\nconst FormattingElementList = require('./formatting-element-list');\nconst LocationInfoParserMixin = require('../extensions/location-info/parser-mixin');\nconst ErrorReportingParserMixin = require('../extensions/error-reporting/parser-mixin');\nconst Mixin = require('../utils/mixin');\nconst defaultTreeAdapter = require('../tree-adapters/default');\nconst mergeOptions = require('../utils/merge-options');\nconst doctype = require('../common/doctype');\nconst foreignContent = require('../common/foreign-content');\nconst ERR = require('../common/error-codes');\nconst unicode = require('../common/unicode');\nconst HTML = require('../common/html');\n\n//Aliases\nconst $ = HTML.TAG_NAMES;\nconst NS = HTML.NAMESPACES;\nconst ATTRS = HTML.ATTRS;\n\nconst DEFAULT_OPTIONS = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    onParseError: null,\n    treeAdapter: defaultTreeAdapter\n};\n\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n\n//Insertion modes\nconst INITIAL_MODE = 'INITIAL_MODE';\nconst BEFORE_HTML_MODE = 'BEFORE_HTML_MODE';\nconst BEFORE_HEAD_MODE = 'BEFORE_HEAD_MODE';\nconst IN_HEAD_MODE = 'IN_HEAD_MODE';\nconst IN_HEAD_NO_SCRIPT_MODE = 'IN_HEAD_NO_SCRIPT_MODE';\nconst AFTER_HEAD_MODE = 'AFTER_HEAD_MODE';\nconst IN_BODY_MODE = 'IN_BODY_MODE';\nconst TEXT_MODE = 'TEXT_MODE';\nconst IN_TABLE_MODE = 'IN_TABLE_MODE';\nconst IN_TABLE_TEXT_MODE = 'IN_TABLE_TEXT_MODE';\nconst IN_CAPTION_MODE = 'IN_CAPTION_MODE';\nconst IN_COLUMN_GROUP_MODE = 'IN_COLUMN_GROUP_MODE';\nconst IN_TABLE_BODY_MODE = 'IN_TABLE_BODY_MODE';\nconst IN_ROW_MODE = 'IN_ROW_MODE';\nconst IN_CELL_MODE = 'IN_CELL_MODE';\nconst IN_SELECT_MODE = 'IN_SELECT_MODE';\nconst IN_SELECT_IN_TABLE_MODE = 'IN_SELECT_IN_TABLE_MODE';\nconst IN_TEMPLATE_MODE = 'IN_TEMPLATE_MODE';\nconst AFTER_BODY_MODE = 'AFTER_BODY_MODE';\nconst IN_FRAMESET_MODE = 'IN_FRAMESET_MODE';\nconst AFTER_FRAMESET_MODE = 'AFTER_FRAMESET_MODE';\nconst AFTER_AFTER_BODY_MODE = 'AFTER_AFTER_BODY_MODE';\nconst AFTER_AFTER_FRAMESET_MODE = 'AFTER_AFTER_FRAMESET_MODE';\n\n//Insertion mode reset map\nconst INSERTION_MODE_RESET_MAP = {\n    [$.TR]: IN_ROW_MODE,\n    [$.TBODY]: IN_TABLE_BODY_MODE,\n    [$.THEAD]: IN_TABLE_BODY_MODE,\n    [$.TFOOT]: IN_TABLE_BODY_MODE,\n    [$.CAPTION]: IN_CAPTION_MODE,\n    [$.COLGROUP]: IN_COLUMN_GROUP_MODE,\n    [$.TABLE]: IN_TABLE_MODE,\n    [$.BODY]: IN_BODY_MODE,\n    [$.FRAMESET]: IN_FRAMESET_MODE\n};\n\n//Template insertion mode switch map\nconst TEMPLATE_INSERTION_MODE_SWITCH_MAP = {\n    [$.CAPTION]: IN_TABLE_MODE,\n    [$.COLGROUP]: IN_TABLE_MODE,\n    [$.TBODY]: IN_TABLE_MODE,\n    [$.TFOOT]: IN_TABLE_MODE,\n    [$.THEAD]: IN_TABLE_MODE,\n    [$.COL]: IN_COLUMN_GROUP_MODE,\n    [$.TR]: IN_TABLE_BODY_MODE,\n    [$.TD]: IN_ROW_MODE,\n    [$.TH]: IN_ROW_MODE\n};\n\n//Token handlers map for insertion modes\nconst TOKEN_HANDLERS = {\n    [INITIAL_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenInInitialMode,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInInitialMode,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: doctypeInInitialMode,\n        [Tokenizer.START_TAG_TOKEN]: tokenInInitialMode,\n        [Tokenizer.END_TAG_TOKEN]: tokenInInitialMode,\n        [Tokenizer.EOF_TOKEN]: tokenInInitialMode\n    },\n    [BEFORE_HTML_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenBeforeHtml,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenBeforeHtml,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagBeforeHtml,\n        [Tokenizer.END_TAG_TOKEN]: endTagBeforeHtml,\n        [Tokenizer.EOF_TOKEN]: tokenBeforeHtml\n    },\n    [BEFORE_HEAD_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenBeforeHead,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenBeforeHead,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,\n        [Tokenizer.START_TAG_TOKEN]: startTagBeforeHead,\n        [Tokenizer.END_TAG_TOKEN]: endTagBeforeHead,\n        [Tokenizer.EOF_TOKEN]: tokenBeforeHead\n    },\n    [IN_HEAD_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenInHead,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInHead,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,\n        [Tokenizer.START_TAG_TOKEN]: startTagInHead,\n        [Tokenizer.END_TAG_TOKEN]: endTagInHead,\n        [Tokenizer.EOF_TOKEN]: tokenInHead\n    },\n    [IN_HEAD_NO_SCRIPT_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenInHeadNoScript,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInHeadNoScript,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,\n        [Tokenizer.START_TAG_TOKEN]: startTagInHeadNoScript,\n        [Tokenizer.END_TAG_TOKEN]: endTagInHeadNoScript,\n        [Tokenizer.EOF_TOKEN]: tokenInHeadNoScript\n    },\n    [AFTER_HEAD_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenAfterHead,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenAfterHead,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,\n        [Tokenizer.START_TAG_TOKEN]: startTagAfterHead,\n        [Tokenizer.END_TAG_TOKEN]: endTagAfterHead,\n        [Tokenizer.EOF_TOKEN]: tokenAfterHead\n    },\n    [IN_BODY_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInBody,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInBody,\n        [Tokenizer.END_TAG_TOKEN]: endTagInBody,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [TEXT_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: ignoreToken,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: ignoreToken,\n        [Tokenizer.END_TAG_TOKEN]: endTagInText,\n        [Tokenizer.EOF_TOKEN]: eofInText\n    },\n    [IN_TABLE_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInTable,\n        [Tokenizer.END_TAG_TOKEN]: endTagInTable,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_TABLE_TEXT_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInTableText,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInTableText,\n        [Tokenizer.COMMENT_TOKEN]: tokenInTableText,\n        [Tokenizer.DOCTYPE_TOKEN]: tokenInTableText,\n        [Tokenizer.START_TAG_TOKEN]: tokenInTableText,\n        [Tokenizer.END_TAG_TOKEN]: tokenInTableText,\n        [Tokenizer.EOF_TOKEN]: tokenInTableText\n    },\n    [IN_CAPTION_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInBody,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInCaption,\n        [Tokenizer.END_TAG_TOKEN]: endTagInCaption,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_COLUMN_GROUP_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenInColumnGroup,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInColumnGroup,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInColumnGroup,\n        [Tokenizer.END_TAG_TOKEN]: endTagInColumnGroup,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_TABLE_BODY_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInTableBody,\n        [Tokenizer.END_TAG_TOKEN]: endTagInTableBody,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_ROW_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInRow,\n        [Tokenizer.END_TAG_TOKEN]: endTagInRow,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_CELL_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInBody,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInCell,\n        [Tokenizer.END_TAG_TOKEN]: endTagInCell,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_SELECT_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInSelect,\n        [Tokenizer.END_TAG_TOKEN]: endTagInSelect,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_SELECT_IN_TABLE_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInSelectInTable,\n        [Tokenizer.END_TAG_TOKEN]: endTagInSelectInTable,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_TEMPLATE_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInBody,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInTemplate,\n        [Tokenizer.END_TAG_TOKEN]: endTagInTemplate,\n        [Tokenizer.EOF_TOKEN]: eofInTemplate\n    },\n    [AFTER_BODY_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenAfterBody,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenAfterBody,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendCommentToRootHtmlElement,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagAfterBody,\n        [Tokenizer.END_TAG_TOKEN]: endTagAfterBody,\n        [Tokenizer.EOF_TOKEN]: stopParsing\n    },\n    [IN_FRAMESET_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInFrameset,\n        [Tokenizer.END_TAG_TOKEN]: endTagInFrameset,\n        [Tokenizer.EOF_TOKEN]: stopParsing\n    },\n    [AFTER_FRAMESET_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagAfterFrameset,\n        [Tokenizer.END_TAG_TOKEN]: endTagAfterFrameset,\n        [Tokenizer.EOF_TOKEN]: stopParsing\n    },\n    [AFTER_AFTER_BODY_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenAfterAfterBody,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenAfterAfterBody,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendCommentToDocument,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagAfterAfterBody,\n        [Tokenizer.END_TAG_TOKEN]: tokenAfterAfterBody,\n        [Tokenizer.EOF_TOKEN]: stopParsing\n    },\n    [AFTER_AFTER_FRAMESET_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendCommentToDocument,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagAfterAfterFrameset,\n        [Tokenizer.END_TAG_TOKEN]: ignoreToken,\n        [Tokenizer.EOF_TOKEN]: stopParsing\n    }\n};\n\n//Parser\nclass Parser {\n    constructor(options) {\n        this.options = mergeOptions(DEFAULT_OPTIONS, options);\n\n        this.treeAdapter = this.options.treeAdapter;\n        this.pendingScript = null;\n\n        if (this.options.sourceCodeLocationInfo) {\n            Mixin.install(this, LocationInfoParserMixin);\n        }\n\n        if (this.options.onParseError) {\n            Mixin.install(this, ErrorReportingParserMixin, { onParseError: this.options.onParseError });\n        }\n    }\n\n    // API\n    parse(html) {\n        const document = this.treeAdapter.createDocument();\n\n        this._bootstrap(document, null);\n        this.tokenizer.write(html, true);\n        this._runParsingLoop(null);\n\n        return document;\n    }\n\n    parseFragment(html, fragmentContext) {\n        //NOTE: use <template> element as a fragment context if context element was not provided,\n        //so we will parse in \"forgiving\" manner\n        if (!fragmentContext) {\n            fragmentContext = this.treeAdapter.createElement($.TEMPLATE, NS.HTML, []);\n        }\n\n        //NOTE: create fake element which will be used as 'document' for fragment parsing.\n        //This is important for jsdom there 'document' can't be recreated, therefore\n        //fragment parsing causes messing of the main `document`.\n        const documentMock = this.treeAdapter.createElement('documentmock', NS.HTML, []);\n\n        this._bootstrap(documentMock, fragmentContext);\n\n        if (this.treeAdapter.getTagName(fragmentContext) === $.TEMPLATE) {\n            this._pushTmplInsertionMode(IN_TEMPLATE_MODE);\n        }\n\n        this._initTokenizerForFragmentParsing();\n        this._insertFakeRootElement();\n        this._resetInsertionMode();\n        this._findFormInFragmentContext();\n        this.tokenizer.write(html, true);\n        this._runParsingLoop(null);\n\n        const rootElement = this.treeAdapter.getFirstChild(documentMock);\n        const fragment = this.treeAdapter.createDocumentFragment();\n\n        this._adoptNodes(rootElement, fragment);\n\n        return fragment;\n    }\n\n    //Bootstrap parser\n    _bootstrap(document, fragmentContext) {\n        this.tokenizer = new Tokenizer(this.options);\n\n        this.stopped = false;\n\n        this.insertionMode = INITIAL_MODE;\n        this.originalInsertionMode = '';\n\n        this.document = document;\n        this.fragmentContext = fragmentContext;\n\n        this.headElement = null;\n        this.formElement = null;\n\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n\n        this.tmplInsertionModeStack = [];\n        this.tmplInsertionModeStackTop = -1;\n        this.currentTmplInsertionMode = null;\n\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n    }\n\n    //Errors\n    _err() {\n        // NOTE: err reporting is noop by default. Enabled by mixin.\n    }\n\n    //Parsing loop\n    _runParsingLoop(scriptHandler) {\n        while (!this.stopped) {\n            this._setupTokenizerCDATAMode();\n\n            const token = this.tokenizer.getNextToken();\n\n            if (token.type === Tokenizer.HIBERNATION_TOKEN) {\n                break;\n            }\n\n            if (this.skipNextNewLine) {\n                this.skipNextNewLine = false;\n\n                if (token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN && token.chars[0] === '\\n') {\n                    if (token.chars.length === 1) {\n                        continue;\n                    }\n\n                    token.chars = token.chars.substr(1);\n                }\n            }\n\n            this._processInputToken(token);\n\n            if (scriptHandler && this.pendingScript) {\n                break;\n            }\n        }\n    }\n\n    runParsingLoopForCurrentChunk(writeCallback, scriptHandler) {\n        this._runParsingLoop(scriptHandler);\n\n        if (scriptHandler && this.pendingScript) {\n            const script = this.pendingScript;\n\n            this.pendingScript = null;\n\n            scriptHandler(script);\n\n            return;\n        }\n\n        if (writeCallback) {\n            writeCallback();\n        }\n    }\n\n    //Text parsing\n    _setupTokenizerCDATAMode() {\n        const current = this._getAdjustedCurrentElement();\n\n        this.tokenizer.allowCDATA =\n            current &&\n            current !== this.document &&\n            this.treeAdapter.getNamespaceURI(current) !== NS.HTML &&\n            !this._isIntegrationPoint(current);\n    }\n\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = TEXT_MODE;\n    }\n\n    switchToPlaintextParsing() {\n        this.insertionMode = TEXT_MODE;\n        this.originalInsertionMode = IN_BODY_MODE;\n        this.tokenizer.state = Tokenizer.MODE.PLAINTEXT;\n    }\n\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n\n        do {\n            if (this.treeAdapter.getTagName(node) === $.FORM) {\n                this.formElement = node;\n                break;\n            }\n\n            node = this.treeAdapter.getParentNode(node);\n        } while (node);\n    }\n\n    _initTokenizerForFragmentParsing() {\n        if (this.treeAdapter.getNamespaceURI(this.fragmentContext) === NS.HTML) {\n            const tn = this.treeAdapter.getTagName(this.fragmentContext);\n\n            if (tn === $.TITLE || tn === $.TEXTAREA) {\n                this.tokenizer.state = Tokenizer.MODE.RCDATA;\n            } else if (\n                tn === $.STYLE ||\n                tn === $.XMP ||\n                tn === $.IFRAME ||\n                tn === $.NOEMBED ||\n                tn === $.NOFRAMES ||\n                tn === $.NOSCRIPT\n            ) {\n                this.tokenizer.state = Tokenizer.MODE.RAWTEXT;\n            } else if (tn === $.SCRIPT) {\n                this.tokenizer.state = Tokenizer.MODE.SCRIPT_DATA;\n            } else if (tn === $.PLAINTEXT) {\n                this.tokenizer.state = Tokenizer.MODE.PLAINTEXT;\n            }\n        }\n    }\n\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n    }\n\n    _attachElementToTree(element) {\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        } else {\n            const parent = this.openElements.currentTmplContent || this.openElements.current;\n\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n\n        this._attachElementToTree(element);\n    }\n\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n\n        this._attachElementToTree(element);\n        this.openElements.push(element);\n    }\n\n    _insertFakeElement(tagName) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n\n        this._attachElementToTree(element);\n        this.openElements.push(element);\n    }\n\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl);\n        this.openElements.push(tmpl);\n    }\n\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement($.HTML, NS.HTML, []);\n\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element);\n    }\n\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n\n        this.treeAdapter.appendChild(parent, commentNode);\n    }\n\n    _insertCharacters(token) {\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentText(token.chars);\n        } else {\n            const parent = this.openElements.currentTmplContent || this.openElements.current;\n\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n    }\n\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n\n    //Token processing\n    _shouldProcessTokenInForeignContent(token) {\n        const current = this._getAdjustedCurrentElement();\n\n        if (!current || current === this.document) {\n            return false;\n        }\n\n        const ns = this.treeAdapter.getNamespaceURI(current);\n\n        if (ns === NS.HTML) {\n            return false;\n        }\n\n        if (\n            this.treeAdapter.getTagName(current) === $.ANNOTATION_XML &&\n            ns === NS.MATHML &&\n            token.type === Tokenizer.START_TAG_TOKEN &&\n            token.tagName === $.SVG\n        ) {\n            return false;\n        }\n\n        const isCharacterToken =\n            token.type === Tokenizer.CHARACTER_TOKEN ||\n            token.type === Tokenizer.NULL_CHARACTER_TOKEN ||\n            token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN;\n\n        const isMathMLTextStartTag =\n            token.type === Tokenizer.START_TAG_TOKEN && token.tagName !== $.MGLYPH && token.tagName !== $.MALIGNMARK;\n\n        if ((isMathMLTextStartTag || isCharacterToken) && this._isIntegrationPoint(current, NS.MATHML)) {\n            return false;\n        }\n\n        if (\n            (token.type === Tokenizer.START_TAG_TOKEN || isCharacterToken) &&\n            this._isIntegrationPoint(current, NS.HTML)\n        ) {\n            return false;\n        }\n\n        return token.type !== Tokenizer.EOF_TOKEN;\n    }\n\n    _processToken(token) {\n        TOKEN_HANDLERS[this.insertionMode][token.type](this, token);\n    }\n\n    _processTokenInBodyMode(token) {\n        TOKEN_HANDLERS[IN_BODY_MODE][token.type](this, token);\n    }\n\n    _processTokenInForeignContent(token) {\n        if (token.type === Tokenizer.CHARACTER_TOKEN) {\n            characterInForeignContent(this, token);\n        } else if (token.type === Tokenizer.NULL_CHARACTER_TOKEN) {\n            nullCharacterInForeignContent(this, token);\n        } else if (token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN) {\n            insertCharacters(this, token);\n        } else if (token.type === Tokenizer.COMMENT_TOKEN) {\n            appendComment(this, token);\n        } else if (token.type === Tokenizer.START_TAG_TOKEN) {\n            startTagInForeignContent(this, token);\n        } else if (token.type === Tokenizer.END_TAG_TOKEN) {\n            endTagInForeignContent(this, token);\n        }\n    }\n\n    _processInputToken(token) {\n        if (this._shouldProcessTokenInForeignContent(token)) {\n            this._processTokenInForeignContent(token);\n        } else {\n            this._processToken(token);\n        }\n\n        if (token.type === Tokenizer.START_TAG_TOKEN && token.selfClosing && !token.ackSelfClosing) {\n            this._err(ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n\n    //Integration points\n    _isIntegrationPoint(element, foreignNS) {\n        const tn = this.treeAdapter.getTagName(element);\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n\n        return foreignContent.isIntegrationPoint(tn, ns, attrs, foreignNS);\n    }\n\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.length;\n\n        if (listLength) {\n            let unopenIdx = listLength;\n            let entry = null;\n\n            do {\n                unopenIdx--;\n                entry = this.activeFormattingElements.entries[unopenIdx];\n\n                if (entry.type === FormattingElementList.MARKER_ENTRY || this.openElements.contains(entry.element)) {\n                    unopenIdx++;\n                    break;\n                }\n            } while (unopenIdx > 0);\n\n            for (let i = unopenIdx; i < listLength; i++) {\n                entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = IN_ROW_MODE;\n    }\n\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop, last = false; i >= 0; i--) {\n            let element = this.openElements.items[i];\n\n            if (i === 0) {\n                last = true;\n\n                if (this.fragmentContext) {\n                    element = this.fragmentContext;\n                }\n            }\n\n            const tn = this.treeAdapter.getTagName(element);\n            const newInsertionMode = INSERTION_MODE_RESET_MAP[tn];\n\n            if (newInsertionMode) {\n                this.insertionMode = newInsertionMode;\n                break;\n            } else if (!last && (tn === $.TD || tn === $.TH)) {\n                this.insertionMode = IN_CELL_MODE;\n                break;\n            } else if (!last && tn === $.HEAD) {\n                this.insertionMode = IN_HEAD_MODE;\n                break;\n            } else if (tn === $.SELECT) {\n                this._resetInsertionModeForSelect(i);\n                break;\n            } else if (tn === $.TEMPLATE) {\n                this.insertionMode = this.currentTmplInsertionMode;\n                break;\n            } else if (tn === $.HTML) {\n                this.insertionMode = this.headElement ? AFTER_HEAD_MODE : BEFORE_HEAD_MODE;\n                break;\n            } else if (last) {\n                this.insertionMode = IN_BODY_MODE;\n                break;\n            }\n        }\n    }\n\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const ancestor = this.openElements.items[i];\n                const tn = this.treeAdapter.getTagName(ancestor);\n\n                if (tn === $.TEMPLATE) {\n                    break;\n                } else if (tn === $.TABLE) {\n                    this.insertionMode = IN_SELECT_IN_TABLE_MODE;\n                    return;\n                }\n            }\n        }\n\n        this.insertionMode = IN_SELECT_MODE;\n    }\n\n    _pushTmplInsertionMode(mode) {\n        this.tmplInsertionModeStack.push(mode);\n        this.tmplInsertionModeStackTop++;\n        this.currentTmplInsertionMode = mode;\n    }\n\n    _popTmplInsertionMode() {\n        this.tmplInsertionModeStack.pop();\n        this.tmplInsertionModeStackTop--;\n        this.currentTmplInsertionMode = this.tmplInsertionModeStack[this.tmplInsertionModeStackTop];\n    }\n\n    //Foster parenting\n    _isElementCausesFosterParenting(element) {\n        const tn = this.treeAdapter.getTagName(element);\n\n        return tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR;\n    }\n\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.current);\n    }\n\n    _findFosterParentingLocation() {\n        const location = {\n            parent: null,\n            beforeElement: null\n        };\n\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            const tn = this.treeAdapter.getTagName(openElement);\n            const ns = this.treeAdapter.getNamespaceURI(openElement);\n\n            if (tn === $.TEMPLATE && ns === NS.HTML) {\n                location.parent = this.treeAdapter.getTemplateContent(openElement);\n                break;\n            } else if (tn === $.TABLE) {\n                location.parent = this.treeAdapter.getParentNode(openElement);\n\n                if (location.parent) {\n                    location.beforeElement = openElement;\n                } else {\n                    location.parent = this.openElements.items[i - 1];\n                }\n\n                break;\n            }\n        }\n\n        if (!location.parent) {\n            location.parent = this.openElements.items[0];\n        }\n\n        return location;\n    }\n\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        } else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n\n    _fosterParentText(chars) {\n        const location = this._findFosterParentingLocation();\n\n        if (location.beforeElement) {\n            this.treeAdapter.insertTextBefore(location.parent, chars, location.beforeElement);\n        } else {\n            this.treeAdapter.insertText(location.parent, chars);\n        }\n    }\n\n    //Special elements\n    _isSpecialElement(element) {\n        const tn = this.treeAdapter.getTagName(element);\n        const ns = this.treeAdapter.getNamespaceURI(element);\n\n        return HTML.SPECIAL_ELEMENTS[ns][tn];\n    }\n}\n\nmodule.exports = Parser;\n\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        } else if (!p.openElements.hasInScope(token.tagName)) {\n            formattingElementEntry = null;\n        }\n    } else {\n        genericEndTagInBody(p, token);\n    }\n\n    return formattingElementEntry;\n}\n\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const element = p.openElements.items[i];\n\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n\n        if (p._isSpecialElement(element)) {\n            furthestBlock = element;\n        }\n    }\n\n    if (!furthestBlock) {\n        p.openElements.popUntilElementPopped(formattingElementEntry.element);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n\n    return furthestBlock;\n}\n\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n\n            p.openElements.remove(element);\n        } else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n\n    return lastElement;\n}\n\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n\n    return newElement;\n}\n\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    if (p._isElementCausesFosterParenting(commonAncestor)) {\n        p._fosterParentElement(lastElement);\n    } else {\n        const tn = p.treeAdapter.getTagName(commonAncestor);\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n\n        if (tn === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const token = formattingElementEntry.token;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, formattingElementEntry.token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement);\n}\n\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    let formattingElementEntry;\n\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        formattingElementEntry = aaObtainFormattingElementEntry(p, token, formattingElementEntry);\n\n        if (!formattingElementEntry) {\n            break;\n        }\n\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n\n        if (!furthestBlock) {\n            break;\n        }\n\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n\n        p.treeAdapter.detachNode(lastElement);\n        aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n\n//Generic token handlers\n//------------------------------------------------------------------\nfunction ignoreToken() {\n    //NOTE: do nothing =)\n}\n\nfunction misplacedDoctype(p) {\n    p._err(ERR.misplacedDoctype);\n}\n\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContent || p.openElements.current);\n}\n\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\n\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\n\nfunction insertCharacters(p, token) {\n    p._insertCharacters(token);\n}\n\nfunction stopParsing(p) {\n    p.stopped = true;\n}\n\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n\n    const mode = token.forceQuirks ? HTML.DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n\n    if (!doctype.isConforming(token)) {\n        p._err(ERR.nonConformingDoctype);\n    }\n\n    p.treeAdapter.setDocumentMode(p.document, mode);\n\n    p.insertionMode = BEFORE_HTML_MODE;\n}\n\nfunction tokenInInitialMode(p, token) {\n    p._err(ERR.missingDoctype, { beforeToken: true });\n    p.treeAdapter.setDocumentMode(p.document, HTML.DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = BEFORE_HTML_MODE;\n    p._processToken(token);\n}\n\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagName === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = BEFORE_HEAD_MODE;\n    } else {\n        tokenBeforeHtml(p, token);\n    }\n}\n\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\n\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = BEFORE_HEAD_MODE;\n    p._processToken(token);\n}\n\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.HEAD) {\n        p._insertElement(token, NS.HTML);\n        p.headElement = p.openElements.current;\n        p.insertionMode = IN_HEAD_MODE;\n    } else {\n        tokenBeforeHead(p, token);\n    }\n}\n\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    } else {\n        p._err(ERR.endTagWithoutMatchingOpenElement);\n    }\n}\n\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement($.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = IN_HEAD_MODE;\n    p._processToken(token);\n}\n\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.BASE || tn === $.BASEFONT || tn === $.BGSOUND || tn === $.LINK || tn === $.META) {\n        p._appendElement(token, NS.HTML);\n        token.ackSelfClosing = true;\n    } else if (tn === $.TITLE) {\n        p._switchToTextParsing(token, Tokenizer.MODE.RCDATA);\n    } else if (tn === $.NOSCRIPT) {\n        if (p.options.scriptingEnabled) {\n            p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\n        } else {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = IN_HEAD_NO_SCRIPT_MODE;\n        }\n    } else if (tn === $.NOFRAMES || tn === $.STYLE) {\n        p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\n    } else if (tn === $.SCRIPT) {\n        p._switchToTextParsing(token, Tokenizer.MODE.SCRIPT_DATA);\n    } else if (tn === $.TEMPLATE) {\n        p._insertTemplate(token, NS.HTML);\n        p.activeFormattingElements.insertMarker();\n        p.framesetOk = false;\n        p.insertionMode = IN_TEMPLATE_MODE;\n        p._pushTmplInsertionMode(IN_TEMPLATE_MODE);\n    } else if (tn === $.HEAD) {\n        p._err(ERR.misplacedStartTagForHeadElement);\n    } else {\n        tokenInHead(p, token);\n    }\n}\n\nfunction endTagInHead(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HEAD) {\n        p.openElements.pop();\n        p.insertionMode = AFTER_HEAD_MODE;\n    } else if (tn === $.BODY || tn === $.BR || tn === $.HTML) {\n        tokenInHead(p, token);\n    } else if (tn === $.TEMPLATE) {\n        if (p.openElements.tmplCount > 0) {\n            p.openElements.generateImpliedEndTagsThoroughly();\n\n            if (p.openElements.currentTagName !== $.TEMPLATE) {\n                p._err(ERR.closingOfElementWithOpenChildElements);\n            }\n\n            p.openElements.popUntilTagNamePopped($.TEMPLATE);\n            p.activeFormattingElements.clearToLastMarker();\n            p._popTmplInsertionMode();\n            p._resetInsertionMode();\n        } else {\n            p._err(ERR.endTagWithoutMatchingOpenElement);\n        }\n    } else {\n        p._err(ERR.endTagWithoutMatchingOpenElement);\n    }\n}\n\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = AFTER_HEAD_MODE;\n    p._processToken(token);\n}\n\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (\n        tn === $.BASEFONT ||\n        tn === $.BGSOUND ||\n        tn === $.HEAD ||\n        tn === $.LINK ||\n        tn === $.META ||\n        tn === $.NOFRAMES ||\n        tn === $.STYLE\n    ) {\n        startTagInHead(p, token);\n    } else if (tn === $.NOSCRIPT) {\n        p._err(ERR.nestedNoscriptInHead);\n    } else {\n        tokenInHeadNoScript(p, token);\n    }\n}\n\nfunction endTagInHeadNoScript(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.NOSCRIPT) {\n        p.openElements.pop();\n        p.insertionMode = IN_HEAD_MODE;\n    } else if (tn === $.BR) {\n        tokenInHeadNoScript(p, token);\n    } else {\n        p._err(ERR.endTagWithoutMatchingOpenElement);\n    }\n}\n\nfunction tokenInHeadNoScript(p, token) {\n    const errCode =\n        token.type === Tokenizer.EOF_TOKEN ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n\n    p._err(errCode);\n    p.openElements.pop();\n    p.insertionMode = IN_HEAD_MODE;\n    p._processToken(token);\n}\n\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.BODY) {\n        p._insertElement(token, NS.HTML);\n        p.framesetOk = false;\n        p.insertionMode = IN_BODY_MODE;\n    } else if (tn === $.FRAMESET) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = IN_FRAMESET_MODE;\n    } else if (\n        tn === $.BASE ||\n        tn === $.BASEFONT ||\n        tn === $.BGSOUND ||\n        tn === $.LINK ||\n        tn === $.META ||\n        tn === $.NOFRAMES ||\n        tn === $.SCRIPT ||\n        tn === $.STYLE ||\n        tn === $.TEMPLATE ||\n        tn === $.TITLE\n    ) {\n        p._err(ERR.abandonedHeadElementChild);\n        p.openElements.push(p.headElement);\n        startTagInHead(p, token);\n        p.openElements.remove(p.headElement);\n    } else if (tn === $.HEAD) {\n        p._err(ERR.misplacedStartTagForHeadElement);\n    } else {\n        tokenAfterHead(p, token);\n    }\n}\n\nfunction endTagAfterHead(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenAfterHead(p, token);\n    } else if (tn === $.TEMPLATE) {\n        endTagInHead(p, token);\n    } else {\n        p._err(ERR.endTagWithoutMatchingOpenElement);\n    }\n}\n\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement($.BODY);\n    p.insertionMode = IN_BODY_MODE;\n    p._processToken(token);\n}\n\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\n\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\n\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\n\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\n\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = IN_FRAMESET_MODE;\n    }\n}\n\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    const tn = p.openElements.currentTagName;\n\n    if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) {\n        p.openElements.pop();\n    }\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\n\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n\n        p._insertElement(token, NS.HTML);\n\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\n\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n\n    const tn = token.tagName;\n\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const element = p.openElements.items[i];\n        const elementTn = p.treeAdapter.getTagName(element);\n        let closeTn = null;\n\n        if (tn === $.LI && elementTn === $.LI) {\n            closeTn = $.LI;\n        } else if ((tn === $.DD || tn === $.DT) && (elementTn === $.DD || elementTn === $.DT)) {\n            closeTn = elementTn;\n        }\n\n        if (closeTn) {\n            p.openElements.generateImpliedEndTagsWithExclusion(closeTn);\n            p.openElements.popUntilTagNamePopped(closeTn);\n            break;\n        }\n\n        if (elementTn !== $.ADDRESS && elementTn !== $.DIV && elementTn !== $.P && p._isSpecialElement(element)) {\n            break;\n        }\n    }\n\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = Tokenizer.MODE.PLAINTEXT;\n}\n\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\n\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName($.A);\n\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\n\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\n\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\n\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\n\nfunction tableStartTagInBody(p, token) {\n    if (\n        p.treeAdapter.getDocumentMode(p.document) !== HTML.DOCUMENT_MODE.QUIRKS &&\n        p.openElements.hasInButtonScope($.P)\n    ) {\n        p._closePElement();\n    }\n\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = IN_TABLE_MODE;\n}\n\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\n\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n\n    const inputType = Tokenizer.getTokenAttr(token, ATTRS.TYPE);\n\n    if (!inputType || inputType.toLowerCase() !== HIDDEN_INPUT_TYPE) {\n        p.framesetOk = false;\n    }\n\n    token.ackSelfClosing = true;\n}\n\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\n\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\n\nfunction imageStartTagInBody(p, token) {\n    token.tagName = $.IMG;\n    areaStartTagInBody(p, token);\n}\n\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = Tokenizer.MODE.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = TEXT_MODE;\n}\n\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\n}\n\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\n}\n\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as a rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\n}\n\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n\n    if (\n        p.insertionMode === IN_TABLE_MODE ||\n        p.insertionMode === IN_CAPTION_MODE ||\n        p.insertionMode === IN_TABLE_BODY_MODE ||\n        p.insertionMode === IN_ROW_MODE ||\n        p.insertionMode === IN_CELL_MODE\n    ) {\n        p.insertionMode = IN_SELECT_IN_TABLE_MODE;\n    } else {\n        p.insertionMode = IN_SELECT_MODE;\n    }\n}\n\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagName === $.OPTION) {\n        p.openElements.pop();\n    }\n\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\n\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction menuStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    } else {\n        p._insertElement(token, NS.MATHML);\n    }\n\n    token.ackSelfClosing = true;\n}\n\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    } else {\n        p._insertElement(token, NS.SVG);\n    }\n\n    token.ackSelfClosing = true;\n}\n\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\n\n//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.\n//It's faster than using dictionary.\nfunction startTagInBody(p, token) {\n    const tn = token.tagName;\n\n    switch (tn.length) {\n        case 1:\n            if (tn === $.I || tn === $.S || tn === $.B || tn === $.U) {\n                bStartTagInBody(p, token);\n            } else if (tn === $.P) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.A) {\n                aStartTagInBody(p, token);\n            } else {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 2:\n            if (tn === $.DL || tn === $.OL || tn === $.UL) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) {\n                numberedHeaderStartTagInBody(p, token);\n            } else if (tn === $.LI || tn === $.DD || tn === $.DT) {\n                listItemStartTagInBody(p, token);\n            } else if (tn === $.EM || tn === $.TT) {\n                bStartTagInBody(p, token);\n            } else if (tn === $.BR) {\n                areaStartTagInBody(p, token);\n            } else if (tn === $.HR) {\n                hrStartTagInBody(p, token);\n            } else if (tn === $.RB) {\n                rbStartTagInBody(p, token);\n            } else if (tn === $.RT || tn === $.RP) {\n                rtStartTagInBody(p, token);\n            } else if (tn !== $.TH && tn !== $.TD && tn !== $.TR) {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 3:\n            if (tn === $.DIV || tn === $.DIR || tn === $.NAV) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.PRE) {\n                preStartTagInBody(p, token);\n            } else if (tn === $.BIG) {\n                bStartTagInBody(p, token);\n            } else if (tn === $.IMG || tn === $.WBR) {\n                areaStartTagInBody(p, token);\n            } else if (tn === $.XMP) {\n                xmpStartTagInBody(p, token);\n            } else if (tn === $.SVG) {\n                svgStartTagInBody(p, token);\n            } else if (tn === $.RTC) {\n                rbStartTagInBody(p, token);\n            } else if (tn !== $.COL) {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 4:\n            if (tn === $.HTML) {\n                htmlStartTagInBody(p, token);\n            } else if (tn === $.BASE || tn === $.LINK || tn === $.META) {\n                startTagInHead(p, token);\n            } else if (tn === $.BODY) {\n                bodyStartTagInBody(p, token);\n            } else if (tn === $.MAIN || tn === $.MENU) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.FORM) {\n                formStartTagInBody(p, token);\n            } else if (tn === $.CODE || tn === $.FONT) {\n                bStartTagInBody(p, token);\n            } else if (tn === $.NOBR) {\n                nobrStartTagInBody(p, token);\n            } else if (tn === $.AREA) {\n                areaStartTagInBody(p, token);\n            } else if (tn === $.MATH) {\n                mathStartTagInBody(p, token);\n            } else if (tn === $.MENU) {\n                menuStartTagInBody(p, token);\n            } else if (tn !== $.HEAD) {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 5:\n            if (tn === $.STYLE || tn === $.TITLE) {\n                startTagInHead(p, token);\n            } else if (tn === $.ASIDE) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.SMALL) {\n                bStartTagInBody(p, token);\n            } else if (tn === $.TABLE) {\n                tableStartTagInBody(p, token);\n            } else if (tn === $.EMBED) {\n                areaStartTagInBody(p, token);\n            } else if (tn === $.INPUT) {\n                inputStartTagInBody(p, token);\n            } else if (tn === $.PARAM || tn === $.TRACK) {\n                paramStartTagInBody(p, token);\n            } else if (tn === $.IMAGE) {\n                imageStartTagInBody(p, token);\n            } else if (tn !== $.FRAME && tn !== $.TBODY && tn !== $.TFOOT && tn !== $.THEAD) {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 6:\n            if (tn === $.SCRIPT) {\n                startTagInHead(p, token);\n            } else if (\n                tn === $.CENTER ||\n                tn === $.FIGURE ||\n                tn === $.FOOTER ||\n                tn === $.HEADER ||\n                tn === $.HGROUP ||\n                tn === $.DIALOG\n            ) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.BUTTON) {\n                buttonStartTagInBody(p, token);\n            } else if (tn === $.STRIKE || tn === $.STRONG) {\n                bStartTagInBody(p, token);\n            } else if (tn === $.APPLET || tn === $.OBJECT) {\n                appletStartTagInBody(p, token);\n            } else if (tn === $.KEYGEN) {\n                areaStartTagInBody(p, token);\n            } else if (tn === $.SOURCE) {\n                paramStartTagInBody(p, token);\n            } else if (tn === $.IFRAME) {\n                iframeStartTagInBody(p, token);\n            } else if (tn === $.SELECT) {\n                selectStartTagInBody(p, token);\n            } else if (tn === $.OPTION) {\n                optgroupStartTagInBody(p, token);\n            } else {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 7:\n            if (tn === $.BGSOUND) {\n                startTagInHead(p, token);\n            } else if (\n                tn === $.DETAILS ||\n                tn === $.ADDRESS ||\n                tn === $.ARTICLE ||\n                tn === $.SECTION ||\n                tn === $.SUMMARY\n            ) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.LISTING) {\n                preStartTagInBody(p, token);\n            } else if (tn === $.MARQUEE) {\n                appletStartTagInBody(p, token);\n            } else if (tn === $.NOEMBED) {\n                noembedStartTagInBody(p, token);\n            } else if (tn !== $.CAPTION) {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 8:\n            if (tn === $.BASEFONT) {\n                startTagInHead(p, token);\n            } else if (tn === $.FRAMESET) {\n                framesetStartTagInBody(p, token);\n            } else if (tn === $.FIELDSET) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.TEXTAREA) {\n                textareaStartTagInBody(p, token);\n            } else if (tn === $.TEMPLATE) {\n                startTagInHead(p, token);\n            } else if (tn === $.NOSCRIPT) {\n                if (p.options.scriptingEnabled) {\n                    noembedStartTagInBody(p, token);\n                } else {\n                    genericStartTagInBody(p, token);\n                }\n            } else if (tn === $.OPTGROUP) {\n                optgroupStartTagInBody(p, token);\n            } else if (tn !== $.COLGROUP) {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 9:\n            if (tn === $.PLAINTEXT) {\n                plaintextStartTagInBody(p, token);\n            } else {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 10:\n            if (tn === $.BLOCKQUOTE || tn === $.FIGCAPTION) {\n                addressStartTagInBody(p, token);\n            } else {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        default:\n            genericStartTagInBody(p, token);\n    }\n}\n\nfunction bodyEndTagInBody(p) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = AFTER_BODY_MODE;\n    }\n}\n\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = AFTER_BODY_MODE;\n        p._processToken(token);\n    }\n}\n\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagName;\n\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\n\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const formElement = p.formElement;\n\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        } else {\n            p.openElements.remove(formElement);\n        }\n    }\n}\n\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement($.P);\n    }\n\n    p._closePElement();\n}\n\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\n\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagName;\n\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\n\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\n\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagName;\n\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\n\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement($.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\n\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n\n        if (p.treeAdapter.getTagName(element) === tn) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tn);\n            p.openElements.popUntilElementPopped(element);\n            break;\n        }\n\n        if (p._isSpecialElement(element)) {\n            break;\n        }\n    }\n}\n\n//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.\n//It's faster than using dictionary.\nfunction endTagInBody(p, token) {\n    const tn = token.tagName;\n\n    switch (tn.length) {\n        case 1:\n            if (tn === $.A || tn === $.B || tn === $.I || tn === $.S || tn === $.U) {\n                callAdoptionAgency(p, token);\n            } else if (tn === $.P) {\n                pEndTagInBody(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 2:\n            if (tn === $.DL || tn === $.UL || tn === $.OL) {\n                addressEndTagInBody(p, token);\n            } else if (tn === $.LI) {\n                liEndTagInBody(p, token);\n            } else if (tn === $.DD || tn === $.DT) {\n                ddEndTagInBody(p, token);\n            } else if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) {\n                numberedHeaderEndTagInBody(p, token);\n            } else if (tn === $.BR) {\n                brEndTagInBody(p, token);\n            } else if (tn === $.EM || tn === $.TT) {\n                callAdoptionAgency(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 3:\n            if (tn === $.BIG) {\n                callAdoptionAgency(p, token);\n            } else if (tn === $.DIR || tn === $.DIV || tn === $.NAV || tn === $.PRE) {\n                addressEndTagInBody(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 4:\n            if (tn === $.BODY) {\n                bodyEndTagInBody(p, token);\n            } else if (tn === $.HTML) {\n                htmlEndTagInBody(p, token);\n            } else if (tn === $.FORM) {\n                formEndTagInBody(p, token);\n            } else if (tn === $.CODE || tn === $.FONT || tn === $.NOBR) {\n                callAdoptionAgency(p, token);\n            } else if (tn === $.MAIN || tn === $.MENU) {\n                addressEndTagInBody(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 5:\n            if (tn === $.ASIDE) {\n                addressEndTagInBody(p, token);\n            } else if (tn === $.SMALL) {\n                callAdoptionAgency(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 6:\n            if (\n                tn === $.CENTER ||\n                tn === $.FIGURE ||\n                tn === $.FOOTER ||\n                tn === $.HEADER ||\n                tn === $.HGROUP ||\n                tn === $.DIALOG\n            ) {\n                addressEndTagInBody(p, token);\n            } else if (tn === $.APPLET || tn === $.OBJECT) {\n                appletEndTagInBody(p, token);\n            } else if (tn === $.STRIKE || tn === $.STRONG) {\n                callAdoptionAgency(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 7:\n            if (\n                tn === $.ADDRESS ||\n                tn === $.ARTICLE ||\n                tn === $.DETAILS ||\n                tn === $.SECTION ||\n                tn === $.SUMMARY ||\n                tn === $.LISTING\n            ) {\n                addressEndTagInBody(p, token);\n            } else if (tn === $.MARQUEE) {\n                appletEndTagInBody(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 8:\n            if (tn === $.FIELDSET) {\n                addressEndTagInBody(p, token);\n            } else if (tn === $.TEMPLATE) {\n                endTagInHead(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 10:\n            if (tn === $.BLOCKQUOTE || tn === $.FIGCAPTION) {\n                addressEndTagInBody(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        default:\n            genericEndTagInBody(p, token);\n    }\n}\n\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStackTop > -1) {\n        eofInTemplate(p, token);\n    } else {\n        p.stopped = true;\n    }\n}\n\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    if (token.tagName === $.SCRIPT) {\n        p.pendingScript = p.openElements.current;\n    }\n\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\n\nfunction eofInText(p, token) {\n    p._err(ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    const curTn = p.openElements.currentTagName;\n\n    if (curTn === $.TABLE || curTn === $.TBODY || curTn === $.TFOOT || curTn === $.THEAD || curTn === $.TR) {\n        p.pendingCharacterTokens = [];\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = IN_TABLE_TEXT_MODE;\n        p._processToken(token);\n    } else {\n        tokenInTable(p, token);\n    }\n}\n\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = IN_CAPTION_MODE;\n}\n\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = IN_COLUMN_GROUP_MODE;\n}\n\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement($.COLGROUP);\n    p.insertionMode = IN_COLUMN_GROUP_MODE;\n    p._processToken(token);\n}\n\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = IN_TABLE_BODY_MODE;\n}\n\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement($.TBODY);\n    p.insertionMode = IN_TABLE_BODY_MODE;\n    p._processToken(token);\n}\n\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processToken(token);\n    }\n}\n\nfunction inputStartTagInTable(p, token) {\n    const inputType = Tokenizer.getTokenAttr(token, ATTRS.TYPE);\n\n    if (inputType && inputType.toLowerCase() === HIDDEN_INPUT_TYPE) {\n        p._appendElement(token, NS.HTML);\n    } else {\n        tokenInTable(p, token);\n    }\n\n    token.ackSelfClosing = true;\n}\n\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\n\nfunction startTagInTable(p, token) {\n    const tn = token.tagName;\n\n    switch (tn.length) {\n        case 2:\n            if (tn === $.TD || tn === $.TH || tn === $.TR) {\n                tdStartTagInTable(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        case 3:\n            if (tn === $.COL) {\n                colStartTagInTable(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        case 4:\n            if (tn === $.FORM) {\n                formStartTagInTable(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        case 5:\n            if (tn === $.TABLE) {\n                tableStartTagInTable(p, token);\n            } else if (tn === $.STYLE) {\n                startTagInHead(p, token);\n            } else if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {\n                tbodyStartTagInTable(p, token);\n            } else if (tn === $.INPUT) {\n                inputStartTagInTable(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        case 6:\n            if (tn === $.SCRIPT) {\n                startTagInHead(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        case 7:\n            if (tn === $.CAPTION) {\n                captionStartTagInTable(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        case 8:\n            if (tn === $.COLGROUP) {\n                colgroupStartTagInTable(p, token);\n            } else if (tn === $.TEMPLATE) {\n                startTagInHead(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        default:\n            tokenInTable(p, token);\n    }\n}\n\nfunction endTagInTable(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.TABLE) {\n        if (p.openElements.hasInTableScope($.TABLE)) {\n            p.openElements.popUntilTagNamePopped($.TABLE);\n            p._resetInsertionMode();\n        }\n    } else if (tn === $.TEMPLATE) {\n        endTagInHead(p, token);\n    } else if (\n        tn !== $.BODY &&\n        tn !== $.CAPTION &&\n        tn !== $.COL &&\n        tn !== $.COLGROUP &&\n        tn !== $.HTML &&\n        tn !== $.TBODY &&\n        tn !== $.TD &&\n        tn !== $.TFOOT &&\n        tn !== $.TH &&\n        tn !== $.THEAD &&\n        tn !== $.TR\n    ) {\n        tokenInTable(p, token);\n    }\n}\n\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n\n    p.fosterParentingEnabled = true;\n    p._processTokenInBodyMode(token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\n\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\n\nfunction tokenInTableText(p, token) {\n    let i = 0;\n\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    } else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCaption(p, token) {\n    const tn = token.tagName;\n\n    if (\n        tn === $.CAPTION ||\n        tn === $.COL ||\n        tn === $.COLGROUP ||\n        tn === $.TBODY ||\n        tn === $.TD ||\n        tn === $.TFOOT ||\n        tn === $.TH ||\n        tn === $.THEAD ||\n        tn === $.TR\n    ) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = IN_TABLE_MODE;\n            p._processToken(token);\n        }\n    } else {\n        startTagInBody(p, token);\n    }\n}\n\nfunction endTagInCaption(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.CAPTION || tn === $.TABLE) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = IN_TABLE_MODE;\n\n            if (tn === $.TABLE) {\n                p._processToken(token);\n            }\n        }\n    } else if (\n        tn !== $.BODY &&\n        tn !== $.COL &&\n        tn !== $.COLGROUP &&\n        tn !== $.HTML &&\n        tn !== $.TBODY &&\n        tn !== $.TD &&\n        tn !== $.TFOOT &&\n        tn !== $.TH &&\n        tn !== $.THEAD &&\n        tn !== $.TR\n    ) {\n        endTagInBody(p, token);\n    }\n}\n\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.COL) {\n        p._appendElement(token, NS.HTML);\n        token.ackSelfClosing = true;\n    } else if (tn === $.TEMPLATE) {\n        startTagInHead(p, token);\n    } else {\n        tokenInColumnGroup(p, token);\n    }\n}\n\nfunction endTagInColumnGroup(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.COLGROUP) {\n        if (p.openElements.currentTagName === $.COLGROUP) {\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_MODE;\n        }\n    } else if (tn === $.TEMPLATE) {\n        endTagInHead(p, token);\n    } else if (tn !== $.COL) {\n        tokenInColumnGroup(p, token);\n    }\n}\n\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagName === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = IN_TABLE_MODE;\n        p._processToken(token);\n    }\n}\n\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.TR) {\n        p.openElements.clearBackToTableBodyContext();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = IN_ROW_MODE;\n    } else if (tn === $.TH || tn === $.TD) {\n        p.openElements.clearBackToTableBodyContext();\n        p._insertFakeElement($.TR);\n        p.insertionMode = IN_ROW_MODE;\n        p._processToken(token);\n    } else if (\n        tn === $.CAPTION ||\n        tn === $.COL ||\n        tn === $.COLGROUP ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD\n    ) {\n        if (p.openElements.hasTableBodyContextInTableScope()) {\n            p.openElements.clearBackToTableBodyContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_MODE;\n            p._processToken(token);\n        }\n    } else {\n        startTagInTable(p, token);\n    }\n}\n\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.clearBackToTableBodyContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_MODE;\n        }\n    } else if (tn === $.TABLE) {\n        if (p.openElements.hasTableBodyContextInTableScope()) {\n            p.openElements.clearBackToTableBodyContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_MODE;\n            p._processToken(token);\n        }\n    } else if (\n        (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP) ||\n        (tn !== $.HTML && tn !== $.TD && tn !== $.TH && tn !== $.TR)\n    ) {\n        endTagInTable(p, token);\n    }\n}\n\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.TH || tn === $.TD) {\n        p.openElements.clearBackToTableRowContext();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = IN_CELL_MODE;\n        p.activeFormattingElements.insertMarker();\n    } else if (\n        tn === $.CAPTION ||\n        tn === $.COL ||\n        tn === $.COLGROUP ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR\n    ) {\n        if (p.openElements.hasInTableScope($.TR)) {\n            p.openElements.clearBackToTableRowContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_BODY_MODE;\n            p._processToken(token);\n        }\n    } else {\n        startTagInTable(p, token);\n    }\n}\n\nfunction endTagInRow(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.TR) {\n        if (p.openElements.hasInTableScope($.TR)) {\n            p.openElements.clearBackToTableRowContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_BODY_MODE;\n        }\n    } else if (tn === $.TABLE) {\n        if (p.openElements.hasInTableScope($.TR)) {\n            p.openElements.clearBackToTableRowContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_BODY_MODE;\n            p._processToken(token);\n        }\n    } else if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {\n        if (p.openElements.hasInTableScope(tn) || p.openElements.hasInTableScope($.TR)) {\n            p.openElements.clearBackToTableRowContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_BODY_MODE;\n            p._processToken(token);\n        }\n    } else if (\n        (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP) ||\n        (tn !== $.HTML && tn !== $.TD && tn !== $.TH)\n    ) {\n        endTagInTable(p, token);\n    }\n}\n\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagName;\n\n    if (\n        tn === $.CAPTION ||\n        tn === $.COL ||\n        tn === $.COLGROUP ||\n        tn === $.TBODY ||\n        tn === $.TD ||\n        tn === $.TFOOT ||\n        tn === $.TH ||\n        tn === $.THEAD ||\n        tn === $.TR\n    ) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            p._processToken(token);\n        }\n    } else {\n        startTagInBody(p, token);\n    }\n}\n\nfunction endTagInCell(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.TD || tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped(tn);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = IN_ROW_MODE;\n        }\n    } else if (tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p._closeTableCell();\n            p._processToken(token);\n        }\n    } else if (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP && tn !== $.HTML) {\n        endTagInBody(p, token);\n    }\n}\n\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.OPTION) {\n        if (p.openElements.currentTagName === $.OPTION) {\n            p.openElements.pop();\n        }\n\n        p._insertElement(token, NS.HTML);\n    } else if (tn === $.OPTGROUP) {\n        if (p.openElements.currentTagName === $.OPTION) {\n            p.openElements.pop();\n        }\n\n        if (p.openElements.currentTagName === $.OPTGROUP) {\n            p.openElements.pop();\n        }\n\n        p._insertElement(token, NS.HTML);\n    } else if (tn === $.INPUT || tn === $.KEYGEN || tn === $.TEXTAREA || tn === $.SELECT) {\n        if (p.openElements.hasInSelectScope($.SELECT)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n\n            if (tn !== $.SELECT) {\n                p._processToken(token);\n            }\n        }\n    } else if (tn === $.SCRIPT || tn === $.TEMPLATE) {\n        startTagInHead(p, token);\n    }\n}\n\nfunction endTagInSelect(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.OPTGROUP) {\n        const prevOpenElement = p.openElements.items[p.openElements.stackTop - 1];\n        const prevOpenElementTn = prevOpenElement && p.treeAdapter.getTagName(prevOpenElement);\n\n        if (p.openElements.currentTagName === $.OPTION && prevOpenElementTn === $.OPTGROUP) {\n            p.openElements.pop();\n        }\n\n        if (p.openElements.currentTagName === $.OPTGROUP) {\n            p.openElements.pop();\n        }\n    } else if (tn === $.OPTION) {\n        if (p.openElements.currentTagName === $.OPTION) {\n            p.openElements.pop();\n        }\n    } else if (tn === $.SELECT && p.openElements.hasInSelectScope($.SELECT)) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n    } else if (tn === $.TEMPLATE) {\n        endTagInHead(p, token);\n    }\n}\n\n//12.2.5.4.17 The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagName;\n\n    if (\n        tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH\n    ) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processToken(token);\n    } else {\n        startTagInSelect(p, token);\n    }\n}\n\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagName;\n\n    if (\n        tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH\n    ) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p._processToken(token);\n        }\n    } else {\n        endTagInSelect(p, token);\n    }\n}\n\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    const tn = token.tagName;\n\n    if (\n        tn === $.BASE ||\n        tn === $.BASEFONT ||\n        tn === $.BGSOUND ||\n        tn === $.LINK ||\n        tn === $.META ||\n        tn === $.NOFRAMES ||\n        tn === $.SCRIPT ||\n        tn === $.STYLE ||\n        tn === $.TEMPLATE ||\n        tn === $.TITLE\n    ) {\n        startTagInHead(p, token);\n    } else {\n        const newInsertionMode = TEMPLATE_INSERTION_MODE_SWITCH_MAP[tn] || IN_BODY_MODE;\n\n        p._popTmplInsertionMode();\n        p._pushTmplInsertionMode(newInsertionMode);\n        p.insertionMode = newInsertionMode;\n        p._processToken(token);\n    }\n}\n\nfunction endTagInTemplate(p, token) {\n    if (token.tagName === $.TEMPLATE) {\n        endTagInHead(p, token);\n    }\n}\n\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p._popTmplInsertionMode();\n        p._resetInsertionMode();\n        p._processToken(token);\n    } else {\n        p.stopped = true;\n    }\n}\n\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagName === $.HTML) {\n        startTagInBody(p, token);\n    } else {\n        tokenAfterBody(p, token);\n    }\n}\n\nfunction endTagAfterBody(p, token) {\n    if (token.tagName === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = AFTER_AFTER_BODY_MODE;\n        }\n    } else {\n        tokenAfterBody(p, token);\n    }\n}\n\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = IN_BODY_MODE;\n    p._processToken(token);\n}\n\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.FRAMESET) {\n        p._insertElement(token, NS.HTML);\n    } else if (tn === $.FRAME) {\n        p._appendElement(token, NS.HTML);\n        token.ackSelfClosing = true;\n    } else if (tn === $.NOFRAMES) {\n        startTagInHead(p, token);\n    }\n}\n\nfunction endTagInFrameset(p, token) {\n    if (token.tagName === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n\n        if (!p.fragmentContext && p.openElements.currentTagName !== $.FRAMESET) {\n            p.insertionMode = AFTER_FRAMESET_MODE;\n        }\n    }\n}\n\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.NOFRAMES) {\n        startTagInHead(p, token);\n    }\n}\n\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagName === $.HTML) {\n        p.insertionMode = AFTER_AFTER_FRAMESET_MODE;\n    }\n}\n\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagName === $.HTML) {\n        startTagInBody(p, token);\n    } else {\n        tokenAfterAfterBody(p, token);\n    }\n}\n\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = IN_BODY_MODE;\n    p._processToken(token);\n}\n\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.NOFRAMES) {\n        startTagInHead(p, token);\n    }\n}\n\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\n\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\n\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token) && !p.fragmentContext) {\n        while (\n            p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n            !p._isIntegrationPoint(p.openElements.current)\n        ) {\n            p.openElements.pop();\n        }\n\n        p._processToken(token);\n    } else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        } else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n\n        foreignContent.adjustTokenXMLAttrs(token);\n\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        } else {\n            p._insertElement(token, currentNs);\n        }\n\n        token.ackSelfClosing = true;\n    }\n}\n\nfunction endTagInForeignContent(p, token) {\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._processToken(token);\n            break;\n        }\n\n        if (p.treeAdapter.getTagName(element).toLowerCase() === token.tagName) {\n            p.openElements.popUntilElementPopped(element);\n            break;\n        }\n    }\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name.\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector.\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: import('./extract.js').ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: fine.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Content | Root} Node\n *   Any concrete `hast` node.\n * @typedef {Root | Element} HResult\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {string | number} HStyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, HStyleValue>} HStyle\n *   Supported value of a `style` prop.\n * @typedef {string | number | boolean | null | undefined} HPrimitiveValue\n *   Primitive property value.\n * @typedef {Array<string | number>} HArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {HPrimitiveValue | HArrayValue} HPropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: HPropertyValue | HStyle}} HProperties\n *   Acceptable value for element properties.\n *\n * @typedef {string | number | null | undefined} HPrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<Node | HPrimitiveChild>} HArrayChild\n *   List of children.\n * @typedef {Node | HPrimitiveChild | HArrayChild} HChild\n *   Acceptable child value.\n */\n\nimport {find, normalize} from 'property-information'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {parse as spaces} from 'space-separated-tokens'\nimport {parse as commas} from 'comma-separated-tokens'\n\nconst buttonTypes = new Set(['menu', 'submit', 'reset', 'button'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n * @param {string} defaultTagName\n * @param {Array<string>} [caseSensitive]\n */\nexport function core(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  const h =\n    /**\n     * @type {{\n     *   (): Root\n     *   (selector: null | undefined, ...children: Array<HChild>): Root\n     *   (selector: string, properties?: HProperties, ...children: Array<HChild>): Element\n     *   (selector: string, ...children: Array<HChild>): Element\n     * }}\n     */\n    (\n      /**\n       * Hyperscript compatible DSL for creating virtual hast trees.\n       *\n       * @param {string | null} [selector]\n       * @param {HProperties | HChild} [properties]\n       * @param {Array<HChild>} children\n       * @returns {HResult}\n       */\n      function (selector, properties, ...children) {\n        let index = -1\n        /** @type {HResult} */\n        let node\n\n        if (selector === undefined || selector === null) {\n          node = {type: 'root', children: []}\n          // @ts-expect-error Properties are not supported for roots.\n          children.unshift(properties)\n        } else {\n          node = parseSelector(selector, defaultTagName)\n          // Normalize the name.\n          node.tagName = node.tagName.toLowerCase()\n          if (adjust && own.call(adjust, node.tagName)) {\n            node.tagName = adjust[node.tagName]\n          }\n\n          // Handle props.\n          if (isProperties(properties, node.tagName)) {\n            /** @type {string} */\n            let key\n\n            for (key in properties) {\n              if (own.call(properties, key)) {\n                // @ts-expect-error `node.properties` is set.\n                addProperty(schema, node.properties, key, properties[key])\n              }\n            }\n          } else {\n            children.unshift(properties)\n          }\n        }\n\n        // Handle children.\n        while (++index < children.length) {\n          addChild(node.children, children[index])\n        }\n\n        if (node.type === 'element' && node.tagName === 'template') {\n          node.content = {type: 'root', children: node.children}\n          node.children = []\n        }\n\n        return node\n      }\n    )\n\n  return h\n}\n\n/**\n * @param {HProperties | HChild} value\n * @param {string} name\n * @returns {value is HProperties}\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n * @param {Properties} properties\n * @param {string} key\n * @param {HStyle | HPropertyValue} value\n * @returns {void}\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {HPropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<string | number>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // @ts-expect-error Assume no booleans in array.\n      finalResult[index] = parsePrimitive(info, info.property, result[index])\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // @ts-expect-error Assume no booleans in `className`.\n    result = properties.className.concat(result)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<Content>} nodes\n * @param {HChild} value\n * @returns {void}\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n * @param {string} name\n * @param {HPrimitiveValue} value\n * @returns {HPrimitiveValue}\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {HStyle} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","/**\n * @typedef {import('./core.js').HChild} Child\n *   Acceptable child value.\n * @typedef {import('./core.js').HProperties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./core.js').HResult} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n */\n\nimport {html} from 'property-information'\nimport {core} from './core.js'\n\nexport const h = core(html, 'div')\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * @typedef {import('./core.js').HChild} Child\n *   Acceptable child value.\n * @typedef {import('./core.js').HProperties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./core.js').HResult} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n */\n\nimport {svg} from 'property-information'\nimport {core} from './core.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\nexport const s = core(svg, 'g', svgCaseSensitiveTagNames)\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('vfile').Value} Value\n */\n\n/**\n * @typedef Point\n *   unist point, where `line` and `column` can be `undefined`.\n * @property {number | undefined} line\n *   Line.\n * @property {number | undefined} column\n *   Column.\n * @property {number | undefined} [offset]\n *   Offset.\n *\n * @typedef PointLike\n *   unist point, allowed as input.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @callback ToPoint\n *   Get a line/column-based `point` from `offset`.\n * @param {number | null | undefined} [offset]\n *   Something that should be an `offset.\n * @returns {Point}\n *   Point, line/column are undefined for invalid or out of bounds input.\n *\n * @callback ToOffset\n *   Get an offset from a line/column-based `point`.\n * @param {Point | null | undefined} [point]\n *   Something that should be a `point.\n * @returns {number}\n *   Offset or `-1` for invalid or out of bounds input.\n *\n * @typedef Location\n *   Accessors for index.\n * @property {ToPoint} toPoint\n *   Get a line/column-based `point` from `offset`.\n * @property {ToOffset} toOffset\n *   Get an offset from a line/column-based `point`.\n */\n\n/**\n * Index the given document so you can translate between line/column and offset\n * based positional info.\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /** @type {Array<number>} */\n  const indices = []\n  const search = /\\r?\\n|\\r/g\n\n  while (search.test(value)) {\n    indices.push(search.lastIndex)\n  }\n\n  indices.push(value.length + 1)\n\n  return {toPoint, toOffset}\n\n  /** @type {ToPoint} */\n  function toPoint(offset) {\n    let index = -1\n\n    if (\n      typeof offset === 'number' &&\n      offset > -1 &&\n      offset < indices[indices.length - 1]\n    ) {\n      while (++index < indices.length) {\n        if (indices[index] > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n      }\n    }\n\n    return {line: undefined, column: undefined, offset: undefined}\n  }\n\n  /** @type {ToOffset} */\n  function toOffset(point) {\n    const line = point && point.line\n    const column = point && point.column\n\n    if (\n      typeof line === 'number' &&\n      typeof column === 'number' &&\n      !Number.isNaN(line) &&\n      !Number.isNaN(column) &&\n      line - 1 in indices\n    ) {\n      const offset = (indices[line - 2] || 0) + column - 1 || 0\n\n      if (offset > -1 && offset < indices[indices.length - 1]) {\n        return offset\n      }\n    }\n\n    return -1\n  }\n}\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').Token.ElementLocation} P5ElementLocation\n * @typedef {import('parse5').Token.Location} P5Location\n */\n\n/**\n * @typedef {Content | Root} Node\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5DocumentFragment\n * @typedef {DefaultTreeAdapterMap['documentType']} P5DocumentType\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['template']} P5Template\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in.\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {VFile | null | undefined} [file]\n *   File used to add positional info to nodes.\n *\n *   If given, the file should represent the original HTML source.\n * @property {boolean} [verbose=false]\n *   Whether to add extra positional info about starting tags, closing tags,\n *   and attributes to elements.\n *\n *   > 👉 **Note**: only used when `file` is given.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {Schema} schema\n *   Current schema.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n * @property {boolean} location\n *   Whether location info was found.\n */\n\nimport {h, s} from 'hastscript'\nimport {html, svg, find} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {P5Node} tree\n *   `parse5` tree to transform.\n * @param {Options | VFile | null | undefined} [options]\n *   Configuration.\n * @returns {Node}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const options_ = options || {}\n  /** @type {Options} */\n  let settings\n  /** @type {VFile | undefined} */\n  let file\n\n  if (isFile(options_)) {\n    file = options_\n    settings = {}\n  } else {\n    file = options_.file || undefined\n    settings = options_\n  }\n\n  return one(\n    {\n      schema: settings.space === 'svg' ? svg : html,\n      file,\n      verbose: settings.verbose,\n      location: false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} node\n *   p5 node.\n * @returns {Node}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Node} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {P5Comment} */ (node)\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference = /** @type {P5Document | P5DocumentFragment} */ (node)\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const doc = String(state.file)\n        const loc = location(doc)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(doc.length)\n        // @ts-expect-error: always defined as we give valid input.\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {P5DocumentType} */ (node)\n      // @ts-expect-error Types are out of date.\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {P5Text} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {P5Element} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<P5Node>} nodes\n *   Nodes.\n * @returns {Array<Content>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<Content>} */\n  const result = []\n\n  while (++index < nodes.length) {\n    // @ts-expect-error Assume no roots in `nodes`.\n    result[index] = one(state, nodes[index])\n  }\n\n  return result\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Element} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const props = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      props[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const fn = state.schema.space === 'svg' ? s : h\n  const result = fn(node.tagName, props, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {P5Template} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    /** @type {Root} */\n    // @ts-expect-error Types are wrong.\n    const content = one(state, reference.content)\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} from\n *   p5 node.\n * @param {Node} to\n *   hast node.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Node} node\n *   hast node.\n * @param {P5ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const props = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            props[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      node.data = {\n        position: {\n          // @ts-expect-error: assume not `undefined`.\n          opening: position(location.startTag),\n          closing: location.endTag ? position(location.endTag) : null,\n          properties: props\n        }\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {P5Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n  // @ts-expect-error `undefined` is fine.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n\n/**\n * Check if something is a file.\n *\n * @param {VFile | Options} value\n *   File or options.\n * @returns {value is VFile}\n *   Whether `value` is a file.\n */\nfunction isFile(value) {\n  return 'messages' in value\n}\n","export const errors = {\n  abandonedHeadElementChild: {\n    reason: 'Unexpected metadata element after head',\n    description:\n      'Unexpected element after head. Expected the element before `</head>`',\n    url: false\n  },\n  abruptClosingOfEmptyComment: {\n    reason: 'Unexpected abruptly closed empty comment',\n    description: 'Unexpected `>` or `->`. Expected `-->` to close comments'\n  },\n  abruptDoctypePublicIdentifier: {\n    reason: 'Unexpected abruptly closed public identifier',\n    description:\n      'Unexpected `>`. Expected a closing `\"` or `\\'` after the public identifier'\n  },\n  abruptDoctypeSystemIdentifier: {\n    reason: 'Unexpected abruptly closed system identifier',\n    description:\n      'Unexpected `>`. Expected a closing `\"` or `\\'` after the identifier identifier'\n  },\n  absenceOfDigitsInNumericCharacterReference: {\n    reason: 'Unexpected non-digit at start of numeric character reference',\n    description:\n      'Unexpected `%c`. Expected `[0-9]` for decimal references or `[0-9a-fA-F]` for hexadecimal references'\n  },\n  cdataInHtmlContent: {\n    reason: 'Unexpected CDATA section in HTML',\n    description:\n      'Unexpected `<![CDATA[` in HTML. Remove it, use a comment, or encode special characters instead'\n  },\n  characterReferenceOutsideUnicodeRange: {\n    reason: 'Unexpected too big numeric character reference',\n    description:\n      'Unexpectedly high character reference. Expected character references to be at most hexadecimal 10ffff (or decimal 1114111)'\n  },\n  closingOfElementWithOpenChildElements: {\n    reason: 'Unexpected closing tag with open child elements',\n    description:\n      'Unexpectedly closing tag. Expected other tags to be closed first',\n    url: false\n  },\n  controlCharacterInInputStream: {\n    reason: 'Unexpected control character',\n    description:\n      'Unexpected control character `%x`. Expected a non-control code point, 0x00, or ASCII whitespace'\n  },\n  controlCharacterReference: {\n    reason: 'Unexpected control character reference',\n    description:\n      'Unexpectedly control character in reference. Expected a non-control code point, 0x00, or ASCII whitespace'\n  },\n  disallowedContentInNoscriptInHead: {\n    reason: 'Disallowed content inside `<noscript>` in `<head>`',\n    description:\n      'Unexpected text character `%c`. Only use text in `<noscript>`s in `<body>`',\n    url: false\n  },\n  duplicateAttribute: {\n    reason: 'Unexpected duplicate attribute',\n    description:\n      'Unexpectedly double attribute. Expected attributes to occur only once'\n  },\n  endTagWithAttributes: {\n    reason: 'Unexpected attribute on closing tag',\n    description: 'Unexpected attribute. Expected `>` instead'\n  },\n  endTagWithTrailingSolidus: {\n    reason: 'Unexpected slash at end of closing tag',\n    description: 'Unexpected `%c-1`. Expected `>` instead'\n  },\n  endTagWithoutMatchingOpenElement: {\n    reason: 'Unexpected unopened end tag',\n    description: 'Unexpected end tag. Expected no end tag or another end tag',\n    url: false\n  },\n  eofBeforeTagName: {\n    reason: 'Unexpected end of file',\n    description: 'Unexpected end of file. Expected tag name instead'\n  },\n  eofInCdata: {\n    reason: 'Unexpected end of file in CDATA',\n    description: 'Unexpected end of file. Expected `]]>` to close the CDATA'\n  },\n  eofInComment: {\n    reason: 'Unexpected end of file in comment',\n    description: 'Unexpected end of file. Expected `-->` to close the comment'\n  },\n  eofInDoctype: {\n    reason: 'Unexpected end of file in doctype',\n    description:\n      'Unexpected end of file. Expected a valid doctype (such as `<!doctype html>`)'\n  },\n  eofInElementThatCanContainOnlyText: {\n    reason: 'Unexpected end of file in element that can only contain text',\n    description: 'Unexpected end of file. Expected text or a closing tag',\n    url: false\n  },\n  eofInScriptHtmlCommentLikeText: {\n    reason: 'Unexpected end of file in comment inside script',\n    description: 'Unexpected end of file. Expected `-->` to close the comment'\n  },\n  eofInTag: {\n    reason: 'Unexpected end of file in tag',\n    description: 'Unexpected end of file. Expected `>` to close the tag'\n  },\n  incorrectlyClosedComment: {\n    reason: 'Incorrectly closed comment',\n    description: 'Unexpected `%c-1`. Expected `-->` to close the comment'\n  },\n  incorrectlyOpenedComment: {\n    reason: 'Incorrectly opened comment',\n    description: 'Unexpected `%c`. Expected `<!--` to open the comment'\n  },\n  invalidCharacterSequenceAfterDoctypeName: {\n    reason: 'Invalid sequence after doctype name',\n    description: 'Unexpected sequence at `%c`. Expected `public` or `system`'\n  },\n  invalidFirstCharacterOfTagName: {\n    reason: 'Invalid first character in tag name',\n    description: 'Unexpected `%c`. Expected an ASCII letter instead'\n  },\n  misplacedDoctype: {\n    reason: 'Misplaced doctype',\n    description: 'Unexpected doctype. Expected doctype before head',\n    url: false\n  },\n  misplacedStartTagForHeadElement: {\n    reason: 'Misplaced `<head>` start tag',\n    description:\n      'Unexpected start tag `<head>`. Expected `<head>` directly after doctype',\n    url: false\n  },\n  missingAttributeValue: {\n    reason: 'Missing attribute value',\n    description:\n      'Unexpected `%c-1`. Expected an attribute value or no `%c-1` instead'\n  },\n  missingDoctype: {\n    reason: 'Missing doctype before other content',\n    description: 'Expected a `<!doctype html>` before anything else',\n    url: false\n  },\n  missingDoctypeName: {\n    reason: 'Missing doctype name',\n    description: 'Unexpected doctype end at `%c`. Expected `html` instead'\n  },\n  missingDoctypePublicIdentifier: {\n    reason: 'Missing public identifier in doctype',\n    description: 'Unexpected `%c`. Expected identifier for `public` instead'\n  },\n  missingDoctypeSystemIdentifier: {\n    reason: 'Missing system identifier in doctype',\n    description:\n      'Unexpected `%c`. Expected identifier for `system` instead (suggested: `\"about:legacy-compat\"`)'\n  },\n  missingEndTagName: {\n    reason: 'Missing name in end tag',\n    description: 'Unexpected `%c`. Expected an ASCII letter instead'\n  },\n  missingQuoteBeforeDoctypePublicIdentifier: {\n    reason: 'Missing quote before public identifier in doctype',\n    description: 'Unexpected `%c`. Expected `\"` or `\\'` instead'\n  },\n  missingQuoteBeforeDoctypeSystemIdentifier: {\n    reason: 'Missing quote before system identifier in doctype',\n    description: 'Unexpected `%c`. Expected `\"` or `\\'` instead'\n  },\n  missingSemicolonAfterCharacterReference: {\n    reason: 'Missing semicolon after character reference',\n    description: 'Unexpected `%c`. Expected `;` instead'\n  },\n  missingWhitespaceAfterDoctypePublicKeyword: {\n    reason: 'Missing whitespace after public identifier in doctype',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  missingWhitespaceAfterDoctypeSystemKeyword: {\n    reason: 'Missing whitespace after system identifier in doctype',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  missingWhitespaceBeforeDoctypeName: {\n    reason: 'Missing whitespace before doctype name',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  missingWhitespaceBetweenAttributes: {\n    reason: 'Missing whitespace between attributes',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers: {\n    reason:\n      'Missing whitespace between public and system identifiers in doctype',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  nestedComment: {\n    reason: 'Unexpected nested comment',\n    description: 'Unexpected `<!--`. Expected `-->`'\n  },\n  nestedNoscriptInHead: {\n    reason: 'Unexpected nested `<noscript>` in `<head>`',\n    description:\n      'Unexpected `<noscript>`. Expected a closing tag or a meta element',\n    url: false\n  },\n  nonConformingDoctype: {\n    reason: 'Unexpected non-conforming doctype declaration',\n    description:\n      'Expected `<!doctype html>` or `<!doctype html system \"about:legacy-compat\">`',\n    url: false\n  },\n  nonVoidHtmlElementStartTagWithTrailingSolidus: {\n    reason: 'Unexpected trailing slash on start tag of non-void element',\n    description: 'Unexpected `/`. Expected `>` instead'\n  },\n  noncharacterCharacterReference: {\n    reason:\n      'Unexpected noncharacter code point referenced by character reference',\n    description: 'Unexpected code point. Do not use noncharacters in HTML'\n  },\n  noncharacterInInputStream: {\n    reason: 'Unexpected noncharacter character',\n    description: 'Unexpected code point `%x`. Do not use noncharacters in HTML'\n  },\n  nullCharacterReference: {\n    reason: 'Unexpected NULL character referenced by character reference',\n    description: 'Unexpected code point. Do not use NULL characters in HTML'\n  },\n  openElementsLeftAfterEof: {\n    reason: 'Unexpected end of file',\n    description: 'Unexpected end of file. Expected closing tag instead',\n    url: false\n  },\n  surrogateCharacterReference: {\n    reason: 'Unexpected surrogate character referenced by character reference',\n    description:\n      'Unexpected code point. Do not use lone surrogate characters in HTML'\n  },\n  surrogateInInputStream: {\n    reason: 'Unexpected surrogate character',\n    description:\n      'Unexpected code point `%x`. Do not use lone surrogate characters in HTML'\n  },\n  unexpectedCharacterAfterDoctypeSystemIdentifier: {\n    reason: 'Invalid character after system identifier in doctype',\n    description: 'Unexpected character at `%c`. Expected `>`'\n  },\n  unexpectedCharacterInAttributeName: {\n    reason: 'Unexpected character in attribute name',\n    description:\n      'Unexpected `%c`. Expected whitespace, `/`, `>`, `=`, or probably an ASCII letter'\n  },\n  unexpectedCharacterInUnquotedAttributeValue: {\n    reason: 'Unexpected character in unquoted attribute value',\n    description: 'Unexpected `%c`. Quote the attribute value to include it'\n  },\n  unexpectedEqualsSignBeforeAttributeName: {\n    reason: 'Unexpected equals sign before attribute name',\n    description: 'Unexpected `%c`. Add an attribute name before it'\n  },\n  unexpectedNullCharacter: {\n    reason: 'Unexpected NULL character',\n    description:\n      'Unexpected code point `%x`. Do not use NULL characters in HTML'\n  },\n  unexpectedQuestionMarkInsteadOfTagName: {\n    reason: 'Unexpected question mark instead of tag name',\n    description: 'Unexpected `%c`. Expected an ASCII letter instead'\n  },\n  unexpectedSolidusInTag: {\n    reason: 'Unexpected slash in tag',\n    description:\n      'Unexpected `%c-1`. Expected it followed by `>` or in a quoted attribute value'\n  },\n  unknownNamedCharacterReference: {\n    reason: 'Unexpected unknown named character reference',\n    description:\n      'Unexpected character reference. Expected known named character references'\n  }\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {Pick<import('hast-util-from-parse5').Options, 'space' | 'verbose'>} FromParse5Options\n *\n * @typedef {keyof errors} ErrorCode\n * @typedef {0|1|2|boolean|null|undefined} ErrorSeverity\n * @typedef {Partial<Record<ErrorCode, ErrorSeverity>>} ErrorFields\n *\n * @typedef ParseFields\n * @property {boolean|undefined} [fragment=false]\n *   Specify whether to parse a fragment, instead of a complete document.\n *   In document mode, unopened `html`, `head`, and `body` elements are opened\n *   in just the right places.\n * @property {boolean|undefined} [emitParseErrors=false]\n *   > ⚠️ Parse errors are currently being added to HTML.\n *   > Not all errors emitted by parse5 (or rehype-parse) are specced yet.\n *   > Some documentation may still be missing.\n *\n *   Emit parse errors while parsing on the vfile.\n *   Setting this to `true` starts emitting HTML parse errors.\n *\n *   Specific rules can be turned off by setting them to `false` (or `0`).\n *   The default, when `emitParseErrors: true`, is `true` (or `1`), and means\n *   that rules emit as warnings.\n *   Rules can also be configured with `2`, to turn them into fatal errors.\n *\n * @typedef {FromParse5Options & ParseFields & ErrorFields} Options\n */\n\n// @ts-expect-error: remove when typed\nimport Parser5 from 'parse5/lib/parser/index.js'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {errors} from './errors.js'\n\nconst base = 'https://html.spec.whatwg.org/multipage/parsing.html#parse-error-'\n\nconst fatalities = {2: true, 1: false, 0: null}\n\n/**\n * @this {import('unified').Processor}\n * @type {import('unified').Plugin<[Options?] | Array<void>, string, Root>}\n */\nexport default function rehypeParse(options) {\n  const processorSettings = /** @type {Options} */ (this.data('settings'))\n  const settings = Object.assign({}, processorSettings, options)\n\n  Object.assign(this, {Parser: parser})\n\n  /** @type {import('unified').ParserFunction<Root>} */\n  function parser(doc, file) {\n    const fn = settings.fragment ? 'parseFragment' : 'parse'\n    const onParseError = settings.emitParseErrors ? onerror : null\n    const parse5 = new Parser5({\n      sourceCodeLocationInfo: true,\n      onParseError,\n      scriptingEnabled: false\n    })\n\n    // @ts-expect-error: `parse5` returns document or fragment, which are always\n    // mapped to roots.\n    return fromParse5(parse5[fn](doc), {\n      space: settings.space,\n      file,\n      verbose: settings.verbose\n    })\n\n    /**\n     * @param {{code: string, startLine: number, startCol: number, startOffset: number, endLine: number, endCol: number, endOffset: number}} error\n     */\n    function onerror(error) {\n      const code = error.code\n      const name = camelcase(code)\n      const setting = settings[name]\n      const config = setting === undefined || setting === null ? true : setting\n      const level = typeof config === 'number' ? config : config ? 1 : 0\n      const start = {\n        line: error.startLine,\n        column: error.startCol,\n        offset: error.startOffset\n      }\n      const end = {\n        line: error.endLine,\n        column: error.endCol,\n        offset: error.endOffset\n      }\n      if (level) {\n        /* c8 ignore next */\n        const info = errors[name] || {reason: '', description: '', url: ''}\n        const message = file.message(format(info.reason), {start, end})\n        message.source = 'parse-error'\n        message.ruleId = code\n        message.fatal = fatalities[level]\n        message.note = format(info.description)\n        message.url = 'url' in info && info.url === false ? null : base + code\n      }\n\n      /**\n       * @param {string} value\n       * @returns {string}\n       */\n      function format(value) {\n        return value\n          .replace(/%c(?:-(\\d+))?/g, (_, /** @type {string} */ $1) => {\n            const offset = $1 ? -Number.parseInt($1, 10) : 0\n            const char = doc.charAt(error.startOffset + offset)\n            return char === '`' ? '` ` `' : char\n          })\n          .replace(\n            /%x/g,\n            () =>\n              '0x' +\n              doc.charCodeAt(error.startOffset).toString(16).toUpperCase()\n          )\n      }\n    }\n  }\n}\n\n/**\n * @param {string} value\n * @returns {ErrorCode}\n */\nfunction camelcase(value) {\n  // @ts-expect-error: this returns a valid error code.\n  return value.replace(/-[a-z]/g, ($0) => $0.charAt(1).toUpperCase())\n}\n","/**\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('hast').Element} Element\n */\n\n/**\n * @typedef {null | undefined | string | TestFunctionAnything | Array<string | TestFunctionAnything>} Test\n *   Check for an arbitrary element, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if an element passes a test, unaware of TypeScript inferral.\n * @param {Element} element\n *   An element.\n * @param {number | null | undefined} [index]\n *   The element’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The element’s parent.\n * @returns {boolean | void}\n *   Whether this element passes the test.\n */\n\n/**\n * @template {Element} T\n *   Element type.\n * @typedef {T['tagName'] | TestFunctionPredicate<T> | Array<T['tagName'] | TestFunctionPredicate<T>>} PredicateTest\n *   Check for an element that can be inferred by TypeScript.\n */\n\n/**\n * Check if an element passes a certain node test.\n *\n * @template {Element} T\n *   Element type.\n * @callback TestFunctionPredicate\n *   Complex test function for an element that can be inferred by TypeScript.\n * @param {Element} element\n *   An element.\n * @param {number | null | undefined} [index]\n *   The element’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The element’s parent.\n * @returns {element is T}\n *   Whether this element passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is an element, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is an element and passes a test.\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @template {Element} T\n *   Element type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific element, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is T}\n *   Whether this is an element and passes a test.\n */\n\n/**\n * Check if `node` is an `Element` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific element.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is an element and passes a test.\n */\nexport const isElement =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<T extends Element = Element>(node: unknown, test?: PredicateTest<T>, index?: number, parent?: Parent, context?: unknown) => node is T) &\n   *   ((node: unknown, test: Test, index?: number, parent?: Parent, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test | undefined} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convertElement(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index for child node')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!parent.type || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      // @ts-expect-error Looks like a node.\n      if (!node || !node.type || typeof node.type !== 'string') {\n        return false\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return check.call(context, node, index, parent)\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *  When nullish, checks if `node` is an `Element`.\n *   *  When `string`, works like passing `(element) => element.tagName === test`.\n *   *  When `function` checks if function passed the element is true.\n *   *  When `array`, checks any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convertElement =\n  /**\n   * @type {(\n   *   (<T extends Element>(test: T['tagName'] | TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test | null | undefined} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return element\n      }\n\n      if (typeof test === 'string') {\n        return tagNameFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return anyFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or array as test')\n    }\n  )\n\n/**\n * Handle multiple tests.\n *\n * @param {Array<string | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convertElement(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn a string into a test for an element with a certain tag name.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction tagNameFactory(check) {\n  return tagName\n\n  /**\n   * @param {unknown} node\n   * @returns {boolean}\n   */\n  function tagName(node) {\n    return element(node) && node.tagName === check\n  }\n}\n\n/**\n * Turn a custom test into a test for an element that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    // @ts-expect-error: fine.\n    return element(node) && Boolean(check.call(this, node, ...parameters))\n  }\n}\n\n/**\n * Make sure something is an element.\n *\n * @param {unknown} node\n * @returns {node is Element}\n */\nfunction element(node) {\n  return Boolean(\n    node &&\n      typeof node === 'object' &&\n      // @ts-expect-error Looks like a node.\n      node.type === 'element' &&\n      // @ts-expect-error Looks like an element.\n      typeof node.tagName === 'string'\n  )\n}\n","/**\n * @typedef {import('hast').Element} Element\n */\n\nimport {convertElement} from 'hast-util-is-element'\n\n/**\n * Check if a node is a *embedded content*.\n *\n * @type {import('hast-util-is-element').AssertPredicate<Element & {tagName: 'audio' | 'canvas' | 'embed' | 'iframe' | 'img' | 'math' | 'object' | 'picture' | 'svg' | 'video'}>}\n * @param value\n *   Thing to check (typically `Node`).\n * @returns\n *   Whether `value` is an element considered embedded content.\n *\n *   The elements `audio`, `canvas`, `embed`, `iframe`, `img`, `math`,\n *   `object`, `picture`, `svg`, and `video` are embedded content.\n */\n// @ts-expect-error Sure, the assertion matches.\nexport const embedded = convertElement([\n  'audio',\n  'canvas',\n  'embed',\n  'iframe',\n  'img',\n  'math',\n  'object',\n  'picture',\n  'svg',\n  'video'\n])\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","// See: <https://html.spec.whatwg.org/#the-css-user-agent-style-sheet-and-presentational-hints>\nexport const blocks = [\n  'address', // Flow content.\n  'article', // Sections and headings.\n  'aside', // Sections and headings.\n  'blockquote', // Flow content.\n  'body', // Page.\n  'br', // Contribute whitespace intrinsically.\n  'caption', // Similar to block.\n  'center', // Flow content, legacy.\n  'col', // Similar to block.\n  'colgroup', // Similar to block.\n  'dd', // Lists.\n  'dialog', // Flow content.\n  'dir', // Lists, legacy.\n  'div', // Flow content.\n  'dl', // Lists.\n  'dt', // Lists.\n  'figcaption', // Flow content.\n  'figure', // Flow content.\n  'footer', // Flow content.\n  'form', // Flow content.\n  'h1', // Sections and headings.\n  'h2', // Sections and headings.\n  'h3', // Sections and headings.\n  'h4', // Sections and headings.\n  'h5', // Sections and headings.\n  'h6', // Sections and headings.\n  'head', // Page.\n  'header', // Flow content.\n  'hgroup', // Sections and headings.\n  'hr', // Flow content.\n  'html', // Page.\n  'legend', // Flow content.\n  'li', // Block-like.\n  'li', // Similar to block.\n  'listing', // Flow content, legacy\n  'main', // Flow content.\n  'menu', // Lists.\n  'nav', // Sections and headings.\n  'ol', // Lists.\n  'optgroup', // Similar to block.\n  'option', // Similar to block.\n  'p', // Flow content.\n  'plaintext', // Flow content, legacy\n  'pre', // Flow content.\n  'section', // Sections and headings.\n  'summary', // Similar to block.\n  'table', // Similar to block.\n  'tbody', // Similar to block.\n  'td', // Block-like.\n  'td', // Similar to block.\n  'tfoot', // Similar to block.\n  'th', // Block-like.\n  'th', // Similar to block.\n  'thead', // Similar to block.\n  'tr', // Similar to block.\n  'ul', // Lists.\n  'wbr', // Contribute whitespace intrinsically.\n  'xmp' // Flow content, legacy\n]\n","export const content = [\n  // Form.\n  'button',\n  'input',\n  'select',\n  'textarea'\n]\n","export const skippable = [\n  'area',\n  'base',\n  'basefont',\n  'dialog',\n  'datalist',\n  'head',\n  'link',\n  'meta',\n  'noembed',\n  'noframes',\n  'param',\n  'rp',\n  'script',\n  'source',\n  'style',\n  'template',\n  'track',\n  'title'\n]\n","/**\n * rehype plugin to minify whitespace between elements.\n *\n * ## What is this?\n *\n * This package is a plugin that can minify the whitespace between elements.\n *\n * ## When should I use this?\n *\n * You can use this plugin when you want to improve the size of HTML documents.\n *\n * ## API\n *\n * ### `unified().use(rehypeMinifyWhitespace[, options])`\n *\n * Minify whitespace.\n *\n * ##### `options`\n *\n * Configuration (optional).\n *\n * ##### `options.newlines`\n *\n * Whether to collapse runs of whitespace that include line endings to one\n * line ending (`boolean`, default: `false`).\n * The default is to collapse everything to one space.\n *\n * @example\n *   <h1>Heading</h1>\n *   <p><strong>This</strong> and <em>that</em></p>\n */\n\n/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {Root|Root['children'][number]} Node\n *\n * @typedef Options\n * @property {boolean} [newlines=false]\n *   If `newlines: true`, collapses whitespace containing newlines to `'\\n'`\n *   instead of `' '`.\n *   The default is to collapse to a single space.\n *\n * @typedef {'pre'|'nowrap'|'pre-wrap'|'normal'} Whitespace\n *\n * @typedef Context\n * @property {ReturnType<collapseFactory>} collapse\n * @property {Whitespace} whitespace\n * @property {boolean} [before]\n * @property {boolean} [after]\n *\n * @typedef Result\n * @property {boolean} remove\n * @property {boolean} ignore\n * @property {boolean} stripAtStart\n */\n\nimport {isElement} from 'hast-util-is-element'\nimport {embedded} from 'hast-util-embedded'\nimport {convert} from 'unist-util-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {blocks} from './block.js'\nimport {content as contents} from './content.js'\nimport {skippable as skippables} from './skippable.js'\n\nconst ignorableNode = convert(['doctype', 'comment'])\n\n/**\n * Minify whitespace.\n *\n * @type {import('unified').Plugin<[Options?]|Array<void>, Root>}\n */\nexport default function rehypeMinifyWhitespace(options = {}) {\n  const collapse = collapseFactory(\n    options.newlines ? replaceNewlines : replaceWhitespace\n  )\n\n  return (tree) => {\n    minify(tree, {collapse, whitespace: 'normal'})\n  }\n}\n\n/**\n * @param {Node} node\n * @param {Context} context\n * @returns {Result}\n */\nfunction minify(node, context) {\n  if ('children' in node) {\n    const settings = Object.assign({}, context)\n\n    if (node.type === 'root' || blocklike(node)) {\n      settings.before = true\n      settings.after = true\n    }\n\n    settings.whitespace = inferWhiteSpace(node, context)\n\n    return all(node, settings)\n  }\n\n  if (node.type === 'text') {\n    if (context.whitespace === 'normal') {\n      return minifyText(node, context)\n    }\n\n    // Naïve collapse, but no trimming:\n    if (context.whitespace === 'nowrap') {\n      node.value = context.collapse(node.value)\n    }\n\n    // The `pre-wrap` or `pre` whitespace settings are neither collapsed nor\n    // trimmed.\n  }\n\n  return {remove: false, ignore: ignorableNode(node), stripAtStart: false}\n}\n\n/**\n * @param {Text} node\n * @param {Context} context\n * @returns {Result}\n */\nfunction minifyText(node, context) {\n  const value = context.collapse(node.value)\n  const result = {remove: false, ignore: false, stripAtStart: false}\n  let start = 0\n  let end = value.length\n\n  if (context.before && removable(value.charAt(0))) {\n    start++\n  }\n\n  if (start !== end && removable(value.charAt(end - 1))) {\n    if (context.after) {\n      end--\n    } else {\n      result.stripAtStart = true\n    }\n  }\n\n  if (start === end) {\n    result.remove = true\n  } else {\n    node.value = value.slice(start, end)\n  }\n\n  return result\n}\n\n/**\n * @param {Root|Element} parent\n * @param {Context} context\n * @returns {Result}\n */\nfunction all(parent, context) {\n  let before = context.before\n  const after = context.after\n  const children = parent.children\n  let length = children.length\n  let index = -1\n\n  while (++index < length) {\n    const result = minify(\n      children[index],\n      Object.assign({}, context, {\n        before,\n        after: collapsableAfter(children, index, after)\n      })\n    )\n\n    if (result.remove) {\n      children.splice(index, 1)\n      index--\n      length--\n    } else if (!result.ignore) {\n      before = result.stripAtStart\n    }\n\n    // If this element, such as a `<select>` or `<img>`, contributes content\n    // somehow, allow whitespace again.\n    if (content(children[index])) {\n      before = false\n    }\n  }\n\n  return {remove: false, ignore: false, stripAtStart: Boolean(before || after)}\n}\n\n/**\n * @param {Array<Node>} nodes\n * @param {number} index\n * @param {boolean|undefined} [after]\n * @returns {boolean|undefined}\n */\nfunction collapsableAfter(nodes, index, after) {\n  while (++index < nodes.length) {\n    const node = nodes[index]\n    let result = inferBoundary(node)\n\n    if (result === undefined && 'children' in node && !skippable(node)) {\n      result = collapsableAfter(node.children, -1)\n    }\n\n    if (typeof result === 'boolean') {\n      return result\n    }\n  }\n\n  return after\n}\n\n/**\n * Infer two types of boundaries:\n *\n * 1. `true` — boundary for which whitespace around it does not contribute\n *    anything\n * 2. `false` — boundary for which whitespace around it *does* contribute\n *\n * No result (`undefined`) is returned if it is unknown.\n *\n * @param {Node} node\n * @returns {boolean|undefined}\n */\nfunction inferBoundary(node) {\n  if (node.type === 'element') {\n    if (content(node)) {\n      return false\n    }\n\n    if (blocklike(node)) {\n      return true\n    }\n\n    // Unknown: either depends on siblings if embedded or metadata, or on\n    // children.\n  } else if (node.type === 'text') {\n    if (!whitespace(node)) {\n      return false\n    }\n  } else if (!ignorableNode(node)) {\n    return false\n  }\n}\n\n/**\n * Infer whether a node is skippable.\n *\n * @param {Node} node\n * @returns {boolean}\n */\nfunction content(node) {\n  return embedded(node) || isElement(node, contents)\n}\n\n/**\n * See: <https://html.spec.whatwg.org/#the-css-user-agent-style-sheet-and-presentational-hints>\n *\n * @param {Element} node\n * @returns {boolean}\n */\nfunction blocklike(node) {\n  return isElement(node, blocks)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {boolean}\n */\nfunction skippable(node) {\n  return (\n    Boolean(\n      'properties' in node && node.properties && node.properties.hidden\n    ) ||\n    ignorableNode(node) ||\n    isElement(node, skippables)\n  )\n}\n\n/**\n * @param {string} character\n * @returns {boolean}\n */\nfunction removable(character) {\n  return character === ' ' || character === '\\n'\n}\n\n/**\n * @param {string} value\n * @returns {string}\n */\nfunction replaceNewlines(value) {\n  const match = /\\r?\\n|\\r/.exec(value)\n  return match ? match[0] : ' '\n}\n\n/**\n * @returns {string}\n */\nfunction replaceWhitespace() {\n  return ' '\n}\n\n/**\n * @param {(value: string) => string} replace\n */\nfunction collapseFactory(replace) {\n  return collapse\n\n  /**\n   * @param {string} value\n   * @returns {string}\n   */\n  function collapse(value) {\n    return String(value).replace(/[\\t\\n\\v\\f\\r ]+/g, replace)\n  }\n}\n\n/**\n * We don’t need to support void elements here (so `nobr wbr` -> `normal` is\n * ignored).\n *\n * @param {Root|Element} node\n * @param {Context} context\n * @returns {Whitespace}\n */\nfunction inferWhiteSpace(node, context) {\n  if ('tagName' in node && node.properties) {\n    switch (node.tagName) {\n      // Whitespace in script/style, while not displayed by CSS as significant,\n      // could have some meaning in JS/CSS, so we can’t touch them.\n      case 'listing':\n      case 'plaintext':\n      case 'script':\n      case 'style':\n      case 'xmp':\n        return 'pre'\n      case 'nobr':\n        return 'nowrap'\n      case 'pre':\n        return node.properties.wrap ? 'pre-wrap' : 'pre'\n      case 'td':\n      case 'th':\n        return node.properties.noWrap ? 'nowrap' : context.whitespace\n      case 'textarea':\n        return 'pre-wrap'\n      default:\n    }\n  }\n\n  return context.whitespace\n}\n","/**\n * @param {string} d\n * @returns {string}\n */\nexport function color(d) {\n  return d\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('./types.js').H} H\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').MdastNode} MdastNode\n */\n\nimport {one} from './one.js'\n\n/**\n * @param {H} h\n * @param {Node} parent\n * @returns {Array<MdastNode>}\n */\nexport function all(h, parent) {\n  /** @type {Array<Node>} */\n  // @ts-expect-error Assume `parent` is a parent.\n  const nodes = parent.children || []\n  /** @type {Array<MdastNode>} */\n  const values = []\n  let index = -1\n\n  while (++index < nodes.length) {\n    // @ts-expect-error assume `parent` is a parent.\n    const result = one(h, nodes[index], parent)\n\n    if (Array.isArray(result)) {\n      values.push(...result)\n    } else if (result) {\n      values.push(result)\n    }\n  }\n\n  let start = 0\n  let end = values.length\n\n  while (start < end && values[start].type === 'break') {\n    start++\n  }\n\n  while (end > start && values[end - 1].type === 'break') {\n    end--\n  }\n\n  return start === 0 && end === values.length\n    ? values\n    : values.slice(start, end)\n}\n","export const own = {}.hasOwnProperty\n","/**\n * @typedef {import('../types.js').H} H\n */\n\n/**\n * @param {H} h\n * @param {string} value\n * @returns {string}\n */\nexport function wrapText(h, value) {\n  return h.wrapText ? value : value.replace(/\\r?\\n|\\r/g, ' ')\n}\n","/**\n * @typedef {import('./types.js').H} H\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').Handle} Handle\n * @typedef {import('./types.js').MdastNode} MdastNode\n */\n\nimport {all} from './all.js'\nimport {own} from './util/own.js'\nimport {wrapText} from './util/wrap-text.js'\n\n/**\n * @param {H} h\n * @param {Node} node\n * @param {Parent|undefined} parent\n * @returns {MdastNode|Array<MdastNode>|void}\n */\nexport function one(h, node, parent) {\n  /** @type {Handle|undefined} */\n  let fn\n\n  if (node.type === 'element') {\n    if (node.properties && node.properties.dataMdast === 'ignore') {\n      return\n    }\n\n    if (own.call(h.handlers, node.tagName)) {\n      fn = h.handlers[node.tagName]\n    }\n  } else if (own.call(h.handlers, node.type)) {\n    fn = h.handlers[node.type]\n  }\n\n  if (typeof fn === 'function') {\n    return fn(h, node, parent)\n  }\n\n  return unknown(h, node)\n}\n\n/**\n * @type {Handle}\n * @param {Node} node\n */\nfunction unknown(h, node) {\n  // @ts-expect-error: Looks like a literal.\n  if (typeof node.value === 'string') {\n    // @ts-expect-error: Looks like a literal.\n    return h(node, 'text', wrapText(h, node.value))\n  }\n\n  return all(h, node)\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n */\n\n/**\n * @typedef {Root | Content} Node\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Check if `node`is an element and has a `field` property.\n *\n * @param {unknown} node\n *   Thing to check (typically `Element`).\n * @param {unknown} field\n *   Field name to check (typically `string`).\n * @returns {boolean}\n *   Whether `node` is an element that has a `field` property.\n */\nexport function hasProperty(node, field) {\n  const value =\n    typeof field === 'string' &&\n    isNode(node) &&\n    node.type === 'element' &&\n    node.properties &&\n    own.call(node.properties, field) &&\n    node.properties[field]\n\n  return value !== null && value !== undefined && value !== false\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction isNode(value) {\n  return Boolean(value && typeof value === 'object' && 'type' in value)\n}\n","/**\n * @fileoverview\n *   Check if a `link` element is “Body OK”.\n * @longdescription\n *   ## Use\n *\n *   ```js\n *   import {h} from 'hastscript'\n *   import {isBodyOkLink} from 'hast-util-is-body-ok-link'\n *\n *   isBodyOkLink(h('link', {itemProp: 'foo'})) //=> true\n *   isBodyOkLink(h('link', {rel: ['stylesheet'], href: 'index.css'})) //=> true\n *   isBodyOkLink(h('link', {rel: ['author'], href: 'index.css'})) //=> false\n *   ```\n *\n *   ## API\n *\n *   ### `isBodyOkLink(node)`\n *\n *   * Return `true` for `link` elements with an `itemProp`\n *   * Return `true` for `link` elements with a `rel` list where one or more\n *     entries are `pingback`, `prefetch`, or `stylesheet`.\n */\n\nimport {isElement} from 'hast-util-is-element'\nimport {hasProperty} from 'hast-util-has-property'\n\nconst list = new Set(['pingback', 'prefetch', 'stylesheet'])\n\n/**\n * @typedef {import('hast').Root} Root\n * @typedef {Root|Root['children'][number]} Node\n */\n\n/**\n * Check if a `link` element is “Body OK”.\n *\n * @param {Node} node\n * @returns {boolean}\n */\nexport function isBodyOkLink(node) {\n  if (!isElement(node, 'link')) {\n    return false\n  }\n\n  if (hasProperty(node, 'itemProp')) {\n    return true\n  }\n\n  const props = node.properties || {}\n  const rel = props.rel || []\n  let index = -1\n\n  if (!Array.isArray(rel) || rel.length === 0) {\n    return false\n  }\n\n  while (++index < rel.length) {\n    if (!list.has(String(rel[index]))) {\n      return false\n    }\n  }\n\n  return true\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n */\n\n/**\n * @typedef {Root | Content} Node\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {hasProperty} from 'hast-util-has-property'\nimport {embedded} from 'hast-util-embedded'\nimport {isBodyOkLink} from 'hast-util-is-body-ok-link'\n\nconst basic = convertElement([\n  'a',\n  'abbr',\n  // `area` is in fact only phrasing if it is inside a `map` element.\n  // However, since `area`s are required to be inside a `map` element, and it’s\n  // a rather involved check, it’s ignored here for now.\n  'area',\n  'b',\n  'bdi',\n  'bdo',\n  'br',\n  'button',\n  'cite',\n  'code',\n  'data',\n  'datalist',\n  'del',\n  'dfn',\n  'em',\n  'i',\n  'input',\n  'ins',\n  'kbd',\n  'keygen',\n  'label',\n  'map',\n  'mark',\n  'meter',\n  'noscript',\n  'output',\n  'progress',\n  'q',\n  'ruby',\n  's',\n  'samp',\n  'script',\n  'select',\n  'small',\n  'span',\n  'strong',\n  'sub',\n  'sup',\n  'template',\n  'textarea',\n  'time',\n  'u',\n  'var',\n  'wbr'\n])\n\nconst meta = convertElement('meta')\n\n/**\n * Check if the given value is *phrasing* content.\n *\n * @param {unknown} value\n *   Thing to check, typically `Node`.\n * @returns {boolean}\n *   Whether `value` is phrasing content.\n */\nexport function phrasing(value) {\n  return Boolean(\n    node(value) &&\n      (value.type === 'text' ||\n        basic(value) ||\n        embedded(value) ||\n        isBodyOkLink(value) ||\n        (meta(value) && hasProperty(value, 'itemProp')))\n  )\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction node(value) {\n  // @ts-expect-error: looks like an object.\n  return value && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('unist-util-is').AssertPredicate<PhrasingContent>} AssertPredicatePhrasing\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * @param\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\nexport const phrasing = /** @type {AssertPredicatePhrasing} */ (\n  convert([\n    'break',\n    'delete',\n    'emphasis',\n    'footnote',\n    'footnoteReference',\n    'image',\n    'imageReference',\n    'inlineCode',\n    'link',\n    'linkReference',\n    'strong',\n    'text'\n  ])\n)\n","/**\n * @typedef {import('../types.js').MdastNode} MdastNode\n * @typedef {import('../types.js').MdastPhrasingContent} MdastPhrasingContent\n */\n\nimport extend from 'extend'\nimport {phrasing as hastPhrasing} from 'hast-util-phrasing'\nimport {phrasing as mdastPhrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Array<MdastNode>} nodes\n */\nexport function wrap(nodes) {\n  return runs(nodes, onphrasing)\n\n  /**\n   * @param {Array<MdastPhrasingContent>} nodes\n   * @returns {MdastNode|Array<MdastNode>}\n   */\n  function onphrasing(nodes) {\n    const head = nodes[0]\n\n    if (\n      nodes.length === 1 &&\n      head.type === 'text' &&\n      (head.value === ' ' || head.value === '\\n')\n    ) {\n      return []\n    }\n\n    return {type: 'paragraph', children: nodes}\n  }\n}\n\n/**\n * Check if there are non-phrasing mdast nodes returned.\n * This is needed if a fragment is given, which could just be a sentence, and\n * doesn’t need a wrapper paragraph.\n *\n * @param {Array<MdastNode>} nodes\n * @returns {boolean}\n */\nexport function wrapNeeded(nodes) {\n  let index = -1\n  /** @type {MdastNode} */\n  let node\n\n  while (++index < nodes.length) {\n    node = nodes[index]\n\n    if (!phrasing(node) || ('children' in node && wrapNeeded(node.children))) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Wrap all runs of mdast phrasing content in `paragraph` nodes.\n *\n * @param {Array<MdastNode>} nodes\n * @param {(nodes: Array<MdastPhrasingContent>) => MdastNode|Array<MdastNode>} onphrasing\n * @param {(node: MdastNode) => MdastNode} [onnonphrasing]\n */\nfunction runs(nodes, onphrasing, onnonphrasing) {\n  const nonphrasing = onnonphrasing || identity\n  /** @type {Array<MdastNode>} */\n  const flattened = flatten(nodes)\n  /** @type {Array<MdastNode>} */\n  let result = []\n  let index = -1\n  /** @type {Array<MdastPhrasingContent>|undefined} */\n  let queue\n  /** @type {MdastNode} */\n  let node\n\n  while (++index < flattened.length) {\n    node = flattened[index]\n\n    if (phrasing(node)) {\n      if (!queue) queue = []\n      queue.push(node)\n    } else {\n      if (queue) {\n        result = result.concat(onphrasing(queue))\n        queue = undefined\n      }\n\n      result = result.concat(nonphrasing(node))\n    }\n  }\n\n  if (queue) {\n    result = result.concat(onphrasing(queue))\n  }\n\n  return result\n}\n\n/**\n * Flatten a list of nodes.\n *\n * @param {Array<MdastNode>} nodes\n * @returns {Array<MdastNode>}\n */\nfunction flatten(nodes) {\n  /** @type {Array<MdastNode>} */\n  let flattened = []\n  let index = -1\n  /** @type {MdastNode} */\n  let node\n\n  while (++index < nodes.length) {\n    node = nodes[index]\n\n    // Straddling: some elements are *weird*.\n    // Namely: `map`, `ins`, `del`, and `a`, as they are hybrid elements.\n    // See: <https://html.spec.whatwg.org/#paragraphs>.\n    // Paragraphs are the weirdest of them all.\n    // See the straddling fixture for more info!\n    // `ins` is ignored in mdast, so we don’t need to worry about that.\n    // `map` maps to its content, so we don’t need to worry about that either.\n    // `del` maps to `delete` and `a` to `link`, so we do handle those.\n    // What we’ll do is split `node` over each of its children.\n    if (\n      (node.type === 'delete' || node.type === 'link') &&\n      wrapNeeded(node.children)\n    ) {\n      flattened = flattened.concat(split(node))\n    } else {\n      flattened.push(node)\n    }\n  }\n\n  return flattened\n}\n\n/**\n * @param {MdastNode} node\n * @returns {Array<MdastNode>}\n */\nfunction split(node) {\n  // @ts-expect-error Assume parent.\n  return runs(node.children, onphrasing, onnonphrasing)\n\n  /**\n   * Use `child`, add `parent` as its first child, put the original children\n   * into `parent`.\n   * If `child` is not a parent, `parent` will not be added.\n   *\n   * @param {MdastNode} child\n   * @returns {MdastNode}\n   */\n  function onnonphrasing(child) {\n    if ('children' in child && 'children' in node) {\n      const {children, ...rest} = node\n      return {\n        ...child,\n        // @ts-expect-error: assume matching parent & child.\n        children: [{...extend(true, {}, rest), children: child.children}]\n      }\n    }\n\n    return {...child}\n  }\n\n  /**\n   * Use `parent`, put the phrasing run inside it.\n   *\n   * @param {Array<MdastPhrasingContent>} nodes\n   * @returns {MdastNode}\n   */\n  function onphrasing(nodes) {\n    // @ts-expect-error: assume parent.\n    const {children, ...rest} = node\n    // @ts-expect-error: assume matching parent & child.\n    return {...extend(true, {}, rest), children: nodes}\n  }\n}\n\n/**\n * Check if an mdast node is phrasing.\n *\n * Also supports checking embedded hast fields.\n *\n * @param {MdastNode} node\n * @returns {node is MdastPhrasingContent}\n */\nfunction phrasing(node) {\n  return node.data && node.data.hName\n    ? hastPhrasing({\n        type: 'element',\n        tagName: node.data.hName,\n        properties: {},\n        children: []\n      })\n    : mdastPhrasing(node)\n}\n\n/**\n * @template {unknown} T\n * @param {T} n\n * @returns {T}\n */\nfunction identity(n) {\n  return n\n}\n","/**\n * @typedef {import('../types.js').H} H\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').MdastNode} MdastNode\n */\n\nimport {all} from '../all.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n * @param {Node} node\n * @returns {Array<MdastNode>}\n */\nexport function wrapChildren(h, node) {\n  return wrap(all(h, node))\n}\n","/**\n * @typedef {import('../types.js').H} H\n */\n\n/**\n * @param {H} h\n * @param {string|null|undefined} url\n * @returns {string}\n */\nexport function resolve(h, url) {\n  if (url === null || url === undefined) {\n    return ''\n  }\n\n  if (h.frozenBaseUrl) {\n    return String(new URL(url, h.frozenBaseUrl))\n  }\n\n  return url\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Properties} Properties\n */\n\nimport {all} from '../all.js'\nimport {resolve} from '../util/resolve.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function a(h, node) {\n  /** @type {Properties} */\n  // @ts-expect-error: `props` are defined.\n  const props = node.properties\n  return h(\n    node,\n    'link',\n    {\n      title: props.title || null,\n      url: resolve(h, String(props.href || '') || null)\n    },\n    all(h, node)\n  )\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function base(h, node) {\n  if (!h.baseFound) {\n    h.frozenBaseUrl =\n      String((node.properties && node.properties.href) || '') || null\n    h.baseFound = true\n  }\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {wrapChildren} from '../util/wrap-children.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrapChildren(h, node))\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function br(h, node) {\n  return h.wrapText ? h(node, 'break') : h(node, 'text', ' ')\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Find the first node in `parent` after another `node` or after an index,\n * that passes `test`.\n\n * @param parent\n *   Parent node.\n * @param index\n *   Child of `parent` or it’s index.\n * @param test\n *   `unist-util-is`-compatible test.\n * @returns\n *   Child of `parent` or `null`.\n */\nexport const findAfter =\n  /**\n   * @type {(\n   *  (<T extends Node>(node: Parent, index: Node | number, test: import('unist-util-is').PredicateTest<T>) => T | null) &\n   *  ((node: Parent, index: Node | number, test?: Test) => Node | null)\n   * )}\n   */\n  (\n    /**\n     * @param {Parent} parent\n     * @param {Node | number} index\n     * @param {Test} [test]\n     * @returns {Node | null}\n     */\n    function (parent, index, test) {\n      const is = convert(test)\n\n      if (!parent || !parent.type || !parent.children) {\n        throw new Error('Expected parent node')\n      }\n\n      if (typeof index === 'number') {\n        if (index < 0 || index === Number.POSITIVE_INFINITY) {\n          throw new Error('Expected positive finite number as index')\n        }\n      } else {\n        index = parent.children.indexOf(index)\n\n        if (index < 0) {\n          throw new Error('Expected child node or index')\n        }\n      }\n\n      while (++index < parent.children.length) {\n        if (is(parent.children[index], index, parent)) {\n          return parent.children[index]\n        }\n      }\n\n      return null\n    }\n  )\n","/**\n * @typedef {import('hast-util-is-element').TestFunctionAnything} TestFunctionAnything\n * @typedef {import('hast').Content} Content\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n */\n\n/**\n * @typedef {Content | Root} Node\n *   Any node.\n * @typedef {Extract<Node, import('unist').Parent>} Parent\n *   Any parent.\n * @typedef {'normal' | 'pre' | 'nowrap' | 'pre-wrap'} Whitespace\n *   Valid and useful whitespace values (from CSS).\n * @typedef {0 | 1 | 2} BreakNumber\n *   Specific break:\n *\n *   *   `0` — space\n *   *   `1` — line ending\n *   *   `2` — blank line\n * @typedef {'\\n'} BreakForce\n *   Forced break.\n * @typedef {boolean} BreakValue\n *   Whether there was a break.\n * @typedef {BreakValue | BreakNumber | undefined} BreakBefore\n *   Any value for a break before.\n * @typedef {BreakValue | BreakNumber | BreakForce | undefined} BreakAfter\n *   Any value for a break after.\n *\n * @typedef CollectionInfo\n *   Info on current collection.\n * @property {Whitespace} whitespace\n *   Current whitespace setting.\n * @property {BreakBefore} breakBefore\n *   Whether there was a break before.\n * @property {BreakAfter} breakAfter\n *   Whether there was a break after.\n *\n * @typedef Options\n *   Configuration.\n * @property {Whitespace | null | undefined} [whitespace='normal']\n *   Initial CSS whitespace setting to use.\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {findAfter} from 'unist-util-find-after'\n\nconst searchLineFeeds = /\\n/g\nconst searchTabOrSpaces = /[\\t ]+/g\n\nconst br = convertElement('br')\nconst p = convertElement('p')\nconst cell = convertElement(['th', 'td'])\nconst row = convertElement('tr')\n\n// Note that we don’t need to include void elements here as they don’t have text.\n// See: <https://github.com/wooorm/html-void-elements>\nconst notRendered = convertElement([\n  // List from: <https://html.spec.whatwg.org/#hidden-elements>\n  'datalist',\n  'head',\n  'noembed',\n  'noframes',\n  'noscript', // Act as if we support scripting.\n  'rp',\n  'script',\n  'style',\n  'template',\n  'title',\n  // Hidden attribute.\n  hidden,\n  // From: <https://html.spec.whatwg.org/#flow-content-3>\n  closedDialog\n])\n\n// See: <https://html.spec.whatwg.org/#the-css-user-agent-style-sheet-and-presentational-hints>\nconst blockOrCaption = convertElement([\n  'address', // Flow content\n  'article', // Sections and headings\n  'aside', // Sections and headings\n  'blockquote', // Flow content\n  'body', // Page\n  'caption', // `table-caption`\n  'center', // Flow content (legacy)\n  'dd', // Lists\n  'dialog', // Flow content\n  'dir', // Lists (legacy)\n  'dl', // Lists\n  'dt', // Lists\n  'div', // Flow content\n  'figure', // Flow content\n  'figcaption', // Flow content\n  'footer', // Flow content\n  'form,', // Flow content\n  'h1', // Sections and headings\n  'h2', // Sections and headings\n  'h3', // Sections and headings\n  'h4', // Sections and headings\n  'h5', // Sections and headings\n  'h6', // Sections and headings\n  'header', // Flow content\n  'hgroup', // Sections and headings\n  'hr', // Flow content\n  'html', // Page\n  'legend', // Flow content\n  'listing', // Flow content (legacy)\n  'main', // Flow content\n  'menu', // Lists\n  'nav', // Sections and headings\n  'ol', // Lists\n  'p', // Flow content\n  'plaintext', // Flow content (legacy)\n  'pre', // Flow content\n  'section', // Sections and headings\n  'ul', // Lists\n  'xmp' // Flow content (legacy)\n])\n\n/**\n * Get the plain-text value of a node.\n *\n * ###### Algorithm\n *\n * *   if `tree` is a comment, returns its `value`\n * *   if `tree` is a text, applies normal whitespace collapsing to its\n *     `value`, as defined by the CSS Text spec\n * *   if `tree` is a root or element, applies an algorithm similar to the\n *     `innerText` getter as defined by HTML\n *\n * ###### Notes\n *\n * > 👉 **Note**: the algorithm acts as if `tree` is being rendered, and as if\n * > we’re a CSS-supporting user agent, with scripting enabled.\n *\n * *   if `tree` is an element that is not displayed (such as a `head`), we’ll\n *     still use the `innerText` algorithm instead of switching to `textContent`\n * *   if descendants of `tree` are elements that are not displayed, they are\n *     ignored\n * *   CSS is not considered, except for the default user agent style sheet\n * *   a line feed is collapsed instead of ignored in cases where Fullwidth, Wide,\n *     or Halfwidth East Asian Width characters are used, the same goes for a case\n *     with Chinese, Japanese, or Yi writing systems\n * *   replaced elements (such as `audio`) are treated like non-replaced elements\n *\n * @param {Node} tree\n *   Tree to turn into text.\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `tree`.\n */\nexport function toText(tree, options = {}) {\n  const children = 'children' in tree ? tree.children : []\n  const block = blockOrCaption(tree)\n  const whitespace = inferWhitespace(tree, {\n    whitespace: options.whitespace || 'normal',\n    breakBefore: false,\n    breakAfter: false\n  })\n\n  /** @type {Array<string | BreakNumber>} */\n  const results = []\n\n  // Treat `text` and `comment` as having normal white-space.\n  // This deviates from the spec as in the DOM the node’s `.data` has to be\n  // returned.\n  // If you want that behavior use `hast-util-to-string`.\n  // All other nodes are later handled as if they are `element`s (so the\n  // algorithm also works on a `root`).\n  // Nodes without children are treated as a void element, so `doctype` is thus\n  // ignored.\n  if (tree.type === 'text' || tree.type === 'comment') {\n    results.push(\n      ...collectText(tree, {\n        whitespace,\n        breakBefore: true,\n        breakAfter: true\n      })\n    )\n  }\n\n  // 1.  If this element is not being rendered, or if the user agent is a\n  //     non-CSS user agent, then return the same value as the textContent IDL\n  //     attribute on this element.\n  //\n  //     Note: we’re not supporting stylesheets so we’re acting as if the node\n  //     is rendered.\n  //\n  //     If you want that behavior use `hast-util-to-string`.\n  //     Important: we’ll have to account for this later though.\n\n  // 2.  Let results be a new empty list.\n  let index = -1\n\n  // 3.  For each child node node of this element:\n  while (++index < children.length) {\n    // 3.1. Let current be the list resulting in running the inner text\n    //      collection steps with node.\n    //      Each item in results will either be a JavaScript string or a\n    //      positive integer (a required line break count).\n    // 3.2. For each item item in current, append item to results.\n    results.push(\n      // @ts-expect-error Looks like a parent.\n      ...innerTextCollection(children[index], tree, {\n        whitespace,\n        breakBefore: index ? undefined : block,\n        breakAfter:\n          index < children.length - 1 ? br(children[index + 1]) : block\n      })\n    )\n  }\n\n  // 4.  Remove any items from results that are the empty string.\n  // 5.  Remove any runs of consecutive required line break count items at the\n  //     start or end of results.\n  // 6.  Replace each remaining run of consecutive required line break count\n  //     items with a string consisting of as many U+000A LINE FEED (LF)\n  //     characters as the maximum of the values in the required line break\n  //     count items.\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {number | undefined} */\n  let count\n\n  index = -1\n\n  while (++index < results.length) {\n    const value = results[index]\n\n    if (typeof value === 'number') {\n      if (count !== undefined && value > count) count = value\n    } else if (value) {\n      if (count !== undefined && count > -1) {\n        result.push('\\n'.repeat(count) || ' ')\n      }\n\n      count = -1\n      result.push(value)\n    }\n  }\n\n  // 7.  Return the concatenation of the string items in results.\n  return result.join('')\n}\n\n/**\n * <https://html.spec.whatwg.org/#inner-text-collection-steps>\n *\n * @param {Node} node\n * @param {Parent} parent\n * @param {CollectionInfo} info\n * @returns {Array<string | BreakNumber>}\n */\nfunction innerTextCollection(node, parent, info) {\n  if (node.type === 'element') {\n    return collectElement(node, parent, info)\n  }\n\n  if (node.type === 'text') {\n    return info.whitespace === 'normal'\n      ? collectText(node, info)\n      : collectPreText(node)\n  }\n\n  return []\n}\n\n/**\n * Collect an element.\n *\n * @param {Element} node\n *   Element node.\n * @param {Parent} parent\n * @param {CollectionInfo} info\n *   Info on current collection.\n * @returns {Array<string | BreakNumber>}\n */\nfunction collectElement(node, parent, info) {\n  // First we infer the `white-space` property.\n  const whitespace = inferWhitespace(node, info)\n  const children = node.children || []\n  let index = -1\n  /** @type {Array<string | BreakNumber>} */\n  let items = []\n\n  // We’re ignoring point 3, and exiting without any content here, because we\n  // deviated from the spec in `toText` at step 3.\n  if (notRendered(node)) {\n    return items\n  }\n\n  /** @type {BreakNumber | undefined} */\n  let prefix\n  /** @type {BreakNumber | BreakForce | undefined} */\n  let suffix\n  // Note: we first detect if there is going to be a break before or after the\n  // contents, as that changes the white-space handling.\n\n  // 2.  If node’s computed value of `visibility` is not `visible`, then return\n  //     items.\n  //\n  //     Note: Ignored, as everything is visible by default user agent styles.\n\n  // 3.  If node is not being rendered, then return items. [...]\n  //\n  //     Note: We already did this above.\n\n  // See `collectText` for step 4.\n\n  // 5.  If node is a `<br>` element, then append a string containing a single\n  //     U+000A LINE FEED (LF) character to items.\n  if (br(node)) {\n    suffix = '\\n'\n  }\n\n  // 7.  If node’s computed value of `display` is `table-row`, and node’s CSS\n  //     box is not the last `table-row` box of the nearest ancestor `table`\n  //     box, then append a string containing a single U+000A LINE FEED (LF)\n  //     character to items.\n  //\n  //     See: <https://html.spec.whatwg.org/#tables-2>\n  //     Note: needs further investigation as this does not account for implicit\n  //     rows.\n  else if (row(node) && findAfter(parent, node, row)) {\n    suffix = '\\n'\n  }\n\n  // 8.  If node is a `<p>` element, then append 2 (a required line break count)\n  //     at the beginning and end of items.\n  else if (p(node)) {\n    prefix = 2\n    suffix = 2\n  }\n\n  // 9.  If node’s used value of `display` is block-level or `table-caption`,\n  //     then append 1 (a required line break count) at the beginning and end of\n  //     items.\n  else if (blockOrCaption(node)) {\n    prefix = 1\n    suffix = 1\n  }\n\n  // 1.  Let items be the result of running the inner text collection steps with\n  //     each child node of node in tree order, and then concatenating the\n  //     results to a single list.\n  while (++index < children.length) {\n    items = items.concat(\n      innerTextCollection(children[index], node, {\n        whitespace,\n        breakBefore: index ? undefined : prefix,\n        breakAfter:\n          index < children.length - 1 ? br(children[index + 1]) : suffix\n      })\n    )\n  }\n\n  // 6.  If node’s computed value of `display` is `table-cell`, and node’s CSS\n  //     box is not the last `table-cell` box of its enclosing `table-row` box,\n  //     then append a string containing a single U+0009 CHARACTER TABULATION\n  //     (tab) character to items.\n  //\n  //     See: <https://html.spec.whatwg.org/#tables-2>\n  if (cell(node) && findAfter(parent, node, cell)) {\n    items.push('\\t')\n  }\n\n  // Add the pre- and suffix.\n  if (prefix) items.unshift(prefix)\n  if (suffix) items.push(suffix)\n\n  return items\n}\n\n/**\n * 4.  If node is a Text node, then for each CSS text box produced by node,\n *     in content order, compute the text of the box after application of the\n *     CSS `white-space` processing rules and `text-transform` rules, set\n *     items to the list of the resulting strings, and return items.\n *     The CSS `white-space` processing rules are slightly modified:\n *     collapsible spaces at the end of lines are always collapsed, but they\n *     are only removed if the line is the last line of the block, or it ends\n *     with a br element.\n *     Soft hyphens should be preserved.\n *\n *     Note: See `collectText` and `collectPreText`.\n *     Note: we don’t deal with `text-transform`, no element has that by\n *     default.\n *\n * See: <https://drafts.csswg.org/css-text/#white-space-phase-1>\n *\n * @param {Text | Comment} node\n *   Text node.\n * @param {CollectionInfo} info\n *   Info on current collection.\n * @returns {Array<string | BreakNumber>}\n *   Result.\n */\nfunction collectText(node, info) {\n  const value = String(node.value)\n  /** @type {Array<string>} */\n  const lines = []\n  /** @type {Array<string | BreakNumber>} */\n  const result = []\n  let start = 0\n\n  while (start <= value.length) {\n    searchLineFeeds.lastIndex = start\n\n    const match = searchLineFeeds.exec(value)\n    const end = match && 'index' in match ? match.index : value.length\n\n    lines.push(\n      // Any sequence of collapsible spaces and tabs immediately preceding or\n      // following a segment break is removed.\n      trimAndCollapseSpacesAndTabs(\n        // […] ignoring bidi formatting characters (characters with the\n        // Bidi_Control property [UAX9]: ALM, LTR, RTL, LRE-RLO, LRI-PDI) as if\n        // they were not there.\n        value\n          .slice(start, end)\n          .replace(/[\\u061C\\u200E\\u200F\\u202A-\\u202E\\u2066-\\u2069]/g, ''),\n        start === 0 ? info.breakBefore : true,\n        end === value.length ? info.breakAfter : true\n      )\n    )\n\n    start = end + 1\n  }\n\n  // Collapsible segment breaks are transformed for rendering according to the\n  // segment break transformation rules.\n  // So here we jump to 4.1.2 of [CSSTEXT]:\n  // Any collapsible segment break immediately following another collapsible\n  // segment break is removed\n  let index = -1\n  /** @type {BreakNumber | undefined} */\n  let join\n\n  while (++index < lines.length) {\n    // *   If the character immediately before or immediately after the segment\n    //     break is the zero-width space character (U+200B), then the break is\n    //     removed, leaving behind the zero-width space.\n    if (\n      lines[index].charCodeAt(lines[index].length - 1) === 0x200b /* ZWSP */ ||\n      (index < lines.length - 1 &&\n        lines[index + 1].charCodeAt(0) === 0x200b) /* ZWSP */\n    ) {\n      result.push(lines[index])\n      join = undefined\n    }\n\n    // *   Otherwise, if the East Asian Width property [UAX11] of both the\n    //     character before and after the segment break is Fullwidth, Wide, or\n    //     Halfwidth (not Ambiguous), and neither side is Hangul, then the\n    //     segment break is removed.\n    //\n    //     Note: ignored.\n    // *   Otherwise, if the writing system of the segment break is Chinese,\n    //     Japanese, or Yi, and the character before or after the segment break\n    //     is punctuation or a symbol (Unicode general category P* or S*) and\n    //     has an East Asian Width property of Ambiguous, and the character on\n    //     the other side of the segment break is Fullwidth, Wide, or Halfwidth,\n    //     and not Hangul, then the segment break is removed.\n    //\n    //     Note: ignored.\n\n    // *   Otherwise, the segment break is converted to a space (U+0020).\n    else if (lines[index]) {\n      if (typeof join === 'number') result.push(join)\n      result.push(lines[index])\n      join = 0\n    } else if (index === 0 || index === lines.length - 1) {\n      // If this line is empty, and it’s the first or last, add a space.\n      // Note that this function is only called in normal whitespace, so we\n      // don’t worry about `pre`.\n      result.push(0)\n    }\n  }\n\n  return result\n}\n\n/**\n * Collect a text node as “pre” whitespace.\n *\n * @param {Text} node\n *   Text node.\n * @returns {Array<string | BreakNumber>}\n *   Result.\n */\nfunction collectPreText(node) {\n  return [String(node.value)]\n}\n\n/**\n * 3.  Every collapsible tab is converted to a collapsible space (U+0020).\n * 4.  Any collapsible space immediately following another collapsible\n *     space—even one outside the boundary of the inline containing that\n *     space, provided both spaces are within the same inline formatting\n *     context—is collapsed to have zero advance width. (It is invisible,\n *     but retains its soft wrap opportunity, if any.)\n *\n * @param {string} value\n *   Value to collapse.\n * @param {BreakBefore} breakBefore\n *   Whether there was a break before.\n * @param {BreakAfter} breakAfter\n *   Whether there was a break after.\n * @returns {string}\n *   Result.\n */\nfunction trimAndCollapseSpacesAndTabs(value, breakBefore, breakAfter) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  /** @type {number | undefined} */\n  let end\n\n  while (start < value.length) {\n    searchTabOrSpaces.lastIndex = start\n    const match = searchTabOrSpaces.exec(value)\n    end = match ? match.index : value.length\n\n    // If we’re not directly after a segment break, but there was white space,\n    // add an empty value that will be turned into a space.\n    if (!start && !end && match && !breakBefore) {\n      result.push('')\n    }\n\n    if (start !== end) {\n      result.push(value.slice(start, end))\n    }\n\n    start = match ? end + match[0].length : end\n  }\n\n  // If we reached the end, there was trailing white space, and there’s no\n  // segment break after this node, add an empty value that will be turned\n  // into a space.\n  if (start !== end && !breakAfter) {\n    result.push('')\n  }\n\n  return result.join(' ')\n}\n\n/**\n * Figure out the whitespace of a node.\n *\n * We don’t support void elements here (so `nobr wbr` -> `normal` is ignored).\n *\n * @param {Node} node\n *   Node (typically `Element`).\n * @param {CollectionInfo} info\n *   Info on current collection.\n * @returns {Whitespace}\n *   Applied whitespace.\n */\nfunction inferWhitespace(node, info) {\n  if (node.type === 'element') {\n    const props = node.properties || {}\n    switch (node.tagName) {\n      case 'listing':\n      case 'plaintext':\n      case 'xmp': {\n        return 'pre'\n      }\n\n      case 'nobr': {\n        return 'nowrap'\n      }\n\n      case 'pre': {\n        return props.wrap ? 'pre-wrap' : 'pre'\n      }\n\n      case 'td':\n      case 'th': {\n        return props.noWrap ? 'nowrap' : info.whitespace\n      }\n\n      case 'textarea': {\n        return 'pre-wrap'\n      }\n\n      default:\n    }\n  }\n\n  return info.whitespace\n}\n\n/** @type {TestFunctionAnything} */\nfunction hidden(node) {\n  return Boolean((node.properties || {}).hidden)\n}\n\n/** @type {TestFunctionAnything} */\nfunction closedDialog(node) {\n  return node.tagName === 'dialog' && !(node.properties || {}).open\n}\n","/**\n * Remove final line endings from `value`\n *\n * @param {unknown} value\n *   Value with trailing line endings, coerced to string.\n * @return {string}\n *   Value without trailing line endings.\n */\nexport function trimTrailingLines(value) {\n  const input = String(value)\n  let end = input.length\n\n  while (end > 0) {\n    const code = input.codePointAt(end - 1)\n    if (code !== undefined && (code === 10 || code === 13)) {\n      end--\n    } else {\n      break\n    }\n  }\n\n  return input.slice(0, end)\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').ElementChild} ElementChild\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {toText} from 'hast-util-to-text'\nimport {trimTrailingLines} from 'trim-trailing-lines'\nimport {wrapText} from '../util/wrap-text.js'\n\nconst prefix = 'language-'\n\nconst pre = convertElement('pre')\nconst isCode = convertElement('code')\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function code(h, node) {\n  const children = node.children\n  let index = -1\n  /** @type {Array<string|number>|undefined} */\n  let classList\n  /** @type {string|undefined} */\n  let lang\n\n  if (pre(node)) {\n    while (++index < children.length) {\n      const child = children[index]\n\n      if (\n        isCode(child) &&\n        child.properties &&\n        child.properties.className &&\n        Array.isArray(child.properties.className)\n      ) {\n        classList = child.properties.className\n        break\n      }\n    }\n  }\n\n  if (classList) {\n    index = -1\n\n    while (++index < classList.length) {\n      if (String(classList[index]).slice(0, prefix.length) === prefix) {\n        lang = String(classList[index]).slice(prefix.length)\n        break\n      }\n    }\n  }\n\n  return h(\n    node,\n    'code',\n    {lang: lang || null, meta: null},\n    trimTrailingLines(wrapText(h, toText(node)))\n  )\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Comment} Comment\n */\nimport {wrapText} from '../util/wrap-text.js'\n\n/**\n * @type {Handle}\n * @param {Comment} node\n */\nexport function comment(h, node) {\n  return h(node, 'html', '<!--' + wrapText(h, node.value) + '-->')\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {all} from '../all.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function del(h, node) {\n  return h(node, 'delete', all(h, node))\n}\n","/**\n * @typedef {import('../types.js').MdastListContent} MdastListContent\n */\n\n/**\n * @param {Array<MdastListContent>} children\n * @returns {boolean}\n */\nexport function listItemsSpread(children) {\n  let index = -1\n\n  if (children.length > 1) {\n    while (++index < children.length) {\n      if (children[index].spread) {\n        return true\n      }\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('../types.js').H} H\n * @typedef {import('../types.js').Child} Child\n * @typedef {import('../types.js').MdastListContent} MdastListContent\n */\n\nimport {all} from '../all.js'\n\n/**\n * @param {H} h\n * @param {Child} node\n * @returns {Array<MdastListContent>}\n */\nexport function wrapListItems(h, node) {\n  const children = all(h, node)\n  let index = -1\n\n  while (++index < children.length) {\n    const child = children[index]\n    if (child.type !== 'listItem') {\n      children[index] = {\n        type: 'listItem',\n        spread: false,\n        checked: null,\n        // @ts-expect-error Assume `children[index]` is block content.\n        children: [child]\n      }\n    }\n  }\n\n  // @ts-expect-error Assume all `listItem`s\n  return children\n}\n","/**\n * @typedef {import('../types.js').H} H\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').ElementChild} ElementChild\n * @typedef {import('../types.js').MdastNode} MdastNode\n * @typedef {import('../types.js').MdastListContent} MdastListContent\n * @typedef {import('../types.js').MdastBlockContent} MdastBlockContent\n * @typedef {import('../types.js').MdastDefinitionContent} MdastDefinitionContent\n *\n * @typedef Group\n * @property {Array<Element>} titles\n * @property {Array<ElementChild>} definitions\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {listItemsSpread} from '../util/list-items-spread.js'\nimport {wrapListItems} from '../util/wrap-list-items.js'\n\nconst div = convertElement('div')\nconst dt = convertElement('dt')\nconst dd = convertElement('dd')\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function dl(h, node) {\n  const children = node.children\n  let index = -1\n  /** @type {Array<ElementChild>} */\n  let clean = []\n  /** @type {Array<Group>} */\n  const groups = []\n  /** @type {Group} */\n  let group = {titles: [], definitions: []}\n  /** @type {ElementChild} */\n  let child\n  /** @type {Array<MdastBlockContent|MdastDefinitionContent>} */\n  let result\n\n  // Unwrap `<div>`s\n  while (++index < children.length) {\n    child = children[index]\n    clean = clean.concat(div(child) ? child.children : child)\n  }\n\n  index = -1\n\n  // Group titles and definitions.\n  while (++index < clean.length) {\n    child = clean[index]\n\n    if (dt(child)) {\n      if (dd(clean[index - 1])) {\n        groups.push(group)\n        group = {titles: [], definitions: []}\n      }\n\n      group.titles.push(child)\n    } else {\n      group.definitions.push(child)\n    }\n  }\n\n  groups.push(group)\n\n  // Create items.\n  index = -1\n  /** @type {Array<MdastListContent>} */\n  const content = []\n\n  while (++index < groups.length) {\n    result = [\n      ...handle(h, groups[index].titles),\n      ...handle(h, groups[index].definitions)\n    ]\n\n    if (result.length > 0) {\n      content.push({\n        type: 'listItem',\n        spread: result.length > 1,\n        checked: null,\n        children: result\n      })\n    }\n  }\n\n  // Create a list if there are items.\n  if (content.length > 0) {\n    return h(\n      node,\n      'list',\n      {ordered: false, start: null, spread: listItemsSpread(content)},\n      content\n    )\n  }\n}\n\n/**\n * @param {H} h\n * @param {Array<ElementChild>} children\n * @returns {Array<MdastBlockContent|MdastDefinitionContent>}\n */\nfunction handle(h, children) {\n  const nodes = wrapListItems(h, {type: 'element', tagName: 'x', children})\n\n  if (nodes.length === 0) {\n    return []\n  }\n\n  if (nodes.length === 1) {\n    return nodes[0].children\n  }\n\n  return [\n    {\n      type: 'list',\n      ordered: false,\n      start: null,\n      spread: listItemsSpread(nodes),\n      children: nodes\n    }\n  ]\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {all} from '../all.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function em(h, node) {\n  return h(node, 'emphasis', all(h, node))\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').MdastNode} MdastNode\n */\n\nimport {all} from '../all.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function heading(h, node) {\n  // `else` shouldn’t happen, of course…\n  /* c8 ignore next */\n  const depth = Number(node.tagName.charAt(1)) || 1\n  const wrap = h.wrapText\n\n  h.wrapText = false\n  const result = h(node, 'heading', {depth}, all(h, node))\n  h.wrapText = wrap\n\n  return result\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function hr(h, node) {\n  return h(node, 'thematicBreak')\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Properties} Properties\n */\n\nimport {resolve} from '../util/resolve.js'\nimport {wrapText} from '../util/wrap-text.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function iframe(h, node) {\n  /** @type {Properties} */\n  // @ts-expect-error: `props` are defined.\n  const props = node.properties\n  const src = String(props.src || '')\n  const title = String(props.title || '')\n\n  // Only create a link if there is a title.\n  // We can’t use the content of the frame because conforming HTML parsers treat\n  // it as text, whereas legacy parsers treat it as HTML, so it will likely\n  // contain tags that will show up in text.\n  if (src && title) {\n    return {\n      type: 'link',\n      title: null,\n      url: resolve(h, src),\n      children: [{type: 'text', value: wrapText(h, title)}]\n    }\n  }\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Properties} Properties\n */\n\nimport {resolve} from '../util/resolve.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function img(h, node) {\n  /** @type {Properties} */\n  // @ts-expect-error: `props` are defined.\n  const props = node.properties\n  return h(node, 'image', {\n    url: resolve(h, String(props.src || '') || null),\n    title: props.title || null,\n    alt: props.alt || ''\n  })\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {toText} from 'hast-util-to-text'\nimport {wrapText} from '../util/wrap-text.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'inlineCode', wrapText(h, toText(node)))\n}\n","/**\n * @typedef {import('../types.js').H} H\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Child} Child\n * @typedef {import('../types.js').Properties} Properties\n */\n\nimport {hasProperty} from 'hast-util-has-property'\nimport {convertElement} from 'hast-util-is-element'\nimport {toText} from 'hast-util-to-text'\nimport {wrapText} from './wrap-text.js'\n\nconst option = convertElement('option')\n\n/**\n * @param {H} h\n * @param {Element} node\n * @param {Properties} [properties]\n * @returns {Array<[string, string|null]>}\n */\nexport function findSelectedOptions(h, node, properties) {\n  /** @type {Properties} */\n  // @ts-expect-error: `props` exist.\n  const props = properties || node.properties\n  let options = findOptions(node)\n  const size =\n    Math.min(Number.parseInt(String(props.size), 10), 0) ||\n    (props.multiple ? 4 : 1)\n  let index = -1\n  /** @type {Array<Element>} */\n  const selectedOptions = []\n  /** @type {Array<[string, string|null]>} */\n  const values = []\n\n  while (++index < options.length) {\n    if (hasProperty(options[index], 'selected')) {\n      selectedOptions.push(options[index])\n    }\n  }\n\n  const list = selectedOptions.length > 0 ? selectedOptions : options\n  options = list.slice(0, size)\n  index = -1\n\n  while (++index < options.length) {\n    const option = options[index]\n    const content = wrapText(h, toText(option))\n    /** @type {Properties} */\n    // @ts-expect-error: `props` exist.\n    const props = option.properties\n    const label = content || String(props.label || '')\n    const value = String(props.value || '') || content\n    values.push([value, label === value ? null : label])\n  }\n\n  return values\n}\n\n/**\n * @param {Parent} node\n */\nfunction findOptions(node) {\n  const children = node.children\n  let index = -1\n  /** @type {Array<Element>} */\n  let results = []\n  /** @type {Child} */\n  let child\n\n  while (++index < children.length) {\n    child = children[index]\n\n    // @ts-expect-error Looks like a parent.\n    if (Array.isArray(child.children)) {\n      // @ts-expect-error Looks like a parent.\n      results = results.concat(findOptions(child))\n    }\n\n    if (option(child) && !hasProperty(child, 'disabled')) {\n      results.push(child)\n    }\n  }\n\n  return results\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Properties} Properties\n * @typedef {import('../types.js').MdastNode} MdastNode\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {findSelectedOptions} from '../util/find-selected-options.js'\nimport {own} from '../util/own.js'\nimport {resolve} from '../util/resolve.js'\nimport {wrapText} from '../util/wrap-text.js'\n\nconst datalist = convertElement('datalist')\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\n// eslint-disable-next-line complexity\nexport function input(h, node) {\n  /** @type {Properties} */\n  // @ts-expect-error: `props` are defined.\n  const props = node.properties\n  let value = String(props.value || props.placeholder || '')\n  /** @type {Array<MdastNode>} */\n  const results = []\n  /** @type {Array<string>} */\n  const texts = []\n  /** @type {Array<[string, string|null]>} */\n  let values = []\n  let index = -1\n  /** @type {string} */\n  let list\n\n  if (props.disabled || props.type === 'hidden' || props.type === 'file') {\n    return\n  }\n\n  if (props.type === 'checkbox' || props.type === 'radio') {\n    return h(\n      node,\n      'text',\n      wrapText(h, h[props.checked ? 'checked' : 'unchecked'])\n    )\n  }\n\n  if (props.type === 'image') {\n    return props.alt || value\n      ? h(node, 'image', {\n          url: resolve(h, String(props.src || '') || null),\n          title: wrapText(h, String(props.title || '')) || null,\n          alt: wrapText(h, String(props.alt || value))\n        })\n      : []\n  }\n\n  if (value) {\n    values = [[value, null]]\n  } else if (\n    // `list` is not supported on these types:\n    props.type !== 'password' &&\n    props.type !== 'file' &&\n    props.type !== 'submit' &&\n    props.type !== 'reset' &&\n    props.type !== 'button' &&\n    props.list\n  ) {\n    list = String(props.list).toUpperCase()\n\n    if (own.call(h.nodeById, list) && datalist(h.nodeById[list])) {\n      values = findSelectedOptions(h, h.nodeById[list], props)\n    }\n  }\n\n  if (values.length === 0) {\n    return\n  }\n\n  // Hide password value.\n  if (props.type === 'password') {\n    // Passwords don’t support `list`.\n    values[0] = ['•'.repeat(values[0][0].length), null]\n  }\n\n  if (props.type === 'url' || props.type === 'email') {\n    while (++index < values.length) {\n      value = resolve(h, values[index][0])\n\n      results.push(\n        h(\n          node,\n          'link',\n          {\n            title: null,\n            url: wrapText(h, props.type === 'email' ? 'mailto:' + value : value)\n          },\n          [{type: 'text', value: wrapText(h, values[index][1] || value)}]\n        )\n      )\n\n      if (index !== values.length - 1) {\n        results.push({type: 'text', value: ', '})\n      }\n    }\n\n    return results\n  }\n\n  while (++index < values.length) {\n    texts.push(\n      values[index][1]\n        ? values[index][1] + ' (' + values[index][0] + ')'\n        : values[index][0]\n    )\n  }\n\n  return h(node, 'text', wrapText(h, texts.join(', ')))\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').ElementChild} ElementChild\n * @typedef {import('../types.js').MdastNode} MdastNode\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {wrapChildren} from '../util/wrap-children.js'\n\nconst p = convertElement('p')\nconst input = convertElement('input')\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function li(h, node) {\n  const head = node.children[0]\n  /** @type {boolean|null} */\n  let checked = null\n  /** @type {ElementChild} */\n  let checkbox\n  /** @type {Element|undefined} */\n  let clone\n\n  // Check if this node starts with a checkbox.\n  if (p(head)) {\n    checkbox = head.children[0]\n\n    if (\n      input(checkbox) &&\n      checkbox.properties &&\n      (checkbox.properties.type === 'checkbox' ||\n        checkbox.properties.type === 'radio')\n    ) {\n      checked = Boolean(checkbox.properties.checked)\n      clone = {\n        ...node,\n        children: [\n          {...head, children: head.children.slice(1)},\n          ...node.children.slice(1)\n        ]\n      }\n    }\n  }\n\n  const content = wrapChildren(h, clone || node)\n\n  return h(node, 'listItem', {spread: content.length > 1, checked}, content)\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {hasProperty} from 'hast-util-has-property'\nimport {listItemsSpread} from '../util/list-items-spread.js'\nimport {wrapListItems} from '../util/wrap-list-items.js'\n\nconst ol = convertElement('ol')\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function list(h, node) {\n  const ordered = ol(node)\n  const children = wrapListItems(h, node)\n  /** @type {number|null} */\n  let start = null\n\n  if (ordered) {\n    start = hasProperty(node, 'start')\n      ? // @ts-expect-error: `props` exist.\n        Number.parseInt(String(node.properties.start), 10)\n      : 1\n  }\n\n  return h(\n    node,\n    'list',\n    {ordered, start, spread: listItemsSpread(children)},\n    children\n  )\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML.\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Properties} Properties\n * @typedef {import('../types.js').ElementChild} ElementChild\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {toString} from 'mdast-util-to-string'\nimport {visit, EXIT} from 'unist-util-visit'\nimport {all} from '../all.js'\nimport {resolve} from '../util/resolve.js'\nimport {wrapNeeded} from '../util/wrap.js'\n\nconst source = convertElement('source')\nconst video = convertElement('video')\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function media(h, node) {\n  let nodes = all(h, node)\n  /** @type {Properties} */\n  // @ts-expect-error: `props` are defined.\n  const properties = node.properties\n  const poster = video(node) && String(properties.poster || '')\n  let src = String(properties.src || '')\n  let index = -1\n  /** @type {boolean} */\n  let linkInFallbackContent = false\n  /** @type {ElementChild} */\n  let child\n\n  visit({type: 'root', children: nodes}, 'link', findLink)\n\n  // If the content links to something, or if it’s not phrasing…\n  if (linkInFallbackContent || wrapNeeded(nodes)) {\n    return nodes\n  }\n\n  // Find the source.\n  while (!src && ++index < node.children.length) {\n    child = node.children[index]\n    if (source(child)) {\n      // @ts-expect-error: `props` are defined.\n      src = String(child.properties.src || '')\n    }\n  }\n\n  // If there’s a poster defined on the video, create an image.\n  if (poster) {\n    nodes = [\n      {\n        type: 'image',\n        title: null,\n        url: resolve(h, poster),\n        alt: toString({children: nodes})\n      }\n    ]\n  }\n\n  // Link to the media resource.\n  return {\n    type: 'link',\n    // @ts-expect-error Types are broken.\n    title: node.properties.title || null,\n    url: resolve(h, src),\n    // @ts-expect-error Assume phrasing content.\n    children: nodes\n  }\n\n  function findLink() {\n    linkInFallbackContent = true\n    return EXIT\n  }\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {all} from '../all.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function p(h, node) {\n  const nodes = all(h, node)\n\n  if (nodes.length > 0) {\n    return h(node, 'paragraph', nodes)\n  }\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').MdastNode} MdastNode\n */\n\nimport {all} from '../all.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function q(h, node) {\n  const expected = h.quotes[h.qNesting % h.quotes.length]\n\n  h.qNesting++\n  const contents = all(h, node)\n  h.qNesting--\n\n  contents.unshift({type: 'text', value: expected.charAt(0)})\n\n  contents.push({\n    type: 'text',\n    value: expected.length > 1 ? expected.charAt(1) : expected\n  })\n\n  return contents\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Root} Root\n */\n\nimport {all} from '../all.js'\nimport {wrap, wrapNeeded} from '../util/wrap.js'\n\n/**\n * @type {Handle}\n * @param {Root} node\n */\nexport function root(h, node) {\n  let children = all(h, node)\n\n  if (h.document || wrapNeeded(children)) {\n    children = wrap(children)\n  }\n\n  return h(node, 'root', children)\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {findSelectedOptions} from '../util/find-selected-options.js'\nimport {wrapText} from '../util/wrap-text.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function select(h, node) {\n  const values = findSelectedOptions(h, node)\n  let index = -1\n  /** @type {Array<string>} */\n  const results = []\n  /** @type {[string, string|null]} */\n  let value\n\n  while (++index < values.length) {\n    value = values[index]\n    results.push(value[1] ? value[1] + ' (' + value[0] + ')' : value[0])\n  }\n\n  if (results.length > 0) {\n    return h(node, 'text', wrapText(h, results.join(', ')))\n  }\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {all} from '../all.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').MdastNode} MdastNode\n */\n\nimport {all} from '../all.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function tableCell(h, node) {\n  const wrap = h.wrapText\n\n  h.wrapText = false\n\n  const result = h(node, 'tableCell', all(h, node))\n\n  if (node.properties && (node.properties.rowSpan || node.properties.colSpan)) {\n    const data = result.data || (result.data = {})\n    if (node.properties.rowSpan) data.rowSpan = node.properties.rowSpan\n    if (node.properties.colSpan) data.colSpan = node.properties.colSpan\n  }\n\n  h.wrapText = wrap\n\n  return result\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {all} from '../all.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function tableRow(h, node) {\n  return h(node, 'tableRow', all(h, node))\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').MdastNode} MdastNode\n * @typedef {import('../types.js').MdastTableContent} MdastTableContent\n * @typedef {import('../types.js').MdastRowContent} MdastRowContent\n * @typedef {import('../types.js').MdastPhrasingContent} MdastPhrasingContent\n *\n * @typedef Info\n * @property {Array<string|null>} align\n * @property {boolean} headless\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {toText} from 'hast-util-to-text'\nimport {visit, SKIP} from 'unist-util-visit'\nimport {wrapText} from '../util/wrap-text.js'\nimport {all} from '../all.js'\n\nconst thead = convertElement('thead')\nconst tr = convertElement('tr')\nconst cell = convertElement(['th', 'td'])\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function table(h, node) {\n  if (h.inTable) {\n    return h(node, 'text', wrapText(h, toText(node)))\n  }\n\n  h.inTable = true\n\n  const {headless, align} = inspect(node)\n  const rows = toRows(all(h, node), headless)\n  let columns = 1\n  let rowIndex = -1\n\n  while (++rowIndex < rows.length) {\n    const cells = rows[rowIndex].children\n    let cellIndex = -1\n\n    while (++cellIndex < cells.length) {\n      const cell = cells[cellIndex]\n\n      if (cell.data) {\n        const colSpan = Number.parseInt(String(cell.data.colSpan), 10) || 1\n        const rowSpan = Number.parseInt(String(cell.data.rowSpan), 10) || 1\n\n        if (colSpan > 1 || rowSpan > 1) {\n          let otherRowIndex = rowIndex - 1\n\n          while (++otherRowIndex < rowIndex + rowSpan) {\n            let colIndex = cellIndex - 1\n\n            while (++colIndex < cellIndex + colSpan) {\n              if (!rows[otherRowIndex]) {\n                // Don’t add rows that don’t exist.\n                // Browsers don’t render them either.\n                break\n              }\n\n              /** @type {Array<MdastRowContent>} */\n              const newCells = []\n\n              if (otherRowIndex !== rowIndex || colIndex !== cellIndex) {\n                newCells.push({type: 'tableCell', children: []})\n              }\n\n              rows[otherRowIndex].children.splice(colIndex, 0, ...newCells)\n            }\n          }\n        }\n\n        // Clean the data fields.\n        if ('colSpan' in cell.data) delete cell.data.colSpan\n        if ('rowSpan' in cell.data) delete cell.data.rowSpan\n        if (Object.keys(cell.data).length === 0) delete cell.data\n      }\n    }\n\n    if (cells.length > columns) columns = cells.length\n  }\n\n  // Add extra empty cells.\n  rowIndex = -1\n\n  while (++rowIndex < rows.length) {\n    const cells = rows[rowIndex].children\n    let cellIndex = cells.length - 1\n    while (++cellIndex < columns) {\n      cells.push({type: 'tableCell', children: []})\n    }\n  }\n\n  let alignIndex = align.length - 1\n  while (++alignIndex < columns) {\n    align.push(null)\n  }\n\n  h.inTable = false\n\n  return h(node, 'table', {align}, rows)\n}\n\n/**\n * Infer whether the HTML table has a head and how it aligns.\n *\n * @param {Element} node\n * @returns {Info}\n */\nfunction inspect(node) {\n  let headless = true\n  let rowIndex = 0\n  let cellIndex = 0\n  /** @type {Array<string|null>} */\n  const align = [null]\n\n  visit(node, 'element', (child) => {\n    if (child.tagName === 'table' && node !== child) {\n      return SKIP\n    }\n\n    // If there is a `thead`, assume there is a header row.\n    if (cell(child) && child.properties) {\n      if (!align[cellIndex]) {\n        align[cellIndex] = String(child.properties.align || '') || null\n      }\n\n      // If there is a th in the first row, assume there is a header row.\n      if (headless && rowIndex < 2 && child.tagName === 'th') {\n        headless = false\n      }\n\n      cellIndex++\n    } else if (thead(child)) {\n      headless = false\n    } else if (tr(child)) {\n      rowIndex++\n      cellIndex = 0\n    }\n  })\n\n  return {align, headless}\n}\n\n/**\n * Ensure the rows are properly structured.\n *\n * @param {Array<MdastNode>} children\n * @param {boolean} headless\n * @returns {Array<MdastTableContent>}\n */\nfunction toRows(children, headless) {\n  let index = -1\n  /** @type {Array<MdastTableContent>} */\n  const nodes = []\n  /** @type {Array<MdastRowContent>|undefined} */\n  let queue\n\n  // Add an empty header row.\n  if (headless) {\n    nodes.push({type: 'tableRow', children: []})\n  }\n\n  while (++index < children.length) {\n    const node = children[index]\n\n    if (node.type === 'tableRow') {\n      if (queue) {\n        node.children.unshift(...queue)\n        queue = undefined\n      }\n\n      nodes.push(node)\n    } else {\n      if (!queue) queue = []\n      // @ts-expect-error Assume row content.\n      queue.push(node)\n    }\n  }\n\n  if (queue) {\n    nodes[nodes.length - 1].children.push(...queue)\n  }\n\n  index = -1\n\n  while (++index < nodes.length) {\n    nodes[index].children = toCells(nodes[index].children)\n  }\n\n  return nodes\n}\n\n/**\n * Ensure the cells in a row are properly structured.\n *\n * @param {Array<MdastNode>} children\n * @returns {Array<MdastRowContent>}\n */\nfunction toCells(children) {\n  /** @type {Array<MdastRowContent>} */\n  const nodes = []\n  let index = -1\n  /** @type {MdastNode} */\n  let node\n  /** @type {Array<MdastPhrasingContent>|undefined} */\n  let queue\n\n  while (++index < children.length) {\n    node = children[index]\n\n    if (node.type === 'tableCell') {\n      if (queue) {\n        node.children.unshift(...queue)\n        queue = undefined\n      }\n\n      nodes.push(node)\n    } else {\n      if (!queue) queue = []\n      // @ts-expect-error Assume phrasing content.\n      queue.push(node)\n    }\n  }\n\n  if (queue) {\n    node = nodes[nodes.length - 1]\n\n    if (!node) {\n      node = {type: 'tableCell', children: []}\n      nodes.push(node)\n    }\n\n    node.children.push(...queue)\n  }\n\n  return nodes\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Text} Text\n */\n\nimport {wrapText} from '../util/wrap-text.js'\n\n/**\n * @type {Handle}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h(node, 'text', wrapText(h, node.value))\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {toText} from 'hast-util-to-text'\nimport {wrapText} from '../util/wrap-text.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function textarea(h, node) {\n  return h(node, 'text', wrapText(h, toText(node)))\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function wbr(h, node) {\n  return h(node, 'text', '\\u200B')\n}\n","import {all} from '../all.js'\nimport {wrapChildren} from '../util/wrap-children.js'\nimport {a} from './a.js'\nimport {base} from './base.js'\nimport {blockquote} from './blockquote.js'\nimport {br} from './br.js'\nimport {code} from './code.js'\nimport {comment} from './comment.js'\nimport {del} from './del.js'\nimport {dl} from './dl.js'\nimport {em} from './em.js'\nimport {heading} from './heading.js'\nimport {hr} from './hr.js'\nimport {iframe} from './iframe.js'\nimport {img} from './img.js'\nimport {inlineCode} from './inline-code.js'\nimport {input} from './input.js'\nimport {li} from './li.js'\nimport {list} from './list.js'\nimport {media} from './media.js'\nimport {p} from './p.js'\nimport {q} from './q.js'\nimport {root} from './root.js'\nimport {select} from './select.js'\nimport {strong} from './strong.js'\nimport {tableCell} from './table-cell.js'\nimport {tableRow} from './table-row.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {textarea} from './textarea.js'\nimport {wbr} from './wbr.js'\n\nexport const handlers = {\n  root,\n  text,\n  comment,\n  doctype: ignore,\n\n  applet: ignore,\n  area: ignore,\n  basefont: ignore,\n  bgsound: ignore,\n  caption: ignore,\n  col: ignore,\n  colgroup: ignore,\n  command: ignore,\n  content: ignore,\n  datalist: ignore,\n  dialog: ignore,\n  element: ignore,\n  embed: ignore,\n  frame: ignore,\n  frameset: ignore,\n  isindex: ignore,\n  keygen: ignore,\n  link: ignore,\n  math: ignore,\n  menu: ignore,\n  menuitem: ignore,\n  meta: ignore,\n  nextid: ignore,\n  noembed: ignore,\n  noframes: ignore,\n  optgroup: ignore,\n  option: ignore,\n  param: ignore,\n  script: ignore,\n  shadow: ignore,\n  source: ignore,\n  spacer: ignore,\n  style: ignore,\n  svg: ignore,\n  template: ignore,\n  title: ignore,\n  track: ignore,\n\n  abbr: all,\n  acronym: all,\n  bdi: all,\n  bdo: all,\n  big: all,\n  blink: all,\n  button: all,\n  canvas: all,\n  cite: all,\n  data: all,\n  details: all,\n  dfn: all,\n  font: all,\n  ins: all,\n  label: all,\n  map: all,\n  marquee: all,\n  meter: all,\n  nobr: all,\n  noscript: all,\n  object: all,\n  output: all,\n  progress: all,\n  rb: all,\n  rbc: all,\n  rp: all,\n  rt: all,\n  rtc: all,\n  ruby: all,\n  slot: all,\n  small: all,\n  span: all,\n  sup: all,\n  sub: all,\n  tbody: all,\n  tfoot: all,\n  thead: all,\n  time: all,\n\n  address: wrapChildren,\n  article: wrapChildren,\n  aside: wrapChildren,\n  body: wrapChildren,\n  center: wrapChildren,\n  div: wrapChildren,\n  fieldset: wrapChildren,\n  figcaption: wrapChildren,\n  figure: wrapChildren,\n  form: wrapChildren,\n  footer: wrapChildren,\n  header: wrapChildren,\n  hgroup: wrapChildren,\n  html: wrapChildren,\n  legend: wrapChildren,\n  main: wrapChildren,\n  multicol: wrapChildren,\n  nav: wrapChildren,\n  picture: wrapChildren,\n  section: wrapChildren,\n\n  a,\n  audio: media,\n  b: strong,\n  base,\n  blockquote,\n  br,\n  code: inlineCode,\n  dir: list,\n  dl,\n  dt: li,\n  dd: li,\n  del,\n  em,\n  h1: heading,\n  h2: heading,\n  h3: heading,\n  h4: heading,\n  h5: heading,\n  h6: heading,\n  hr,\n  i: em,\n  iframe,\n  img,\n  image: img,\n  input,\n  kbd: inlineCode,\n  li,\n  listing: code,\n  mark: em,\n  ol: list,\n  p,\n  plaintext: code,\n  pre: code,\n  q,\n  s: del,\n  samp: inlineCode,\n  select,\n  strike: del,\n  strong,\n  summary: p,\n  table,\n  td: tableCell,\n  textarea,\n  th: tableCell,\n  tr: tableRow,\n  tt: inlineCode,\n  u: em,\n  ul: list,\n  var: inlineCode,\n  video: media,\n  wbr,\n  xmp: code\n}\n\nfunction ignore() {}\n","/**\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').Properties} Properties\n * @typedef {import('./types.js').H} H\n * @typedef {import('./types.js').HWithoutProps} HWithoutProps\n * @typedef {import('./types.js').HWithProps} HWithProps\n * @typedef {import('./types.js').MdastNode} MdastNode\n * @typedef {import('./types.js').MdastRoot} MdastRoot\n */\n\nimport rehypeMinifyWhitespace from 'rehype-minify-whitespace'\nimport {convert} from 'unist-util-is'\nimport {visit} from 'unist-util-visit'\nimport {one} from './one.js'\nimport {handlers} from './handlers/index.js'\nimport {own} from './util/own.js'\n\nexport {one} from './one.js'\nexport {all} from './all.js'\n\nconst block = convert(['heading', 'paragraph', 'root'])\n\n/**\n * Transform hast to mdast.\n *\n * @param {Node} tree\n *   Tree (hast).\n * @param {Options} [options]\n *   Configuration (optional).\n */\nexport function toMdast(tree, options = {}) {\n  /** @type {Record<string, Element>} */\n  const byId = {}\n  /** @type {MdastNode|MdastRoot} */\n  let mdast\n\n  /**\n   * @type {H}\n   */\n  const h = Object.assign(\n    /**\n     * @type {HWithProps & HWithoutProps}\n     */\n    (\n      /**\n       * @param {Node} node\n       * @param {string} type\n       * @param {Properties|string|Array<Node>} [props]\n       * @param {string|Array<Node>} [children]\n       */\n      (node, type, props, children) => {\n        /** @type {Properties|undefined} */\n        let properties\n\n        if (typeof props === 'string' || Array.isArray(props)) {\n          children = props\n          properties = {}\n        } else {\n          properties = props\n        }\n\n        /** @type {Node} */\n        // @ts-expect-error Assume valid `type` and `children`/`value`.\n        const result = {type, ...properties}\n\n        if (typeof children === 'string') {\n          // @ts-expect-error: Looks like a literal.\n          result.value = children\n        } else if (children) {\n          // @ts-expect-error: Looks like a parent.\n          result.children = children\n        }\n\n        if (node.position) {\n          result.position = node.position\n        }\n\n        return result\n      }\n    ),\n    {\n      nodeById: byId,\n      baseFound: false,\n      inTable: false,\n      wrapText: true,\n      /** @type {string|null} */\n      frozenBaseUrl: null,\n      qNesting: 0,\n      handlers: options.handlers\n        ? {...handlers, ...options.handlers}\n        : handlers,\n      document: options.document,\n      checked: options.checked || '[x]',\n      unchecked: options.unchecked || '[ ]',\n      quotes: options.quotes || ['\"']\n    }\n  )\n\n  visit(tree, 'element', (node) => {\n    const id =\n      node.properties &&\n      'id' in node.properties &&\n      String(node.properties.id).toUpperCase()\n\n    if (id && !own.call(byId, id)) {\n      byId[id] = node\n    }\n  })\n\n  // @ts-expect-error: does return a transformer, that does accept any node.\n  rehypeMinifyWhitespace({newlines: options.newlines === true})(tree)\n\n  const result = one(h, tree, undefined)\n\n  if (!result) {\n    mdast = {type: 'root', children: []}\n  } else if (Array.isArray(result)) {\n    mdast = {type: 'root', children: result}\n  } else {\n    mdast = result\n  }\n\n  visit(mdast, 'text', ontext)\n\n  return mdast\n\n  /**\n   * Collapse text nodes, and fix whitespace.\n   * Most of this is taken care of by `rehype-minify-whitespace`, but\n   * we’re generating some whitespace too, and some nodes are in the end\n   * ignored.\n   * So clean up.\n   *\n   * @type {import('unist-util-visit/complex-types').BuildVisitor<MdastRoot, 'text'>}\n   */\n  function ontext(node, index, parent) {\n    /* c8 ignore next 3 */\n    if (index === null || !parent) {\n      return\n    }\n\n    const previous = parent.children[index - 1]\n\n    if (previous && previous.type === node.type) {\n      previous.value += node.value\n      parent.children.splice(index, 1)\n\n      if (previous.position && node.position) {\n        previous.position.end = node.position.end\n      }\n\n      // Iterate over the previous node again, to handle its total value.\n      return index - 1\n    }\n\n    node.value = node.value.replace(/[\\t ]*(\\r?\\n|\\r)[\\t ]*/, '$1')\n\n    // We don’t care about other phrasing nodes in between (e.g., `[ asd ]()`),\n    // as there the whitespace matters.\n    if (parent && block(parent)) {\n      if (!index) {\n        node.value = node.value.replace(/^[\\t ]+/, '')\n      }\n\n      if (index === parent.children.length - 1) {\n        node.value = node.value.replace(/[\\t ]+$/, '')\n      }\n    }\n\n    if (!node.value) {\n      parent.children.splice(index, 1)\n      return index\n    }\n  }\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n","/**\n * @typedef {import('hast-util-to-mdast').Options} Options\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n */\n\nimport {toMdast} from 'hast-util-to-mdast'\n\n/**\n * Plugin to bridge or mutate to rehype.\n *\n * If a destination is given, runs the destination with the new mdast\n * tree (bridge-mode).\n * Without destination, returns the mdast tree: further plugins run on that\n * tree (mutate-mode).\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `hast-util-to-mdast`.\n */\nconst rehypeRemark =\n  /**\n   * @type {(import('unified').Plugin<[Processor, Options?], HastRoot> & import('unified').Plugin<[Options?]|void[], HastRoot, MdastRoot>)}\n   */\n  (\n    /**\n     * @param {Processor|Options} [destination]\n     * @param {Options} [options]\n     */\n    function (destination, options) {\n      /** @type {Options|undefined} */\n      let settings\n      /** @type {Processor|undefined} */\n      let processor\n\n      if (typeof destination === 'function') {\n        processor = destination\n        settings = options || {}\n      } else {\n        settings = destination || {}\n      }\n\n      if (settings.document === undefined || settings.document === null) {\n        settings = Object.assign({}, settings, {document: true})\n      }\n\n      return processor ? bridge(processor, settings) : mutate(settings)\n    }\n  )\n\nexport default rehypeRemark\n\n/**\n * Bridge-mode.\n * Runs the destination with the new mdast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], HastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toMdast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further transformers run on the mdast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], HastRoot, MdastRoot>}\n */\nfunction mutate(options = {}) {\n  return (node) => {\n    const result = /** @type {MdastRoot} */ (toMdast(node, options))\n    return result\n  }\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'isindex',\n  'keygen',\n  'link',\n  'menuitem',\n  'meta',\n  'nextid',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @typedef CoreOptions\n * @property {Array<string>} [subset=[]]\n *   Whether to only escape the given subset of characters.\n * @property {boolean} [escapeOnly=false]\n *   Whether to only escape possibly dangerous characters.\n *   Those characters are `\"`, `&`, `'`, `<`, `>`, and `` ` ``.\n *\n * @typedef FormatOptions\n * @property {(code: number, next: number, options: CoreWithFormatOptions) => string} format\n *   Format strategy.\n *\n * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions\n */\n\n/**\n * Encode certain characters in `value`.\n *\n * @param {string} value\n * @param {CoreWithFormatOptions} options\n * @returns {string}\n */\nexport function core(value, options) {\n  value = value.replace(\n    options.subset ? charactersToExpression(options.subset) : /[\"&'<>`]/g,\n    basic\n  )\n\n  if (options.subset || options.escapeOnly) {\n    return value\n  }\n\n  return (\n    value\n      // Surrogate pairs.\n      .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, surrogate)\n      // BMP control characters (C0 except for LF, CR, SP; DEL; and some more\n      // non-ASCII ones).\n      .replace(\n        // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\n        /[\\x01-\\t\\v\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g,\n        basic\n      )\n  )\n\n  /**\n   * @param {string} pair\n   * @param {number} index\n   * @param {string} all\n   */\n  function surrogate(pair, index, all) {\n    return options.format(\n      (pair.charCodeAt(0) - 0xd800) * 0x400 +\n        pair.charCodeAt(1) -\n        0xdc00 +\n        0x10000,\n      all.charCodeAt(index + 2),\n      options\n    )\n  }\n\n  /**\n   * @param {string} character\n   * @param {number} index\n   * @param {string} all\n   */\n  function basic(character, index, all) {\n    return options.format(\n      character.charCodeAt(0),\n      all.charCodeAt(index + 1),\n      options\n    )\n  }\n}\n\n/**\n * @param {Array<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpression(subset) {\n  /** @type {Array<string>} */\n  const groups = []\n  let index = -1\n\n  while (++index < subset.length) {\n    groups.push(subset[index].replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&'))\n  }\n\n  return new RegExp('(?:' + groups.join('|') + ')', 'g')\n}\n","/**\n * Configurable ways to encode characters as hexadecimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toHexadecimal(code, next, omit) {\n  const value = '&#x' + code.toString(16).toUpperCase()\n  return omit && next && !/[\\dA-Fa-f]/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","/**\n * Configurable ways to encode characters as decimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toDecimal(code, next, omit) {\n  const value = '&#' + String(code)\n  return omit && next && !/\\d/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n","/**\n * Map of named character references from HTML 4.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntitiesHtml4 = {\n  nbsp: ' ',\n  iexcl: '¡',\n  cent: '¢',\n  pound: '£',\n  curren: '¤',\n  yen: '¥',\n  brvbar: '¦',\n  sect: '§',\n  uml: '¨',\n  copy: '©',\n  ordf: 'ª',\n  laquo: '«',\n  not: '¬',\n  shy: '­',\n  reg: '®',\n  macr: '¯',\n  deg: '°',\n  plusmn: '±',\n  sup2: '²',\n  sup3: '³',\n  acute: '´',\n  micro: 'µ',\n  para: '¶',\n  middot: '·',\n  cedil: '¸',\n  sup1: '¹',\n  ordm: 'º',\n  raquo: '»',\n  frac14: '¼',\n  frac12: '½',\n  frac34: '¾',\n  iquest: '¿',\n  Agrave: 'À',\n  Aacute: 'Á',\n  Acirc: 'Â',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Aring: 'Å',\n  AElig: 'Æ',\n  Ccedil: 'Ç',\n  Egrave: 'È',\n  Eacute: 'É',\n  Ecirc: 'Ê',\n  Euml: 'Ë',\n  Igrave: 'Ì',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Iuml: 'Ï',\n  ETH: 'Ð',\n  Ntilde: 'Ñ',\n  Ograve: 'Ò',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Otilde: 'Õ',\n  Ouml: 'Ö',\n  times: '×',\n  Oslash: 'Ø',\n  Ugrave: 'Ù',\n  Uacute: 'Ú',\n  Ucirc: 'Û',\n  Uuml: 'Ü',\n  Yacute: 'Ý',\n  THORN: 'Þ',\n  szlig: 'ß',\n  agrave: 'à',\n  aacute: 'á',\n  acirc: 'â',\n  atilde: 'ã',\n  auml: 'ä',\n  aring: 'å',\n  aelig: 'æ',\n  ccedil: 'ç',\n  egrave: 'è',\n  eacute: 'é',\n  ecirc: 'ê',\n  euml: 'ë',\n  igrave: 'ì',\n  iacute: 'í',\n  icirc: 'î',\n  iuml: 'ï',\n  eth: 'ð',\n  ntilde: 'ñ',\n  ograve: 'ò',\n  oacute: 'ó',\n  ocirc: 'ô',\n  otilde: 'õ',\n  ouml: 'ö',\n  divide: '÷',\n  oslash: 'ø',\n  ugrave: 'ù',\n  uacute: 'ú',\n  ucirc: 'û',\n  uuml: 'ü',\n  yacute: 'ý',\n  thorn: 'þ',\n  yuml: 'ÿ',\n  fnof: 'ƒ',\n  Alpha: 'Α',\n  Beta: 'Β',\n  Gamma: 'Γ',\n  Delta: 'Δ',\n  Epsilon: 'Ε',\n  Zeta: 'Ζ',\n  Eta: 'Η',\n  Theta: 'Θ',\n  Iota: 'Ι',\n  Kappa: 'Κ',\n  Lambda: 'Λ',\n  Mu: 'Μ',\n  Nu: 'Ν',\n  Xi: 'Ξ',\n  Omicron: 'Ο',\n  Pi: 'Π',\n  Rho: 'Ρ',\n  Sigma: 'Σ',\n  Tau: 'Τ',\n  Upsilon: 'Υ',\n  Phi: 'Φ',\n  Chi: 'Χ',\n  Psi: 'Ψ',\n  Omega: 'Ω',\n  alpha: 'α',\n  beta: 'β',\n  gamma: 'γ',\n  delta: 'δ',\n  epsilon: 'ε',\n  zeta: 'ζ',\n  eta: 'η',\n  theta: 'θ',\n  iota: 'ι',\n  kappa: 'κ',\n  lambda: 'λ',\n  mu: 'μ',\n  nu: 'ν',\n  xi: 'ξ',\n  omicron: 'ο',\n  pi: 'π',\n  rho: 'ρ',\n  sigmaf: 'ς',\n  sigma: 'σ',\n  tau: 'τ',\n  upsilon: 'υ',\n  phi: 'φ',\n  chi: 'χ',\n  psi: 'ψ',\n  omega: 'ω',\n  thetasym: 'ϑ',\n  upsih: 'ϒ',\n  piv: 'ϖ',\n  bull: '•',\n  hellip: '…',\n  prime: '′',\n  Prime: '″',\n  oline: '‾',\n  frasl: '⁄',\n  weierp: '℘',\n  image: 'ℑ',\n  real: 'ℜ',\n  trade: '™',\n  alefsym: 'ℵ',\n  larr: '←',\n  uarr: '↑',\n  rarr: '→',\n  darr: '↓',\n  harr: '↔',\n  crarr: '↵',\n  lArr: '⇐',\n  uArr: '⇑',\n  rArr: '⇒',\n  dArr: '⇓',\n  hArr: '⇔',\n  forall: '∀',\n  part: '∂',\n  exist: '∃',\n  empty: '∅',\n  nabla: '∇',\n  isin: '∈',\n  notin: '∉',\n  ni: '∋',\n  prod: '∏',\n  sum: '∑',\n  minus: '−',\n  lowast: '∗',\n  radic: '√',\n  prop: '∝',\n  infin: '∞',\n  ang: '∠',\n  and: '∧',\n  or: '∨',\n  cap: '∩',\n  cup: '∪',\n  int: '∫',\n  there4: '∴',\n  sim: '∼',\n  cong: '≅',\n  asymp: '≈',\n  ne: '≠',\n  equiv: '≡',\n  le: '≤',\n  ge: '≥',\n  sub: '⊂',\n  sup: '⊃',\n  nsub: '⊄',\n  sube: '⊆',\n  supe: '⊇',\n  oplus: '⊕',\n  otimes: '⊗',\n  perp: '⊥',\n  sdot: '⋅',\n  lceil: '⌈',\n  rceil: '⌉',\n  lfloor: '⌊',\n  rfloor: '⌋',\n  lang: '〈',\n  rang: '〉',\n  loz: '◊',\n  spades: '♠',\n  clubs: '♣',\n  hearts: '♥',\n  diams: '♦',\n  quot: '\"',\n  amp: '&',\n  lt: '<',\n  gt: '>',\n  OElig: 'Œ',\n  oelig: 'œ',\n  Scaron: 'Š',\n  scaron: 'š',\n  Yuml: 'Ÿ',\n  circ: 'ˆ',\n  tilde: '˜',\n  ensp: ' ',\n  emsp: ' ',\n  thinsp: ' ',\n  zwnj: '‌',\n  zwj: '‍',\n  lrm: '‎',\n  rlm: '‏',\n  ndash: '–',\n  mdash: '—',\n  lsquo: '‘',\n  rsquo: '’',\n  sbquo: '‚',\n  ldquo: '“',\n  rdquo: '”',\n  bdquo: '„',\n  dagger: '†',\n  Dagger: '‡',\n  permil: '‰',\n  lsaquo: '‹',\n  rsaquo: '›',\n  euro: '€'\n}\n","/**\n * List of legacy (that don’t need a trailing `;`) named references which could,\n * depending on what follows them, turn into a different meaning\n *\n * @type {Array<string>}\n */\nexport const dangerous = [\n  'cent',\n  'copy',\n  'divide',\n  'gt',\n  'lt',\n  'not',\n  'para',\n  'times'\n]\n","import {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterEntitiesHtml4} from 'character-entities-html4'\nimport {dangerous} from '../constant/dangerous.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * `characterEntitiesHtml4` but inverted.\n *\n * @type {Record<string, string>}\n */\nconst characters = {}\n\n/** @type {string} */\nlet key\n\nfor (key in characterEntitiesHtml4) {\n  if (own.call(characterEntitiesHtml4, key)) {\n    characters[characterEntitiesHtml4[key]] = key\n  }\n}\n\n/**\n * Configurable ways to encode characters as named references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @param {boolean|undefined} attribute\n * @returns {string}\n */\nexport function toNamed(code, next, omit, attribute) {\n  const character = String.fromCharCode(code)\n\n  if (own.call(characters, character)) {\n    const name = characters[character]\n    const value = '&' + name\n\n    if (\n      omit &&\n      characterEntitiesLegacy.includes(name) &&\n      !dangerous.includes(name) &&\n      (!attribute ||\n        (next &&\n          next !== 61 /* `=` */ &&\n          /[^\\da-z]/i.test(String.fromCharCode(next))))\n    ) {\n      return value\n    }\n\n    return value + ';'\n  }\n\n  return ''\n}\n","/**\n * @typedef FormatSmartOptions\n * @property {boolean} [useNamedReferences=false]\n *   Prefer named character references (`&amp;`) where possible.\n * @property {boolean} [useShortestReferences=false]\n *   Prefer the shortest possible reference, if that results in less bytes.\n *   **Note**: `useNamedReferences` can be omitted when using `useShortestReferences`.\n * @property {boolean} [omitOptionalSemicolons=false]\n *   Whether to omit semicolons when possible.\n *   **Note**: This creates what HTML calls “parse errors” but is otherwise still valid HTML — don’t use this except when building a minifier.\n *   Omitting semicolons is possible for certain named and numeric references in some cases.\n * @property {boolean} [attribute=false]\n *   Create character references which don’t fail in attributes.\n *   **Note**: `attribute` only applies when operating dangerously with\n *   `omitOptionalSemicolons: true`.\n */\n\nimport {toHexadecimal} from './to-hexadecimal.js'\nimport {toDecimal} from './to-decimal.js'\nimport {toNamed} from './to-named.js'\n\n/**\n * Configurable ways to encode a character yielding pretty or small results.\n *\n * @param {number} code\n * @param {number} next\n * @param {FormatSmartOptions} options\n * @returns {string}\n */\nexport function formatSmart(code, next, options) {\n  let numeric = toHexadecimal(code, next, options.omitOptionalSemicolons)\n  /** @type {string|undefined} */\n  let named\n\n  if (options.useNamedReferences || options.useShortestReferences) {\n    named = toNamed(\n      code,\n      next,\n      options.omitOptionalSemicolons,\n      options.attribute\n    )\n  }\n\n  // Use the shortest numeric reference when requested.\n  // A simple algorithm would use decimal for all code points under 100, as\n  // those are shorter than hexadecimal:\n  //\n  // * `&#99;` vs `&#x63;` (decimal shorter)\n  // * `&#100;` vs `&#x64;` (equal)\n  //\n  // However, because we take `next` into consideration when `omit` is used,\n  // And it would be possible that decimals are shorter on bigger values as\n  // well if `next` is hexadecimal but not decimal, we instead compare both.\n  if (\n    (options.useShortestReferences || !named) &&\n    options.useShortestReferences\n  ) {\n    const decimal = toDecimal(code, next, options.omitOptionalSemicolons)\n\n    if (decimal.length < numeric.length) {\n      numeric = decimal\n    }\n  }\n\n  return named &&\n    (!options.useShortestReferences || named.length < numeric.length)\n    ? named\n    : numeric\n}\n","/**\n * @typedef {import('./core.js').CoreOptions & import('./util/format-smart.js').FormatSmartOptions} Options\n * @typedef {import('./core.js').CoreOptions} LightOptions\n */\n\nimport {core} from './core.js'\nimport {formatSmart} from './util/format-smart.js'\nimport {formatBasic} from './util/format-basic.js'\n\n/**\n * Encode special characters in `value`.\n *\n * @param {string} value\n *   Value to encode.\n * @param {Options} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntities(value, options) {\n  return core(value, Object.assign({format: formatSmart}, options))\n}\n\n/**\n * Encode special characters in `value` as hexadecimals.\n *\n * @param {string} value\n *   Value to encode.\n * @param {LightOptions} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntitiesLight(value, options) {\n  return core(value, Object.assign({format: formatBasic}, options))\n}\n","/**\n * @typedef {import('../types.js').Comment} Comment\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n/**\n * Serialize a comment.\n *\n * @param {Comment} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parent | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function comment(node, _1, _2, state) {\n  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>\n  return state.settings.bogusComments\n    ? '<?' +\n        stringifyEntities(\n          node.value,\n          Object.assign({}, state.settings.characterReferences, {subset: ['>']})\n        ) +\n        '>'\n    : '<!--' + node.value.replace(/^>|^->|<!--|-->|--!>|<!-$/g, encode) + '-->'\n\n  /**\n   * @param {string} $0\n   */\n  function encode($0) {\n    return stringifyEntities(\n      $0,\n      Object.assign({}, state.settings.characterReferences, {\n        subset: ['<', '>']\n      })\n    )\n  }\n}\n","/**\n * @typedef {import('../types.js').DocType} DocType\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize a doctype.\n *\n * @param {DocType} _1\n *   Node to handle.\n * @param {number | undefined} _2\n *   Index of `node` in `parent.\n * @param {Parent | undefined} _3\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function doctype(_1, _2, _3, state) {\n  return (\n    '<!' +\n    (state.settings.upperDoctype ? 'DOCTYPE' : 'doctype') +\n    (state.settings.tightDoctype ? '' : ' ') +\n    'html>'\n  )\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef {import('../../types.js').Parent} Parent\n * @typedef {import('../../types.js').Content} Content\n */\n\nimport {whitespace} from 'hast-util-whitespace'\n\nexport const siblingAfter = siblings(1)\nexport const siblingBefore = siblings(-1)\n\n/**\n * Factory to check siblings in a direction.\n *\n * @param {number} increment\n */\nfunction siblings(increment) {\n  return sibling\n\n  /**\n   * Find applicable siblings in a direction.\n   *\n   * @param {Parent | null | undefined} parent\n   * @param {number | null | undefined} index\n   * @param {boolean | null | undefined} [includeWhitespace=false]\n   * @returns {Content}\n   */\n  function sibling(parent, index, includeWhitespace) {\n    const siblings = parent ? parent.children : []\n    let offset = (index || 0) + increment\n    let next = siblings && siblings[offset]\n\n    if (!includeWhitespace) {\n      while (next && whitespace(next)) {\n        offset += increment\n        next = siblings[offset]\n      }\n    }\n\n    return next\n  }\n}\n","/**\n * @typedef {import('../types.js').OmitHandle} OmitHandle\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to check if a given node can have a tag omitted.\n *\n * @param {Record<string, OmitHandle>} handlers\n *   Omission handlers, where each key is a tag name, and each value is the\n *   corresponding handler.\n * @returns {OmitHandle}\n *   Whether to omit a tag of an element.\n */\nexport function omission(handlers) {\n  return omit\n\n  /**\n   * Check if a given node can have a tag omitted.\n   *\n   * @type {OmitHandle}\n   */\n  function omit(node, index, parent) {\n    return (\n      own.call(handlers, node.tagName) &&\n      handlers[node.tagName](node, index, parent)\n    )\n  }\n}\n","/**\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Parent} Parent\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingAfter} from './util/siblings.js'\nimport {omission} from './omission.js'\n\nexport const closing = omission({\n  html,\n  head: headOrColgroupOrCaption,\n  body,\n  p,\n  li,\n  dt,\n  dd,\n  rt: rubyElement,\n  rp: rubyElement,\n  optgroup,\n  option,\n  menuitem,\n  colgroup: headOrColgroupOrCaption,\n  caption: headOrColgroupOrCaption,\n  thead,\n  tbody,\n  tfoot,\n  tr,\n  td: cells,\n  th: cells\n})\n\n/**\n * Macro for `</head>`, `</colgroup>`, and `</caption>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction headOrColgroupOrCaption(_, index, parent) {\n  const next = siblingAfter(parent, index, true)\n  return (\n    !next ||\n    (next.type !== 'comment' &&\n      !(next.type === 'text' && whitespace(next.value.charAt(0))))\n  )\n}\n\n/**\n * Whether to omit `</html>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction html(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</body>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction body(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</p>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\n// eslint-disable-next-line complexity\nfunction p(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next\n    ? next.type === 'element' &&\n        (next.tagName === 'address' ||\n          next.tagName === 'article' ||\n          next.tagName === 'aside' ||\n          next.tagName === 'blockquote' ||\n          next.tagName === 'details' ||\n          next.tagName === 'div' ||\n          next.tagName === 'dl' ||\n          next.tagName === 'fieldset' ||\n          next.tagName === 'figcaption' ||\n          next.tagName === 'figure' ||\n          next.tagName === 'footer' ||\n          next.tagName === 'form' ||\n          next.tagName === 'h1' ||\n          next.tagName === 'h2' ||\n          next.tagName === 'h3' ||\n          next.tagName === 'h4' ||\n          next.tagName === 'h5' ||\n          next.tagName === 'h6' ||\n          next.tagName === 'header' ||\n          next.tagName === 'hgroup' ||\n          next.tagName === 'hr' ||\n          next.tagName === 'main' ||\n          next.tagName === 'menu' ||\n          next.tagName === 'nav' ||\n          next.tagName === 'ol' ||\n          next.tagName === 'p' ||\n          next.tagName === 'pre' ||\n          next.tagName === 'section' ||\n          next.tagName === 'table' ||\n          next.tagName === 'ul')\n    : !parent ||\n        // Confusing parent.\n        !(\n          parent.type === 'element' &&\n          (parent.tagName === 'a' ||\n            parent.tagName === 'audio' ||\n            parent.tagName === 'del' ||\n            parent.tagName === 'ins' ||\n            parent.tagName === 'map' ||\n            parent.tagName === 'noscript' ||\n            parent.tagName === 'video')\n        )\n}\n\n/**\n * Whether to omit `</li>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction li(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'li')\n}\n\n/**\n * Whether to omit `</dt>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dt(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    next &&\n    next.type === 'element' &&\n    (next.tagName === 'dt' || next.tagName === 'dd')\n  )\n}\n\n/**\n * Whether to omit `</dd>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dd(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd'))\n  )\n}\n\n/**\n * Whether to omit `</rt>` or `</rp>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction rubyElement(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'rp' || next.tagName === 'rt'))\n  )\n}\n\n/**\n * Whether to omit `</optgroup>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction optgroup(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'optgroup')\n}\n\n/**\n * Whether to omit `</option>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction option(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'option' || next.tagName === 'optgroup'))\n  )\n}\n\n/**\n * Whether to omit `</menuitem>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction menuitem(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'menuitem' ||\n        next.tagName === 'hr' ||\n        next.tagName === 'menu'))\n  )\n}\n\n/**\n * Whether to omit `</thead>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction thead(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    next &&\n    next.type === 'element' &&\n    (next.tagName === 'tbody' || next.tagName === 'tfoot')\n  )\n}\n\n/**\n * Whether to omit `</tbody>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tbody(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot'))\n  )\n}\n\n/**\n * Whether to omit `</tfoot>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tfoot(_, index, parent) {\n  return !siblingAfter(parent, index)\n}\n\n/**\n * Whether to omit `</tr>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tr(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'tr')\n}\n\n/**\n * Whether to omit `</td>` or `</th>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction cells(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'td' || next.tagName === 'th'))\n  )\n}\n","/**\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Content} Content\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingBefore, siblingAfter} from './util/siblings.js'\nimport {closing} from './closing.js'\nimport {omission} from './omission.js'\n\nexport const opening = omission({\n  html,\n  head,\n  body,\n  colgroup,\n  tbody\n})\n\n/**\n * Whether to omit `<html>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction html(node) {\n  const head = siblingAfter(node, -1)\n  return !head || head.type !== 'comment'\n}\n\n/**\n * Whether to omit `<head>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction head(node) {\n  const children = node.children\n  /** @type {Array<string>} */\n  const seen = []\n  let index = -1\n\n  while (++index < children.length) {\n    const child = children[index]\n    if (\n      child.type === 'element' &&\n      (child.tagName === 'title' || child.tagName === 'base')\n    ) {\n      if (seen.includes(child.tagName)) return false\n      seen.push(child.tagName)\n    }\n  }\n\n  return children.length > 0\n}\n\n/**\n * Whether to omit `<body>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction body(node) {\n  const head = siblingAfter(node, -1, true)\n\n  return (\n    !head ||\n    (head.type !== 'comment' &&\n      !(head.type === 'text' && whitespace(head.value.charAt(0))) &&\n      !(\n        head.type === 'element' &&\n        (head.tagName === 'meta' ||\n          head.tagName === 'link' ||\n          head.tagName === 'script' ||\n          head.tagName === 'style' ||\n          head.tagName === 'template')\n      ))\n  )\n}\n\n/**\n * Whether to omit `<colgroup>`.\n * The spec describes some logic for the opening tag, but it’s easier to\n * implement in the closing tag, to the same effect, so we handle it there\n * instead.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction colgroup(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1, true)\n\n  // Previous colgroup was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    previous.tagName === 'colgroup' &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return head && head.type === 'element' && head.tagName === 'col'\n}\n\n/**\n * Whether to omit `<tbody>`.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction tbody(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1)\n\n  // Previous table section was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    (previous.tagName === 'thead' || previous.tagName === 'tbody') &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return head && head.type === 'element' && head.tagName === 'tr'\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Properties} Properties\n * @typedef {import('../types.js').PropertyValue} PropertyValue\n */\n\nimport {ccount} from 'ccount'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {svg, find} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringifyEntities} from 'stringify-entities'\nimport {opening} from '../omission/opening.js'\nimport {closing} from '../omission/closing.js'\n\n/**\n * Maps of subsets.\n *\n * Each value is a matrix of tuples.\n * The value at `0` causes parse errors, the value at `1` is valid.\n * Of both, the value at `0` is unsafe, and the value at `1` is safe.\n *\n * @type {Record<'name' | 'unquoted' | 'single' | 'double', Array<[Array<string>, Array<string>]>>}\n */\nconst constants = {\n  // See: <https://html.spec.whatwg.org/#attribute-name-state>.\n  name: [\n    ['\\t\\n\\f\\r &/=>'.split(''), '\\t\\n\\f\\r \"&\\'/=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'/<=>'.split(''), '\\0\\t\\n\\f\\r \"&\\'/<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.\n  unquoted: [\n    ['\\t\\n\\f\\r &>'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'<=>`'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.\n  single: [\n    [\"&'\".split(''), '\"&\\'`'.split('')],\n    [\"\\0&'\".split(''), '\\0\"&\\'`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.\n  double: [\n    ['\"&'.split(''), '\"&\\'`'.split('')],\n    ['\\0\"&'.split(''), '\\0\"&\\'`'.split('')]\n  ]\n}\n\n/**\n * Serialize an element node.\n *\n * @param {Element} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parent | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\n// eslint-disable-next-line complexity\nexport function element(node, index, parent, state) {\n  const schema = state.schema\n  const omit = schema.space === 'svg' ? false : state.settings.omitOptionalTags\n  let selfClosing =\n    schema.space === 'svg'\n      ? state.settings.closeEmptyElements\n      : state.settings.voids.includes(node.tagName.toLowerCase())\n  /** @type {Array<string>} */\n  const parts = []\n  /** @type {string} */\n  let last\n\n  if (schema.space === 'html' && node.tagName === 'svg') {\n    state.schema = svg\n  }\n\n  const attrs = serializeAttributes(state, node.properties)\n\n  const content = state.all(\n    schema.space === 'html' && node.tagName === 'template' ? node.content : node\n  )\n\n  state.schema = schema\n\n  // If the node is categorised as void, but it has children, remove the\n  // categorisation.\n  // This enables for example `menuitem`s, which are void in W3C HTML but not\n  // void in WHATWG HTML, to be stringified properly.\n  if (content) selfClosing = false\n\n  if (attrs || !omit || !opening(node, index, parent)) {\n    parts.push('<', node.tagName, attrs ? ' ' + attrs : '')\n\n    if (\n      selfClosing &&\n      (schema.space === 'svg' || state.settings.closeSelfClosing)\n    ) {\n      last = attrs.charAt(attrs.length - 1)\n      if (\n        !state.settings.tightSelfClosing ||\n        last === '/' ||\n        (last && last !== '\"' && last !== \"'\")\n      ) {\n        parts.push(' ')\n      }\n\n      parts.push('/')\n    }\n\n    parts.push('>')\n  }\n\n  parts.push(content)\n\n  if (!selfClosing && (!omit || !closing(node, index, parent))) {\n    parts.push('</' + node.tagName + '>')\n  }\n\n  return parts.join('')\n}\n\n/**\n * @param {State} state\n * @param {Properties | null | undefined} props\n * @returns {string}\n */\nfunction serializeAttributes(state, props) {\n  /** @type {Array<string>} */\n  const values = []\n  let index = -1\n  /** @type {string} */\n  let key\n\n  if (props) {\n    for (key in props) {\n      if (props[key] !== undefined && props[key] !== null) {\n        const value = serializeAttribute(state, key, props[key])\n        if (value) values.push(value)\n      }\n    }\n  }\n\n  while (++index < values.length) {\n    const last = state.settings.tightAttributes\n      ? values[index].charAt(values[index].length - 1)\n      : null\n\n    // In tight mode, don’t add a space after quoted attributes.\n    if (index !== values.length - 1 && last !== '\"' && last !== \"'\") {\n      values[index] += ' '\n    }\n  }\n\n  return values.join('')\n}\n\n/**\n * @param {State} state\n * @param {string} key\n * @param {PropertyValue} value\n * @returns {string}\n */\n// eslint-disable-next-line complexity\nfunction serializeAttribute(state, key, value) {\n  const info = find(state.schema, key)\n  const x =\n    state.settings.allowParseErrors && state.schema.space === 'html' ? 0 : 1\n  const y = state.settings.allowDangerousCharacters ? 0 : 1\n  let quote = state.quote\n  /** @type {string | undefined} */\n  let result\n\n  if (info.overloadedBoolean && (value === info.attribute || value === '')) {\n    value = true\n  } else if (\n    info.boolean ||\n    (info.overloadedBoolean && typeof value !== 'string')\n  ) {\n    value = Boolean(value)\n  }\n\n  if (\n    value === undefined ||\n    value === null ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return ''\n  }\n\n  const name = stringifyEntities(\n    info.attribute,\n    Object.assign({}, state.settings.characterReferences, {\n      // Always encode without parse errors in non-HTML.\n      subset: constants.name[x][y]\n    })\n  )\n\n  // No value.\n  // There is currently only one boolean property in SVG: `[download]` on\n  // `<a>`.\n  // This property does not seem to work in browsers (Firefox, Safari, Chrome),\n  // so I can’t test if dropping the value works.\n  // But I assume that it should:\n  //\n  // ```html\n  // <!doctype html>\n  // <svg viewBox=\"0 0 100 100\">\n  //   <a href=https://example.com download>\n  //     <circle cx=50 cy=40 r=35 />\n  //   </a>\n  // </svg>\n  // ```\n  //\n  // See: <https://github.com/wooorm/property-information/blob/main/lib/svg.js>\n  if (value === true) return name\n\n  // `spaces` doesn’t accept a second argument, but it’s given here just to\n  // keep the code cleaner.\n  value = Array.isArray(value)\n    ? (info.commaSeparated ? commas : spaces)(value, {\n        padLeft: !state.settings.tightCommaSeparatedLists\n      })\n    : String(value)\n\n  if (state.settings.collapseEmptyAttributes && !value) return name\n\n  // Check unquoted value.\n  if (state.settings.preferUnquoted) {\n    result = stringifyEntities(\n      value,\n      Object.assign({}, state.settings.characterReferences, {\n        subset: constants.unquoted[x][y],\n        attribute: true\n      })\n    )\n  }\n\n  // If we don’t want unquoted, or if `value` contains character references when\n  // unquoted…\n  if (result !== value) {\n    // If the alternative is less common than `quote`, switch.\n    if (\n      state.settings.quoteSmart &&\n      ccount(value, quote) > ccount(value, state.alternative)\n    ) {\n      quote = state.alternative\n    }\n\n    result =\n      quote +\n      stringifyEntities(\n        value,\n        Object.assign({}, state.settings.characterReferences, {\n          // Always encode without parse errors in non-HTML.\n          subset: (quote === \"'\" ? constants.single : constants.double)[x][y],\n          attribute: true\n        })\n      ) +\n      quote\n  }\n\n  // Don’t add a `=` for unquoted empties.\n  return name + (result ? '=' + result : result)\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Raw} Raw\n * @typedef {import('../types.js').Text} Text\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n/**\n * Serialize a text node.\n *\n * @param {Text | Raw} node\n *   Node to handle.\n * @param {number | undefined} _\n *   Index of `node` in `parent.\n * @param {Parent | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function text(node, _, parent, state) {\n  // Check if content of `node` should be escaped.\n  return parent &&\n    parent.type === 'element' &&\n    (parent.tagName === 'script' || parent.tagName === 'style')\n    ? node.value\n    : stringifyEntities(\n        node.value,\n        Object.assign({}, state.settings.characterReferences, {\n          subset: ['<', '&']\n        })\n      )\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Raw} Raw\n */\n\nimport {text} from './text.js'\n\n/**\n * Serialize a raw node.\n *\n * @param {Raw} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parent | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function raw(node, index, parent, state) {\n  return state.settings.allowDangerousHtml\n    ? node.value\n    : text(node, index, parent, state)\n}\n","/**\n * @typedef {import('../types.js').Root} Root\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize a root.\n *\n * @param {Root} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parent | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function root(node, _1, _2, state) {\n  return state.all(node)\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n */\n\nimport {zwitch} from 'zwitch'\nimport {comment} from './comment.js'\nimport {doctype} from './doctype.js'\nimport {element} from './element.js'\nimport {raw} from './raw.js'\nimport {root} from './root.js'\nimport {text} from './text.js'\n\n/**\n * @type {(node: Node, index: number | undefined, parent: Parent | undefined, state: State) => string}\n */\nexport const handle = zwitch('type', {\n  invalid,\n  unknown,\n  handlers: {comment, doctype, element, raw, root, text}\n})\n\n/**\n * Fail when a non-node is found in the tree.\n *\n * @param {unknown} node\n *   Unknown value.\n * @returns {never}\n *   Never.\n */\nfunction invalid(node) {\n  throw new Error('Expected node, not `' + node + '`')\n}\n\n/**\n * Fail when a node with an unknown type is found in the tree.\n *\n * @param {unknown} node\n *  Unknown node.\n * @returns {never}\n *   Never.\n */\nfunction unknown(node) {\n  // @ts-expect-error: `type` is defined.\n  throw new Error('Cannot compile unknown node `' + node.type + '`')\n}\n","/**\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').Content} Content\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').State} State\n */\n\nimport {html, svg} from 'property-information'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {handle} from './handle/index.js'\n\n/**\n * Serialize hast as HTML.\n *\n * @param {Node | Array<Content>} tree\n *   Tree to serialize.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {string}\n *   Serialized HTML.\n */\n// eslint-disable-next-line complexity\nexport function toHtml(tree, options) {\n  const options_ = options || {}\n  const quote = options_.quote || '\"'\n  const alternative = quote === '\"' ? \"'\" : '\"'\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error('Invalid quote `' + quote + '`, expected `\\'` or `\"`')\n  }\n\n  /** @type {State} */\n  const state = {\n    one,\n    all,\n    settings: {\n      omitOptionalTags: options_.omitOptionalTags || false,\n      allowParseErrors: options_.allowParseErrors || false,\n      allowDangerousCharacters: options_.allowDangerousCharacters || false,\n      quoteSmart: options_.quoteSmart || false,\n      preferUnquoted: options_.preferUnquoted || false,\n      tightAttributes: options_.tightAttributes || false,\n      upperDoctype: options_.upperDoctype || false,\n      tightDoctype: options_.tightDoctype || false,\n      bogusComments: options_.bogusComments || false,\n      tightCommaSeparatedLists: options_.tightCommaSeparatedLists || false,\n      tightSelfClosing: options_.tightSelfClosing || false,\n      collapseEmptyAttributes: options_.collapseEmptyAttributes || false,\n      allowDangerousHtml: options_.allowDangerousHtml || false,\n      voids: options_.voids || htmlVoidElements,\n      characterReferences:\n        options_.characterReferences || options_.entities || {},\n      closeSelfClosing: options_.closeSelfClosing || false,\n      closeEmptyElements: options_.closeEmptyElements || false\n    },\n    schema: options_.space === 'svg' ? svg : html,\n    quote,\n    alternative\n  }\n\n  return state.one(\n    Array.isArray(tree) ? {type: 'root', children: tree} : tree,\n    undefined,\n    undefined\n  )\n}\n\n/**\n * Serialize a node.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Node} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parent | undefined} parent\n *   Parent of `node`.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node, index, parent) {\n  return handle(node, index, parent, this)\n}\n\n/**\n * Serialize all children of `parent`.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Parent | undefined} parent\n *   Parent whose children to serialize.\n * @returns {string}\n */\nexport function all(parent) {\n  /** @type {Array<string>} */\n  const results = []\n  const children = (parent && parent.children) || []\n  let index = -1\n\n  while (++index < children.length) {\n    results[index] = this.one(children[index], index, parent)\n  }\n\n  return results.join('')\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {Root|Root['children'][number]} Node\n * @typedef {import('hast-util-to-html').Options} Options\n */\n\nimport {toHtml} from 'hast-util-to-html'\n\n/**\n * @this {import('unified').Processor}\n * @type {import('unified').Plugin<[Options?]|Array<void>, Node, string>}\n */\nexport default function rehypeStringify(config) {\n  const processorSettings = /** @type {Options} */ (this.data('settings'))\n  const settings = Object.assign({}, processorSettings, config)\n\n  Object.assign(this, {Compiler: compiler})\n\n  /**\n   * @type {import('unified').CompilerFunction<Node, string>}\n   */\n  function compiler(tree) {\n    return toHtml(tree, settings)\n  }\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {void}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\n\n/**\n * Regular expression that matches a unicode punctuation character.\n */\nexport const unicodePunctuationRegex =\n  /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n}\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst protocolAutolink = {\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n\n/** @type {ConstructRecord} */\nconst text = {}\n\n// To do: next major: expose functions that yields extension.\n\n/**\n * Extension for `micromark` that can be passed in `extensions` to enable GFM\n * autolink literal syntax.\n *\n * @type {Extension}\n */\nexport const gfmAutolinkLiteral = {\n  text\n}\n\n/** @type {Code} */\nlet code = 48\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, protocolAutolink]\ntext[104] = [emailAutolink, protocolAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean | undefined} */\n  let dot\n  /** @type {boolean} */\n  let data\n  return start\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n    if (code === 64) {\n      effects.consume(code)\n      return emailDomain\n    }\n    return nok(code)\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(\n        emailDomainDotTrail,\n        emailDomainAfter,\n        emailDomainDot\n      )(code)\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true\n      effects.consume(code)\n      return emailDomain\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code)\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code)\n    dot = true\n    return emailDomain\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return wwwStart\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww')\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(\n      wwwPrefix,\n      effects.attempt(domain, effects.attempt(path, wwwAfter), nok),\n      nok\n    )(code)\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this\n  let buffer = ''\n  let seen = false\n  return protocolStart\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if (\n      (code === 72 || code === 104) &&\n      previousProtocol.call(self, self.previous) &&\n      !previousUnbalanced(self.events)\n    ) {\n      effects.enter('literalAutolink')\n      effects.enter('literalAutolinkHttp')\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase()\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code)\n        return protocolSlashesInside\n      }\n    }\n    return nok(code)\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code)\n      if (seen) {\n        return afterProtocol\n      }\n      seen = true\n      return protocolSlashesInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null ||\n      asciiControl(code) ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code)\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0\n  return wwwPrefixInside\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++\n      effects.consume(code)\n      return wwwPrefixInside\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code)\n      return wwwPrefixAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code)\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment\n  /** @type {boolean | undefined} */\n  let seen\n  return domainInside\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code)\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return domainAfter(code)\n    }\n    seen = true\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment\n      underscoreInLastSegment = undefined\n    }\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code)\n    }\n    return ok(code)\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0\n  let sizeClose = 0\n  return pathInside\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++\n      effects.consume(code)\n      return pathInside\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code)\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (\n      code === 33 ||\n      code === 34 ||\n      code === 38 ||\n      code === 39 ||\n      code === 41 ||\n      code === 42 ||\n      code === 44 ||\n      code === 46 ||\n      code === 58 ||\n      code === 59 ||\n      code === 60 ||\n      code === 63 ||\n      code === 93 ||\n      code === 95 ||\n      code === 126\n    ) {\n      return effects.check(trail, ok, pathAtPunctuation)(code)\n    }\n    if (\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    effects.consume(code)\n    return pathInside\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++\n    }\n    effects.consume(code)\n    return pathInside\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (\n      code === 33 ||\n      code === 34 ||\n      code === 39 ||\n      code === 41 ||\n      code === 42 ||\n      code === 44 ||\n      code === 46 ||\n      code === 58 ||\n      code === 59 ||\n      code === 63 ||\n      code === 95 ||\n      code === 126\n    ) {\n      effects.consume(code)\n      return trail\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code)\n      return trailCharRefStart\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code)\n      return trailBracketAfter\n    }\n    if (\n      // `<` is an end.\n      code === 60 ||\n      // So is whitespace.\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (\n      code === null ||\n      code === 40 ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    return trail(code)\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharRefStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharRefInside(code) : nok(code)\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharRefInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code)\n      return trail\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return trailCharRefInside\n    }\n\n    // It’s not a trail.\n    return nok(code)\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code)\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 91 ||\n    code === 93 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code)\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code))\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n  while (index--) {\n    const token = events[index][1]\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    }\n\n    // If we’ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n  if (events.length > 0 && !result) {\n    // Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n  return result\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n  if (!protocol) {\n    return value\n  }\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n  let open\n  /** @type {Token} */\n  let group\n  /** @type {Token} */\n  let text\n  /** @type {Token} */\n  let openingSequence\n  /** @type {Token} */\n  let closingSequence\n  /** @type {number} */\n  let use\n  /** @type {Array<Event>} */\n  let nextEvents\n  /** @type {number} */\n  let offset\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open &&\n          // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          }\n\n          // Number of markers to use from the sequence.\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = []\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ])\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          )\n\n          // Closing.\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ])\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code\n    effects.enter('attentionSequence')\n    return inside(code)\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    const token = effects.exit('attentionSequence')\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code)\n\n    // Always populated by defaults.\n\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1\n      return schemeInsideOrEmailAtext(code)\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      size = 0\n      return urlInside\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n    size = 0\n    return emailAtext(code)\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return urlInside\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      return emailAtSignOrDot\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n    return emailValue(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel\n      effects.consume(code)\n      return next\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'linePrefix')(code)\n      : after(code)\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this\n  return contStart\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(\n        effects,\n        contBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return contBefore(code)\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code)\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {asciiPunctuation} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return inside\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n  let max\n  /** @type {(code: Code) => boolean} */\n  let test\n  return start\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit('characterReferenceValue')\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n}\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n  const closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  }\n  let initialPrefix = 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code)\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1]\n    initialPrefix =\n      tail && tail[1].type === 'linePrefix'\n        ? tail[2].sliceSerialize(tail[1], true).length\n        : 0\n    marker = code\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++\n      effects.consume(code)\n      return sequenceOpen\n    }\n    if (sizeOpen < 3) {\n      return nok(code)\n    }\n    effects.exit('codeFencedFenceSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, infoBefore, 'whitespace')(code)\n      : infoBefore(code)\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFencedFence')\n      return self.interrupt\n        ? ok(code)\n        : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return infoBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, metaBefore, 'whitespace')(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return info\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code)\n    }\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return infoBefore(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return meta\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code)\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return contentStart\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code)\n      ? factorySpace(\n          effects,\n          beforeContentChunk,\n          'linePrefix',\n          initialPrefix + 1\n        )(code)\n      : beforeContentChunk(code)\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return contentChunk(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return beforeContentChunk(code)\n    }\n    effects.consume(code)\n    return contentChunk\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0\n    return startBefore\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter('codeFencedFence')\n      return markdownSpace(code)\n        ? factorySpace(\n            effects,\n            beforeSequenceClose,\n            'linePrefix',\n            self.parser.constructs.disable.null.includes('codeIndented')\n              ? undefined\n              : 4\n          )(code)\n        : beforeSequenceClose(code)\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter('codeFencedFenceSequence')\n        return sequenceClose(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++\n        effects.consume(code)\n        return sequenceClose\n      }\n      if (size >= sizeOpen) {\n        effects.exit('codeFencedFenceSequence')\n        return markdownSpace(code)\n          ? factorySpace(effects, sequenceCloseAfter, 'whitespace')(code)\n          : sequenceCloseAfter(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineStart\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n\n/** @type {Construct} */\nconst furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter('codeIndented')\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? atBreak(code)\n      : nok(code)\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code)\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return inside(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return inside\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit('codeIndented')\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this\n  return furtherStart\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return furtherStart\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? furtherStart(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n  let index\n  /** @type {number | undefined} */\n  let enter\n\n  // If we start and end with an EOL or a space.\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1\n  tailExitIndex++\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n      enter = undefined\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n  let size\n  /** @type {Token} */\n  let token\n  return start\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n    effects.exit('codeTextSequence')\n    return between(code)\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return between\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return sequenceClose(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return between\n    }\n\n    // Data.\n    effects.enter('codeTextData')\n    return data(code)\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return between(code)\n    }\n    effects.consume(code)\n    return data\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return sequenceClose\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    }\n\n    // More or less accents: mark as data.\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport {splice} from 'micromark-util-chunked'\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} events\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n  let event\n  /** @type {number | undefined} */\n  let lineIndex\n  /** @type {number} */\n  let otherIndex\n  /** @type {Event} */\n  let otherEvent\n  /** @type {Array<Event>} */\n  let parameters\n  /** @type {Array<Event>} */\n  let subevents\n  /** @type {boolean | undefined} */\n  let more\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n    event = events[index]\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start)\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n  return !more\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {Array<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {Array<number>} */\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {Array<[number, number]>} */\n  const jumps = []\n  /** @type {Record<string, number>} */\n  const gaps = {}\n  /** @type {Array<Chunk>} */\n  let stream\n  /** @type {Token | undefined} */\n  let previous\n  let index = -1\n  /** @type {Token | undefined} */\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start]\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition)\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n      if (!current.next) {\n        stream.push(null)\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n      tokenizer.write(stream)\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = current\n    current = current.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start)\n      // Help GC.\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = []\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n  index = -1\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous\n  return chunkStart\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return chunkInside(code)\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    }\n\n    // Data.\n    effects.consume(code)\n    return chunkInside\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return chunkInside\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1]\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > 999 ||\n      code === null ||\n      code === 91 ||\n      (code === 93 && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n\n/** @type {Construct} */\nconst titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n  let identifier\n  return start\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter('definition')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      return markerAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, destinationBefore)(code)\n      : destinationBefore(code)\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionDestination',\n      'definitionDestinationLiteral',\n      'definitionDestinationLiteralMarker',\n      'definitionDestinationRaw',\n      'definitionDestinationString'\n    )(code)\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code)\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, afterWhitespace, 'whitespace')(code)\n      : afterWhitespace(code)\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier)\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, beforeMarker)(code)\n      : nok(code)\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(\n      effects,\n      titleAfter,\n      nok,\n      'definitionTitle',\n      'definitionTitleMarker',\n      'definitionTitleString'\n    )(code)\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, titleAfterOptionalWhitespace, 'whitespace')(code)\n      : titleAfterOptionalWhitespace(code)\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n  let content\n  /** @type {Token} */\n  let text\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter('atxHeading')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('atxHeadingSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return atBreak(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequenceFurther(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequenceFurther\n    }\n    effects.exit('atxHeadingSequence')\n    return atBreak(code)\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n}\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n}\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start\n    // Remove the line prefix.\n    events.splice(index - 2, 2)\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n  let marker\n  /** @type {boolean} */\n  let closingTag\n  /** @type {string} */\n  let buffer\n  /** @type {number} */\n  let index\n  /** @type {Code} */\n  let markerB\n  return start\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      closingTag = true\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      marker = 3\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      marker = 2\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      marker = 5\n      index = 0\n      return cdataOpenInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      marker = 4\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation\n      }\n      return cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      const slash = code === 47\n      const name = buffer.toLowerCase()\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6\n        if (slash) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      marker = 7\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : closingTag\n        ? completeClosingTagAfter(code)\n        : completeAttributeNameBefore(code)\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    return completeAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n    return completeAttributeNameBefore(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      markerB = code\n      return completeAttributeValueQuoted\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    return completeAttributeValueUnquoted(code)\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code)\n      markerB = null\n      return completeAttributeValueQuotedAfter\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 47 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code)\n      return continuationCdataInside\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit('htmlFlowData')\n      return effects.check(\n        blankLineBefore,\n        continuationAfter,\n        continuationStart\n      )(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationStart(code)\n    }\n    effects.consume(code)\n    return continuation\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(\n      nonLazyContinuationStart,\n      continuationStartNonLazy,\n      continuationAfter\n    )(code)\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return continuationBefore\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code)\n    }\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase()\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code)\n        return continuationClose\n      }\n      return continuation(code)\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationAfter(code)\n    }\n    effects.consume(code)\n    return continuationClose\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit('htmlFlow')\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code> | undefined} */\n  let marker\n  /** @type {number} */\n  let index\n  /** @type {State} */\n  let returnState\n  return start\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      index = 0\n      return cdataOpenInside\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n    return nok(code)\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return nok(code)\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return comment\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return comment(code)\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62\n      ? end(code)\n      : code === 45\n      ? commentClose(code)\n      : comment(code)\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === value.length ? cdata : cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return cdata\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return declaration\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return instruction\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return tagCloseBetween(code)\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n    return tagOpenBetween(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      marker = undefined\n      return tagOpenAttributeValueQuotedAfter\n    }\n    if (code === null) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n    return nok(code)\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineEndingAfter\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          lineEndingAfterPrefix,\n          'linePrefix',\n          self.parser.constructs.disable.null.includes('codeIndented')\n            ? undefined\n            : 4\n        )(code)\n      : lineEndingAfterPrefix(code)\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n}\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n}\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  while (++index < events.length) {\n    const token = events[index][1]\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n  return events\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n  let token\n  /** @type {number | undefined} */\n  let open\n  /** @type {number | undefined} */\n  let close\n  /** @type {Array<Event>} */\n  let media\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1]\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ]\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3))\n\n  // Text open.\n  media = push(media, [['enter', text, context]])\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  )\n\n  // Text close, marker close, label close.\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ])\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1))\n\n  // Media close.\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n  let labelStart\n  /** @type {boolean} */\n  let defined\n\n  // Find an opening.\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n  return start\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code)\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code)\n    }\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return after\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        labelEndOk,\n        defined ? labelEndOk : labelEndNok\n      )(code)\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(\n        referenceFullConstruct,\n        labelEndOk,\n        defined ? referenceNotFull : labelEndNok\n      )(code)\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code)\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(\n      referenceCollapsedConstruct,\n      labelEndOk,\n      labelEndNok\n    )(code)\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code)\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return resourceBefore\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceOpen)(code)\n      : resourceOpen(code)\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code)\n    }\n    return factoryDestination(\n      effects,\n      resourceDestinationAfter,\n      resourceDestinationMissing,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceBetween)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code)\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        resourceTitleAfter,\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n    return resourceEnd(code)\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceEnd)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this\n  return referenceFull\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      referenceFullAfter,\n      referenceFullMissing,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return referenceCollapsedOpen\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('thematicBreak')\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code\n    return atBreak(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit('thematicBreak')\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n    effects.exit('thematicBreakSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, atBreak, 'whitespace')(code)\n      : atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n\n/** @type {Construct} */\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine,\n      // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined\n    // Always populated by defaults.\n\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length\n  /** @type {number | undefined} */\n  let content\n  /** @type {number | undefined} */\n  let text\n  /** @type {number | undefined} */\n  let definition\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = 'setextHeadingText'\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context])\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length\n    /** @type {boolean | undefined} */\n    let paragraph\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (\n        self.events[index][1].type !== 'lineEnding' &&\n        self.events[index][1].type !== 'linePrefix' &&\n        self.events[index][1].type !== 'content'\n      ) {\n        paragraph = self.events[index][1].type === 'paragraph'\n        break\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      marker = code\n      return before(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('setextHeadingLineSequence')\n    return inside(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    effects.exit('setextHeadingLineSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'lineSuffix')(code)\n      : after(code)\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1]\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    }\n\n    // Exit if we’ve walked far enough.\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n  return start\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token | undefined} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker'\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  }\n  // Increment the end 1 character.\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  /** @type {Token} */\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n\n  /** @type {Array<Event>} */\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context],\n    // The `[`\n    events[index + 3],\n    events[index + 4],\n    // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context],\n    // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context],\n    // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n  let data\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n      // Too long.\n      size > 999 ||\n      // Closing brace with nothing.\n      (code === 93 && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === null ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteCallString')\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code)\n      }\n      effects.enter('gfmFootnoteCallLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteCallLabelMarker')\n      effects.exit('gfmFootnoteCall')\n      return ok\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n    size++\n    effects.consume(code)\n    return code === 92 ? callEscape : callData\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n    return callData(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n  let identifier\n  let size = 0\n  /** @type {boolean | undefined} */\n  let data\n  return start\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelAtMarker\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      effects.enter('chunkString').contentType = 'string'\n      return labelInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      // Too long.\n      size > 999 ||\n      // Closing brace with nothing.\n      (code === 93 && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === null ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      if (!defined.includes(identifier)) {\n        defined.push(identifier)\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(\n        effects,\n        whitespaceAfter,\n        'gfmFootnoteDefinitionWhitespace'\n      )\n    }\n    return nok(code)\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde.\n *\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\n\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {}\n  let single = options_.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n  if (single === null || single === undefined) {\n    single = true\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open &&\n            // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            }\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ]\n            const insideSpan = context.parser.constructs.insideSpan.null\n            if (insideSpan) {\n              // Between.\n              splice(\n                nextEvents,\n                nextEvents.length,\n                0,\n                resolveAll(insideSpan, events.slice(open + 1, index), context)\n              )\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n    return events\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous)\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it’s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it’s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = []\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {void}\n   */\n  add(index, remove, add) {\n    addImpl(this, index, remove, add)\n  }\n\n  // To do: not used here.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {void}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImpl(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {void}\n   */\n  consume(events) {\n    this.map.sort((a, b) => a[0] - b[0])\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length\n    /** @type {Array<Array<Event>>} */\n    const vecs = []\n    while (index > 0) {\n      index -= 1\n      vecs.push(events.slice(this.map[index][0] + this.map[index][1]))\n      // eslint-disable-next-line unicorn/no-array-push-push\n      vecs.push(this.map[index][2])\n\n      // Truncate rest.\n      events.length = this.map[index][0]\n    }\n    vecs.push([...events])\n    events.length = 0\n    let slice = vecs.pop()\n    while (slice) {\n      events.push(...slice)\n      slice = vecs.pop()\n    }\n\n    // Truncate everything.\n    this.map.length = 0\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {void}\n */\nfunction addImpl(editMap, at, remove, add) {\n  let index = 0\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return\n  }\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove\n\n      // To do: before not used.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add)\n      // }\n\n      return\n    }\n    index += 1\n  }\n  editMap.map.push([at, remove, add])\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       console.log('to do: links?', add, rmCurr)\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef {'left' | 'center' | 'right' | 'none'} Align\n */\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Array<Event>} events\n * @param {number} index\n * @returns {Array<Align>}\n */\nexport function gfmTableAlign(events, index) {\n  let inDelimiterRow = false\n  /** @type {Array<Align>} */\n  const align = []\n  while (index < events.length) {\n    const event = events[index]\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(\n            events[index + 1][1].type === 'tableDelimiterMarker'\n              ? 'left'\n              : 'none'\n          )\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right'\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true\n    }\n    index += 1\n  }\n  return align\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {EditMap} from './edit-map.js'\nimport {gfmTableAlign} from './infer.js'\n\n// To do: next major: expose functions.\n\n/**\n * Extension for `micromark` that can be passed in `extensions` to enable GFM\n * table syntax.\n *\n * @type {Extension}\n */\nexport const gfmTable = {\n  flow: {\n    null: {\n      tokenize: tokenizeTable,\n      resolveAll: resolveTable\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  let size = 0\n  let sizeB = 0\n  /** @type {boolean | undefined} */\n  let seen\n  return start\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1\n    while (index > -1) {\n      const type = self.events[index][1].type\n      if (\n        type === 'lineEnding' ||\n        // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n        type === 'linePrefix'\n      )\n        index--\n      else break\n    }\n    const tail = index > -1 ? self.events[index][1].type : null\n    const next =\n      tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore\n\n    // Don’t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    return next(code)\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead')\n    effects.enter('tableRow')\n    return headRowStart(code)\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === 124) {\n      return headRowBreak(code)\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true\n    // Count the first character, that isn’t a pipe, double.\n    sizeB += 1\n    return headRowBreak(code)\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === null) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\n      if (sizeB > 1) {\n        sizeB = 0\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true\n        effects.exit('tableRow')\n        effects.enter('lineEnding')\n        effects.consume(code)\n        effects.exit('lineEnding')\n        return headDelimiterStart\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code)\n    }\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, 'whitespace')(code)\n    }\n    sizeB += 1\n    if (seen) {\n      seen = false\n      // Header cell count.\n      size += 1\n    }\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      // Whether a delimiter was seen.\n      seen = true\n      return headRowBreak\n    }\n\n    // Anything else is cell data.\n    effects.enter('data')\n    return headRowData(code)\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('data')\n      return headRowBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? headRowEscape : headRowData\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return headRowData\n    }\n    return headRowData(code)\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    effects.enter('tableDelimiterRow')\n    // Track if we’ve seen a `:` or `|`.\n    seen = false\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        headDelimiterBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return headDelimiterBefore(code)\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === 45 || code === 58) {\n      return headDelimiterValueBefore(code)\n    }\n    if (code === 124) {\n      seen = true\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return headDelimiterCellBefore\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterValueBefore, 'whitespace')(code)\n    }\n    return headDelimiterValueBefore(code)\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === 58) {\n      sizeB += 1\n      seen = true\n      effects.enter('tableDelimiterMarker')\n      effects.consume(code)\n      effects.exit('tableDelimiterMarker')\n      return headDelimiterLeftAlignmentAfter\n    }\n\n    // Align: none.\n    if (code === 45) {\n      sizeB += 1\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code)\n    }\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      return headDelimiterFiller(code)\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return headDelimiterFiller\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === 58) {\n      seen = true\n      effects.exit('tableDelimiterFiller')\n      effects.enter('tableDelimiterMarker')\n      effects.consume(code)\n      effects.exit('tableDelimiterMarker')\n      return headDelimiterRightAlignmentAfter\n    }\n    effects.exit('tableDelimiterFiller')\n    return headDelimiterRightAlignmentAfter(code)\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterCellAfter, 'whitespace')(code)\n    }\n    return headDelimiterCellAfter(code)\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === 124) {\n      return headDelimiterBefore(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code)\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow')\n      effects.exit('tableHead')\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code)\n    }\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n    return nok(code)\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\n    // never at whitespace.\n    effects.enter('tableRow')\n    return bodyRowBreak(code)\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return bodyRowBreak\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('tableRow')\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, 'whitespace')(code)\n    }\n\n    // Anything else is cell content.\n    effects.enter('data')\n    return bodyRowData(code)\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('data')\n      return bodyRowBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? bodyRowEscape : bodyRowData\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return bodyRowData\n    }\n    return bodyRowData(code)\n  }\n}\n\n/** @type {Resolver} */\n// eslint-disable-next-line complexity\nfunction resolveTable(events, context) {\n  let index = -1\n  let inFirstCellAwaitingPipe = true\n  /** @type {RowKind} */\n  let rowKind = 0\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0]\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0]\n  let afterHeadAwaitingFirstBodyRow = false\n  let lastTableEnd = 0\n  /** @type {Token | undefined} */\n  let currentTable\n  /** @type {Token | undefined} */\n  let currentBody\n  /** @type {Token | undefined} */\n  let currentCell\n  const map = new EditMap()\n  while (++index < events.length) {\n    const event = events[index]\n    const token = event[1]\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody)\n          currentBody = undefined\n          lastTableEnd = 0\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        }\n        map.add(index, 0, [['enter', currentTable, context]])\n      } else if (\n        token.type === 'tableRow' ||\n        token.type === 'tableDelimiterRow'\n      ) {\n        inFirstCellAwaitingPipe = true\n        currentCell = undefined\n        lastCell = [0, 0, 0, 0]\n        cell = [0, index + 1, 0, 0]\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          }\n          map.add(index, 0, [['enter', currentBody, context]])\n        }\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1\n      }\n      // Cell data.\n      else if (\n        rowKind &&\n        (token.type === 'data' ||\n          token.type === 'tableDelimiterMarker' ||\n          token.type === 'tableDelimiterFiller')\n      ) {\n        inFirstCellAwaitingPipe = false\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1]\n            currentCell = flushCell(\n              map,\n              context,\n              lastCell,\n              rowKind,\n              undefined,\n              currentCell\n            )\n            lastCell = [0, 0, 0, 0]\n          }\n          cell[2] = index\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1]\n            currentCell = flushCell(\n              map,\n              context,\n              lastCell,\n              rowKind,\n              undefined,\n              currentCell\n            )\n          }\n          lastCell = cell\n          cell = [lastCell[1], index, 0, 0]\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true\n      lastTableEnd = index\n    } else if (\n      token.type === 'tableRow' ||\n      token.type === 'tableDelimiterRow'\n    ) {\n      lastTableEnd = index\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1]\n        currentCell = flushCell(\n          map,\n          context,\n          lastCell,\n          rowKind,\n          index,\n          currentCell\n        )\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell)\n      }\n      rowKind = 0\n    } else if (\n      rowKind &&\n      (token.type === 'data' ||\n        token.type === 'tableDelimiterMarker' ||\n        token.type === 'tableDelimiterFiller')\n    ) {\n      cell[3] = index\n    }\n  }\n  if (lastTableEnd !== 0) {\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody)\n  }\n  map.consume(context.events)\n\n  // To do: move this into `html`, when events are exposed there.\n  // That’s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1\n  while (++index < context.events.length) {\n    const event = context.events[index]\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index)\n    }\n  }\n  return events\n}\n\n/// Generate a cell.\n/**\n *\n * @param {EditMap} map\n * @param {TokenizeContext} context\n * @param {Range} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName =\n    rowKind === 1\n      ? 'tableHeader'\n      : rowKind === 2\n      ? 'tableDelimiter'\n      : 'tableData'\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent'\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]))\n    map.add(range[0], 0, [['exit', previousCell, context]])\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1])\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  }\n  map.add(range[1], 0, [['enter', previousCell, context]])\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2])\n    const relatedEnd = getPoint(context.events, range[3])\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    }\n    map.add(range[2], 0, [['enter', valueToken, context]])\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]]\n      const end = context.events[range[3]]\n      start[1].end = Object.assign({}, end[1].end)\n      start[1].type = 'chunkText'\n      start[1].contentType = 'text'\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1\n        const b = range[3] - range[2] - 1\n        map.add(a, b, [])\n      }\n    }\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]])\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd))\n    map.add(rowEnd, 0, [['exit', previousCell, context]])\n    previousCell = undefined\n  }\n  return previousCell\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {EditMap} map\n * @param {TokenizeContext} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = []\n  const related = getPoint(context.events, index)\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related)\n    exits.push(['exit', tableBody, context])\n  }\n  table.end = Object.assign({}, related)\n  exits.push(['exit', table, context])\n  map.add(index + 1, 0, exits)\n}\n\n/**\n * @param {Array<Event>} events\n * @param {number} index\n * @returns {readonly Point}\n */\nfunction getPoint(events, index) {\n  const event = events[index]\n  const side = event[0] === 'enter' ? 'start' : 'end'\n  return event[1][side]\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  markdownSpace\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\n\n// To do: next major: expose function to make extension.\n\n/**\n * Extension for `micromark` that can be passed in `extensions`, to\n * enable GFM task list items syntax.\n *\n * @type {Extension}\n */\nexport const gfmTaskListItem = {\n  text: {\n    [91]: tasklistCheck\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null ||\n      // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n    return nok(code)\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code)\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )(code)\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, 'whitespace')\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration.\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml,\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml,\n    gfmTableHtml,\n    gfmTagfilterHtml,\n    gfmTaskListItemHtml\n  ])\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Content | Root} Node\n * @typedef {Extract<Node, MdastParent>} Parent\n * @typedef {Exclude<Parent, Root>} ContentParent\n *\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[Root, ...Array<ContentParent>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | undefined | null}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {string | RegExp} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n * @typedef {Record<string, Replace>} FindAndReplaceSchema\n *   Several find and replaces, in object form.\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n * @typedef {string | ReplaceFunction} Replace\n *   Thing to replace with.\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore.\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param tree\n *   Tree to change.\n * @param find\n *   Patterns to find.\n * @param replace\n *   Things to replace with (when `find` is `Find`) or configuration.\n * @param options\n *   Configuration (when `find` is not `Find`).\n * @returns\n *   Given, modified, tree.\n */\n// To do: next major: remove `find` & `replace` combo, remove schema.\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   (<Tree extends Node>(tree: Tree, find: Find, replace?: Replace | null | undefined, options?: Options | null | undefined) => Tree) &\n   *   (<Tree extends Node>(tree: Tree, schema: FindAndReplaceSchema | FindAndReplaceList, options?: Options | null | undefined) => Tree)\n   * )}\n   **/\n  (\n    /**\n     * @template {Node} Tree\n     * @param {Tree} tree\n     * @param {Find | FindAndReplaceSchema | FindAndReplaceList} find\n     * @param {Replace | Options | null | undefined} [replace]\n     * @param {Options | null | undefined} [options]\n     * @returns {Tree}\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options | null | undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don’t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don’t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      // To do next major: don’t return the given tree.\n      return tree\n\n      /** @type {import('unist-util-visit-parents/complex-types.js').BuildVisitor<Root, 'text'>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent | undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = parents[index]\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error: TS doesn’t understand but it’s perfect.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          return handler(node, parents)\n        }\n      }\n\n      /**\n       * Handle a text node which is not in an ignored parent.\n       *\n       * @param {Text} node\n       *   Text node.\n       * @param {Array<Parent>} parents\n       *   Parents.\n       * @returns {VisitorResult}\n       *   Result.\n       */\n      function handler(node, parents) {\n        const parent = parents[parents.length - 1]\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        const index = parent.children.indexOf(node)\n        let change = false\n        /** @type {Array<PhrasingContent>} */\n        let nodes = []\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          const position = match.index\n          /** @type {RegExpMatchObject} */\n          const matchObject = {\n            index: match.index,\n            input: match.input,\n            // @ts-expect-error: stack is fine.\n            stack: [...parents, node]\n          }\n          let value = replace(...match, matchObject)\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          // It wasn’t a match after all.\n          if (value !== false) {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n            change = true\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (change) {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        } else {\n          nodes = [node]\n        }\n\n        return index + nodes.length\n      }\n    }\n  )\n\n/**\n * Turn a schema into pairs.\n *\n * @param {FindAndReplaceSchema | FindAndReplaceList} schema\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n */\n\nimport {ccount} from 'ccount'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n// To do: next major: expose functions instead of extensions.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM autolink literals.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmAutolinkLiteralFromMarkdown = {\n  transforms: [transformGfmAutolinkLiterals],\n  enter: {\n    literalAutolink: enterLiteralAutolink,\n    literalAutolinkEmail: enterLiteralAutolinkValue,\n    literalAutolinkHttp: enterLiteralAutolinkValue,\n    literalAutolinkWww: enterLiteralAutolinkValue\n  },\n  exit: {\n    literalAutolink: exitLiteralAutolink,\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\n    literalAutolinkWww: exitLiteralAutolinkWww\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmAutolinkLiteralToMarkdown = {\n  unsafe: [\n    {\n      character: '@',\n      before: '[+\\\\-.\\\\w]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {\n      character: '.',\n      before: '[Ww]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\n  ]\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Link | Array<PhrasingContent> | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCharCode(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n  if (\n    // C0 except for HT, LF, FF, CR, space.\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) ||\n    // Control character (DEL) of C0, and C1 controls.\n    (code > 126 && code < 160) ||\n    // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) ||\n    // Noncharacters.\n    (code > 64975 && code < 65008) /* eslint-disable no-bitwise */ ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 /* eslint-enable no-bitwise */ ||\n    // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('../types.js').AssociationId} AssociationId\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * Get an identifier from an association to match it to others.\n *\n * Associations are nodes that match to something else through an ID:\n * <https://github.com/syntax-tree/mdast#association>.\n *\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another:\n * controversially, character escapes and references don’t work in this\n * matching: `&copy;` does not match `©`, and `\\+` does not match `+`.\n *\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character\n * escapes and all character references.\n *\n * @type {AssociationId}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @typedef {import('../types.js').FlowContent} FlowContent\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * @param {Parent & {children: Array<FlowContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {TrackFields} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined by (blank) lines.\n */\nexport function containerFlow(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  const tracker = state.createTracker(info)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      state.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(\n        tracker.move(between(child, children[index + 1], parent, state))\n      )\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n\n/**\n * @param {Node} left\n * @param {Node} right\n * @param {Parent} parent\n * @param {State} state\n * @returns {string}\n */\nfunction between(left, right, parent, state) {\n  let index = state.join.length\n\n  while (index--) {\n    const result = state.join[index](left, right, parent, state)\n\n    if (result === true || result === 1) {\n      break\n    }\n\n    if (typeof result === 'number') {\n      return '\\n'.repeat(1 + result)\n    }\n\n    if (result === false) {\n      return '\\n\\n<!---->\\n\\n'\n    }\n  }\n\n  return '\\n\\n'\n}\n","/**\n * @typedef {import('../types.js').IndentLines} IndentLines\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @type {IndentLines}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n * @typedef {import('../types.js').ConstructName} ConstructName\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').SafeConfig} SafeConfig\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * Make a string safe for embedding in markdown constructs.\n *\n * In markdown, almost all punctuation characters can, in certain cases,\n * result in something.\n * Whether they do is highly subjective to where they happen and in what\n * they happen.\n *\n * To solve this, `mdast-util-to-markdown` tracks:\n *\n * * Characters before and after something;\n * * What “constructs” we are in.\n *\n * This information is then used by this function to escape or encode\n * special characters.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {string | null | undefined} input\n *   Raw value to make safe.\n * @param {SafeConfig} config\n *   Configuration.\n * @returns {string}\n *   Serialized markdown safe for embedding.\n */\nexport function safe(state, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n\n    if (!patternInScope(state.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @typedef {import('../types.js').CreateTracker} CreateTracker\n * @typedef {import('../types.js').TrackCurrent} TrackCurrent\n * @typedef {import('../types.js').TrackMove} TrackMove\n * @typedef {import('../types.js').TrackShift} TrackShift\n */\n\n/**\n * Track positional info in the output.\n *\n * @type {CreateTracker}\n */\nexport function track(config) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = config || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @type {TrackCurrent}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @type {TrackShift}\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past some generated markdown.\n   *\n   * @type {TrackMove}\n   */\n  function move(input) {\n    // eslint-disable-next-line unicorn/prefer-default-parameters\n    const value = input || ''\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n */\n\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {association} from 'mdast-util-to-markdown/lib/util/association.js'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {safe} from 'mdast-util-to-markdown/lib/util/safe.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n// To do: next major: rename `context` -> `state`, `safeOptions` to `info`, use\n// utilities on `state`.\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown() {\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = /** @type {FootnoteDefinition} */ (\n    this.stack[this.stack.length - 1]\n  )\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = /** @type {FootnoteDefinition} */ (\n    this.stack[this.stack.length - 1]\n  )\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  let value = tracker.move('[^')\n  const exit = context.enter('footnoteReference')\n  const subexit = context.enter('reference')\n  value += tracker.move(\n    safe(context, association(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteDefinition} node\n */\nfunction footnoteDefinition(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  let value = tracker.move('[^')\n  const exit = context.enter('footnoteDefinition')\n  const subexit = context.enter('label')\n  value += tracker.move(\n    safe(context, association(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  value += tracker.move(\n    ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n  )\n  tracker.shift(4)\n  value += tracker.move(\n    indentLines(containerFlow(node, context, tracker.current()), map)\n  )\n  exit()\n\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, index, blank) {\n  if (index === 0) {\n    return line\n  }\n\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').PhrasingContent} PhrasingContent\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize the children of a parent that contains phrasing children.\n *\n * These children will be joined flush together.\n *\n * @param {Parent & {children: Array<PhrasingContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Info} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined together.\n */\nexport function containerPhrasing(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = info.before\n\n  indexStack.push(-1)\n  let tracker = state.createTracker(info)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = state.handle.handlers[children[index + 1].type]\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, state, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = info.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = state.createTracker(info)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: expose functions.\n// To do: next major: use `state`, state utilities.\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [\n    {\n      character: '~',\n      inConstruct: 'phrasing',\n      notInConstruct: constructsWithoutStrikethrough\n    }\n  ],\n  handlers: {delete: handleDelete}\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  const exit = context.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|ReadonlyArray<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {ReadonlyArray<ReadonlyArray<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').InlineCode} InlineCode\n *\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\n * @typedef {import('mdast-util-to-markdown').SafeOptions} SafeOptions\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells.\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters.\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {inlineCode} from 'mdast-util-to-markdown/lib/handle/inline-code.js'\nimport {markdownTable} from 'markdown-table'\n\n// To do: next major: use `state` and `state` utilities from `mdast-util-to-markdown`.\n// To do: next major: use `defaultHandlers.inlineCode`.\n// To do: next major: expose functions.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM tables.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmTableFromMarkdown = {\n  enter: {\n    table: enterTable,\n    tableData: enterCell,\n    tableHeader: enterCell,\n    tableRow: enterRow\n  },\n  exit: {\n    codeText: exitCodeText,\n    table: exitTable,\n    tableData: exit,\n    tableHeader: exit,\n    tableRow: exit\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  /** @type {Array<'left' | 'right' | 'center' | 'none'>} */\n  // @ts-expect-error: `align` is custom.\n  const align = token._align\n  this.enter(\n    {\n      type: 'table',\n      align: align.map((d) => (d === 'none' ? null : d)),\n      children: []\n    },\n    token\n  )\n  this.setData('inTable', true)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, context, safeOptions) {\n    return serializeData(\n      handleTableAsData(node, context, safeOptions),\n      node.align\n    )\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, context, safeOptions) {\n    const row = handleTableRowAsData(node, context, safeOptions)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, context, safeOptions) {\n    const exit = context.enter('tableCell')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...safeOptions,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = context.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(\n        children[index],\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableRowAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = context.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(\n        children[index],\n        node,\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, context) {\n    let value = inlineCode(node, parent, context)\n\n    if (context.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parent | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\n/**\n * @typedef {Extract<Root | Content, Parent>} Parents\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: rename `context` -> `state`, `safeOptions` -> `info`, use\n// `track` from `state`.\n// To do: next major: replace exports with functions.\n// To do: next major: use `defaulthandlers.listItem`.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM task list items.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM task list items.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  const node = /** @type {ListItem} */ (this.stack[this.stack.length - 2])\n  // We’re always in a paragraph, in a list item.\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = /** @type {Parents} */ (this.stack[this.stack.length - 2])\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = /** @type {Paragraph} */ (this.stack[this.stack.length - 1])\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context, safeOptions) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = track(safeOptions)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = listItem(node, parent, context, {\n    ...safeOptions,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * @typedef {import('mdast-util-gfm-table').Options} Options\n *   Configuration.\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown,\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown,\n    gfmTableFromMarkdown,\n    gfmTaskListItemFromMarkdown\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown,\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown,\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown\n    ]\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) {\n      previous.next = token\n    }\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n}\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow'))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {void}\n   */\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n          seen = true\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n    stack.length = size\n  }\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n      const list = constructs[code]\n      let index = -1\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n        enter = undefined\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n      while (index--) {\n        const chunk = chunks[index]\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n      eventIndex++\n    }\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {void}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | void}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    }\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n      return Array.isArray(constructs) /* c8 ignore next 1 */\n        ? handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        if (list.length === 0) {\n          return bogusState\n        }\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true\n        info.restore()\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        view.shift()\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n        case -4: {\n          value = '\\n'\n          break\n        }\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n    atTab = chunk === -2\n    result.push(value)\n  }\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs =\n    /** @type {FullNormalizedExtension} */\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n\n    // @ts-expect-error `Buffer` does allow an encoding.\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n *\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | undefined | null | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Node | Fragment>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\n *   Get data from the key/value store.\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\n *   Set data into the key/value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\n// To do: micromark: create a registry of tokens?\n// To do: next major: don’t return given `Node` from `enter`.\n// To do: next major: remove setter/getter.\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * @param value\n *   Markdown to parse.\n * @param encoding\n *   Character encoding for when `value` is `Buffer`.\n * @param options\n *   Configuration.\n * @returns\n *   mdast tree.\n */\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\n   *   ((value: Value, options?: Options | null | undefined) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding | Options | null | undefined} [encoding]\n   * @param {Options | null | undefined} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          }\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Set data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @param {CompileData[Key]} [value]\n   *   New value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  /**\n   * Get data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @returns {CompileData[Key]}\n   *   Value.\n   */\n  function getData(key) {\n    return data[key]\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Node} create\n   *   Create a node.\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {void}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @template {Node} Kind\n   *   Node type.\n   * @this {CompileContext}\n   *   Context.\n   * @param {Kind} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {Kind}\n   *   The given node.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    // @ts-expect-error: `end` will be patched later.\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {Node}\n   *   The closed node.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n    return node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    let tail = node.children[node.children.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      // @ts-expect-error: we’ll add `end` later.\n      tail.position = {\n        start: point(token.start)\n      }\n      // @ts-expect-error: Assume `parent` accepts `text`.\n      node.children.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    setData('inReference', true)\n    if (node.type === 'link') {\n      /** @type {Array<StaticPhrasingContent>} */\n      // @ts-expect-error: Assume static phrasing content.\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {HTML} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Extension | Array<Extension>>} extensions\n * @returns {void}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {void}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      if (key === 'canContainEols') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'transforms') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'enter' || key === 'exit') {\n        const right = extension[key]\n        if (right) {\n          Object.assign(combined[key], right)\n        }\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * @this {import('unified').Processor}\n * @type {import('unified').Plugin<[Options?] | void[], string, Root>}\n */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang ? node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/) : null\n  /** @type {Properties} */\n  const properties = {}\n\n  if (lang) {\n    properties.className = ['language-' + lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('hast').Element} Element\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    state.footnoteOrder.push(id)\n    state.footnoteCounts[id] = 1\n    counter = state.footnoteOrder.length\n  } else {\n    state.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = state.footnoteCounts[id]\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + state.clobberPrefix + 'fn-' + safeId,\n      id:\n        state.clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../state.js').State} State\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n// To do: when both:\n// * <https://github.com/micromark/micromark-extension-footnote>\n// * <https://github.com/syntax-tree/mdast-util-footnote>\n// …are archived, remove this (also from mdast).\n// These inline notes are not used in GFM.\n\n/**\n * Turn an mdast `footnote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Footnote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnote(state, node) {\n  const footnoteById = state.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(state, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').HTML} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Raw | Element | null}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.dangerous) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Reference} Reference\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Reference>} References\n */\n\n// To do: next major: always return array.\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {References} node\n *   Reference node (image, link).\n * @returns {ElementContent | Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return {type: 'text', value: '![' + node.alt + suffix}\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastRoot | HastElement}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start.line && end.line) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(node, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastText | HastElement}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} MdastRoot\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n * @typedef {Extract<MdastNodes, MdastParent>} MdastParents\n *\n * @typedef EmbeddedHastFields\n *   hast fields.\n * @property {string | null | undefined} [hName]\n *   Generate a specific element with this tag name instead.\n * @property {HastProperties | null | undefined} [hProperties]\n *   Generate an element with these properties instead.\n * @property {Array<HastElementContent> | null | undefined} [hChildren]\n *   Generate an element with this content instead.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} MdastData\n *   mdast data with embedded hast fields.\n *\n * @typedef {MdastNodes & {data?: MdastData | null | undefined}} MdastNodeWithData\n *   mdast node with embedded hast data.\n *\n * @typedef PointLike\n *   Point-like value.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @typedef PositionLike\n *   Position-like value.\n * @property {PointLike | null | undefined} [start]\n *   Point-like value.\n * @property {PointLike | null | undefined} [end]\n *   Point-like value.\n *\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | null | undefined} parent\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n *   Signature of `state` for when props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {HastProperties} props\n *   Properties.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n *   Signature of `state` for when no props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @typedef HFields\n *   Info on `state`.\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {HastProperties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use from backreferences back to their footnote call.\n * @property {(identifier: string) => MdastDefinition | null} definition\n *   Definition cache.\n * @property {Record<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Record<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(from: MdastNodes, node: HastNodes) => void} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => Type | HastElement} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {(node: MdastNodes, parent: MdastParents | null | undefined) => HastElementContent | Array<HastElementContent> | null | undefined} one\n *   Transform an mdast node to hast.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastContent>(nodes: Array<Type>, loose?: boolean | null | undefined) => Array<Type | HastText>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n * @property {(left: MdastNodeWithData | PositionLike | null | undefined, right: HastElementContent) => HastElementContent} augment\n *   Like `state` but lower-level and usable on non-elements.\n *   Deprecated: use `patch` and `applyData`.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree.\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute on footnotes to prevent it from\n *   *clobbering*.\n * @property {string | null | undefined} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call (affects\n *   screen readers).\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section (affects screen readers).\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (note that `id: 'footnote-label'`\n *   is always added as footnote calls use it with `aria-describedby` to\n *   provide an accessible label).\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   Tag name to use for the footnote label.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes.\n * @property {Array<string> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Handle nodes.\n *\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} State\n *   Info passed around.\n */\n\nimport {visit} from 'unist-util-visit'\nimport {position, pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, MdastFootnoteDefinition>} */\n  const footnoteById = {}\n\n  // To do: next major: add `options` to state, remove:\n  // `dangerous`, `clobberPrefix`, `footnoteLabel`, `footnoteLabelTagName`,\n  // `footnoteLabelProperties`, `footnoteBackLabel`, `passThrough`,\n  // `unknownHandler`.\n\n  // To do: next major: move to `state.options.allowDangerousHtml`.\n  state.dangerous = dangerous\n  // To do: next major: move to `state.options`.\n  state.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  // To do: next major: move to `state.options`.\n  state.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  // To do: next major: move to `state.options`.\n  state.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  // To do: next major: move to `state.options`.\n  state.unknownHandler = settings.unknownHandler\n  // To do: next major: move to `state.options`.\n  state.passThrough = settings.passThrough\n\n  state.handlers = {...handlers, ...settings.handlers}\n\n  // To do: next major: replace utility with `definitionById` object, so we\n  // only walk once (as we need footnotes too).\n  state.definition = definitions(tree)\n  state.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  state.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  state.footnoteCounts = {}\n\n  state.patch = patch\n  state.applyData = applyData\n  state.one = oneBound\n  state.all = allBound\n  state.wrap = wrap\n  // To do: next major: remove `augment`.\n  state.augment = augment\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return state\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {MdastNodeWithData | PositionLike | null | undefined} left\n   * @param {HastElementContent} right\n   * @returns {HastElementContent}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {MdastData} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function state(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | null | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n   *   Resulting hast node.\n   */\n  function oneBound(node, parent) {\n    // @ts-expect-error: that’s a state :)\n    return one(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function allBound(parent) {\n    // @ts-expect-error: that’s a state :)\n    return all(state, parent)\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {Type | HastElement}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {Type | HastElement} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent is likely to keep the content around (otherwise: pass\n      // `hChildren`).\n      else {\n        result = {\n          type: 'element',\n          tagName: hName,\n          properties: {},\n          children: []\n        }\n\n        // To do: next major: take the children from the `root`, or inject the\n        // raw/text/comment or so into the element?\n        // if ('children' in node) {\n        //   // @ts-expect-error: assume `children` are allowed in elements.\n        //   result.children = node.children\n        // } else {\n        //   // @ts-expect-error: assume `node` is allowed in elements.\n        //   result.children.push(node)\n        // }\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      result.properties = {...result.properties, ...hProperties}\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      // @ts-expect-error: assume valid children are defined.\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an mdast node into a hast node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   mdast node.\n * @param {MdastParents | null | undefined} [parent]\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   Resulting hast node.\n */\n// To do: next major: do not expose, keep bound.\nexport function one(state, node, parent) {\n  const type = node && node.type\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(state.handlers, type)) {\n    return state.handlers[type](state, node, parent)\n  }\n\n  if (state.passThrough && state.passThrough.includes(type)) {\n    // To do: next major: deep clone.\n    // @ts-expect-error: types of passed through nodes are expected to be added manually.\n    return 'children' in node ? {...node, children: all(state, node)} : node\n  }\n\n  if (state.unknownHandler) {\n    return state.unknownHandler(state, node, parent)\n  }\n\n  return defaultUnknownHandler(state, node)\n}\n\n/**\n * Transform the children of an mdast node into hast nodes.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} parent\n *   mdast node to compile\n * @returns {Array<HastElementContent>}\n *   Resulting hast nodes.\n */\n// To do: next major: do not expose, keep bound.\nexport function all(state, parent) {\n  /** @type {Array<HastElementContent>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n    while (++index < nodes.length) {\n      const result = one(state, nodes[index], parent)\n\n      // To do: see if we van clean this? Can we merge texts?\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastText | HastElement}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastText | HastElement} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: all(state, node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | null | undefined} [loose=false]\n *   Whether to add line endings at start and end.\n * @returns {Array<Type | HastText>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Type | HastText>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\nexport function footer(state) {\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let index = -1\n\n  while (++index < state.footnoteOrder.length) {\n    const def = state.footnoteById[state.footnoteOrder[index]]\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= state.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            state.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: state.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: state.clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: state.footnoteLabelTagName,\n        properties: {\n          // To do: use structured clone.\n          ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: state.footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Root} HastRoot\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Root} MdastRoot\n *\n * @typedef {import('./state.js').Options} Options\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n */\n\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {HastNodes | null | undefined}\n *   hast tree.\n */\n// To do: next major: always return a single `root`.\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, null)\n  const foot = footer(state)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  // To do: next major: always return root?\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').State} State\n */\n\n/**\n * @param {State} base\n * @param {Options} extension\n * @returns {State}\n */\nexport function configure(base, extension) {\n  let index = -1\n  /** @type {keyof Options} */\n  let key\n\n  // First do subextensions.\n  if (extension.extensions) {\n    while (++index < extension.extensions.length) {\n      configure(base, extension.extensions[index])\n    }\n  }\n\n  for (key in extension) {\n    if (key === 'extensions') {\n      // Empty.\n    } else if (key === 'unsafe' || key === 'join') {\n      /* c8 ignore next 2 */\n      // @ts-expect-error: hush.\n      base[key] = [...(base[key] || []), ...(extension[key] || [])]\n    } else if (key === 'handlers') {\n      base[key] = Object.assign(base[key], extension[key] || {})\n    } else {\n      // @ts-expect-error: hush.\n      base.options[key] = extension[key]\n    }\n  }\n\n  return base\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parent | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    !state.options.fences &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\n\nemphasis.peek = emphasisPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Emphasis} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parent | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../types.js').State} State\n */\n\nimport {visit, EXIT} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, (node) => {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value =\n      '&#x' +\n      value.charCodeAt(0).toString(16).toUpperCase() +\n      ';' +\n      value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {HTML} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../types.js').State} State\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Exit} Exit\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\nimport {checkBulletOrdered} from './check-bullet-ordered.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrderedOther(state) {\n  const bulletOrdered = checkBulletOrdered(state)\n  const bulletOrderedOther = state.options.bulletOrderedOther\n\n  if (!bulletOrderedOther) {\n    return bulletOrdered === '.' ? ')' : '.'\n  }\n\n  if (bulletOrderedOther !== '.' && bulletOrderedOther !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOrderedOther +\n        '` for `options.bulletOrderedOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOrderedOther === bulletOrdered) {\n    throw new Error(\n      'Expected `bulletOrdered` (`' +\n        bulletOrdered +\n        '`) and `bulletOrderedOther` (`' +\n        bulletOrderedOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOrderedOther\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkBulletOrderedOther} from '../util/check-bullet-ordered-other.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parent | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? checkBulletOrderedOther(state)\n    : checkBulletOther(state)\n  const bulletLastUsed = state.bulletLastUsed\n  let useDifferentMarker = false\n\n  if (\n    parent &&\n    // Explicit `other` set.\n    (node.ordered\n      ? state.options.bulletOrderedOther\n      : state.options.bulletOther) &&\n    bulletLastUsed &&\n    bullet === bulletLastUsed\n  ) {\n    useDifferentMarker = true\n  }\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some((d) => phrasing(d))\n  const fn = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  // @ts-expect-error: `root`s are supposed to have one type of content\n  return fn.call(state, node, info)\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimport {checkStrong} from '../util/check-strong.js'\n\nstrong.peek = strongPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Strong} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker + marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker + marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Strong} _\n * @param {Parent | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\n/**\n * @param {Text} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parent | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @typedef {import('./types.js').Join} Join\n */\n\nimport {formatCodeAsIndented} from './util/format-code-as-indented.js'\nimport {formatHeadingAsSetext} from './util/format-heading-as-setext.js'\n\n/** @type {Array<Join>} */\nexport const join = [joinDefaults]\n\n/** @type {Join} */\nfunction joinDefaults(left, right, parent, state) {\n  // Indented code after list or another indented code.\n  if (\n    right.type === 'code' &&\n    formatCodeAsIndented(right, state) &&\n    (left.type === 'list' ||\n      (left.type === right.type && formatCodeAsIndented(left, state)))\n  ) {\n    return false\n  }\n\n  // Two lists with the same marker.\n  if (\n    left.type === 'list' &&\n    left.type === right.type &&\n    Boolean(left.ordered) === Boolean(right.ordered) &&\n    !(left.ordered\n      ? state.options.bulletOrderedOther\n      : state.options.bulletOther)\n  ) {\n    return false\n  }\n\n  // Join children of a list or an item.\n  // In which case, `parent` has a `spread` field.\n  if ('spread' in parent && typeof parent.spread === 'boolean') {\n    if (\n      left.type === 'paragraph' &&\n      // Two paragraphs.\n      (left.type === right.type ||\n        right.type === 'definition' ||\n        // Paragraph followed by a setext heading.\n        (right.type === 'heading' && formatHeadingAsSetext(right, state)))\n    ) {\n      return\n    }\n\n    return parent.spread ? 1 : 0\n  }\n}\n","/**\n * @typedef {import('./types.js').Unsafe} Unsafe\n * @typedef {import('./types.js').ConstructName} ConstructName\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain things like attention (emphasis, strong), images, or links.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * @type {Array<ConstructName>}\n */\nconst fullPhrasingSpans = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\n/** @type {Array<Unsafe>} */\nexport const unsafe = [\n  {character: '\\t', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {character: '\\t', before: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {\n    character: '\\t',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n  },\n  {\n    character: '\\r',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedLangTilde',\n      'codeFencedMetaGraveAccent',\n      'codeFencedMetaTilde',\n      'destinationLiteral',\n      'headingAtx'\n    ]\n  },\n  {\n    character: '\\n',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedLangTilde',\n      'codeFencedMetaGraveAccent',\n      'codeFencedMetaTilde',\n      'destinationLiteral',\n      'headingAtx'\n    ]\n  },\n  {character: ' ', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {character: ' ', before: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {\n    character: ' ',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n  },\n  // An exclamation mark can start an image, if it is followed by a link or\n  // a link reference.\n  {\n    character: '!',\n    after: '\\\\[',\n    inConstruct: 'phrasing',\n    notInConstruct: fullPhrasingSpans\n  },\n  // A quote can break out of a title.\n  {character: '\"', inConstruct: 'titleQuote'},\n  // A number sign could start an ATX heading if it starts a line.\n  {atBreak: true, character: '#'},\n  {character: '#', inConstruct: 'headingAtx', after: '(?:[\\r\\n]|$)'},\n  // Dollar sign and percentage are not used in markdown.\n  // An ampersand could start a character reference.\n  {character: '&', after: '[#A-Za-z]', inConstruct: 'phrasing'},\n  // An apostrophe can break out of a title.\n  {character: \"'\", inConstruct: 'titleApostrophe'},\n  // A left paren could break out of a destination raw.\n  {character: '(', inConstruct: 'destinationRaw'},\n  // A left paren followed by `]` could make something into a link or image.\n  {\n    before: '\\\\]',\n    character: '(',\n    inConstruct: 'phrasing',\n    notInConstruct: fullPhrasingSpans\n  },\n  // A right paren could start a list item or break out of a destination\n  // raw.\n  {atBreak: true, before: '\\\\d+', character: ')'},\n  {character: ')', inConstruct: 'destinationRaw'},\n  // An asterisk can start thematic breaks, list items, emphasis, strong.\n  {atBreak: true, character: '*', after: '(?:[ \\t\\r\\n*])'},\n  {character: '*', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  // A plus sign could start a list item.\n  {atBreak: true, character: '+', after: '(?:[ \\t\\r\\n])'},\n  // A dash can start thematic breaks, list items, and setext heading\n  // underlines.\n  {atBreak: true, character: '-', after: '(?:[ \\t\\r\\n-])'},\n  // A dot could start a list item.\n  {atBreak: true, before: '\\\\d+', character: '.', after: '(?:[ \\t\\r\\n]|$)'},\n  // Slash, colon, and semicolon are not used in markdown for constructs.\n  // A less than can start html (flow or text) or an autolink.\n  // HTML could start with an exclamation mark (declaration, cdata, comment),\n  // slash (closing tag), question mark (instruction), or a letter (tag).\n  // An autolink also starts with a letter.\n  // Finally, it could break out of a destination literal.\n  {atBreak: true, character: '<', after: '[!/?A-Za-z]'},\n  {\n    character: '<',\n    after: '[!/?A-Za-z]',\n    inConstruct: 'phrasing',\n    notInConstruct: fullPhrasingSpans\n  },\n  {character: '<', inConstruct: 'destinationLiteral'},\n  // An equals to can start setext heading underlines.\n  {atBreak: true, character: '='},\n  // A greater than can start block quotes and it can break out of a\n  // destination literal.\n  {atBreak: true, character: '>'},\n  {character: '>', inConstruct: 'destinationLiteral'},\n  // Question mark and at sign are not used in markdown for constructs.\n  // A left bracket can start definitions, references, labels,\n  {atBreak: true, character: '['},\n  {character: '[', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  {character: '[', inConstruct: ['label', 'reference']},\n  // A backslash can start an escape (when followed by punctuation) or a\n  // hard break (when followed by an eol).\n  // Note: typical escapes are handled in `safe`!\n  {character: '\\\\', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  // A right bracket can exit labels.\n  {character: ']', inConstruct: ['label', 'reference']},\n  // Caret is not used in markdown for constructs.\n  // An underscore can start emphasis, strong, or a thematic break.\n  {atBreak: true, character: '_'},\n  {character: '_', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  // A grave accent can start code (fenced or text), or it can break out of\n  // a grave accent code fence.\n  {atBreak: true, character: '`'},\n  {\n    character: '`',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedMetaGraveAccent']\n  },\n  {character: '`', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  // Left brace, vertical bar, right brace are not used in markdown for\n  // constructs.\n  // A tilde can start code (fenced).\n  {atBreak: true, character: '~'}\n]\n","/**\n * @typedef {import('./types.js').Enter} Enter\n * @typedef {import('./types.js').Info} Info\n * @typedef {import('./types.js').Join} Join\n * @typedef {import('./types.js').FlowContent} FlowContent\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').PhrasingContent} PhrasingContent\n * @typedef {import('./types.js').SafeConfig} SafeConfig\n * @typedef {import('./types.js').State} State\n * @typedef {import('./types.js').TrackFields} TrackFields\n */\n\nimport {zwitch} from 'zwitch'\nimport {configure} from './configure.js'\nimport {handle as handlers} from './handle/index.js'\nimport {join} from './join.js'\nimport {unsafe} from './unsafe.js'\nimport {association} from './util/association.js'\nimport {containerPhrasing} from './util/container-phrasing.js'\nimport {containerFlow} from './util/container-flow.js'\nimport {indentLines} from './util/indent-lines.js'\nimport {safe} from './util/safe.js'\nimport {track} from './util/track.js'\n\n/**\n * Turn an mdast syntax tree into markdown.\n *\n * @param {Node} tree\n *   Tree to serialize.\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized markdown representing `tree`.\n */\nexport function toMarkdown(tree, options = {}) {\n  /** @type {State} */\n  const state = {\n    enter,\n    indentLines,\n    associationId: association,\n    containerPhrasing: containerPhrasingBound,\n    containerFlow: containerFlowBound,\n    createTracker: track,\n    safe: safeBound,\n    stack: [],\n    unsafe: [],\n    join: [],\n    // @ts-expect-error: we’ll fill it next.\n    handlers: {},\n    options: {},\n    indexStack: [],\n    // @ts-expect-error: we’ll add `handle` later.\n    handle: undefined\n  }\n\n  configure(state, {unsafe, join, handlers})\n  configure(state, options)\n\n  if (state.options.tightDefinitions) {\n    configure(state, {join: [joinDefinition]})\n  }\n\n  state.handle = zwitch('type', {\n    invalid,\n    unknown,\n    handlers: state.handlers\n  })\n\n  let result = state.handle(tree, undefined, state, {\n    before: '\\n',\n    after: '\\n',\n    now: {line: 1, column: 1},\n    lineShift: 0\n  })\n\n  if (\n    result &&\n    result.charCodeAt(result.length - 1) !== 10 &&\n    result.charCodeAt(result.length - 1) !== 13\n  ) {\n    result += '\\n'\n  }\n\n  return result\n\n  /** @type {Enter} */\n  function enter(name) {\n    state.stack.push(name)\n    return exit\n\n    function exit() {\n      state.stack.pop()\n    }\n  }\n}\n\n/**\n * @param {unknown} value\n * @returns {never}\n */\nfunction invalid(value) {\n  throw new Error('Cannot handle value `' + value + '`, expected node')\n}\n\n/**\n * @param {unknown} node\n * @returns {never}\n */\nfunction unknown(node) {\n  // @ts-expect-error: fine.\n  throw new Error('Cannot handle unknown node `' + node.type + '`')\n}\n\n/** @type {Join} */\nfunction joinDefinition(left, right) {\n  // No blank line between adjacent definitions.\n  if (left.type === 'definition' && left.type === right.type) {\n    return 0\n  }\n}\n\n/**\n * Serialize the children of a parent that contains phrasing children.\n *\n * These children will be joined flush together.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Parent & {children: Array<PhrasingContent>}} parent\n *   Parent of flow nodes.\n * @param {Info} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined together.\n */\nfunction containerPhrasingBound(parent, info) {\n  return containerPhrasing(parent, this, info)\n}\n\n/**\n * Serialize the children of a parent that contains flow children.\n *\n * These children will typically be joined by blank lines.\n * What they are joined by exactly is defined by `Join` functions.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Parent & {children: Array<FlowContent>}} parent\n *   Parent of flow nodes.\n * @param {TrackFields} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined by (blank) lines.\n */\nfunction containerFlowBound(parent, info) {\n  return containerFlow(parent, this, info)\n}\n\n/**\n * Make a string safe for embedding in markdown constructs.\n *\n * In markdown, almost all punctuation characters can, in certain cases,\n * result in something.\n * Whether they do is highly subjective to where they happen and in what\n * they happen.\n *\n * To solve this, `mdast-util-to-markdown` tracks:\n *\n * * Characters before and after something;\n * * What “constructs” we are in.\n *\n * This information is then used by this function to escape or encode\n * special characters.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {string | null | undefined} value\n *   Raw value to make safe.\n * @param {SafeConfig} config\n *   Configuration.\n * @returns {string}\n *   Serialized markdown safe for embedding.\n */\nfunction safeBound(value, config) {\n  return safe(this, value, config)\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownOptions\n * @typedef {Omit<ToMarkdownOptions, 'extensions'>} Options\n */\n\nimport {toMarkdown} from 'mdast-util-to-markdown'\n\n/**\n * @this {import('unified').Processor}\n * @type {import('unified').Plugin<[Options?]|void[], Node, string>}\n */\nexport default function remarkStringify(options) {\n  /** @type {import('unified').CompilerFunction<Node, string>} */\n  const compiler = (tree) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return toMarkdown(\n      tree,\n      Object.assign({}, settings, options, {\n        // Note: this option is not in the readme.\n        // The goal is for it to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions:\n          /** @type {ToMarkdownOptions['extensions']} */ (\n            this.data('toMarkdownExtensions')\n          ) || []\n      })\n    )\n  }\n\n  Object.assign(this, {Compiler: compiler})\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1'\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * Check if `fileUrlOrPath` looks like a URL.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileUrlOrPath) {\n  return (\n    fileUrlOrPath !== null &&\n    typeof fileUrlOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string | URL} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {Record<string, unknown> & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {'ascii' | 'utf8' | 'utf-8' | 'utf16le' | 'ucs2' | 'ucs-2' | 'base64' | 'base64url' | 'latin1' | 'binary' | 'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *\n *   This is a copy of the types from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Options | URL | Value | VFile} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {Value | null | undefined} [value]\n *   Set `value`.\n * @property {string | null | undefined} [cwd]\n *   Set `cwd`.\n * @property {Array<string> | null | undefined} [history]\n *   Set `history`.\n * @property {URL | string | null | undefined} [path]\n *   Set `path`.\n * @property {string | null | undefined} [basename]\n *   Set `basename`.\n * @property {string | null | undefined} [stem]\n *   Set `stem`.\n * @property {string | null | undefined} [extname]\n *   Set `extname`.\n * @property {string | null | undefined} [dirname]\n *   Set `dirname`.\n * @property {Data | null | undefined} [data]\n *   Set `data`.\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template {ReporterSettings} Settings\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport bufferLike from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n *\n * @type {Array<'basename' | 'dirname' | 'extname' | 'history' | 'path' | 'stem'>}\n */\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Buffer` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {string | URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Buffer`\n   *   (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding || undefined)\n  }\n\n  /**\n   * Create a warning message associated with the file.\n   *\n   * Its `fatal` is set to `false` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Create an info message associated with the file.\n   *\n   * Its `fatal` is set to `null` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Create a fatal error associated with the file.\n   *\n   * Its `fatal` is set to `true` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Message.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {void}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is a buffer.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Buffer}\n *   Whether `value` is a Node.js buffer.\n */\nfunction buffer(value) {\n  return bufferLike(value)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","import { Element as HASTElement, Parent as HASTParent } from \"hast\";\n\n/**\n * Rehype plugin which removes <u> tags. Used to remove underlines before converting HTML to markdown, as Markdown\n * doesn't support underlines.\n */\nexport function removeUnderlines() {\n  const removeUnderlinesHelper = (tree: HASTParent) => {\n    let numChildElements = tree.children.length;\n\n    for (let i = 0; i < numChildElements; i++) {\n      const node = tree.children[i];\n\n      if (node.type === \"element\") {\n        // Recursively removes underlines from child elements.\n        removeUnderlinesHelper(node);\n\n        if ((node as HASTElement).tagName === \"u\") {\n          // Lifts child nodes outside underline element, deletes the underline element, and updates current index &\n          // the number of child elements.\n          if (node.children.length > 0) {\n            tree.children.splice(i, 1, ...node.children);\n\n            const numElementsAdded = node.children.length - 1;\n            numChildElements += numElementsAdded;\n            i += numElementsAdded;\n          } else {\n            tree.children.splice(i, 1);\n\n            numChildElements--;\n            i--;\n          }\n        }\n      }\n    }\n  };\n\n  return removeUnderlinesHelper;\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').DocType} HastDoctype\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('hast').Comment} HastComment\n * @typedef {import('hast').Content} HastContent\n */\n\n/**\n * @typedef {HastContent | HastRoot} HastNode\n *\n * @callback AfterTransform\n *   Callback called when each node is transformed.\n * @param {Node} domNode\n *   DOM node that was handled.\n * @param {HastNode} hastNode\n *   Corresponding hast node.\n * @returns {void}\n *   Nothing.\n *\n * @typedef Options\n *   Configuration.\n * @property {AfterTransform | null | undefined} [afterTransform]\n *   Callback called when each node is transformed.\n */\n\nimport {webNamespaces} from 'web-namespaces'\nimport {h, s} from 'hastscript'\n\n/**\n * Transform a DOM tree to a hast tree.\n *\n * @param {Node} tree\n *   DOM tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNode}\n *   Equivalent hast node.\n */\nexport function fromDom(tree, options) {\n  const result = tree ? transform(tree, options || {}) : undefined\n  return result || {type: 'root', children: []}\n}\n\n/**\n * @param {Node} node\n *   DOM node to transform.\n * @param {Options} options\n *   Configuration.\n * @returns {HastNode | undefined}\n *   Equivalent hast node.\n *\n *   Note that certain legacy DOM nodes (i.e., Attr nodes (2),  CDATA, processing instructions)\n */\nfunction transform(node, options) {\n  const transformed = one(node, options)\n  if (transformed && options.afterTransform)\n    options.afterTransform(node, transformed)\n  return transformed\n}\n\n/**\n * @param {Node} node\n *   DOM node to transform.\n * @param {Options} options\n *   Configuration.\n * @returns {HastNode | undefined}\n *   Equivalent hast node.\n */\nfunction one(node, options) {\n  switch (node.nodeType) {\n    case 1 /* Element */: {\n      // @ts-expect-error TypeScript is wrong.\n      return element(node, options)\n    }\n\n    // Ignore: Attr (2).\n\n    case 3 /* Text */: {\n      // @ts-expect-error TypeScript is wrong.\n      return text(node)\n    }\n\n    // Ignore: CDATA (4).\n    // Removed: Entity reference (5)\n    // Removed: Entity (6)\n    // Ignore: Processing instruction (7).\n\n    case 8 /* Comment */: {\n      // @ts-expect-error TypeScript is wrong.\n      return comment(node)\n    }\n\n    case 9 /* Document */: {\n      // @ts-expect-error TypeScript is wrong.\n      return root(node, options)\n    }\n\n    case 10 /* Document type */: {\n      return doctype()\n    }\n\n    case 11 /* Document fragment */: {\n      // @ts-expect-error TypeScript is wrong.\n      return root(node, options)\n    }\n\n    default: {\n      return undefined\n    }\n  }\n}\n\n/**\n * Transform a document.\n *\n * @param {Document | DocumentFragment} node\n *   DOM node to transform.\n * @param {Options} options\n *   Configuration.\n * @returns {HastRoot}\n *   Equivalent hast node.\n */\nfunction root(node, options) {\n  return {type: 'root', children: all(node, options)}\n}\n\n/**\n * Transform a doctype.\n *\n * @returns {HastDoctype}\n *   Equivalent hast node.\n */\nfunction doctype() {\n  // @ts-expect-error hast types out of date.\n  return {type: 'doctype'}\n}\n\n/**\n * Transform a text.\n *\n * @param {Text} node\n *   DOM node to transform.\n * @returns {HastText}\n *   Equivalent hast node.\n */\nfunction text(node) {\n  return {type: 'text', value: node.nodeValue || ''}\n}\n\n/**\n * Transform a comment.\n *\n * @param {Comment} node\n *   DOM node to transform.\n * @returns {HastComment}\n *   Equivalent hast node.\n */\nfunction comment(node) {\n  return {type: 'comment', value: node.nodeValue || ''}\n}\n\n/**\n * Transform an element.\n *\n * @param {Element} node\n *   DOM node to transform.\n * @param {Options} options\n *   Configuration.\n * @returns {HastElement}\n *   Equivalent hast node.\n */\nfunction element(node, options) {\n  const space = node.namespaceURI\n  const fn = space === webNamespaces.svg ? s : h\n  const tagName =\n    space === webNamespaces.html ? node.tagName.toLowerCase() : node.tagName\n  /** @type {DocumentFragment | Element} */\n  const content =\n    // @ts-expect-error Types are wrong.\n    space === webNamespaces.html && tagName === 'template' ? node.content : node\n  const attributes = node.getAttributeNames()\n  /** @type {Record<string, string>} */\n  const props = {}\n  let index = -1\n\n  while (++index < attributes.length) {\n    props[attributes[index]] = node.getAttribute(attributes[index]) || ''\n  }\n\n  return fn(tagName, props, all(content, options))\n}\n\n/**\n * Transform child nodes in a parent.\n *\n * @param {Document | DocumentFragment | Element} node\n *   DOM node to transform.\n * @param {Options} options\n *   Configuration.\n * @returns {Array<HastContent>}\n *   Equivalent hast nodes.\n */\nfunction all(node, options) {\n  const nodes = node.childNodes\n  /** @type {Array<HastContent>} */\n  const children = []\n  let index = -1\n\n  while (++index < nodes.length) {\n    const child = transform(nodes[index], options)\n\n    if (child !== undefined) {\n      // @ts-expect-error Assume no document inside document.\n      children.push(child)\n    }\n  }\n\n  return children\n}\n","import { Element as HASTElement, Parent as HASTParent } from \"hast\";\nimport { fromDom } from \"hast-util-from-dom\";\n\ntype SimplifyBlocksOptions = {\n  orderedListItemBlockTypes: Set<string>;\n  unorderedListItemBlockTypes: Set<string>;\n};\n\n/**\n * Rehype plugin which converts the HTML output string rendered by BlockNote into a simplified structure which better\n * follows HTML standards. It does several things:\n * - Removes all block related div elements, leaving only the actual content inside the block.\n * - Lifts nested blocks to a higher level for all block types that don't represent list items.\n * - Wraps blocks which represent list items in corresponding ul/ol HTML elements and restructures them to comply\n * with HTML list structure.\n * @param options Options for specifying which block types represent ordered and unordered list items.\n */\nexport function simplifyBlocks(options: SimplifyBlocksOptions) {\n  const listItemBlockTypes = new Set<string>([\n    ...options.orderedListItemBlockTypes,\n    ...options.unorderedListItemBlockTypes,\n  ]);\n\n  const simplifyBlocksHelper = (tree: HASTParent) => {\n    let numChildElements = tree.children.length;\n    let activeList: HASTElement | undefined;\n\n    for (let i = 0; i < numChildElements; i++) {\n      const blockOuter = tree.children[i] as HASTElement;\n      if (blockOuter.tagName === \"table\") {\n        for (let i = 0; i < blockOuter.children.length; i++) {\n          const rowEl = blockOuter.children[i] as HASTElement;\n          for (let j = 0; j < rowEl.children.length; j++) {\n            const cellEl = rowEl.children[j] as HASTElement;\n            for (let t = 0; t < cellEl.children.length; t++) {\n              const blockInner = cellEl.children[t] as HASTElement;\n              simplifyBlocksHelper(blockInner);\n            }\n          }\n        }\n        continue;\n      }\n\n      const blockContainer = blockOuter.children[0] as HASTElement;\n      if (blockContainer?.properties?.dataNodeType !== \"blockContainer\") {\n        continue;\n      }\n      const blockContent = blockContainer.children[0] as HASTElement;\n      const blockGroup =\n        blockContainer.children.length === 2\n          ? (blockContainer.children[1] as HASTElement)\n          : null;\n\n      const isListItemBlock = listItemBlockTypes.has(\n        blockContent.properties![\"dataContentType\"] as string\n      );\n\n      const listItemBlockType = isListItemBlock\n        ? options.orderedListItemBlockTypes.has(\n            blockContent.properties![\"dataContentType\"] as string\n          )\n          ? \"ol\"\n          : \"ul\"\n        : null;\n\n      // Plugin runs recursively to process nested blocks.\n      if (blockGroup !== null) {\n        simplifyBlocksHelper(blockGroup);\n      }\n\n      // Checks that there is an active list, but the block can't be added to it as it's of a different type.\n      if (activeList && activeList.tagName !== listItemBlockType) {\n        // Blocks that were copied into the list are removed and the list is inserted in their place.\n        tree.children.splice(\n          i - activeList.children.length,\n          activeList.children.length,\n          activeList\n        );\n\n        // Updates the current index and number of child elements.\n        const numElementsRemoved = activeList.children.length - 1;\n        i -= numElementsRemoved;\n        numChildElements -= numElementsRemoved;\n\n        activeList = undefined;\n      }\n\n      // Checks if the block represents a list item.\n      if (isListItemBlock) {\n        // Checks if a list isn't already active. We don't have to check if the block and the list are of the same\n        // type as this was already done earlier.\n        if (!activeList) {\n          // Creates a new list element to represent an active list.\n          activeList = fromDom(\n            document.createElement(listItemBlockType!)\n          ) as HASTElement;\n        }\n\n        // Creates a new list item element to represent the block.\n        const listItemElement = fromDom(\n          document.createElement(\"li\")\n        ) as HASTElement;\n\n        // Adds only the content inside the block to the active list.\n        listItemElement.children.push(blockContent.children[0]);\n        // Nested blocks have already been processed in the recursive function call, so the resulting elements are\n        // also added to the active list.\n        if (blockGroup !== null) {\n          listItemElement.children.push(...blockGroup.children);\n        }\n\n        // Adds the list item representing the block to the active list.\n        activeList.children.push(listItemElement);\n      } else if (blockGroup !== null) {\n        // Lifts all children out of the current block, as only list items should allow nesting.\n        tree.children.splice(i + 1, 0, ...blockGroup.children);\n        // Replaces the block with only the content inside it.\n        tree.children[i] = blockContent.children[0];\n\n        // Updates the current index and number of child elements.\n        const numElementsAdded = blockGroup.children.length;\n        i += numElementsAdded;\n        numChildElements += numElementsAdded;\n      } else {\n        // Replaces the block with only the content inside it.\n        tree.children[i] = blockContent.children[0];\n      }\n    }\n\n    // Since the active list is only inserted after encountering a block which can't be added to it, there are cases\n    // where it remains un-inserted after processing all blocks, which are handled here.\n    if (activeList) {\n      tree.children.splice(\n        numChildElements - activeList.children.length,\n        activeList.children.length,\n        activeList\n      );\n    }\n  };\n\n  return simplifyBlocksHelper;\n}\n","import { DOMParser, DOMSerializer, Schema } from \"prosemirror-model\";\nimport rehypeParse from \"rehype-parse\";\nimport rehypeRemark from \"rehype-remark\";\nimport rehypeStringify from \"rehype-stringify\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkParse from \"remark-parse\";\nimport remarkRehype, { defaultHandlers } from \"remark-rehype\";\nimport remarkStringify from \"remark-stringify\";\nimport { unified } from \"unified\";\nimport { Block, BlockSchema } from \"../../extensions/Blocks/api/blockTypes\";\n\nimport { blockToNode, nodeToBlock } from \"../nodeConversions/nodeConversions\";\nimport { removeUnderlines } from \"./removeUnderlinesRehypePlugin\";\nimport { simplifyBlocks } from \"./simplifyBlocksRehypePlugin\";\n\nexport async function blocksToHTML<BSchema extends BlockSchema>(\n  blocks: Block<BSchema>[],\n  schema: Schema\n): Promise<string> {\n  const htmlParentElement = document.createElement(\"div\");\n  const serializer = DOMSerializer.fromSchema(schema);\n\n  for (const block of blocks) {\n    const node = blockToNode(block, schema);\n    const htmlNode = serializer.serializeNode(node);\n    htmlParentElement.appendChild(htmlNode);\n  }\n\n  const htmlString = await unified()\n    .use(rehypeParse, { fragment: true })\n    .use(simplifyBlocks, {\n      orderedListItemBlockTypes: new Set<string>([\"numberedListItem\"]),\n      unorderedListItemBlockTypes: new Set<string>([\"bulletListItem\"]),\n    })\n    .use(rehypeStringify)\n    .process(htmlParentElement.innerHTML);\n\n  return htmlString.value as string;\n}\n\nexport async function HTMLToBlocks<BSchema extends BlockSchema>(\n  html: string,\n  blockSchema: BSchema,\n  schema: Schema\n): Promise<Block<BSchema>[]> {\n  const htmlNode = document.createElement(\"div\");\n  htmlNode.innerHTML = html.trim();\n\n  const parser = DOMParser.fromSchema(schema);\n  const parentNode = parser.parse(htmlNode); //, { preserveWhitespace: \"full\" });\n\n  const blocks: Block<BSchema>[] = [];\n\n  for (let i = 0; i < parentNode.firstChild!.childCount; i++) {\n    blocks.push(nodeToBlock(parentNode.firstChild!.child(i), blockSchema));\n  }\n\n  return blocks;\n}\n\nexport async function blocksToMarkdown<BSchema extends BlockSchema>(\n  blocks: Block<BSchema>[],\n  schema: Schema\n): Promise<string> {\n  const markdownString = await unified()\n    .use(rehypeParse, { fragment: true })\n    .use(removeUnderlines)\n    .use(rehypeRemark)\n    .use(remarkGfm)\n    .use(remarkStringify)\n    .process(await blocksToHTML(blocks, schema));\n\n  return markdownString.value as string;\n}\n\n// modefied version of https://github.com/syntax-tree/mdast-util-to-hast/blob/main/lib/handlers/code.js\n// that outputs a data-language attribute instead of a CSS class (e.g.: language-typescript)\nfunction code(state: any, node: any) {\n  const value = node.value ? node.value + \"\\n\" : \"\";\n  /** @type {Properties} */\n  const properties: any = {};\n\n  if (node.lang) {\n    // changed line\n    properties[\"data-language\"] = node.lang;\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result: any = {\n    type: \"element\",\n    tagName: \"code\",\n    properties,\n    children: [{ type: \"text\", value }],\n  };\n\n  if (node.meta) {\n    result.data = { meta: node.meta };\n  }\n\n  state.patch(node, result);\n  result = state.applyData(node, result);\n\n  // Create `<pre>`.\n  result = {\n    type: \"element\",\n    tagName: \"pre\",\n    properties: {},\n    children: [result],\n  };\n  state.patch(node, result);\n  return result;\n}\n\nexport async function markdownToBlocks<BSchema extends BlockSchema>(\n  markdown: string,\n  blockSchema: BSchema,\n  schema: Schema\n): Promise<Block<BSchema>[]> {\n  const htmlString = await unified()\n    .use(remarkParse)\n    .use(remarkGfm)\n    .use(remarkRehype, {\n      handlers: {\n        ...(defaultHandlers as any),\n        code,\n      },\n    })\n    .use(rehypeStringify)\n    .process(markdown);\n\n  return HTMLToBlocks(htmlString.value as string, blockSchema, schema);\n}\n","import { Attribute, Attributes, Node, PasteRule } from \"@tiptap/core\";\nimport { BlockNoteDOMAttributes, BlockNoteEditor } from \"../../..\";\nimport styles from \"../nodes/Block.module.css\";\nimport {\n  BlockConfig,\n  BlockSchema,\n  BlockSpec,\n  PropSchema,\n  TipTapNode,\n  TipTapNodeConfig,\n} from \"./blockTypes\";\nimport { mergeCSSClasses } from \"../../../shared/utils\";\nimport { ParseRule, Node as PMNode } from \"prosemirror-model\";\n\nexport function camelToDataKebab(str: string): string {\n  return \"data-\" + str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n}\n\n// Function that uses the 'propSchema' of a blockConfig to create a TipTap\n// node's `addAttributes` property.\nexport function propsToAttributes<\n  BType extends string,\n  PSchema extends PropSchema,\n  ContainsInlineContent extends boolean,\n  BSchema extends BlockSchema\n>(\n  blockConfig: Omit<\n    BlockConfig<BType, PSchema, ContainsInlineContent, BSchema>,\n    \"render\"\n  >\n): Attributes {\n  const tiptapAttributes: Record<string, Attribute> = {};\n\n  Object.entries(blockConfig.propSchema).forEach(([name, spec]) => {\n    tiptapAttributes[name] = {\n      default: spec.default,\n      keepOnSplit: true,\n      // Props are displayed in kebab-case as HTML attributes. If a prop's\n      // value is the same as its default, we don't display an HTML\n      // attribute for it.\n      parseHTML: (element) => {\n        const value = element.getAttribute(camelToDataKebab(name));\n\n        if (value === null) {\n          return null;\n        }\n\n        if (typeof spec.default === \"boolean\") {\n          if (value === \"true\") {\n            return true;\n          }\n\n          if (value === \"false\") {\n            return false;\n          }\n\n          return null;\n        }\n\n        if (typeof spec.default === \"number\") {\n          const asNumber = parseFloat(value);\n          const isNumeric =\n            !Number.isNaN(asNumber) && Number.isFinite(asNumber);\n\n          if (isNumeric) {\n            return asNumber;\n          }\n\n          return null;\n        }\n\n        return value;\n      },\n      renderHTML: (attributes) =>\n        attributes[name] !== spec.default\n          ? {\n              [camelToDataKebab(name)]: attributes[name],\n            }\n          : {},\n    };\n  });\n\n  return tiptapAttributes;\n}\n\n// Function that uses the 'parse' function of a blockConfig to create a\n// TipTap node's `parseHTML` property. This is only used for parsing content\n// from the clipboard.\nexport function parse<\n  BType extends string,\n  PSchema extends PropSchema,\n  ContainsInlineContent extends boolean,\n  BSchema extends BlockSchema\n>(\n  blockConfig: Omit<\n    BlockConfig<BType, PSchema, ContainsInlineContent, BSchema>,\n    \"render\"\n  >\n): ParseRule[] {\n  return [\n    {\n      tag: \"div[data-content-type=\" + blockConfig.type + \"]\",\n    },\n  ];\n}\n\n// Function that uses the 'render' function of a blockConfig to create a\n// TipTap node's `renderHTML` property. Since custom blocks use node views,\n// this is only used for serializing content to the clipboard.\nexport function render<\n  BType extends string,\n  PSchema extends PropSchema,\n  ContainsInlineContent extends boolean,\n  BSchema extends BlockSchema\n>(\n  blockConfig: Omit<\n    BlockConfig<BType, PSchema, ContainsInlineContent, BSchema>,\n    \"render\"\n  >,\n  HTMLAttributes: Record<string, any>,\n  node: PMNode\n) {\n  // Create blockContent element\n  const blockContent = document.createElement(\"div\");\n  // Add blockContent HTML attribute\n  blockContent.setAttribute(\"data-content-type\", blockConfig.type);\n  // Add props as HTML attributes in kebab-case with \"data-\" prefix\n  for (const [attribute, value] of Object.entries(HTMLAttributes)) {\n    blockContent.setAttribute(attribute, value);\n  }\n\n  // TODO: This only works for content copied within BlockNote.\n  // Creates contentDOM element to serialize inline content into.\n  let contentDOM: HTMLDivElement | undefined;\n  if (blockConfig.containsInlineContent) {\n    contentDOM = document.createElement(\"div\");\n    blockContent.appendChild(contentDOM);\n  } else {\n    contentDOM = undefined;\n    if (blockConfig.renderInnerHTML) {\n      blockContent.appendChild(blockConfig.renderInnerHTML(node.attrs));\n    }\n  }\n\n  return contentDOM !== undefined\n    ? {\n        dom: blockContent,\n        contentDOM: contentDOM,\n      }\n    : {\n        dom: blockContent,\n      };\n}\n\n// A function to create custom block for API consumers\n// we want to hide the tiptap node from API consumers and provide a simpler API surface instead\nexport function createBlockSpec<\n  BType extends string,\n  PSchema extends PropSchema,\n  ContainsInlineContent extends false,\n  BSchema extends BlockSchema\n>(\n  blockConfig: BlockConfig<BType, PSchema, ContainsInlineContent, BSchema>\n): BlockSpec<BType, PSchema, ContainsInlineContent> {\n  const node = createTipTapBlock<\n    BType,\n    ContainsInlineContent,\n    {\n      editor: BlockNoteEditor<BSchema>;\n      domAttributes?: BlockNoteDOMAttributes;\n    }\n  >({\n    name: blockConfig.type,\n    content: (blockConfig.containsInlineContent\n      ? \"inline*\"\n      : \"\") as ContainsInlineContent extends true ? \"inline*\" : \"\",\n    selectable: true,\n\n    addAttributes() {\n      return propsToAttributes(blockConfig);\n    },\n\n    parseHTML() {\n      return blockConfig.parse ? blockConfig.parse() : parse(blockConfig);\n    },\n\n    renderHTML({ HTMLAttributes, node }) {\n      return render(blockConfig, HTMLAttributes, node);\n    },\n\n    addNodeView() {\n      return ({ HTMLAttributes, getPos }) => {\n        // Create blockContent element\n        const blockContent = document.createElement(\"div\");\n        // Add custom HTML attributes\n        const blockContentDOMAttributes =\n          this.options.domAttributes?.blockContent || {};\n        for (const [attribute, value] of Object.entries(\n          blockContentDOMAttributes\n        )) {\n          if (attribute !== \"class\") {\n            blockContent.setAttribute(attribute, value);\n          }\n        }\n        // Set blockContent & custom classes\n        blockContent.className = mergeCSSClasses(\n          styles.blockContent,\n          blockContentDOMAttributes.class\n        );\n        // Add blockContent HTML attribute\n        blockContent.setAttribute(\"data-content-type\", blockConfig.type);\n        // Add props as HTML attributes in kebab-case with \"data-\" prefix\n        for (const [attribute, value] of Object.entries(HTMLAttributes)) {\n          blockContent.setAttribute(attribute, value);\n        }\n\n        // Gets BlockNote editor instance\n        const editor = this.options.editor! as BlockNoteEditor<\n          BSchema & {\n            [k in BType]: BlockSpec<BType, PSchema, ContainsInlineContent>;\n          }\n        >;\n        // Gets position of the node\n        if (typeof getPos === \"boolean\") {\n          throw new Error(\n            \"Cannot find node position as getPos is a boolean, not a function.\"\n          );\n        }\n        const pos = getPos();\n        // Gets TipTap editor instance\n        const tipTapEditor = editor._tiptapEditor;\n        // Gets parent blockContainer node\n        const blockContainer = tipTapEditor.state.doc.resolve(pos!).node();\n        // Gets block identifier\n        const blockIdentifier = blockContainer.attrs.id;\n\n        // Get the block\n        const block = editor.getBlock(blockIdentifier)!;\n        if (block.type !== blockConfig.type) {\n          throw new Error(\"Block type does not match\");\n        }\n\n        // Render elements\n        const rendered = blockConfig.render(block as any, editor);\n        // Add HTML attributes to contentDOM\n        if (blockConfig.containsInlineContent) {\n          const contentDOM = (rendered as { contentDOM: HTMLElement })\n            .contentDOM;\n\n          const inlineContentDOMAttributes =\n            this.options.domAttributes?.inlineContent || {};\n          // Add custom HTML attributes\n          for (const [attribute, value] of Object.entries(\n            inlineContentDOMAttributes\n          )) {\n            if (attribute !== \"class\") {\n              contentDOM.setAttribute(attribute, value);\n            }\n          }\n          // Merge existing classes with inlineContent & custom classes\n          contentDOM.className = mergeCSSClasses(\n            contentDOM.className,\n            styles.inlineContent,\n            inlineContentDOMAttributes.class\n          );\n        }\n        // Add elements to blockContent\n        blockContent.appendChild(rendered.dom);\n\n        return \"contentDOM\" in rendered\n          ? {\n              dom: blockContent,\n              contentDOM: rendered.contentDOM,\n              destroy: rendered.destroy,\n            }\n          : {\n              dom: blockContent,\n              destroy: rendered.destroy,\n            };\n      };\n    },\n\n    addPasteRules() {\n      if (!blockConfig.pasteRules) {\n        return [];\n      }\n\n      return blockConfig.pasteRules.map((rule) => {\n        return new PasteRule({\n          find: rule.find,\n          handler(props) {\n            rule.handler(props);\n          },\n        });\n      });\n    },\n  });\n\n  return {\n    node: node as TipTapNode<BType, ContainsInlineContent>,\n    propSchema: blockConfig.propSchema,\n  };\n}\n\nexport function createTipTapBlock<\n  Type extends string,\n  ContainsInlineContent extends boolean,\n  Options extends {\n    domAttributes?: BlockNoteDOMAttributes;\n  } = {\n    domAttributes?: BlockNoteDOMAttributes;\n  },\n  Storage = any\n>(\n  config: TipTapNodeConfig<Type, ContainsInlineContent, Options, Storage>\n): TipTapNode<Type, ContainsInlineContent, Options, Storage> {\n  // Type cast is needed as Node.name is mutable, though there is basically no\n  // reason to change it after creation. Alternative is to wrap Node in a new\n  // class, which I don't think is worth it since we'd only be changing 1\n  // attribute to be read only.\n  return Node.create<Options, Storage>({\n    ...config,\n    group: \"blockContent\",\n    content: config.content,\n  }) as TipTapNode<Type, ContainsInlineContent, Options, Storage>;\n}\n","import { InputRule, mergeAttributes } from \"@tiptap/core\";\nimport { defaultProps } from \"../../../api/defaultProps\";\nimport { createTipTapBlock } from \"../../../api/block\";\nimport { BlockSpec, PropSchema } from \"../../../api/blockTypes\";\nimport { mergeCSSClasses } from \"../../../../../shared/utils\";\nimport styles from \"../../Block.module.css\";\n\nexport const headingPropSchema = {\n  ...defaultProps,\n  level: { default: 1, values: [1, 2, 3] as const },\n} satisfies PropSchema;\n\nconst HeadingBlockContent = createTipTapBlock<\"heading\", true>({\n  name: \"heading\",\n  content: \"inline*\",\n\n  addAttributes() {\n    return {\n      level: {\n        default: 1,\n        // instead of \"level\" attributes, use \"data-level\"\n        parseHTML: (element) => element.getAttribute(\"data-level\")!,\n        renderHTML: (attributes) => {\n          return {\n            \"data-level\": (attributes.level as number).toString(),\n          };\n        },\n      },\n    };\n  },\n\n  addInputRules() {\n    return [\n      ...[1, 2, 3].map((level) => {\n        // Creates a heading of appropriate level when starting with \"#\", \"##\", or \"###\".\n        return new InputRule({\n          find: new RegExp(`^(#{${level}})\\\\s$`),\n          handler: ({ state, chain, range }) => {\n            chain()\n              .BNUpdateBlock<{\n                heading: BlockSpec<\"heading\", typeof headingPropSchema, true>;\n              }>(state.selection.from, {\n                type: \"heading\",\n                props: {\n                  level: level as 1 | 2 | 3,\n                },\n              })\n              // Removes the \"#\" character(s) used to set the heading.\n              .deleteRange({ from: range.from, to: range.to });\n          },\n        });\n      }),\n    ];\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      \"Mod-Alt-1\": () =>\n        this.editor.commands.BNUpdateBlock<{\n          heading: BlockSpec<\"heading\", typeof headingPropSchema, true>;\n        }>(this.editor.state.selection.anchor, {\n          type: \"heading\",\n          props: {\n            level: 1,\n          },\n        }),\n      \"Mod-Alt-2\": () =>\n        this.editor.commands.BNUpdateBlock<{\n          heading: BlockSpec<\"heading\", typeof headingPropSchema, true>;\n        }>(this.editor.state.selection.anchor, {\n          type: \"heading\",\n          props: {\n            level: 2,\n          },\n        }),\n      \"Mod-Alt-3\": () =>\n        this.editor.commands.BNUpdateBlock<{\n          heading: BlockSpec<\"heading\", typeof headingPropSchema, true>;\n        }>(this.editor.state.selection.anchor, {\n          type: \"heading\",\n          props: {\n            level: 3,\n          },\n        }),\n    };\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: \"h1\",\n        attrs: { level: 1 },\n        node: \"heading\",\n      },\n      {\n        tag: \"h2\",\n        attrs: { level: 2 },\n        node: \"heading\",\n      },\n      {\n        tag: \"h3\",\n        attrs: { level: 3 },\n        node: \"heading\",\n      },\n    ];\n  },\n\n  renderHTML({ node, HTMLAttributes }) {\n    const blockContentDOMAttributes =\n      this.options.domAttributes?.blockContent || {};\n    const inlineContentDOMAttributes =\n      this.options.domAttributes?.inlineContent || {};\n\n    return [\n      \"div\",\n      mergeAttributes(HTMLAttributes, {\n        ...blockContentDOMAttributes,\n        class: mergeCSSClasses(\n          styles.blockContent,\n          blockContentDOMAttributes.class\n        ),\n        \"data-content-type\": this.name,\n      }),\n      [\n        `h${node.attrs.level}`,\n        {\n          ...inlineContentDOMAttributes,\n          class: mergeCSSClasses(\n            styles.inlineContent,\n            inlineContentDOMAttributes.class\n          ),\n        },\n        0,\n      ],\n    ];\n  },\n});\n\nexport const Heading = {\n  node: HeadingBlockContent,\n  propSchema: headingPropSchema,\n} satisfies BlockSpec<\"heading\", typeof headingPropSchema, true>;\n","import { Editor } from \"@tiptap/core\";\nimport { getBlockInfoFromPos } from \"../../../helpers/getBlockInfoFromPos\";\n\nexport const handleEnter = (editor: Editor) => {\n  const { node, contentType } = getBlockInfoFromPos(\n    editor.state.doc,\n    editor.state.selection.from\n  )!;\n\n  const selectionEmpty =\n    editor.state.selection.anchor === editor.state.selection.head;\n\n  if (!contentType.name.endsWith(\"ListItem\") || !selectionEmpty) {\n    return false;\n  }\n\n  return editor.commands.first(({ state, chain, commands }) => [\n    () =>\n      // Changes list item block to a text block if the content is empty.\n      commands.command(() => {\n        if (node.textContent.length === 0) {\n          return commands.BNUpdateBlock(state.selection.from, {\n            type: \"paragraph\",\n            props: {},\n          });\n        }\n\n        return false;\n      }),\n\n    () =>\n      // Splits the current block, moving content inside that's after the cursor to a new block of the same type\n      // below.\n      commands.command(() => {\n        if (node.textContent.length > 0) {\n          chain()\n            .deleteSelection()\n            .BNSplitBlock(state.selection.from, true)\n            .run();\n\n          return true;\n        }\n\n        return false;\n      }),\n  ]);\n};\n","import { InputRule, mergeAttributes } from \"@tiptap/core\";\nimport { defaultProps } from \"../../../../api/defaultProps\";\nimport { createTipTapBlock } from \"../../../../api/block\";\nimport { BlockSpec, PropSchema } from \"../../../../api/blockTypes\";\nimport { mergeCSSClasses } from \"../../../../../../shared/utils\";\nimport { handleEnter } from \"../ListItemKeyboardShortcuts\";\nimport styles from \"../../../Block.module.css\";\n\nexport const bulletListItemPropSchema = {\n  ...defaultProps,\n} satisfies PropSchema;\n\nconst BulletListItemBlockContent = createTipTapBlock<\"bulletListItem\", true>({\n  name: \"bulletListItem\",\n  content: \"inline*\",\n\n  addInputRules() {\n    return [\n      // Creates an unordered list when starting with \"-\", \"+\", or \"*\".\n      new InputRule({\n        find: new RegExp(`^[-+*]\\\\s$`),\n        handler: ({ state, chain, range }) => {\n          chain()\n            .BNUpdateBlock(state.selection.from, {\n              type: \"bulletListItem\",\n              props: {},\n            })\n            // Removes the \"-\", \"+\", or \"*\" character used to set the list.\n            .deleteRange({ from: range.from, to: range.to });\n        },\n      }),\n    ];\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      Enter: () => handleEnter(this.editor),\n      \"Mod-Shift-7\": () =>\n        this.editor.commands.BNUpdateBlock<{\n          bulletListItem: BlockSpec<\n            \"bulletListItem\",\n            typeof bulletListItemPropSchema,\n            true\n          >;\n        }>(this.editor.state.selection.anchor, {\n          type: \"bulletListItem\",\n          props: {},\n        }),\n    };\n  },\n\n  parseHTML() {\n    return [\n      // Case for regular HTML list structure.\n      {\n        tag: \"li\",\n        getAttrs: (element) => {\n          if (typeof element === \"string\") {\n            return false;\n          }\n\n          const parent = element.parentElement;\n\n          if (parent === null) {\n            return false;\n          }\n\n          if (parent.tagName === \"UL\") {\n            return {};\n          }\n\n          return false;\n        },\n        node: \"bulletListItem\",\n      },\n      // Case for BlockNote list structure.\n      {\n        tag: \"p\",\n        getAttrs: (element) => {\n          if (typeof element === \"string\") {\n            return false;\n          }\n\n          const parent = element.parentElement;\n\n          if (parent === null) {\n            return false;\n          }\n\n          if (parent.getAttribute(\"data-content-type\") === \"bulletListItem\") {\n            return {};\n          }\n\n          return false;\n        },\n        priority: 300,\n        node: \"bulletListItem\",\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    const blockContentDOMAttributes =\n      this.options.domAttributes?.blockContent || {};\n    const inlineContentDOMAttributes =\n      this.options.domAttributes?.inlineContent || {};\n\n    return [\n      \"div\",\n      mergeAttributes(HTMLAttributes, {\n        ...blockContentDOMAttributes,\n        class: mergeCSSClasses(\n          styles.blockContent,\n          blockContentDOMAttributes.class\n        ),\n        \"data-content-type\": this.name,\n      }),\n      [\n        \"p\",\n        {\n          ...inlineContentDOMAttributes,\n          class: mergeCSSClasses(\n            styles.inlineContent,\n            inlineContentDOMAttributes.class\n          ),\n        },\n        0,\n      ],\n    ];\n  },\n});\n\nexport const BulletListItem = {\n  node: BulletListItemBlockContent,\n  propSchema: bulletListItemPropSchema,\n} satisfies BlockSpec<\"bulletListItem\", typeof bulletListItemPropSchema, true>;\n","import { Plugin, PluginKey } from \"prosemirror-state\";\nimport { getBlockInfoFromPos } from \"../../../../helpers/getBlockInfoFromPos\";\n\n// ProseMirror Plugin which automatically assigns indices to ordered list items per nesting level.\nconst PLUGIN_KEY = new PluginKey(`numbered-list-indexing`);\nexport const NumberedListIndexingPlugin = () => {\n  return new Plugin({\n    key: PLUGIN_KEY,\n    appendTransaction: (_transactions, _oldState, newState) => {\n      const tr = newState.tr;\n      tr.setMeta(\"numberedListIndexing\", true);\n\n      let modified = false;\n\n      // Traverses each node the doc using DFS, so blocks which are on the same nesting level will be traversed in the\n      // same order they appear. This means the index of each list item block can be calculated by incrementing the\n      // index of the previous list item block.\n      newState.doc.descendants((node, pos) => {\n        if (\n          node.type.name === \"blockContainer\" &&\n          node.firstChild!.type.name === \"numberedListItem\"\n        ) {\n          let newIndex = \"1\";\n          const isFirstBlockInDoc = pos === 1;\n\n          const blockInfo = getBlockInfoFromPos(tr.doc, pos + 1)!;\n          if (blockInfo === undefined) {\n            return;\n          }\n\n          // Checks if this block is the start of a new ordered list, i.e. if it's the first block in the document, the\n          // first block in its nesting level, or the previous block is not an ordered list item.\n          if (!isFirstBlockInDoc) {\n            const prevBlockInfo = getBlockInfoFromPos(tr.doc, pos - 2)!;\n            if (prevBlockInfo === undefined) {\n              return;\n            }\n\n            const isFirstBlockInNestingLevel =\n              blockInfo.depth !== prevBlockInfo.depth;\n\n            if (!isFirstBlockInNestingLevel) {\n              const prevBlockContentNode = prevBlockInfo.contentNode;\n              const prevBlockContentType = prevBlockInfo.contentType;\n\n              const isPrevBlockOrderedListItem =\n                prevBlockContentType.name === \"numberedListItem\";\n\n              if (isPrevBlockOrderedListItem) {\n                const prevBlockIndex = prevBlockContentNode.attrs[\"index\"];\n\n                newIndex = (parseInt(prevBlockIndex) + 1).toString();\n              }\n            }\n          }\n\n          const contentNode = blockInfo.contentNode;\n          const index = contentNode.attrs[\"index\"];\n\n          if (index !== newIndex) {\n            modified = true;\n\n            tr.setNodeMarkup(pos + 1, undefined, {\n              index: newIndex,\n            });\n          }\n        }\n      });\n\n      return modified ? tr : null;\n    },\n  });\n};\n","import { InputRule, mergeAttributes } from \"@tiptap/core\";\nimport { defaultProps } from \"../../../../api/defaultProps\";\nimport { createTipTapBlock } from \"../../../../api/block\";\nimport { BlockSpec, PropSchema } from \"../../../../api/blockTypes\";\nimport { mergeCSSClasses } from \"../../../../../../shared/utils\";\nimport { handleEnter } from \"../ListItemKeyboardShortcuts\";\nimport { NumberedListIndexingPlugin } from \"./NumberedListIndexingPlugin\";\nimport styles from \"../../../Block.module.css\";\n\nexport const numberedListItemPropSchema = {\n  ...defaultProps,\n} satisfies PropSchema;\n\nconst NumberedListItemBlockContent = createTipTapBlock<\n  \"numberedListItem\",\n  true\n>({\n  name: \"numberedListItem\",\n  content: \"inline*\",\n\n  addAttributes() {\n    return {\n      index: {\n        default: null,\n        parseHTML: (element) => element.getAttribute(\"data-index\"),\n        renderHTML: (attributes) => {\n          return {\n            \"data-index\": attributes.index,\n          };\n        },\n      },\n    };\n  },\n\n  addInputRules() {\n    return [\n      // Creates an ordered list when starting with \"1.\".\n      new InputRule({\n        find: new RegExp(`^1\\\\.\\\\s$`),\n        handler: ({ state, chain, range }) => {\n          chain()\n            .BNUpdateBlock(state.selection.from, {\n              type: \"numberedListItem\",\n              props: {},\n            })\n            // Removes the \"1.\" characters used to set the list.\n            .deleteRange({ from: range.from, to: range.to });\n        },\n      }),\n    ];\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      Enter: () => handleEnter(this.editor),\n      \"Mod-Shift-8\": () =>\n        this.editor.commands.BNUpdateBlock<{\n          numberedListItem: BlockSpec<\n            \"numberedListItem\",\n            typeof numberedListItemPropSchema,\n            true\n          >;\n        }>(this.editor.state.selection.anchor, {\n          type: \"numberedListItem\",\n          props: {},\n        }),\n    };\n  },\n\n  addProseMirrorPlugins() {\n    return [NumberedListIndexingPlugin()];\n  },\n\n  parseHTML() {\n    return [\n      // Case for regular HTML list structure.\n      // (e.g.: when pasting from other apps)\n      {\n        tag: \"li\",\n        getAttrs: (element) => {\n          if (typeof element === \"string\") {\n            return false;\n          }\n\n          const parent = element.parentElement;\n\n          if (parent === null) {\n            return false;\n          }\n\n          if (parent.tagName === \"OL\") {\n            return {};\n          }\n\n          return false;\n        },\n        node: \"numberedListItem\",\n      },\n      // Case for BlockNote list structure.\n      // (e.g.: when pasting from blocknote)\n      {\n        tag: \"p\",\n        getAttrs: (element) => {\n          if (typeof element === \"string\") {\n            return false;\n          }\n\n          const parent = element.parentElement;\n\n          if (parent === null) {\n            return false;\n          }\n\n          if (parent.getAttribute(\"data-content-type\") === \"numberedListItem\") {\n            return {};\n          }\n\n          return false;\n        },\n        priority: 300,\n        node: \"numberedListItem\",\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    const blockContentDOMAttributes =\n      this.options.domAttributes?.blockContent || {};\n    const inlineContentDOMAttributes =\n      this.options.domAttributes?.inlineContent || {};\n\n    return [\n      \"div\",\n      mergeAttributes(HTMLAttributes, {\n        ...blockContentDOMAttributes,\n        class: mergeCSSClasses(\n          styles.blockContent,\n          blockContentDOMAttributes.class\n        ),\n        \"data-content-type\": this.name,\n      }),\n      // we use a <p> tag, because for <li> tags we'd need to add a <ul> parent for around siblings to be semantically correct,\n      // which would be quite cumbersome\n      [\n        \"p\",\n        {\n          ...inlineContentDOMAttributes,\n          class: mergeCSSClasses(\n            styles.inlineContent,\n            inlineContentDOMAttributes.class\n          ),\n        },\n        0,\n      ],\n    ];\n  },\n});\n\nexport const NumberedListItem = {\n  node: NumberedListItemBlockContent,\n  propSchema: numberedListItemPropSchema,\n} satisfies BlockSpec<\n  \"numberedListItem\",\n  typeof numberedListItemPropSchema,\n  true\n>;\n","import { mergeAttributes } from \"@tiptap/core\";\nimport { defaultProps } from \"../../../api/defaultProps\";\nimport { createTipTapBlock } from \"../../../api/block\";\nimport { mergeCSSClasses } from \"../../../../../shared/utils\";\nimport styles from \"../../Block.module.css\";\n\nexport const paragraphPropSchema = {\n  ...defaultProps,\n};\n\nexport const ParagraphBlockContent = createTipTapBlock<\"paragraph\", true>({\n  name: \"paragraph\",\n  content: \"inline*\",\n\n  parseHTML() {\n    return [\n      {\n        tag: \"p\",\n        priority: 200,\n        node: \"paragraph\",\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    const blockContentDOMAttributes =\n      this.options.domAttributes?.blockContent || {};\n    const inlineContentDOMAttributes =\n      this.options.domAttributes?.inlineContent || {};\n\n    return [\n      \"div\",\n      mergeAttributes(\n        {\n          ...blockContentDOMAttributes,\n          class: mergeCSSClasses(\n            styles.blockContent,\n            blockContentDOMAttributes.class\n          ),\n          \"data-content-type\": this.name,\n        },\n        HTMLAttributes\n      ),\n      [\n        \"p\",\n        {\n          ...inlineContentDOMAttributes,\n          class: mergeCSSClasses(\n            styles.inlineContent,\n            inlineContentDOMAttributes.class\n          ),\n        },\n        0,\n      ],\n    ];\n  },\n});\n\nexport const Paragraph = {\n  node: ParagraphBlockContent,\n  propSchema: paragraphPropSchema,\n};\n","import { Node as PMNode } from \"prosemirror-model\";\nimport { EditorState, Plugin, PluginKey } from \"prosemirror-state\";\nimport { EditorView } from \"prosemirror-view\";\nimport {\n  BaseUiElementCallbacks,\n  BaseUiElementState,\n  BlockNoteEditor,\n  BlockSchema,\n  BlockSpec,\n  SpecificBlock,\n} from \"../..\";\nimport { EventEmitter } from \"../../shared/EventEmitter\";\n\nexport type ImageToolbarCallbacks = BaseUiElementCallbacks;\n\nexport type ImageToolbarState = BaseUiElementState & {\n  block: SpecificBlock<\n    BlockSchema & {\n      image: BlockSpec<\n        \"image\",\n        {\n          src: { default: string };\n        },\n        false\n      >;\n    },\n    \"image\"\n  >;\n};\n\nexport class ImageToolbarView {\n  private imageToolbarState?: ImageToolbarState;\n  public updateImageToolbar: () => void;\n\n  public prevWasEditable: boolean | null = null;\n\n  public shouldShow: (state: EditorState) => boolean = (state) =>\n    \"node\" in state.selection &&\n    (state.selection.node as PMNode).type.name === \"image\" &&\n    (state.selection.node as PMNode).attrs.src === \"\";\n\n  constructor(\n    private readonly pluginKey: PluginKey,\n    private readonly pmView: EditorView,\n    updateImageToolbar: (imageToolbarState: ImageToolbarState) => void\n  ) {\n    this.updateImageToolbar = () => {\n      if (!this.imageToolbarState) {\n        throw new Error(\"Attempting to update uninitialized image toolbar\");\n      }\n\n      updateImageToolbar(this.imageToolbarState);\n    };\n\n    pmView.dom.addEventListener(\"mousedown\", this.mouseDownHandler);\n\n    pmView.dom.addEventListener(\"dragstart\", this.dragstartHandler);\n\n    pmView.dom.addEventListener(\"blur\", this.blurHandler);\n\n    document.addEventListener(\"scroll\", this.scrollHandler);\n  }\n\n  mouseDownHandler = () => {\n    if (this.imageToolbarState?.show) {\n      this.imageToolbarState.show = false;\n      this.updateImageToolbar();\n    }\n  };\n\n  // For dragging the whole editor.\n  dragstartHandler = () => {\n    if (this.imageToolbarState?.show) {\n      this.imageToolbarState.show = false;\n      this.updateImageToolbar();\n    }\n  };\n\n  blurHandler = (event: FocusEvent) => {\n    const editorWrapper = this.pmView.dom.parentElement!;\n\n    // Checks if the focus is moving to an element outside the editor. If it is,\n    // the toolbar is hidden.\n    if (\n      // An element is clicked.\n      event &&\n      event.relatedTarget &&\n      // Element is inside the editor.\n      (editorWrapper === (event.relatedTarget as Node) ||\n        editorWrapper.contains(event.relatedTarget as Node))\n    ) {\n      return;\n    }\n\n    if (this.imageToolbarState?.show) {\n      this.imageToolbarState.show = false;\n      this.updateImageToolbar();\n    }\n  };\n\n  scrollHandler = () => {\n    if (this.imageToolbarState?.show) {\n      const blockElement = document.querySelector(\n        `[data-node-type=\"blockContainer\"][data-id=\"${this.imageToolbarState.block.id}\"]`\n      )!;\n\n      this.imageToolbarState.referencePos =\n        blockElement.getBoundingClientRect();\n      this.updateImageToolbar();\n    }\n  };\n\n  update(view: EditorView, prevState: EditorState) {\n    const pluginState: {\n      block: SpecificBlock<\n        BlockSchema & {\n          image: BlockSpec<\n            \"image\",\n            {\n              src: { default: string };\n            },\n            false\n          >;\n        },\n        \"image\"\n      >;\n    } = this.pluginKey.getState(view.state);\n\n    if (!this.imageToolbarState?.show && pluginState.block) {\n      const blockElement = document.querySelector(\n        `[data-node-type=\"blockContainer\"][data-id=\"${pluginState.block.id}\"]`\n      )!;\n\n      this.imageToolbarState = {\n        show: true,\n        referencePos: blockElement.getBoundingClientRect(),\n        block: pluginState.block,\n      };\n\n      this.updateImageToolbar();\n\n      return;\n    }\n\n    if (\n      !view.state.selection.eq(prevState.selection) ||\n      !view.state.doc.eq(prevState.doc)\n    ) {\n      if (this.imageToolbarState?.show) {\n        this.imageToolbarState.show = false;\n\n        this.updateImageToolbar();\n      }\n    }\n  }\n\n  destroy() {\n    this.pmView.dom.removeEventListener(\"mousedown\", this.mouseDownHandler);\n\n    this.pmView.dom.removeEventListener(\"dragstart\", this.dragstartHandler);\n\n    this.pmView.dom.removeEventListener(\"blur\", this.blurHandler);\n\n    document.removeEventListener(\"scroll\", this.scrollHandler);\n  }\n}\n\nexport const imageToolbarPluginKey = new PluginKey(\"ImageToolbarPlugin\");\n\nexport class ImageToolbarProsemirrorPlugin<\n  BSchema extends BlockSchema\n> extends EventEmitter<any> {\n  private view: ImageToolbarView | undefined;\n  public readonly plugin: Plugin;\n\n  constructor(_editor: BlockNoteEditor<BSchema>) {\n    super();\n    this.plugin = new Plugin<{\n      block:\n        | SpecificBlock<\n            BlockSchema & {\n              image: BlockSpec<\n                \"image\",\n                {\n                  src: { default: string };\n                },\n                false\n              >;\n            },\n            \"image\"\n          >\n        | undefined;\n    }>({\n      key: imageToolbarPluginKey,\n      view: (editorView) => {\n        this.view = new ImageToolbarView(\n          // editor,\n          imageToolbarPluginKey,\n          editorView,\n          (state) => {\n            this.emit(\"update\", state);\n          }\n        );\n        return this.view;\n      },\n      state: {\n        init: () => {\n          return {\n            block: undefined,\n          };\n        },\n        apply: (transaction) => {\n          const block:\n            | SpecificBlock<\n                BlockSchema & {\n                  image: BlockSpec<\n                    \"image\",\n                    {\n                      src: { default: string };\n                    },\n                    false\n                  >;\n                },\n                \"image\"\n              >\n            | undefined = transaction.getMeta(imageToolbarPluginKey)?.block;\n\n          return {\n            block,\n          };\n        },\n      },\n    });\n  }\n\n  public onUpdate(callback: (state: ImageToolbarState) => void) {\n    return this.on(\"update\", callback);\n  }\n}\n","import { createBlockSpec } from \"../../../api/block\";\nimport { defaultProps } from \"../../../api/defaultProps\";\nimport { BlockSpec, PropSchema, SpecificBlock } from \"../../../api/blockTypes\";\nimport { BlockNoteEditor } from \"../../../../../BlockNoteEditor\";\nimport { imageToolbarPluginKey } from \"../../../../ImageToolbar/ImageToolbarPlugin\";\nimport styles from \"../../Block.module.css\";\n\nexport const imagePropSchema = {\n  textAlignment: defaultProps.textAlignment,\n  backgroundColor: defaultProps.backgroundColor,\n  // Image url.\n  url: {\n    default: \"\" as const,\n  },\n  // Image caption.\n  caption: {\n    default: \"\" as const,\n  },\n  // Image width in px.\n  width: {\n    default: 512 as const,\n  },\n} satisfies PropSchema;\n\n// Converts text alignment prop values to the flexbox `align-items` values.\nconst textAlignmentToAlignItems = (\n  textAlignment: \"left\" | \"center\" | \"right\" | \"justify\"\n): \"flex-start\" | \"center\" | \"flex-end\" => {\n  switch (textAlignment) {\n    case \"left\":\n      return \"flex-start\";\n    case \"center\":\n      return \"center\";\n    case \"right\":\n      return \"flex-end\";\n    default:\n      return \"flex-start\";\n  }\n};\n\n// Min image width in px.\nconst minWidth = 64;\n\nconst renderImage = (\n  block: SpecificBlock<\n    { image: BlockSpec<\"image\", typeof imagePropSchema, false> },\n    \"image\"\n  >,\n  editor: BlockNoteEditor<{\n    image: BlockSpec<\"image\", typeof imagePropSchema, false>;\n  }>\n) => {\n  // Wrapper element to set the image alignment, contains both image/image\n  // upload dashboard and caption.\n  const wrapper = document.createElement(\"div\");\n  wrapper.className = styles.wrapper;\n  wrapper.style.alignItems = textAlignmentToAlignItems(\n    block.props.textAlignment\n  );\n\n  // Button element that acts as a placeholder for images with no src.\n  const addImageButton = document.createElement(\"div\");\n  addImageButton.className = styles.addImageButton;\n  addImageButton.style.display = block.props.url === \"\" ? \"\" : \"none\";\n\n  // Icon for the add image button.\n  const addImageButtonIcon = document.createElement(\"div\");\n  addImageButtonIcon.className = styles.addImageButtonIcon;\n\n  // Text for the add image button.\n  const addImageButtonText = document.createElement(\"p\");\n  addImageButtonText.className = styles.addImageButtonText;\n  addImageButtonText.innerText = \"Add Image\";\n\n  // Wrapper element for the image, resize handles and caption.\n  const imageAndCaptionWrapper = document.createElement(\"div\");\n  imageAndCaptionWrapper.className = styles.imageAndCaptionWrapper;\n  imageAndCaptionWrapper.style.display = block.props.url !== \"\" ? \"\" : \"none\";\n\n  // Wrapper element for the image and resize handles.\n  const imageWrapper = document.createElement(\"div\");\n  imageWrapper.className = styles.imageWrapper;\n  imageWrapper.style.display = block.props.url !== \"\" ? \"\" : \"none\";\n\n  // Image element.\n  const image = document.createElement(\"img\");\n  image.className = styles.image;\n  image.src = block.props.url;\n  image.alt = \"placeholder\";\n  image.contentEditable = \"false\";\n  image.draggable = false;\n  image.style.width = `${Math.min(\n    block.props.width,\n    editor.domElement.firstElementChild!.clientWidth\n  )}px`;\n\n  // Resize handle elements.\n  const leftResizeHandle = document.createElement(\"div\");\n  leftResizeHandle.className = styles.resizeHandle;\n  leftResizeHandle.style.left = \"4px\";\n  const rightResizeHandle = document.createElement(\"div\");\n  rightResizeHandle.className = styles.resizeHandle;\n  rightResizeHandle.style.right = \"4px\";\n\n  // Caption element.\n  const caption = document.createElement(\"p\");\n  caption.className = styles.caption;\n  caption.innerText = block.props.caption;\n  caption.style.padding = block.props.caption ? \"4px\" : \"\";\n\n  // Adds a light blue outline to selected image blocks.\n  const handleEditorUpdate = () => {\n    const selection = editor.getSelection()?.blocks || [];\n    const currentBlock = editor.getTextCursorPosition().block;\n\n    const isSelected =\n      [currentBlock, ...selection].find(\n        (selectedBlock) => selectedBlock.id === block.id\n      ) !== undefined;\n\n    if (isSelected) {\n      addImageButton.style.outline = \"4px solid rgb(100, 160, 255)\";\n      imageAndCaptionWrapper.style.outline = \"4px solid rgb(100, 160, 255)\";\n    } else {\n      addImageButton.style.outline = \"\";\n      imageAndCaptionWrapper.style.outline = \"\";\n    }\n  };\n  editor.onEditorContentChange(handleEditorUpdate);\n  editor.onEditorSelectionChange(handleEditorUpdate);\n\n  // Temporary parameters set when the user begins resizing the image, used to\n  // calculate the new width of the image.\n  let resizeParams:\n    | {\n        handleUsed: \"left\" | \"right\";\n        initialWidth: number;\n        initialClientX: number;\n      }\n    | undefined;\n\n  // Updates the image width with an updated width depending on the cursor X\n  // offset from when the resize began, and which resize handle is being used.\n  const windowMouseMoveHandler = (event: MouseEvent) => {\n    if (!resizeParams) {\n      return;\n    }\n\n    let newWidth: number;\n\n    if (textAlignmentToAlignItems(block.props.textAlignment) === \"center\") {\n      if (resizeParams.handleUsed === \"left\") {\n        newWidth =\n          resizeParams.initialWidth +\n          (resizeParams.initialClientX - event.clientX) * 2;\n      } else {\n        newWidth =\n          resizeParams.initialWidth +\n          (event.clientX - resizeParams.initialClientX) * 2;\n      }\n    } else {\n      if (resizeParams.handleUsed === \"left\") {\n        newWidth =\n          resizeParams.initialWidth +\n          resizeParams.initialClientX -\n          event.clientX;\n      } else {\n        newWidth =\n          resizeParams.initialWidth +\n          event.clientX -\n          resizeParams.initialClientX;\n      }\n    }\n\n    // Ensures the image is not wider than the editor and not smaller than a\n    // predetermined minimum width.\n    if (newWidth < minWidth) {\n      image.style.width = `${minWidth}px`;\n    } else if (newWidth > editor.domElement.firstElementChild!.clientWidth) {\n      image.style.width = `${\n        editor.domElement.firstElementChild!.clientWidth\n      }px`;\n    } else {\n      image.style.width = `${newWidth}px`;\n    }\n  };\n  // Stops mouse movements from resizing the image and updates the block's\n  // `width` prop to the new value.\n  const windowMouseUpHandler = (event: MouseEvent) => {\n    if (!resizeParams) {\n      return;\n    }\n\n    // Hides the drag handles if the cursor is no longer over the image.\n    if (\n      (!event.target || !imageWrapper.contains(event.target as Node)) &&\n      imageWrapper.contains(leftResizeHandle) &&\n      imageWrapper.contains(rightResizeHandle)\n    ) {\n      leftResizeHandle.style.display = \"none\";\n      rightResizeHandle.style.display = \"none\";\n    }\n\n    resizeParams = undefined;\n\n    editor.updateBlock(block, {\n      type: \"image\",\n      props: {\n        // Removes \"px\" from the end of the width string and converts to float.\n        width: parseFloat(image.style.width.slice(0, -2)),\n      },\n    });\n  };\n\n  // Prevents focus from moving to the button.\n  const addImageButtonMouseDownHandler = (event: MouseEvent) => {\n    event.preventDefault();\n  };\n  // Opens the image toolbar.\n  const addImageButtonClickHandler = () => {\n    editor._tiptapEditor.view.dispatch(\n      editor._tiptapEditor.state.tr.setMeta(imageToolbarPluginKey, {\n        block: block,\n      })\n    );\n  };\n\n  // Shows the resize handles when hovering over the image with the cursor.\n  const imageMouseEnterHandler = () => {\n    if (editor.isEditable) {\n      leftResizeHandle.style.display = \"block\";\n      rightResizeHandle.style.display = \"block\";\n    } else {\n      leftResizeHandle.style.display = \"none\";\n      rightResizeHandle.style.display = \"none\";\n    }\n  };\n  // Hides the resize handles when the cursor leaves the image, unless the\n  // cursor moves to one of the resize handles.\n  const imageMouseLeaveHandler = (event: MouseEvent) => {\n    if (\n      event.relatedTarget === leftResizeHandle ||\n      event.relatedTarget === rightResizeHandle\n    ) {\n      return;\n    }\n\n    if (resizeParams) {\n      return;\n    }\n\n    leftResizeHandle.style.display = \"none\";\n    rightResizeHandle.style.display = \"none\";\n  };\n\n  // Sets the resize params, allowing the user to begin resizing the image by\n  // moving the cursor left or right.\n  const leftResizeHandleMouseDownHandler = (event: MouseEvent) => {\n    event.preventDefault();\n\n    leftResizeHandle.style.display = \"block\";\n    rightResizeHandle.style.display = \"block\";\n\n    resizeParams = {\n      handleUsed: \"left\",\n      initialWidth: block.props.width,\n      initialClientX: event.clientX,\n    };\n  };\n  const rightResizeHandleMouseDownHandler = (event: MouseEvent) => {\n    event.preventDefault();\n\n    leftResizeHandle.style.display = \"block\";\n    rightResizeHandle.style.display = \"block\";\n\n    resizeParams = {\n      handleUsed: \"right\",\n      initialWidth: block.props.width,\n      initialClientX: event.clientX,\n    };\n  };\n\n  wrapper.appendChild(addImageButton);\n  addImageButton.appendChild(addImageButtonIcon);\n  addImageButton.appendChild(addImageButtonText);\n  wrapper.appendChild(imageAndCaptionWrapper);\n  imageAndCaptionWrapper.appendChild(imageWrapper);\n  imageWrapper.appendChild(image);\n  imageWrapper.appendChild(leftResizeHandle);\n  imageWrapper.appendChild(rightResizeHandle);\n  imageAndCaptionWrapper.appendChild(caption);\n\n  window.addEventListener(\"mousemove\", windowMouseMoveHandler);\n  window.addEventListener(\"mouseup\", windowMouseUpHandler);\n  addImageButton.addEventListener(\"mousedown\", addImageButtonMouseDownHandler);\n  addImageButton.addEventListener(\"click\", addImageButtonClickHandler);\n  image.addEventListener(\"mouseenter\", imageMouseEnterHandler);\n  image.addEventListener(\"mouseleave\", imageMouseLeaveHandler);\n  leftResizeHandle.addEventListener(\n    \"mousedown\",\n    leftResizeHandleMouseDownHandler\n  );\n  rightResizeHandle.addEventListener(\n    \"mousedown\",\n    rightResizeHandleMouseDownHandler\n  );\n\n  return {\n    dom: wrapper,\n    destroy: () => {\n      window.removeEventListener(\"mousemove\", windowMouseMoveHandler);\n      window.removeEventListener(\"mouseup\", windowMouseUpHandler);\n      addImageButton.removeEventListener(\n        \"mousedown\",\n        addImageButtonMouseDownHandler\n      );\n      addImageButton.removeEventListener(\"click\", addImageButtonClickHandler);\n      leftResizeHandle.removeEventListener(\n        \"mousedown\",\n        leftResizeHandleMouseDownHandler\n      );\n      rightResizeHandle.removeEventListener(\n        \"mousedown\",\n        rightResizeHandleMouseDownHandler\n      );\n    },\n  };\n};\n\nexport const Image = createBlockSpec({\n  type: \"image\",\n  propSchema: imagePropSchema,\n  containsInlineContent: false,\n  render: renderImage,\n});\n","// src/index.ts\nimport { Plugin as Plugin2 } from \"prosemirror-state\";\n\n// src/cellselection.ts\nimport { Fragment, Slice } from \"prosemirror-model\";\nimport {\n  NodeSelection as NodeSelection2,\n  Selection,\n  SelectionRange,\n  TextSelection\n} from \"prosemirror-state\";\nimport { Decoration, DecorationSet } from \"prosemirror-view\";\n\n// src/tablemap.ts\nvar readFromCache;\nvar addToCache;\nif (typeof WeakMap != \"undefined\") {\n  let cache = /* @__PURE__ */ new WeakMap();\n  readFromCache = (key) => cache.get(key);\n  addToCache = (key, value) => {\n    cache.set(key, value);\n    return value;\n  };\n} else {\n  const cache = [];\n  const cacheSize = 10;\n  let cachePos = 0;\n  readFromCache = (key) => {\n    for (let i = 0; i < cache.length; i += 2)\n      if (cache[i] == key)\n        return cache[i + 1];\n  };\n  addToCache = (key, value) => {\n    if (cachePos == cacheSize)\n      cachePos = 0;\n    cache[cachePos++] = key;\n    return cache[cachePos++] = value;\n  };\n}\nvar TableMap = class {\n  constructor(width, height, map, problems) {\n    this.width = width;\n    this.height = height;\n    this.map = map;\n    this.problems = problems;\n  }\n  // Find the dimensions of the cell at the given position.\n  findCell(pos) {\n    for (let i = 0; i < this.map.length; i++) {\n      const curPos = this.map[i];\n      if (curPos != pos)\n        continue;\n      const left = i % this.width;\n      const top = i / this.width | 0;\n      let right = left + 1;\n      let bottom = top + 1;\n      for (let j = 1; right < this.width && this.map[i + j] == curPos; j++) {\n        right++;\n      }\n      for (let j = 1; bottom < this.height && this.map[i + this.width * j] == curPos; j++) {\n        bottom++;\n      }\n      return { left, top, right, bottom };\n    }\n    throw new RangeError(`No cell with offset ${pos} found`);\n  }\n  // Find the left side of the cell at the given position.\n  colCount(pos) {\n    for (let i = 0; i < this.map.length; i++) {\n      if (this.map[i] == pos) {\n        return i % this.width;\n      }\n    }\n    throw new RangeError(`No cell with offset ${pos} found`);\n  }\n  // Find the next cell in the given direction, starting from the cell\n  // at `pos`, if any.\n  nextCell(pos, axis, dir) {\n    const { left, right, top, bottom } = this.findCell(pos);\n    if (axis == \"horiz\") {\n      if (dir < 0 ? left == 0 : right == this.width)\n        return null;\n      return this.map[top * this.width + (dir < 0 ? left - 1 : right)];\n    } else {\n      if (dir < 0 ? top == 0 : bottom == this.height)\n        return null;\n      return this.map[left + this.width * (dir < 0 ? top - 1 : bottom)];\n    }\n  }\n  // Get the rectangle spanning the two given cells.\n  rectBetween(a, b) {\n    const {\n      left: leftA,\n      right: rightA,\n      top: topA,\n      bottom: bottomA\n    } = this.findCell(a);\n    const {\n      left: leftB,\n      right: rightB,\n      top: topB,\n      bottom: bottomB\n    } = this.findCell(b);\n    return {\n      left: Math.min(leftA, leftB),\n      top: Math.min(topA, topB),\n      right: Math.max(rightA, rightB),\n      bottom: Math.max(bottomA, bottomB)\n    };\n  }\n  // Return the position of all cells that have the top left corner in\n  // the given rectangle.\n  cellsInRect(rect) {\n    const result = [];\n    const seen = {};\n    for (let row = rect.top; row < rect.bottom; row++) {\n      for (let col = rect.left; col < rect.right; col++) {\n        const index = row * this.width + col;\n        const pos = this.map[index];\n        if (seen[pos])\n          continue;\n        seen[pos] = true;\n        if (col == rect.left && col && this.map[index - 1] == pos || row == rect.top && row && this.map[index - this.width] == pos) {\n          continue;\n        }\n        result.push(pos);\n      }\n    }\n    return result;\n  }\n  // Return the position at which the cell at the given row and column\n  // starts, or would start, if a cell started there.\n  positionAt(row, col, table) {\n    for (let i = 0, rowStart = 0; ; i++) {\n      const rowEnd = rowStart + table.child(i).nodeSize;\n      if (i == row) {\n        let index = col + row * this.width;\n        const rowEndIndex = (row + 1) * this.width;\n        while (index < rowEndIndex && this.map[index] < rowStart)\n          index++;\n        return index == rowEndIndex ? rowEnd - 1 : this.map[index];\n      }\n      rowStart = rowEnd;\n    }\n  }\n  // Find the table map for the given table node.\n  static get(table) {\n    return readFromCache(table) || addToCache(table, computeMap(table));\n  }\n};\nfunction computeMap(table) {\n  if (table.type.spec.tableRole != \"table\")\n    throw new RangeError(\"Not a table node: \" + table.type.name);\n  const width = findWidth(table), height = table.childCount;\n  const map = [];\n  let mapPos = 0;\n  let problems = null;\n  const colWidths = [];\n  for (let i = 0, e = width * height; i < e; i++)\n    map[i] = 0;\n  for (let row = 0, pos = 0; row < height; row++) {\n    const rowNode = table.child(row);\n    pos++;\n    for (let i = 0; ; i++) {\n      while (mapPos < map.length && map[mapPos] != 0)\n        mapPos++;\n      if (i == rowNode.childCount)\n        break;\n      const cellNode = rowNode.child(i);\n      const { colspan, rowspan, colwidth } = cellNode.attrs;\n      for (let h = 0; h < rowspan; h++) {\n        if (h + row >= height) {\n          (problems || (problems = [])).push({\n            type: \"overlong_rowspan\",\n            pos,\n            n: rowspan - h\n          });\n          break;\n        }\n        const start = mapPos + h * width;\n        for (let w = 0; w < colspan; w++) {\n          if (map[start + w] == 0)\n            map[start + w] = pos;\n          else\n            (problems || (problems = [])).push({\n              type: \"collision\",\n              row,\n              pos,\n              n: colspan - w\n            });\n          const colW = colwidth && colwidth[w];\n          if (colW) {\n            const widthIndex = (start + w) % width * 2, prev = colWidths[widthIndex];\n            if (prev == null || prev != colW && colWidths[widthIndex + 1] == 1) {\n              colWidths[widthIndex] = colW;\n              colWidths[widthIndex + 1] = 1;\n            } else if (prev == colW) {\n              colWidths[widthIndex + 1]++;\n            }\n          }\n        }\n      }\n      mapPos += colspan;\n      pos += cellNode.nodeSize;\n    }\n    const expectedPos = (row + 1) * width;\n    let missing = 0;\n    while (mapPos < expectedPos)\n      if (map[mapPos++] == 0)\n        missing++;\n    if (missing)\n      (problems || (problems = [])).push({ type: \"missing\", row, n: missing });\n    pos++;\n  }\n  const tableMap = new TableMap(width, height, map, problems);\n  let badWidths = false;\n  for (let i = 0; !badWidths && i < colWidths.length; i += 2)\n    if (colWidths[i] != null && colWidths[i + 1] < height)\n      badWidths = true;\n  if (badWidths)\n    findBadColWidths(tableMap, colWidths, table);\n  return tableMap;\n}\nfunction findWidth(table) {\n  let width = -1;\n  let hasRowSpan = false;\n  for (let row = 0; row < table.childCount; row++) {\n    const rowNode = table.child(row);\n    let rowWidth = 0;\n    if (hasRowSpan)\n      for (let j = 0; j < row; j++) {\n        const prevRow = table.child(j);\n        for (let i = 0; i < prevRow.childCount; i++) {\n          const cell = prevRow.child(i);\n          if (j + cell.attrs.rowspan > row)\n            rowWidth += cell.attrs.colspan;\n        }\n      }\n    for (let i = 0; i < rowNode.childCount; i++) {\n      const cell = rowNode.child(i);\n      rowWidth += cell.attrs.colspan;\n      if (cell.attrs.rowspan > 1)\n        hasRowSpan = true;\n    }\n    if (width == -1)\n      width = rowWidth;\n    else if (width != rowWidth)\n      width = Math.max(width, rowWidth);\n  }\n  return width;\n}\nfunction findBadColWidths(map, colWidths, table) {\n  if (!map.problems)\n    map.problems = [];\n  const seen = {};\n  for (let i = 0; i < map.map.length; i++) {\n    const pos = map.map[i];\n    if (seen[pos])\n      continue;\n    seen[pos] = true;\n    const node = table.nodeAt(pos);\n    if (!node) {\n      throw new RangeError(`No cell with offset ${pos} found`);\n    }\n    let updated = null;\n    const attrs = node.attrs;\n    for (let j = 0; j < attrs.colspan; j++) {\n      const col = (i + j) % map.width;\n      const colWidth = colWidths[col * 2];\n      if (colWidth != null && (!attrs.colwidth || attrs.colwidth[j] != colWidth))\n        (updated || (updated = freshColWidth(attrs)))[j] = colWidth;\n    }\n    if (updated)\n      map.problems.unshift({\n        type: \"colwidth mismatch\",\n        pos,\n        colwidth: updated\n      });\n  }\n}\nfunction freshColWidth(attrs) {\n  if (attrs.colwidth)\n    return attrs.colwidth.slice();\n  const result = [];\n  for (let i = 0; i < attrs.colspan; i++)\n    result.push(0);\n  return result;\n}\n\n// src/util.ts\nimport { PluginKey } from \"prosemirror-state\";\n\n// src/schema.ts\nfunction getCellAttrs(dom, extraAttrs) {\n  if (typeof dom === \"string\") {\n    return {};\n  }\n  const widthAttr = dom.getAttribute(\"data-colwidth\");\n  const widths = widthAttr && /^\\d+(,\\d+)*$/.test(widthAttr) ? widthAttr.split(\",\").map((s) => Number(s)) : null;\n  const colspan = Number(dom.getAttribute(\"colspan\") || 1);\n  const result = {\n    colspan,\n    rowspan: Number(dom.getAttribute(\"rowspan\") || 1),\n    colwidth: widths && widths.length == colspan ? widths : null\n  };\n  for (const prop in extraAttrs) {\n    const getter = extraAttrs[prop].getFromDOM;\n    const value = getter && getter(dom);\n    if (value != null) {\n      result[prop] = value;\n    }\n  }\n  return result;\n}\nfunction setCellAttrs(node, extraAttrs) {\n  const attrs = {};\n  if (node.attrs.colspan != 1)\n    attrs.colspan = node.attrs.colspan;\n  if (node.attrs.rowspan != 1)\n    attrs.rowspan = node.attrs.rowspan;\n  if (node.attrs.colwidth)\n    attrs[\"data-colwidth\"] = node.attrs.colwidth.join(\",\");\n  for (const prop in extraAttrs) {\n    const setter = extraAttrs[prop].setDOMAttr;\n    if (setter)\n      setter(node.attrs[prop], attrs);\n  }\n  return attrs;\n}\nfunction tableNodes(options) {\n  const extraAttrs = options.cellAttributes || {};\n  const cellAttrs = {\n    colspan: { default: 1 },\n    rowspan: { default: 1 },\n    colwidth: { default: null }\n  };\n  for (const prop in extraAttrs)\n    cellAttrs[prop] = { default: extraAttrs[prop].default };\n  return {\n    table: {\n      content: \"table_row+\",\n      tableRole: \"table\",\n      isolating: true,\n      group: options.tableGroup,\n      parseDOM: [{ tag: \"table\" }],\n      toDOM() {\n        return [\"table\", [\"tbody\", 0]];\n      }\n    },\n    table_row: {\n      content: \"(table_cell | table_header)*\",\n      tableRole: \"row\",\n      parseDOM: [{ tag: \"tr\" }],\n      toDOM() {\n        return [\"tr\", 0];\n      }\n    },\n    table_cell: {\n      content: options.cellContent,\n      attrs: cellAttrs,\n      tableRole: \"cell\",\n      isolating: true,\n      parseDOM: [\n        { tag: \"td\", getAttrs: (dom) => getCellAttrs(dom, extraAttrs) }\n      ],\n      toDOM(node) {\n        return [\"td\", setCellAttrs(node, extraAttrs), 0];\n      }\n    },\n    table_header: {\n      content: options.cellContent,\n      attrs: cellAttrs,\n      tableRole: \"header_cell\",\n      isolating: true,\n      parseDOM: [\n        { tag: \"th\", getAttrs: (dom) => getCellAttrs(dom, extraAttrs) }\n      ],\n      toDOM(node) {\n        return [\"th\", setCellAttrs(node, extraAttrs), 0];\n      }\n    }\n  };\n}\nfunction tableNodeTypes(schema) {\n  let result = schema.cached.tableNodeTypes;\n  if (!result) {\n    result = schema.cached.tableNodeTypes = {};\n    for (const name in schema.nodes) {\n      const type = schema.nodes[name], role = type.spec.tableRole;\n      if (role)\n        result[role] = type;\n    }\n  }\n  return result;\n}\n\n// src/util.ts\nvar tableEditingKey = new PluginKey(\"selectingCells\");\nfunction cellAround($pos) {\n  for (let d = $pos.depth - 1; d > 0; d--)\n    if ($pos.node(d).type.spec.tableRole == \"row\")\n      return $pos.node(0).resolve($pos.before(d + 1));\n  return null;\n}\nfunction cellWrapping($pos) {\n  for (let d = $pos.depth; d > 0; d--) {\n    const role = $pos.node(d).type.spec.tableRole;\n    if (role === \"cell\" || role === \"header_cell\")\n      return $pos.node(d);\n  }\n  return null;\n}\nfunction isInTable(state) {\n  const $head = state.selection.$head;\n  for (let d = $head.depth; d > 0; d--)\n    if ($head.node(d).type.spec.tableRole == \"row\")\n      return true;\n  return false;\n}\nfunction selectionCell(state) {\n  const sel = state.selection;\n  if (\"$anchorCell\" in sel && sel.$anchorCell) {\n    return sel.$anchorCell.pos > sel.$headCell.pos ? sel.$anchorCell : sel.$headCell;\n  } else if (\"node\" in sel && sel.node && sel.node.type.spec.tableRole == \"cell\") {\n    return sel.$anchor;\n  }\n  const $cell = cellAround(sel.$head) || cellNear(sel.$head);\n  if ($cell) {\n    return $cell;\n  }\n  throw new RangeError(`No cell found around position ${sel.head}`);\n}\nfunction cellNear($pos) {\n  for (let after = $pos.nodeAfter, pos = $pos.pos; after; after = after.firstChild, pos++) {\n    const role = after.type.spec.tableRole;\n    if (role == \"cell\" || role == \"header_cell\")\n      return $pos.doc.resolve(pos);\n  }\n  for (let before = $pos.nodeBefore, pos = $pos.pos; before; before = before.lastChild, pos--) {\n    const role = before.type.spec.tableRole;\n    if (role == \"cell\" || role == \"header_cell\")\n      return $pos.doc.resolve(pos - before.nodeSize);\n  }\n}\nfunction pointsAtCell($pos) {\n  return $pos.parent.type.spec.tableRole == \"row\" && !!$pos.nodeAfter;\n}\nfunction moveCellForward($pos) {\n  return $pos.node(0).resolve($pos.pos + $pos.nodeAfter.nodeSize);\n}\nfunction inSameTable($cellA, $cellB) {\n  return $cellA.depth == $cellB.depth && $cellA.pos >= $cellB.start(-1) && $cellA.pos <= $cellB.end(-1);\n}\nfunction findCell($pos) {\n  return TableMap.get($pos.node(-1)).findCell($pos.pos - $pos.start(-1));\n}\nfunction colCount($pos) {\n  return TableMap.get($pos.node(-1)).colCount($pos.pos - $pos.start(-1));\n}\nfunction nextCell($pos, axis, dir) {\n  const table = $pos.node(-1);\n  const map = TableMap.get(table);\n  const tableStart = $pos.start(-1);\n  const moved = map.nextCell($pos.pos - tableStart, axis, dir);\n  return moved == null ? null : $pos.node(0).resolve(tableStart + moved);\n}\nfunction removeColSpan(attrs, pos, n = 1) {\n  const result = { ...attrs, colspan: attrs.colspan - n };\n  if (result.colwidth) {\n    result.colwidth = result.colwidth.slice();\n    result.colwidth.splice(pos, n);\n    if (!result.colwidth.some((w) => w > 0))\n      result.colwidth = null;\n  }\n  return result;\n}\nfunction addColSpan(attrs, pos, n = 1) {\n  const result = { ...attrs, colspan: attrs.colspan + n };\n  if (result.colwidth) {\n    result.colwidth = result.colwidth.slice();\n    for (let i = 0; i < n; i++)\n      result.colwidth.splice(pos, 0, 0);\n  }\n  return result;\n}\nfunction columnIsHeader(map, table, col) {\n  const headerCell = tableNodeTypes(table.type.schema).header_cell;\n  for (let row = 0; row < map.height; row++)\n    if (table.nodeAt(map.map[col + row * map.width]).type != headerCell)\n      return false;\n  return true;\n}\n\n// src/cellselection.ts\nvar CellSelection = class _CellSelection extends Selection {\n  // A table selection is identified by its anchor and head cells. The\n  // positions given to this constructor should point _before_ two\n  // cells in the same table. They may be the same, to select a single\n  // cell.\n  constructor($anchorCell, $headCell = $anchorCell) {\n    const table = $anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = $anchorCell.start(-1);\n    const rect = map.rectBetween(\n      $anchorCell.pos - tableStart,\n      $headCell.pos - tableStart\n    );\n    const doc = $anchorCell.node(0);\n    const cells = map.cellsInRect(rect).filter((p) => p != $headCell.pos - tableStart);\n    cells.unshift($headCell.pos - tableStart);\n    const ranges = cells.map((pos) => {\n      const cell = table.nodeAt(pos);\n      if (!cell) {\n        throw RangeError(`No cell with offset ${pos} found`);\n      }\n      const from = tableStart + pos + 1;\n      return new SelectionRange(\n        doc.resolve(from),\n        doc.resolve(from + cell.content.size)\n      );\n    });\n    super(ranges[0].$from, ranges[0].$to, ranges);\n    this.$anchorCell = $anchorCell;\n    this.$headCell = $headCell;\n  }\n  map(doc, mapping) {\n    const $anchorCell = doc.resolve(mapping.map(this.$anchorCell.pos));\n    const $headCell = doc.resolve(mapping.map(this.$headCell.pos));\n    if (pointsAtCell($anchorCell) && pointsAtCell($headCell) && inSameTable($anchorCell, $headCell)) {\n      const tableChanged = this.$anchorCell.node(-1) != $anchorCell.node(-1);\n      if (tableChanged && this.isRowSelection())\n        return _CellSelection.rowSelection($anchorCell, $headCell);\n      else if (tableChanged && this.isColSelection())\n        return _CellSelection.colSelection($anchorCell, $headCell);\n      else\n        return new _CellSelection($anchorCell, $headCell);\n    }\n    return TextSelection.between($anchorCell, $headCell);\n  }\n  // Returns a rectangular slice of table rows containing the selected\n  // cells.\n  content() {\n    const table = this.$anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = this.$anchorCell.start(-1);\n    const rect = map.rectBetween(\n      this.$anchorCell.pos - tableStart,\n      this.$headCell.pos - tableStart\n    );\n    const seen = {};\n    const rows = [];\n    for (let row = rect.top; row < rect.bottom; row++) {\n      const rowContent = [];\n      for (let index = row * map.width + rect.left, col = rect.left; col < rect.right; col++, index++) {\n        const pos = map.map[index];\n        if (seen[pos])\n          continue;\n        seen[pos] = true;\n        const cellRect = map.findCell(pos);\n        let cell = table.nodeAt(pos);\n        if (!cell) {\n          throw RangeError(`No cell with offset ${pos} found`);\n        }\n        const extraLeft = rect.left - cellRect.left;\n        const extraRight = cellRect.right - rect.right;\n        if (extraLeft > 0 || extraRight > 0) {\n          let attrs = cell.attrs;\n          if (extraLeft > 0) {\n            attrs = removeColSpan(attrs, 0, extraLeft);\n          }\n          if (extraRight > 0) {\n            attrs = removeColSpan(\n              attrs,\n              attrs.colspan - extraRight,\n              extraRight\n            );\n          }\n          if (cellRect.left < rect.left) {\n            cell = cell.type.createAndFill(attrs);\n            if (!cell) {\n              throw RangeError(\n                `Could not create cell with attrs ${JSON.stringify(attrs)}`\n              );\n            }\n          } else {\n            cell = cell.type.create(attrs, cell.content);\n          }\n        }\n        if (cellRect.top < rect.top || cellRect.bottom > rect.bottom) {\n          const attrs = {\n            ...cell.attrs,\n            rowspan: Math.min(cellRect.bottom, rect.bottom) - Math.max(cellRect.top, rect.top)\n          };\n          if (cellRect.top < rect.top) {\n            cell = cell.type.createAndFill(attrs);\n          } else {\n            cell = cell.type.create(attrs, cell.content);\n          }\n        }\n        rowContent.push(cell);\n      }\n      rows.push(table.child(row).copy(Fragment.from(rowContent)));\n    }\n    const fragment = this.isColSelection() && this.isRowSelection() ? table : rows;\n    return new Slice(Fragment.from(fragment), 1, 1);\n  }\n  replace(tr, content = Slice.empty) {\n    const mapFrom = tr.steps.length, ranges = this.ranges;\n    for (let i = 0; i < ranges.length; i++) {\n      const { $from, $to } = ranges[i], mapping = tr.mapping.slice(mapFrom);\n      tr.replace(\n        mapping.map($from.pos),\n        mapping.map($to.pos),\n        i ? Slice.empty : content\n      );\n    }\n    const sel = Selection.findFrom(\n      tr.doc.resolve(tr.mapping.slice(mapFrom).map(this.to)),\n      -1\n    );\n    if (sel)\n      tr.setSelection(sel);\n  }\n  replaceWith(tr, node) {\n    this.replace(tr, new Slice(Fragment.from(node), 0, 0));\n  }\n  forEachCell(f) {\n    const table = this.$anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = this.$anchorCell.start(-1);\n    const cells = map.cellsInRect(\n      map.rectBetween(\n        this.$anchorCell.pos - tableStart,\n        this.$headCell.pos - tableStart\n      )\n    );\n    for (let i = 0; i < cells.length; i++) {\n      f(table.nodeAt(cells[i]), tableStart + cells[i]);\n    }\n  }\n  // True if this selection goes all the way from the top to the\n  // bottom of the table.\n  isColSelection() {\n    const anchorTop = this.$anchorCell.index(-1);\n    const headTop = this.$headCell.index(-1);\n    if (Math.min(anchorTop, headTop) > 0)\n      return false;\n    const anchorBottom = anchorTop + this.$anchorCell.nodeAfter.attrs.rowspan;\n    const headBottom = headTop + this.$headCell.nodeAfter.attrs.rowspan;\n    return Math.max(anchorBottom, headBottom) == this.$headCell.node(-1).childCount;\n  }\n  // Returns the smallest column selection that covers the given anchor\n  // and head cell.\n  static colSelection($anchorCell, $headCell = $anchorCell) {\n    const table = $anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = $anchorCell.start(-1);\n    const anchorRect = map.findCell($anchorCell.pos - tableStart);\n    const headRect = map.findCell($headCell.pos - tableStart);\n    const doc = $anchorCell.node(0);\n    if (anchorRect.top <= headRect.top) {\n      if (anchorRect.top > 0)\n        $anchorCell = doc.resolve(tableStart + map.map[anchorRect.left]);\n      if (headRect.bottom < map.height)\n        $headCell = doc.resolve(\n          tableStart + map.map[map.width * (map.height - 1) + headRect.right - 1]\n        );\n    } else {\n      if (headRect.top > 0)\n        $headCell = doc.resolve(tableStart + map.map[headRect.left]);\n      if (anchorRect.bottom < map.height)\n        $anchorCell = doc.resolve(\n          tableStart + map.map[map.width * (map.height - 1) + anchorRect.right - 1]\n        );\n    }\n    return new _CellSelection($anchorCell, $headCell);\n  }\n  // True if this selection goes all the way from the left to the\n  // right of the table.\n  isRowSelection() {\n    const table = this.$anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = this.$anchorCell.start(-1);\n    const anchorLeft = map.colCount(this.$anchorCell.pos - tableStart);\n    const headLeft = map.colCount(this.$headCell.pos - tableStart);\n    if (Math.min(anchorLeft, headLeft) > 0)\n      return false;\n    const anchorRight = anchorLeft + this.$anchorCell.nodeAfter.attrs.colspan;\n    const headRight = headLeft + this.$headCell.nodeAfter.attrs.colspan;\n    return Math.max(anchorRight, headRight) == map.width;\n  }\n  eq(other) {\n    return other instanceof _CellSelection && other.$anchorCell.pos == this.$anchorCell.pos && other.$headCell.pos == this.$headCell.pos;\n  }\n  // Returns the smallest row selection that covers the given anchor\n  // and head cell.\n  static rowSelection($anchorCell, $headCell = $anchorCell) {\n    const table = $anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = $anchorCell.start(-1);\n    const anchorRect = map.findCell($anchorCell.pos - tableStart);\n    const headRect = map.findCell($headCell.pos - tableStart);\n    const doc = $anchorCell.node(0);\n    if (anchorRect.left <= headRect.left) {\n      if (anchorRect.left > 0)\n        $anchorCell = doc.resolve(\n          tableStart + map.map[anchorRect.top * map.width]\n        );\n      if (headRect.right < map.width)\n        $headCell = doc.resolve(\n          tableStart + map.map[map.width * (headRect.top + 1) - 1]\n        );\n    } else {\n      if (headRect.left > 0)\n        $headCell = doc.resolve(tableStart + map.map[headRect.top * map.width]);\n      if (anchorRect.right < map.width)\n        $anchorCell = doc.resolve(\n          tableStart + map.map[map.width * (anchorRect.top + 1) - 1]\n        );\n    }\n    return new _CellSelection($anchorCell, $headCell);\n  }\n  toJSON() {\n    return {\n      type: \"cell\",\n      anchor: this.$anchorCell.pos,\n      head: this.$headCell.pos\n    };\n  }\n  static fromJSON(doc, json) {\n    return new _CellSelection(doc.resolve(json.anchor), doc.resolve(json.head));\n  }\n  static create(doc, anchorCell, headCell = anchorCell) {\n    return new _CellSelection(doc.resolve(anchorCell), doc.resolve(headCell));\n  }\n  getBookmark() {\n    return new CellBookmark(this.$anchorCell.pos, this.$headCell.pos);\n  }\n};\nCellSelection.prototype.visible = false;\nSelection.jsonID(\"cell\", CellSelection);\nvar CellBookmark = class _CellBookmark {\n  constructor(anchor, head) {\n    this.anchor = anchor;\n    this.head = head;\n  }\n  map(mapping) {\n    return new _CellBookmark(mapping.map(this.anchor), mapping.map(this.head));\n  }\n  resolve(doc) {\n    const $anchorCell = doc.resolve(this.anchor), $headCell = doc.resolve(this.head);\n    if ($anchorCell.parent.type.spec.tableRole == \"row\" && $headCell.parent.type.spec.tableRole == \"row\" && $anchorCell.index() < $anchorCell.parent.childCount && $headCell.index() < $headCell.parent.childCount && inSameTable($anchorCell, $headCell))\n      return new CellSelection($anchorCell, $headCell);\n    else\n      return Selection.near($headCell, 1);\n  }\n};\nfunction drawCellSelection(state) {\n  if (!(state.selection instanceof CellSelection))\n    return null;\n  const cells = [];\n  state.selection.forEachCell((node, pos) => {\n    cells.push(\n      Decoration.node(pos, pos + node.nodeSize, { class: \"selectedCell\" })\n    );\n  });\n  return DecorationSet.create(state.doc, cells);\n}\nfunction isCellBoundarySelection({ $from, $to }) {\n  if ($from.pos == $to.pos || $from.pos < $from.pos - 6)\n    return false;\n  let afterFrom = $from.pos;\n  let beforeTo = $to.pos;\n  let depth = $from.depth;\n  for (; depth >= 0; depth--, afterFrom++)\n    if ($from.after(depth + 1) < $from.end(depth))\n      break;\n  for (let d = $to.depth; d >= 0; d--, beforeTo--)\n    if ($to.before(d + 1) > $to.start(d))\n      break;\n  return afterFrom == beforeTo && /row|table/.test($from.node(depth).type.spec.tableRole);\n}\nfunction isTextSelectionAcrossCells({ $from, $to }) {\n  let fromCellBoundaryNode;\n  let toCellBoundaryNode;\n  for (let i = $from.depth; i > 0; i--) {\n    const node = $from.node(i);\n    if (node.type.spec.tableRole === \"cell\" || node.type.spec.tableRole === \"header_cell\") {\n      fromCellBoundaryNode = node;\n      break;\n    }\n  }\n  for (let i = $to.depth; i > 0; i--) {\n    const node = $to.node(i);\n    if (node.type.spec.tableRole === \"cell\" || node.type.spec.tableRole === \"header_cell\") {\n      toCellBoundaryNode = node;\n      break;\n    }\n  }\n  return fromCellBoundaryNode !== toCellBoundaryNode && $to.parentOffset === 0;\n}\nfunction normalizeSelection(state, tr, allowTableNodeSelection) {\n  const sel = (tr || state).selection;\n  const doc = (tr || state).doc;\n  let normalize;\n  let role;\n  if (sel instanceof NodeSelection2 && (role = sel.node.type.spec.tableRole)) {\n    if (role == \"cell\" || role == \"header_cell\") {\n      normalize = CellSelection.create(doc, sel.from);\n    } else if (role == \"row\") {\n      const $cell = doc.resolve(sel.from + 1);\n      normalize = CellSelection.rowSelection($cell, $cell);\n    } else if (!allowTableNodeSelection) {\n      const map = TableMap.get(sel.node);\n      const start = sel.from + 1;\n      const lastCell = start + map.map[map.width * map.height - 1];\n      normalize = CellSelection.create(doc, start + 1, lastCell);\n    }\n  } else if (sel instanceof TextSelection && isCellBoundarySelection(sel)) {\n    normalize = TextSelection.create(doc, sel.from);\n  } else if (sel instanceof TextSelection && isTextSelectionAcrossCells(sel)) {\n    normalize = TextSelection.create(doc, sel.$from.start(), sel.$from.end());\n  }\n  if (normalize)\n    (tr || (tr = state.tr)).setSelection(normalize);\n  return tr;\n}\n\n// src/fixtables.ts\nimport { PluginKey as PluginKey2 } from \"prosemirror-state\";\nvar fixTablesKey = new PluginKey2(\"fix-tables\");\nfunction changedDescendants(old, cur, offset, f) {\n  const oldSize = old.childCount, curSize = cur.childCount;\n  outer:\n    for (let i = 0, j = 0; i < curSize; i++) {\n      const child = cur.child(i);\n      for (let scan = j, e = Math.min(oldSize, i + 3); scan < e; scan++) {\n        if (old.child(scan) == child) {\n          j = scan + 1;\n          offset += child.nodeSize;\n          continue outer;\n        }\n      }\n      f(child, offset);\n      if (j < oldSize && old.child(j).sameMarkup(child))\n        changedDescendants(old.child(j), child, offset + 1, f);\n      else\n        child.nodesBetween(0, child.content.size, f, offset + 1);\n      offset += child.nodeSize;\n    }\n}\nfunction fixTables(state, oldState) {\n  let tr;\n  const check = (node, pos) => {\n    if (node.type.spec.tableRole == \"table\")\n      tr = fixTable(state, node, pos, tr);\n  };\n  if (!oldState)\n    state.doc.descendants(check);\n  else if (oldState.doc != state.doc)\n    changedDescendants(oldState.doc, state.doc, 0, check);\n  return tr;\n}\nfunction fixTable(state, table, tablePos, tr) {\n  const map = TableMap.get(table);\n  if (!map.problems)\n    return tr;\n  if (!tr)\n    tr = state.tr;\n  const mustAdd = [];\n  for (let i = 0; i < map.height; i++)\n    mustAdd.push(0);\n  for (let i = 0; i < map.problems.length; i++) {\n    const prob = map.problems[i];\n    if (prob.type == \"collision\") {\n      const cell = table.nodeAt(prob.pos);\n      if (!cell)\n        continue;\n      const attrs = cell.attrs;\n      for (let j = 0; j < attrs.rowspan; j++)\n        mustAdd[prob.row + j] += prob.n;\n      tr.setNodeMarkup(\n        tr.mapping.map(tablePos + 1 + prob.pos),\n        null,\n        removeColSpan(attrs, attrs.colspan - prob.n, prob.n)\n      );\n    } else if (prob.type == \"missing\") {\n      mustAdd[prob.row] += prob.n;\n    } else if (prob.type == \"overlong_rowspan\") {\n      const cell = table.nodeAt(prob.pos);\n      if (!cell)\n        continue;\n      tr.setNodeMarkup(tr.mapping.map(tablePos + 1 + prob.pos), null, {\n        ...cell.attrs,\n        rowspan: cell.attrs.rowspan - prob.n\n      });\n    } else if (prob.type == \"colwidth mismatch\") {\n      const cell = table.nodeAt(prob.pos);\n      if (!cell)\n        continue;\n      tr.setNodeMarkup(tr.mapping.map(tablePos + 1 + prob.pos), null, {\n        ...cell.attrs,\n        colwidth: prob.colwidth\n      });\n    }\n  }\n  let first, last;\n  for (let i = 0; i < mustAdd.length; i++)\n    if (mustAdd[i]) {\n      if (first == null)\n        first = i;\n      last = i;\n    }\n  for (let i = 0, pos = tablePos + 1; i < map.height; i++) {\n    const row = table.child(i);\n    const end = pos + row.nodeSize;\n    const add = mustAdd[i];\n    if (add > 0) {\n      let role = \"cell\";\n      if (row.firstChild) {\n        role = row.firstChild.type.spec.tableRole;\n      }\n      const nodes = [];\n      for (let j = 0; j < add; j++) {\n        const node = tableNodeTypes(state.schema)[role].createAndFill();\n        if (node)\n          nodes.push(node);\n      }\n      const side = (i == 0 || first == i - 1) && last == i ? pos + 1 : end - 1;\n      tr.insert(tr.mapping.map(side), nodes);\n    }\n    pos = end;\n  }\n  return tr.setMeta(fixTablesKey, { fixTables: true });\n}\n\n// src/input.ts\nimport { Fragment as Fragment3, Slice as Slice3 } from \"prosemirror-model\";\nimport {\n  Selection as Selection2,\n  TextSelection as TextSelection2\n} from \"prosemirror-state\";\nimport { keydownHandler } from \"prosemirror-keymap\";\n\n// src/copypaste.ts\nimport { Fragment as Fragment2, Slice as Slice2 } from \"prosemirror-model\";\nimport { Transform } from \"prosemirror-transform\";\nfunction pastedCells(slice) {\n  if (!slice.size)\n    return null;\n  let { content, openStart, openEnd } = slice;\n  while (content.childCount == 1 && (openStart > 0 && openEnd > 0 || content.child(0).type.spec.tableRole == \"table\")) {\n    openStart--;\n    openEnd--;\n    content = content.child(0).content;\n  }\n  const first = content.child(0);\n  const role = first.type.spec.tableRole;\n  const schema = first.type.schema, rows = [];\n  if (role == \"row\") {\n    for (let i = 0; i < content.childCount; i++) {\n      let cells = content.child(i).content;\n      const left = i ? 0 : Math.max(0, openStart - 1);\n      const right = i < content.childCount - 1 ? 0 : Math.max(0, openEnd - 1);\n      if (left || right)\n        cells = fitSlice(\n          tableNodeTypes(schema).row,\n          new Slice2(cells, left, right)\n        ).content;\n      rows.push(cells);\n    }\n  } else if (role == \"cell\" || role == \"header_cell\") {\n    rows.push(\n      openStart || openEnd ? fitSlice(\n        tableNodeTypes(schema).row,\n        new Slice2(content, openStart, openEnd)\n      ).content : content\n    );\n  } else {\n    return null;\n  }\n  return ensureRectangular(schema, rows);\n}\nfunction ensureRectangular(schema, rows) {\n  const widths = [];\n  for (let i = 0; i < rows.length; i++) {\n    const row = rows[i];\n    for (let j = row.childCount - 1; j >= 0; j--) {\n      const { rowspan, colspan } = row.child(j).attrs;\n      for (let r = i; r < i + rowspan; r++)\n        widths[r] = (widths[r] || 0) + colspan;\n    }\n  }\n  let width = 0;\n  for (let r = 0; r < widths.length; r++)\n    width = Math.max(width, widths[r]);\n  for (let r = 0; r < widths.length; r++) {\n    if (r >= rows.length)\n      rows.push(Fragment2.empty);\n    if (widths[r] < width) {\n      const empty = tableNodeTypes(schema).cell.createAndFill();\n      const cells = [];\n      for (let i = widths[r]; i < width; i++) {\n        cells.push(empty);\n      }\n      rows[r] = rows[r].append(Fragment2.from(cells));\n    }\n  }\n  return { height: rows.length, width, rows };\n}\nfunction fitSlice(nodeType, slice) {\n  const node = nodeType.createAndFill();\n  const tr = new Transform(node).replace(0, node.content.size, slice);\n  return tr.doc;\n}\nfunction clipCells({ width, height, rows }, newWidth, newHeight) {\n  if (width != newWidth) {\n    const added = [];\n    const newRows = [];\n    for (let row = 0; row < rows.length; row++) {\n      const frag = rows[row], cells = [];\n      for (let col = added[row] || 0, i = 0; col < newWidth; i++) {\n        let cell = frag.child(i % frag.childCount);\n        if (col + cell.attrs.colspan > newWidth)\n          cell = cell.type.createChecked(\n            removeColSpan(\n              cell.attrs,\n              cell.attrs.colspan,\n              col + cell.attrs.colspan - newWidth\n            ),\n            cell.content\n          );\n        cells.push(cell);\n        col += cell.attrs.colspan;\n        for (let j = 1; j < cell.attrs.rowspan; j++)\n          added[row + j] = (added[row + j] || 0) + cell.attrs.colspan;\n      }\n      newRows.push(Fragment2.from(cells));\n    }\n    rows = newRows;\n    width = newWidth;\n  }\n  if (height != newHeight) {\n    const newRows = [];\n    for (let row = 0, i = 0; row < newHeight; row++, i++) {\n      const cells = [], source = rows[i % height];\n      for (let j = 0; j < source.childCount; j++) {\n        let cell = source.child(j);\n        if (row + cell.attrs.rowspan > newHeight)\n          cell = cell.type.create(\n            {\n              ...cell.attrs,\n              rowspan: Math.max(1, newHeight - cell.attrs.rowspan)\n            },\n            cell.content\n          );\n        cells.push(cell);\n      }\n      newRows.push(Fragment2.from(cells));\n    }\n    rows = newRows;\n    height = newHeight;\n  }\n  return { width, height, rows };\n}\nfunction growTable(tr, map, table, start, width, height, mapFrom) {\n  const schema = tr.doc.type.schema;\n  const types = tableNodeTypes(schema);\n  let empty;\n  let emptyHead;\n  if (width > map.width) {\n    for (let row = 0, rowEnd = 0; row < map.height; row++) {\n      const rowNode = table.child(row);\n      rowEnd += rowNode.nodeSize;\n      const cells = [];\n      let add;\n      if (rowNode.lastChild == null || rowNode.lastChild.type == types.cell)\n        add = empty || (empty = types.cell.createAndFill());\n      else\n        add = emptyHead || (emptyHead = types.header_cell.createAndFill());\n      for (let i = map.width; i < width; i++)\n        cells.push(add);\n      tr.insert(tr.mapping.slice(mapFrom).map(rowEnd - 1 + start), cells);\n    }\n  }\n  if (height > map.height) {\n    const cells = [];\n    for (let i = 0, start2 = (map.height - 1) * map.width; i < Math.max(map.width, width); i++) {\n      const header = i >= map.width ? false : table.nodeAt(map.map[start2 + i]).type == types.header_cell;\n      cells.push(\n        header ? emptyHead || (emptyHead = types.header_cell.createAndFill()) : empty || (empty = types.cell.createAndFill())\n      );\n    }\n    const emptyRow = types.row.create(null, Fragment2.from(cells)), rows = [];\n    for (let i = map.height; i < height; i++)\n      rows.push(emptyRow);\n    tr.insert(tr.mapping.slice(mapFrom).map(start + table.nodeSize - 2), rows);\n  }\n  return !!(empty || emptyHead);\n}\nfunction isolateHorizontal(tr, map, table, start, left, right, top, mapFrom) {\n  if (top == 0 || top == map.height)\n    return false;\n  let found = false;\n  for (let col = left; col < right; col++) {\n    const index = top * map.width + col, pos = map.map[index];\n    if (map.map[index - map.width] == pos) {\n      found = true;\n      const cell = table.nodeAt(pos);\n      const { top: cellTop, left: cellLeft } = map.findCell(pos);\n      tr.setNodeMarkup(tr.mapping.slice(mapFrom).map(pos + start), null, {\n        ...cell.attrs,\n        rowspan: top - cellTop\n      });\n      tr.insert(\n        tr.mapping.slice(mapFrom).map(map.positionAt(top, cellLeft, table)),\n        cell.type.createAndFill({\n          ...cell.attrs,\n          rowspan: cellTop + cell.attrs.rowspan - top\n        })\n      );\n      col += cell.attrs.colspan - 1;\n    }\n  }\n  return found;\n}\nfunction isolateVertical(tr, map, table, start, top, bottom, left, mapFrom) {\n  if (left == 0 || left == map.width)\n    return false;\n  let found = false;\n  for (let row = top; row < bottom; row++) {\n    const index = row * map.width + left, pos = map.map[index];\n    if (map.map[index - 1] == pos) {\n      found = true;\n      const cell = table.nodeAt(pos);\n      const cellLeft = map.colCount(pos);\n      const updatePos = tr.mapping.slice(mapFrom).map(pos + start);\n      tr.setNodeMarkup(\n        updatePos,\n        null,\n        removeColSpan(\n          cell.attrs,\n          left - cellLeft,\n          cell.attrs.colspan - (left - cellLeft)\n        )\n      );\n      tr.insert(\n        updatePos + cell.nodeSize,\n        cell.type.createAndFill(\n          removeColSpan(cell.attrs, 0, left - cellLeft)\n        )\n      );\n      row += cell.attrs.rowspan - 1;\n    }\n  }\n  return found;\n}\nfunction insertCells(state, dispatch, tableStart, rect, cells) {\n  let table = tableStart ? state.doc.nodeAt(tableStart - 1) : state.doc;\n  if (!table) {\n    throw new Error(\"No table found\");\n  }\n  let map = TableMap.get(table);\n  const { top, left } = rect;\n  const right = left + cells.width, bottom = top + cells.height;\n  const tr = state.tr;\n  let mapFrom = 0;\n  function recomp() {\n    table = tableStart ? tr.doc.nodeAt(tableStart - 1) : tr.doc;\n    if (!table) {\n      throw new Error(\"No table found\");\n    }\n    map = TableMap.get(table);\n    mapFrom = tr.mapping.maps.length;\n  }\n  if (growTable(tr, map, table, tableStart, right, bottom, mapFrom))\n    recomp();\n  if (isolateHorizontal(tr, map, table, tableStart, left, right, top, mapFrom))\n    recomp();\n  if (isolateHorizontal(tr, map, table, tableStart, left, right, bottom, mapFrom))\n    recomp();\n  if (isolateVertical(tr, map, table, tableStart, top, bottom, left, mapFrom))\n    recomp();\n  if (isolateVertical(tr, map, table, tableStart, top, bottom, right, mapFrom))\n    recomp();\n  for (let row = top; row < bottom; row++) {\n    const from = map.positionAt(row, left, table), to = map.positionAt(row, right, table);\n    tr.replace(\n      tr.mapping.slice(mapFrom).map(from + tableStart),\n      tr.mapping.slice(mapFrom).map(to + tableStart),\n      new Slice2(cells.rows[row - top], 0, 0)\n    );\n  }\n  recomp();\n  tr.setSelection(\n    new CellSelection(\n      tr.doc.resolve(tableStart + map.positionAt(top, left, table)),\n      tr.doc.resolve(tableStart + map.positionAt(bottom - 1, right - 1, table))\n    )\n  );\n  dispatch(tr);\n}\n\n// src/input.ts\nvar handleKeyDown = keydownHandler({\n  ArrowLeft: arrow(\"horiz\", -1),\n  ArrowRight: arrow(\"horiz\", 1),\n  ArrowUp: arrow(\"vert\", -1),\n  ArrowDown: arrow(\"vert\", 1),\n  \"Shift-ArrowLeft\": shiftArrow(\"horiz\", -1),\n  \"Shift-ArrowRight\": shiftArrow(\"horiz\", 1),\n  \"Shift-ArrowUp\": shiftArrow(\"vert\", -1),\n  \"Shift-ArrowDown\": shiftArrow(\"vert\", 1),\n  Backspace: deleteCellSelection,\n  \"Mod-Backspace\": deleteCellSelection,\n  Delete: deleteCellSelection,\n  \"Mod-Delete\": deleteCellSelection\n});\nfunction maybeSetSelection(state, dispatch, selection) {\n  if (selection.eq(state.selection))\n    return false;\n  if (dispatch)\n    dispatch(state.tr.setSelection(selection).scrollIntoView());\n  return true;\n}\nfunction arrow(axis, dir) {\n  return (state, dispatch, view) => {\n    if (!view)\n      return false;\n    const sel = state.selection;\n    if (sel instanceof CellSelection) {\n      return maybeSetSelection(\n        state,\n        dispatch,\n        Selection2.near(sel.$headCell, dir)\n      );\n    }\n    if (axis != \"horiz\" && !sel.empty)\n      return false;\n    const end = atEndOfCell(view, axis, dir);\n    if (end == null)\n      return false;\n    if (axis == \"horiz\") {\n      return maybeSetSelection(\n        state,\n        dispatch,\n        Selection2.near(state.doc.resolve(sel.head + dir), dir)\n      );\n    } else {\n      const $cell = state.doc.resolve(end);\n      const $next = nextCell($cell, axis, dir);\n      let newSel;\n      if ($next)\n        newSel = Selection2.near($next, 1);\n      else if (dir < 0)\n        newSel = Selection2.near(state.doc.resolve($cell.before(-1)), -1);\n      else\n        newSel = Selection2.near(state.doc.resolve($cell.after(-1)), 1);\n      return maybeSetSelection(state, dispatch, newSel);\n    }\n  };\n}\nfunction shiftArrow(axis, dir) {\n  return (state, dispatch, view) => {\n    if (!view)\n      return false;\n    const sel = state.selection;\n    let cellSel;\n    if (sel instanceof CellSelection) {\n      cellSel = sel;\n    } else {\n      const end = atEndOfCell(view, axis, dir);\n      if (end == null)\n        return false;\n      cellSel = new CellSelection(state.doc.resolve(end));\n    }\n    const $head = nextCell(cellSel.$headCell, axis, dir);\n    if (!$head)\n      return false;\n    return maybeSetSelection(\n      state,\n      dispatch,\n      new CellSelection(cellSel.$anchorCell, $head)\n    );\n  };\n}\nfunction deleteCellSelection(state, dispatch) {\n  const sel = state.selection;\n  if (!(sel instanceof CellSelection))\n    return false;\n  if (dispatch) {\n    const tr = state.tr;\n    const baseContent = tableNodeTypes(state.schema).cell.createAndFill().content;\n    sel.forEachCell((cell, pos) => {\n      if (!cell.content.eq(baseContent))\n        tr.replace(\n          tr.mapping.map(pos + 1),\n          tr.mapping.map(pos + cell.nodeSize - 1),\n          new Slice3(baseContent, 0, 0)\n        );\n    });\n    if (tr.docChanged)\n      dispatch(tr);\n  }\n  return true;\n}\nfunction handleTripleClick(view, pos) {\n  const doc = view.state.doc, $cell = cellAround(doc.resolve(pos));\n  if (!$cell)\n    return false;\n  view.dispatch(view.state.tr.setSelection(new CellSelection($cell)));\n  return true;\n}\nfunction handlePaste(view, _, slice) {\n  if (!isInTable(view.state))\n    return false;\n  let cells = pastedCells(slice);\n  const sel = view.state.selection;\n  if (sel instanceof CellSelection) {\n    if (!cells)\n      cells = {\n        width: 1,\n        height: 1,\n        rows: [\n          Fragment3.from(\n            fitSlice(tableNodeTypes(view.state.schema).cell, slice)\n          )\n        ]\n      };\n    const table = sel.$anchorCell.node(-1);\n    const start = sel.$anchorCell.start(-1);\n    const rect = TableMap.get(table).rectBetween(\n      sel.$anchorCell.pos - start,\n      sel.$headCell.pos - start\n    );\n    cells = clipCells(cells, rect.right - rect.left, rect.bottom - rect.top);\n    insertCells(view.state, view.dispatch, start, rect, cells);\n    return true;\n  } else if (cells) {\n    const $cell = selectionCell(view.state);\n    const start = $cell.start(-1);\n    insertCells(\n      view.state,\n      view.dispatch,\n      start,\n      TableMap.get($cell.node(-1)).findCell($cell.pos - start),\n      cells\n    );\n    return true;\n  } else {\n    return false;\n  }\n}\nfunction handleMouseDown(view, startEvent) {\n  var _a;\n  if (startEvent.ctrlKey || startEvent.metaKey)\n    return;\n  const startDOMCell = domInCell(view, startEvent.target);\n  let $anchor;\n  if (startEvent.shiftKey && view.state.selection instanceof CellSelection) {\n    setCellSelection(view.state.selection.$anchorCell, startEvent);\n    startEvent.preventDefault();\n  } else if (startEvent.shiftKey && startDOMCell && ($anchor = cellAround(view.state.selection.$anchor)) != null && ((_a = cellUnderMouse(view, startEvent)) == null ? void 0 : _a.pos) != $anchor.pos) {\n    setCellSelection($anchor, startEvent);\n    startEvent.preventDefault();\n  } else if (!startDOMCell) {\n    return;\n  }\n  function setCellSelection($anchor2, event) {\n    let $head = cellUnderMouse(view, event);\n    const starting = tableEditingKey.getState(view.state) == null;\n    if (!$head || !inSameTable($anchor2, $head)) {\n      if (starting)\n        $head = $anchor2;\n      else\n        return;\n    }\n    const selection = new CellSelection($anchor2, $head);\n    if (starting || !view.state.selection.eq(selection)) {\n      const tr = view.state.tr.setSelection(selection);\n      if (starting)\n        tr.setMeta(tableEditingKey, $anchor2.pos);\n      view.dispatch(tr);\n    }\n  }\n  function stop() {\n    view.root.removeEventListener(\"mouseup\", stop);\n    view.root.removeEventListener(\"dragstart\", stop);\n    view.root.removeEventListener(\"mousemove\", move);\n    if (tableEditingKey.getState(view.state) != null)\n      view.dispatch(view.state.tr.setMeta(tableEditingKey, -1));\n  }\n  function move(_event) {\n    const event = _event;\n    const anchor = tableEditingKey.getState(view.state);\n    let $anchor2;\n    if (anchor != null) {\n      $anchor2 = view.state.doc.resolve(anchor);\n    } else if (domInCell(view, event.target) != startDOMCell) {\n      $anchor2 = cellUnderMouse(view, startEvent);\n      if (!$anchor2)\n        return stop();\n    }\n    if ($anchor2)\n      setCellSelection($anchor2, event);\n  }\n  view.root.addEventListener(\"mouseup\", stop);\n  view.root.addEventListener(\"dragstart\", stop);\n  view.root.addEventListener(\"mousemove\", move);\n}\nfunction atEndOfCell(view, axis, dir) {\n  if (!(view.state.selection instanceof TextSelection2))\n    return null;\n  const { $head } = view.state.selection;\n  for (let d = $head.depth - 1; d >= 0; d--) {\n    const parent = $head.node(d), index = dir < 0 ? $head.index(d) : $head.indexAfter(d);\n    if (index != (dir < 0 ? 0 : parent.childCount))\n      return null;\n    if (parent.type.spec.tableRole == \"cell\" || parent.type.spec.tableRole == \"header_cell\") {\n      const cellPos = $head.before(d);\n      const dirStr = axis == \"vert\" ? dir > 0 ? \"down\" : \"up\" : dir > 0 ? \"right\" : \"left\";\n      return view.endOfTextblock(dirStr) ? cellPos : null;\n    }\n  }\n  return null;\n}\nfunction domInCell(view, dom) {\n  for (; dom && dom != view.dom; dom = dom.parentNode) {\n    if (dom.nodeName == \"TD\" || dom.nodeName == \"TH\") {\n      return dom;\n    }\n  }\n  return null;\n}\nfunction cellUnderMouse(view, event) {\n  const mousePos = view.posAtCoords({\n    left: event.clientX,\n    top: event.clientY\n  });\n  if (!mousePos)\n    return null;\n  return mousePos ? cellAround(view.state.doc.resolve(mousePos.pos)) : null;\n}\n\n// src/columnresizing.ts\nimport { Plugin, PluginKey as PluginKey3 } from \"prosemirror-state\";\nimport {\n  Decoration as Decoration2,\n  DecorationSet as DecorationSet2\n} from \"prosemirror-view\";\n\n// src/tableview.ts\nvar TableView = class {\n  constructor(node, cellMinWidth) {\n    this.node = node;\n    this.cellMinWidth = cellMinWidth;\n    this.dom = document.createElement(\"div\");\n    this.dom.className = \"tableWrapper\";\n    this.table = this.dom.appendChild(document.createElement(\"table\"));\n    this.colgroup = this.table.appendChild(document.createElement(\"colgroup\"));\n    updateColumnsOnResize(node, this.colgroup, this.table, cellMinWidth);\n    this.contentDOM = this.table.appendChild(document.createElement(\"tbody\"));\n  }\n  update(node) {\n    if (node.type != this.node.type)\n      return false;\n    this.node = node;\n    updateColumnsOnResize(node, this.colgroup, this.table, this.cellMinWidth);\n    return true;\n  }\n  ignoreMutation(record) {\n    return record.type == \"attributes\" && (record.target == this.table || this.colgroup.contains(record.target));\n  }\n};\nfunction updateColumnsOnResize(node, colgroup, table, cellMinWidth, overrideCol, overrideValue) {\n  var _a;\n  let totalWidth = 0;\n  let fixedWidth = true;\n  let nextDOM = colgroup.firstChild;\n  const row = node.firstChild;\n  if (!row)\n    return;\n  for (let i = 0, col = 0; i < row.childCount; i++) {\n    const { colspan, colwidth } = row.child(i).attrs;\n    for (let j = 0; j < colspan; j++, col++) {\n      const hasWidth = overrideCol == col ? overrideValue : colwidth && colwidth[j];\n      const cssWidth = hasWidth ? hasWidth + \"px\" : \"\";\n      totalWidth += hasWidth || cellMinWidth;\n      if (!hasWidth)\n        fixedWidth = false;\n      if (!nextDOM) {\n        colgroup.appendChild(document.createElement(\"col\")).style.width = cssWidth;\n      } else {\n        if (nextDOM.style.width != cssWidth)\n          nextDOM.style.width = cssWidth;\n        nextDOM = nextDOM.nextSibling;\n      }\n    }\n  }\n  while (nextDOM) {\n    const after = nextDOM.nextSibling;\n    (_a = nextDOM.parentNode) == null ? void 0 : _a.removeChild(nextDOM);\n    nextDOM = after;\n  }\n  if (fixedWidth) {\n    table.style.width = totalWidth + \"px\";\n    table.style.minWidth = \"\";\n  } else {\n    table.style.width = \"\";\n    table.style.minWidth = totalWidth + \"px\";\n  }\n}\n\n// src/columnresizing.ts\nvar columnResizingPluginKey = new PluginKey3(\n  \"tableColumnResizing\"\n);\nfunction columnResizing({\n  handleWidth = 5,\n  cellMinWidth = 25,\n  View = TableView,\n  lastColumnResizable = true\n} = {}) {\n  const plugin = new Plugin({\n    key: columnResizingPluginKey,\n    state: {\n      init(_, state) {\n        plugin.spec.props.nodeViews[tableNodeTypes(state.schema).table.name] = (node, view) => new View(node, cellMinWidth, view);\n        return new ResizeState(-1, false);\n      },\n      apply(tr, prev) {\n        return prev.apply(tr);\n      }\n    },\n    props: {\n      attributes: (state) => {\n        const pluginState = columnResizingPluginKey.getState(state);\n        return pluginState && pluginState.activeHandle > -1 ? { class: \"resize-cursor\" } : {};\n      },\n      handleDOMEvents: {\n        mousemove: (view, event) => {\n          handleMouseMove(\n            view,\n            event,\n            handleWidth,\n            cellMinWidth,\n            lastColumnResizable\n          );\n        },\n        mouseleave: (view) => {\n          handleMouseLeave(view);\n        },\n        mousedown: (view, event) => {\n          handleMouseDown2(view, event, cellMinWidth);\n        }\n      },\n      decorations: (state) => {\n        const pluginState = columnResizingPluginKey.getState(state);\n        if (pluginState && pluginState.activeHandle > -1) {\n          return handleDecorations(state, pluginState.activeHandle);\n        }\n      },\n      nodeViews: {}\n    }\n  });\n  return plugin;\n}\nvar ResizeState = class _ResizeState {\n  constructor(activeHandle, dragging) {\n    this.activeHandle = activeHandle;\n    this.dragging = dragging;\n  }\n  apply(tr) {\n    const state = this;\n    const action = tr.getMeta(columnResizingPluginKey);\n    if (action && action.setHandle != null)\n      return new _ResizeState(action.setHandle, false);\n    if (action && action.setDragging !== void 0)\n      return new _ResizeState(state.activeHandle, action.setDragging);\n    if (state.activeHandle > -1 && tr.docChanged) {\n      let handle = tr.mapping.map(state.activeHandle, -1);\n      if (!pointsAtCell(tr.doc.resolve(handle))) {\n        handle = -1;\n      }\n      return new _ResizeState(handle, state.dragging);\n    }\n    return state;\n  }\n};\nfunction handleMouseMove(view, event, handleWidth, cellMinWidth, lastColumnResizable) {\n  const pluginState = columnResizingPluginKey.getState(view.state);\n  if (!pluginState)\n    return;\n  if (!pluginState.dragging) {\n    const target = domCellAround(event.target);\n    let cell = -1;\n    if (target) {\n      const { left, right } = target.getBoundingClientRect();\n      if (event.clientX - left <= handleWidth)\n        cell = edgeCell(view, event, \"left\", handleWidth);\n      else if (right - event.clientX <= handleWidth)\n        cell = edgeCell(view, event, \"right\", handleWidth);\n    }\n    if (cell != pluginState.activeHandle) {\n      if (!lastColumnResizable && cell !== -1) {\n        const $cell = view.state.doc.resolve(cell);\n        const table = $cell.node(-1);\n        const map = TableMap.get(table);\n        const tableStart = $cell.start(-1);\n        const col = map.colCount($cell.pos - tableStart) + $cell.nodeAfter.attrs.colspan - 1;\n        if (col == map.width - 1) {\n          return;\n        }\n      }\n      updateHandle(view, cell);\n    }\n  }\n}\nfunction handleMouseLeave(view) {\n  const pluginState = columnResizingPluginKey.getState(view.state);\n  if (pluginState && pluginState.activeHandle > -1 && !pluginState.dragging)\n    updateHandle(view, -1);\n}\nfunction handleMouseDown2(view, event, cellMinWidth) {\n  const pluginState = columnResizingPluginKey.getState(view.state);\n  if (!pluginState || pluginState.activeHandle == -1 || pluginState.dragging)\n    return false;\n  const cell = view.state.doc.nodeAt(pluginState.activeHandle);\n  const width = currentColWidth(view, pluginState.activeHandle, cell.attrs);\n  view.dispatch(\n    view.state.tr.setMeta(columnResizingPluginKey, {\n      setDragging: { startX: event.clientX, startWidth: width }\n    })\n  );\n  function finish(event2) {\n    window.removeEventListener(\"mouseup\", finish);\n    window.removeEventListener(\"mousemove\", move);\n    const pluginState2 = columnResizingPluginKey.getState(view.state);\n    if (pluginState2 == null ? void 0 : pluginState2.dragging) {\n      updateColumnWidth(\n        view,\n        pluginState2.activeHandle,\n        draggedWidth(pluginState2.dragging, event2, cellMinWidth)\n      );\n      view.dispatch(\n        view.state.tr.setMeta(columnResizingPluginKey, { setDragging: null })\n      );\n    }\n  }\n  function move(event2) {\n    if (!event2.which)\n      return finish(event2);\n    const pluginState2 = columnResizingPluginKey.getState(view.state);\n    if (!pluginState2)\n      return;\n    if (pluginState2.dragging) {\n      const dragged = draggedWidth(pluginState2.dragging, event2, cellMinWidth);\n      displayColumnWidth(view, pluginState2.activeHandle, dragged, cellMinWidth);\n    }\n  }\n  window.addEventListener(\"mouseup\", finish);\n  window.addEventListener(\"mousemove\", move);\n  event.preventDefault();\n  return true;\n}\nfunction currentColWidth(view, cellPos, { colspan, colwidth }) {\n  const width = colwidth && colwidth[colwidth.length - 1];\n  if (width)\n    return width;\n  const dom = view.domAtPos(cellPos);\n  const node = dom.node.childNodes[dom.offset];\n  let domWidth = node.offsetWidth, parts = colspan;\n  if (colwidth) {\n    for (let i = 0; i < colspan; i++)\n      if (colwidth[i]) {\n        domWidth -= colwidth[i];\n        parts--;\n      }\n  }\n  return domWidth / parts;\n}\nfunction domCellAround(target) {\n  while (target && target.nodeName != \"TD\" && target.nodeName != \"TH\")\n    target = target.classList && target.classList.contains(\"ProseMirror\") ? null : target.parentNode;\n  return target;\n}\nfunction edgeCell(view, event, side, handleWidth) {\n  const offset = side == \"right\" ? -handleWidth : handleWidth;\n  const found = view.posAtCoords({\n    left: event.clientX + offset,\n    top: event.clientY\n  });\n  if (!found)\n    return -1;\n  const { pos } = found;\n  const $cell = cellAround(view.state.doc.resolve(pos));\n  if (!$cell)\n    return -1;\n  if (side == \"right\")\n    return $cell.pos;\n  const map = TableMap.get($cell.node(-1)), start = $cell.start(-1);\n  const index = map.map.indexOf($cell.pos - start);\n  return index % map.width == 0 ? -1 : start + map.map[index - 1];\n}\nfunction draggedWidth(dragging, event, cellMinWidth) {\n  const offset = event.clientX - dragging.startX;\n  return Math.max(cellMinWidth, dragging.startWidth + offset);\n}\nfunction updateHandle(view, value) {\n  view.dispatch(\n    view.state.tr.setMeta(columnResizingPluginKey, { setHandle: value })\n  );\n}\nfunction updateColumnWidth(view, cell, width) {\n  const $cell = view.state.doc.resolve(cell);\n  const table = $cell.node(-1), map = TableMap.get(table), start = $cell.start(-1);\n  const col = map.colCount($cell.pos - start) + $cell.nodeAfter.attrs.colspan - 1;\n  const tr = view.state.tr;\n  for (let row = 0; row < map.height; row++) {\n    const mapIndex = row * map.width + col;\n    if (row && map.map[mapIndex] == map.map[mapIndex - map.width])\n      continue;\n    const pos = map.map[mapIndex];\n    const attrs = table.nodeAt(pos).attrs;\n    const index = attrs.colspan == 1 ? 0 : col - map.colCount(pos);\n    if (attrs.colwidth && attrs.colwidth[index] == width)\n      continue;\n    const colwidth = attrs.colwidth ? attrs.colwidth.slice() : zeroes(attrs.colspan);\n    colwidth[index] = width;\n    tr.setNodeMarkup(start + pos, null, { ...attrs, colwidth });\n  }\n  if (tr.docChanged)\n    view.dispatch(tr);\n}\nfunction displayColumnWidth(view, cell, width, cellMinWidth) {\n  const $cell = view.state.doc.resolve(cell);\n  const table = $cell.node(-1), start = $cell.start(-1);\n  const col = TableMap.get(table).colCount($cell.pos - start) + $cell.nodeAfter.attrs.colspan - 1;\n  let dom = view.domAtPos($cell.start(-1)).node;\n  while (dom && dom.nodeName != \"TABLE\") {\n    dom = dom.parentNode;\n  }\n  if (!dom)\n    return;\n  updateColumnsOnResize(\n    table,\n    dom.firstChild,\n    dom,\n    cellMinWidth,\n    col,\n    width\n  );\n}\nfunction zeroes(n) {\n  return Array(n).fill(0);\n}\nfunction handleDecorations(state, cell) {\n  const decorations = [];\n  const $cell = state.doc.resolve(cell);\n  const table = $cell.node(-1);\n  if (!table) {\n    return DecorationSet2.empty;\n  }\n  const map = TableMap.get(table);\n  const start = $cell.start(-1);\n  const col = map.colCount($cell.pos - start) + $cell.nodeAfter.attrs.colspan;\n  for (let row = 0; row < map.height; row++) {\n    const index = col + row * map.width - 1;\n    if ((col == map.width || map.map[index] != map.map[index + 1]) && (row == 0 || map.map[index] != map.map[index - map.width])) {\n      const cellPos = map.map[index];\n      const pos = start + cellPos + table.nodeAt(cellPos).nodeSize - 1;\n      const dom = document.createElement(\"div\");\n      dom.className = \"column-resize-handle\";\n      decorations.push(Decoration2.widget(pos, dom));\n    }\n  }\n  return DecorationSet2.create(state.doc, decorations);\n}\n\n// src/commands.ts\nimport { Fragment as Fragment4 } from \"prosemirror-model\";\nimport {\n  TextSelection as TextSelection3\n} from \"prosemirror-state\";\nfunction selectedRect(state) {\n  const sel = state.selection;\n  const $pos = selectionCell(state);\n  const table = $pos.node(-1);\n  const tableStart = $pos.start(-1);\n  const map = TableMap.get(table);\n  const rect = sel instanceof CellSelection ? map.rectBetween(\n    sel.$anchorCell.pos - tableStart,\n    sel.$headCell.pos - tableStart\n  ) : map.findCell($pos.pos - tableStart);\n  return { ...rect, tableStart, map, table };\n}\nfunction addColumn(tr, { map, tableStart, table }, col) {\n  let refColumn = col > 0 ? -1 : 0;\n  if (columnIsHeader(map, table, col + refColumn)) {\n    refColumn = col == 0 || col == map.width ? null : 0;\n  }\n  for (let row = 0; row < map.height; row++) {\n    const index = row * map.width + col;\n    if (col > 0 && col < map.width && map.map[index - 1] == map.map[index]) {\n      const pos = map.map[index];\n      const cell = table.nodeAt(pos);\n      tr.setNodeMarkup(\n        tr.mapping.map(tableStart + pos),\n        null,\n        addColSpan(cell.attrs, col - map.colCount(pos))\n      );\n      row += cell.attrs.rowspan - 1;\n    } else {\n      const type = refColumn == null ? tableNodeTypes(table.type.schema).cell : table.nodeAt(map.map[index + refColumn]).type;\n      const pos = map.positionAt(row, col, table);\n      tr.insert(tr.mapping.map(tableStart + pos), type.createAndFill());\n    }\n  }\n  return tr;\n}\nfunction addColumnBefore(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    dispatch(addColumn(state.tr, rect, rect.left));\n  }\n  return true;\n}\nfunction addColumnAfter(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    dispatch(addColumn(state.tr, rect, rect.right));\n  }\n  return true;\n}\nfunction removeColumn(tr, { map, table, tableStart }, col) {\n  const mapStart = tr.mapping.maps.length;\n  for (let row = 0; row < map.height; ) {\n    const index = row * map.width + col;\n    const pos = map.map[index];\n    const cell = table.nodeAt(pos);\n    const attrs = cell.attrs;\n    if (col > 0 && map.map[index - 1] == pos || col < map.width - 1 && map.map[index + 1] == pos) {\n      tr.setNodeMarkup(\n        tr.mapping.slice(mapStart).map(tableStart + pos),\n        null,\n        removeColSpan(attrs, col - map.colCount(pos))\n      );\n    } else {\n      const start = tr.mapping.slice(mapStart).map(tableStart + pos);\n      tr.delete(start, start + cell.nodeSize);\n    }\n    row += attrs.rowspan;\n  }\n}\nfunction deleteColumn(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    const tr = state.tr;\n    if (rect.left == 0 && rect.right == rect.map.width)\n      return false;\n    for (let i = rect.right - 1; ; i--) {\n      removeColumn(tr, rect, i);\n      if (i == rect.left)\n        break;\n      const table = rect.tableStart ? tr.doc.nodeAt(rect.tableStart - 1) : tr.doc;\n      if (!table) {\n        throw RangeError(\"No table found\");\n      }\n      rect.table = table;\n      rect.map = TableMap.get(table);\n    }\n    dispatch(tr);\n  }\n  return true;\n}\nfunction rowIsHeader(map, table, row) {\n  var _a;\n  const headerCell = tableNodeTypes(table.type.schema).header_cell;\n  for (let col = 0; col < map.width; col++)\n    if (((_a = table.nodeAt(map.map[col + row * map.width])) == null ? void 0 : _a.type) != headerCell)\n      return false;\n  return true;\n}\nfunction addRow(tr, { map, tableStart, table }, row) {\n  var _a;\n  let rowPos = tableStart;\n  for (let i = 0; i < row; i++)\n    rowPos += table.child(i).nodeSize;\n  const cells = [];\n  let refRow = row > 0 ? -1 : 0;\n  if (rowIsHeader(map, table, row + refRow))\n    refRow = row == 0 || row == map.height ? null : 0;\n  for (let col = 0, index = map.width * row; col < map.width; col++, index++) {\n    if (row > 0 && row < map.height && map.map[index] == map.map[index - map.width]) {\n      const pos = map.map[index];\n      const attrs = table.nodeAt(pos).attrs;\n      tr.setNodeMarkup(tableStart + pos, null, {\n        ...attrs,\n        rowspan: attrs.rowspan + 1\n      });\n      col += attrs.colspan - 1;\n    } else {\n      const type = refRow == null ? tableNodeTypes(table.type.schema).cell : (_a = table.nodeAt(map.map[index + refRow * map.width])) == null ? void 0 : _a.type;\n      const node = type == null ? void 0 : type.createAndFill();\n      if (node)\n        cells.push(node);\n    }\n  }\n  tr.insert(rowPos, tableNodeTypes(table.type.schema).row.create(null, cells));\n  return tr;\n}\nfunction addRowBefore(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    dispatch(addRow(state.tr, rect, rect.top));\n  }\n  return true;\n}\nfunction addRowAfter(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    dispatch(addRow(state.tr, rect, rect.bottom));\n  }\n  return true;\n}\nfunction removeRow(tr, { map, table, tableStart }, row) {\n  let rowPos = 0;\n  for (let i = 0; i < row; i++)\n    rowPos += table.child(i).nodeSize;\n  const nextRow = rowPos + table.child(row).nodeSize;\n  const mapFrom = tr.mapping.maps.length;\n  tr.delete(rowPos + tableStart, nextRow + tableStart);\n  const seen = /* @__PURE__ */ new Set();\n  for (let col = 0, index = row * map.width; col < map.width; col++, index++) {\n    const pos = map.map[index];\n    if (seen.has(pos))\n      continue;\n    seen.add(pos);\n    if (row > 0 && pos == map.map[index - map.width]) {\n      const attrs = table.nodeAt(pos).attrs;\n      tr.setNodeMarkup(tr.mapping.slice(mapFrom).map(pos + tableStart), null, {\n        ...attrs,\n        rowspan: attrs.rowspan - 1\n      });\n      col += attrs.colspan - 1;\n    } else if (row < map.height && pos == map.map[index + map.width]) {\n      const cell = table.nodeAt(pos);\n      const attrs = cell.attrs;\n      const copy = cell.type.create(\n        { ...attrs, rowspan: cell.attrs.rowspan - 1 },\n        cell.content\n      );\n      const newPos = map.positionAt(row + 1, col, table);\n      tr.insert(tr.mapping.slice(mapFrom).map(tableStart + newPos), copy);\n      col += attrs.colspan - 1;\n    }\n  }\n}\nfunction deleteRow(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state), tr = state.tr;\n    if (rect.top == 0 && rect.bottom == rect.map.height)\n      return false;\n    for (let i = rect.bottom - 1; ; i--) {\n      removeRow(tr, rect, i);\n      if (i == rect.top)\n        break;\n      const table = rect.tableStart ? tr.doc.nodeAt(rect.tableStart - 1) : tr.doc;\n      if (!table) {\n        throw RangeError(\"No table found\");\n      }\n      rect.table = table;\n      rect.map = TableMap.get(rect.table);\n    }\n    dispatch(tr);\n  }\n  return true;\n}\nfunction isEmpty(cell) {\n  const c = cell.content;\n  return c.childCount == 1 && c.child(0).isTextblock && c.child(0).childCount == 0;\n}\nfunction cellsOverlapRectangle({ width, height, map }, rect) {\n  let indexTop = rect.top * width + rect.left, indexLeft = indexTop;\n  let indexBottom = (rect.bottom - 1) * width + rect.left, indexRight = indexTop + (rect.right - rect.left - 1);\n  for (let i = rect.top; i < rect.bottom; i++) {\n    if (rect.left > 0 && map[indexLeft] == map[indexLeft - 1] || rect.right < width && map[indexRight] == map[indexRight + 1])\n      return true;\n    indexLeft += width;\n    indexRight += width;\n  }\n  for (let i = rect.left; i < rect.right; i++) {\n    if (rect.top > 0 && map[indexTop] == map[indexTop - width] || rect.bottom < height && map[indexBottom] == map[indexBottom + width])\n      return true;\n    indexTop++;\n    indexBottom++;\n  }\n  return false;\n}\nfunction mergeCells(state, dispatch) {\n  const sel = state.selection;\n  if (!(sel instanceof CellSelection) || sel.$anchorCell.pos == sel.$headCell.pos)\n    return false;\n  const rect = selectedRect(state), { map } = rect;\n  if (cellsOverlapRectangle(map, rect))\n    return false;\n  if (dispatch) {\n    const tr = state.tr;\n    const seen = {};\n    let content = Fragment4.empty;\n    let mergedPos;\n    let mergedCell;\n    for (let row = rect.top; row < rect.bottom; row++) {\n      for (let col = rect.left; col < rect.right; col++) {\n        const cellPos = map.map[row * map.width + col];\n        const cell = rect.table.nodeAt(cellPos);\n        if (seen[cellPos] || !cell)\n          continue;\n        seen[cellPos] = true;\n        if (mergedPos == null) {\n          mergedPos = cellPos;\n          mergedCell = cell;\n        } else {\n          if (!isEmpty(cell))\n            content = content.append(cell.content);\n          const mapped = tr.mapping.map(cellPos + rect.tableStart);\n          tr.delete(mapped, mapped + cell.nodeSize);\n        }\n      }\n    }\n    if (mergedPos == null || mergedCell == null) {\n      return true;\n    }\n    tr.setNodeMarkup(mergedPos + rect.tableStart, null, {\n      ...addColSpan(\n        mergedCell.attrs,\n        mergedCell.attrs.colspan,\n        rect.right - rect.left - mergedCell.attrs.colspan\n      ),\n      rowspan: rect.bottom - rect.top\n    });\n    if (content.size) {\n      const end = mergedPos + 1 + mergedCell.content.size;\n      const start = isEmpty(mergedCell) ? mergedPos + 1 : end;\n      tr.replaceWith(start + rect.tableStart, end + rect.tableStart, content);\n    }\n    tr.setSelection(\n      new CellSelection(tr.doc.resolve(mergedPos + rect.tableStart))\n    );\n    dispatch(tr);\n  }\n  return true;\n}\nfunction splitCell(state, dispatch) {\n  const nodeTypes = tableNodeTypes(state.schema);\n  return splitCellWithType(({ node }) => {\n    return nodeTypes[node.type.spec.tableRole];\n  })(state, dispatch);\n}\nfunction splitCellWithType(getCellType) {\n  return (state, dispatch) => {\n    var _a;\n    const sel = state.selection;\n    let cellNode;\n    let cellPos;\n    if (!(sel instanceof CellSelection)) {\n      cellNode = cellWrapping(sel.$from);\n      if (!cellNode)\n        return false;\n      cellPos = (_a = cellAround(sel.$from)) == null ? void 0 : _a.pos;\n    } else {\n      if (sel.$anchorCell.pos != sel.$headCell.pos)\n        return false;\n      cellNode = sel.$anchorCell.nodeAfter;\n      cellPos = sel.$anchorCell.pos;\n    }\n    if (cellNode == null || cellPos == null) {\n      return false;\n    }\n    if (cellNode.attrs.colspan == 1 && cellNode.attrs.rowspan == 1) {\n      return false;\n    }\n    if (dispatch) {\n      let baseAttrs = cellNode.attrs;\n      const attrs = [];\n      const colwidth = baseAttrs.colwidth;\n      if (baseAttrs.rowspan > 1)\n        baseAttrs = { ...baseAttrs, rowspan: 1 };\n      if (baseAttrs.colspan > 1)\n        baseAttrs = { ...baseAttrs, colspan: 1 };\n      const rect = selectedRect(state), tr = state.tr;\n      for (let i = 0; i < rect.right - rect.left; i++)\n        attrs.push(\n          colwidth ? {\n            ...baseAttrs,\n            colwidth: colwidth && colwidth[i] ? [colwidth[i]] : null\n          } : baseAttrs\n        );\n      let lastCell;\n      for (let row = rect.top; row < rect.bottom; row++) {\n        let pos = rect.map.positionAt(row, rect.left, rect.table);\n        if (row == rect.top)\n          pos += cellNode.nodeSize;\n        for (let col = rect.left, i = 0; col < rect.right; col++, i++) {\n          if (col == rect.left && row == rect.top)\n            continue;\n          tr.insert(\n            lastCell = tr.mapping.map(pos + rect.tableStart, 1),\n            getCellType({ node: cellNode, row, col }).createAndFill(attrs[i])\n          );\n        }\n      }\n      tr.setNodeMarkup(\n        cellPos,\n        getCellType({ node: cellNode, row: rect.top, col: rect.left }),\n        attrs[0]\n      );\n      if (sel instanceof CellSelection)\n        tr.setSelection(\n          new CellSelection(\n            tr.doc.resolve(sel.$anchorCell.pos),\n            lastCell ? tr.doc.resolve(lastCell) : void 0\n          )\n        );\n      dispatch(tr);\n    }\n    return true;\n  };\n}\nfunction setCellAttr(name, value) {\n  return function(state, dispatch) {\n    if (!isInTable(state))\n      return false;\n    const $cell = selectionCell(state);\n    if ($cell.nodeAfter.attrs[name] === value)\n      return false;\n    if (dispatch) {\n      const tr = state.tr;\n      if (state.selection instanceof CellSelection)\n        state.selection.forEachCell((node, pos) => {\n          if (node.attrs[name] !== value)\n            tr.setNodeMarkup(pos, null, {\n              ...node.attrs,\n              [name]: value\n            });\n        });\n      else\n        tr.setNodeMarkup($cell.pos, null, {\n          ...$cell.nodeAfter.attrs,\n          [name]: value\n        });\n      dispatch(tr);\n    }\n    return true;\n  };\n}\nfunction deprecated_toggleHeader(type) {\n  return function(state, dispatch) {\n    if (!isInTable(state))\n      return false;\n    if (dispatch) {\n      const types = tableNodeTypes(state.schema);\n      const rect = selectedRect(state), tr = state.tr;\n      const cells = rect.map.cellsInRect(\n        type == \"column\" ? {\n          left: rect.left,\n          top: 0,\n          right: rect.right,\n          bottom: rect.map.height\n        } : type == \"row\" ? {\n          left: 0,\n          top: rect.top,\n          right: rect.map.width,\n          bottom: rect.bottom\n        } : rect\n      );\n      const nodes = cells.map((pos) => rect.table.nodeAt(pos));\n      for (let i = 0; i < cells.length; i++)\n        if (nodes[i].type == types.header_cell)\n          tr.setNodeMarkup(\n            rect.tableStart + cells[i],\n            types.cell,\n            nodes[i].attrs\n          );\n      if (tr.steps.length == 0)\n        for (let i = 0; i < cells.length; i++)\n          tr.setNodeMarkup(\n            rect.tableStart + cells[i],\n            types.header_cell,\n            nodes[i].attrs\n          );\n      dispatch(tr);\n    }\n    return true;\n  };\n}\nfunction isHeaderEnabledByType(type, rect, types) {\n  const cellPositions = rect.map.cellsInRect({\n    left: 0,\n    top: 0,\n    right: type == \"row\" ? rect.map.width : 1,\n    bottom: type == \"column\" ? rect.map.height : 1\n  });\n  for (let i = 0; i < cellPositions.length; i++) {\n    const cell = rect.table.nodeAt(cellPositions[i]);\n    if (cell && cell.type !== types.header_cell) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction toggleHeader(type, options) {\n  options = options || { useDeprecatedLogic: false };\n  if (options.useDeprecatedLogic)\n    return deprecated_toggleHeader(type);\n  return function(state, dispatch) {\n    if (!isInTable(state))\n      return false;\n    if (dispatch) {\n      const types = tableNodeTypes(state.schema);\n      const rect = selectedRect(state), tr = state.tr;\n      const isHeaderRowEnabled = isHeaderEnabledByType(\"row\", rect, types);\n      const isHeaderColumnEnabled = isHeaderEnabledByType(\n        \"column\",\n        rect,\n        types\n      );\n      const isHeaderEnabled = type === \"column\" ? isHeaderRowEnabled : type === \"row\" ? isHeaderColumnEnabled : false;\n      const selectionStartsAt = isHeaderEnabled ? 1 : 0;\n      const cellsRect = type == \"column\" ? {\n        left: 0,\n        top: selectionStartsAt,\n        right: 1,\n        bottom: rect.map.height\n      } : type == \"row\" ? {\n        left: selectionStartsAt,\n        top: 0,\n        right: rect.map.width,\n        bottom: 1\n      } : rect;\n      const newType = type == \"column\" ? isHeaderColumnEnabled ? types.cell : types.header_cell : type == \"row\" ? isHeaderRowEnabled ? types.cell : types.header_cell : types.cell;\n      rect.map.cellsInRect(cellsRect).forEach((relativeCellPos) => {\n        const cellPos = relativeCellPos + rect.tableStart;\n        const cell = tr.doc.nodeAt(cellPos);\n        if (cell) {\n          tr.setNodeMarkup(cellPos, newType, cell.attrs);\n        }\n      });\n      dispatch(tr);\n    }\n    return true;\n  };\n}\nvar toggleHeaderRow = toggleHeader(\"row\", {\n  useDeprecatedLogic: true\n});\nvar toggleHeaderColumn = toggleHeader(\"column\", {\n  useDeprecatedLogic: true\n});\nvar toggleHeaderCell = toggleHeader(\"cell\", {\n  useDeprecatedLogic: true\n});\nfunction findNextCell($cell, dir) {\n  if (dir < 0) {\n    const before = $cell.nodeBefore;\n    if (before)\n      return $cell.pos - before.nodeSize;\n    for (let row = $cell.index(-1) - 1, rowEnd = $cell.before(); row >= 0; row--) {\n      const rowNode = $cell.node(-1).child(row);\n      const lastChild = rowNode.lastChild;\n      if (lastChild) {\n        return rowEnd - 1 - lastChild.nodeSize;\n      }\n      rowEnd -= rowNode.nodeSize;\n    }\n  } else {\n    if ($cell.index() < $cell.parent.childCount - 1) {\n      return $cell.pos + $cell.nodeAfter.nodeSize;\n    }\n    const table = $cell.node(-1);\n    for (let row = $cell.indexAfter(-1), rowStart = $cell.after(); row < table.childCount; row++) {\n      const rowNode = table.child(row);\n      if (rowNode.childCount)\n        return rowStart + 1;\n      rowStart += rowNode.nodeSize;\n    }\n  }\n  return null;\n}\nfunction goToNextCell(direction) {\n  return function(state, dispatch) {\n    if (!isInTable(state))\n      return false;\n    const cell = findNextCell(selectionCell(state), direction);\n    if (cell == null)\n      return false;\n    if (dispatch) {\n      const $cell = state.doc.resolve(cell);\n      dispatch(\n        state.tr.setSelection(TextSelection3.between($cell, moveCellForward($cell))).scrollIntoView()\n      );\n    }\n    return true;\n  };\n}\nfunction deleteTable(state, dispatch) {\n  const $pos = state.selection.$anchor;\n  for (let d = $pos.depth; d > 0; d--) {\n    const node = $pos.node(d);\n    if (node.type.spec.tableRole == \"table\") {\n      if (dispatch)\n        dispatch(\n          state.tr.delete($pos.before(d), $pos.after(d)).scrollIntoView()\n        );\n      return true;\n    }\n  }\n  return false;\n}\n\n// src/index.ts\nfunction tableEditing({\n  allowTableNodeSelection = false\n} = {}) {\n  return new Plugin2({\n    key: tableEditingKey,\n    // This piece of state is used to remember when a mouse-drag\n    // cell-selection is happening, so that it can continue even as\n    // transactions (which might move its anchor cell) come in.\n    state: {\n      init() {\n        return null;\n      },\n      apply(tr, cur) {\n        const set = tr.getMeta(tableEditingKey);\n        if (set != null)\n          return set == -1 ? null : set;\n        if (cur == null || !tr.docChanged)\n          return cur;\n        const { deleted, pos } = tr.mapping.mapResult(cur);\n        return deleted ? null : pos;\n      }\n    },\n    props: {\n      decorations: drawCellSelection,\n      handleDOMEvents: {\n        mousedown: handleMouseDown\n      },\n      createSelectionBetween(view) {\n        return tableEditingKey.getState(view.state) != null ? view.state.selection : null;\n      },\n      handleTripleClick,\n      handleKeyDown,\n      handlePaste\n    },\n    appendTransaction(_, oldState, state) {\n      return normalizeSelection(\n        state,\n        fixTables(state, oldState),\n        allowTableNodeSelection\n      );\n    }\n  });\n}\nexport {\n  CellBookmark,\n  CellSelection,\n  ResizeState,\n  TableMap,\n  TableView,\n  clipCells as __clipCells,\n  insertCells as __insertCells,\n  pastedCells as __pastedCells,\n  addColSpan,\n  addColumn,\n  addColumnAfter,\n  addColumnBefore,\n  addRow,\n  addRowAfter,\n  addRowBefore,\n  cellAround,\n  colCount,\n  columnIsHeader,\n  columnResizing,\n  columnResizingPluginKey,\n  deleteColumn,\n  deleteRow,\n  deleteTable,\n  findCell,\n  fixTables,\n  fixTablesKey,\n  goToNextCell,\n  handlePaste,\n  inSameTable,\n  isInTable,\n  mergeCells,\n  moveCellForward,\n  nextCell,\n  pointsAtCell,\n  removeColSpan,\n  removeColumn,\n  removeRow,\n  rowIsHeader,\n  selectedRect,\n  selectionCell,\n  setCellAttr,\n  splitCell,\n  splitCellWithType,\n  tableEditing,\n  tableEditingKey,\n  tableNodeTypes,\n  tableNodes,\n  toggleHeader,\n  toggleHeaderCell,\n  toggleHeaderColumn,\n  toggleHeaderRow,\n  updateColumnsOnResize\n};\n","import { findParentNodeClosestToPos, Node, mergeAttributes, callOrReturn, getExtensionField } from '@tiptap/core';\nimport { TextSelection } from '@tiptap/pm/state';\nimport { CellSelection, addColumnBefore, addColumnAfter, deleteColumn, addRowBefore, addRowAfter, deleteRow, deleteTable, mergeCells, splitCell, toggleHeader, toggleHeaderCell, setCellAttr, goToNextCell, fixTables, columnResizing, tableEditing } from '@tiptap/pm/tables';\n\nfunction updateColumns(node, colgroup, table, cellMinWidth, overrideCol, overrideValue) {\r\n    let totalWidth = 0;\r\n    let fixedWidth = true;\r\n    let nextDOM = colgroup.firstChild;\r\n    const row = node.firstChild;\r\n    for (let i = 0, col = 0; i < row.childCount; i += 1) {\r\n        const { colspan, colwidth } = row.child(i).attrs;\r\n        for (let j = 0; j < colspan; j += 1, col += 1) {\r\n            const hasWidth = overrideCol === col ? overrideValue : colwidth && colwidth[j];\r\n            const cssWidth = hasWidth ? `${hasWidth}px` : '';\r\n            totalWidth += hasWidth || cellMinWidth;\r\n            if (!hasWidth) {\r\n                fixedWidth = false;\r\n            }\r\n            if (!nextDOM) {\r\n                colgroup.appendChild(document.createElement('col')).style.width = cssWidth;\r\n            }\r\n            else {\r\n                if (nextDOM.style.width !== cssWidth) {\r\n                    nextDOM.style.width = cssWidth;\r\n                }\r\n                nextDOM = nextDOM.nextSibling;\r\n            }\r\n        }\r\n    }\r\n    while (nextDOM) {\r\n        const after = nextDOM.nextSibling;\r\n        nextDOM.parentNode.removeChild(nextDOM);\r\n        nextDOM = after;\r\n    }\r\n    if (fixedWidth) {\r\n        table.style.width = `${totalWidth}px`;\r\n        table.style.minWidth = '';\r\n    }\r\n    else {\r\n        table.style.width = '';\r\n        table.style.minWidth = `${totalWidth}px`;\r\n    }\r\n}\r\nclass TableView {\r\n    constructor(node, cellMinWidth) {\r\n        this.node = node;\r\n        this.cellMinWidth = cellMinWidth;\r\n        this.dom = document.createElement('div');\r\n        this.dom.className = 'tableWrapper';\r\n        this.table = this.dom.appendChild(document.createElement('table'));\r\n        this.colgroup = this.table.appendChild(document.createElement('colgroup'));\r\n        updateColumns(node, this.colgroup, this.table, cellMinWidth);\r\n        this.contentDOM = this.table.appendChild(document.createElement('tbody'));\r\n    }\r\n    update(node) {\r\n        if (node.type !== this.node.type) {\r\n            return false;\r\n        }\r\n        this.node = node;\r\n        updateColumns(node, this.colgroup, this.table, this.cellMinWidth);\r\n        return true;\r\n    }\r\n    ignoreMutation(mutation) {\r\n        return (mutation.type === 'attributes'\r\n            && (mutation.target === this.table || this.colgroup.contains(mutation.target)));\r\n    }\r\n}\n\nfunction createCell(cellType, cellContent) {\r\n    if (cellContent) {\r\n        return cellType.createChecked(null, cellContent);\r\n    }\r\n    return cellType.createAndFill();\r\n}\n\nfunction getTableNodeTypes(schema) {\r\n    if (schema.cached.tableNodeTypes) {\r\n        return schema.cached.tableNodeTypes;\r\n    }\r\n    const roles = {};\r\n    Object.keys(schema.nodes).forEach(type => {\r\n        const nodeType = schema.nodes[type];\r\n        if (nodeType.spec.tableRole) {\r\n            roles[nodeType.spec.tableRole] = nodeType;\r\n        }\r\n    });\r\n    schema.cached.tableNodeTypes = roles;\r\n    return roles;\r\n}\n\nfunction createTable(schema, rowsCount, colsCount, withHeaderRow, cellContent) {\r\n    const types = getTableNodeTypes(schema);\r\n    const headerCells = [];\r\n    const cells = [];\r\n    for (let index = 0; index < colsCount; index += 1) {\r\n        const cell = createCell(types.cell, cellContent);\r\n        if (cell) {\r\n            cells.push(cell);\r\n        }\r\n        if (withHeaderRow) {\r\n            const headerCell = createCell(types.header_cell, cellContent);\r\n            if (headerCell) {\r\n                headerCells.push(headerCell);\r\n            }\r\n        }\r\n    }\r\n    const rows = [];\r\n    for (let index = 0; index < rowsCount; index += 1) {\r\n        rows.push(types.row.createChecked(null, withHeaderRow && index === 0 ? headerCells : cells));\r\n    }\r\n    return types.table.createChecked(null, rows);\r\n}\n\nfunction isCellSelection(value) {\r\n    return value instanceof CellSelection;\r\n}\n\nconst deleteTableWhenAllCellsSelected = ({ editor }) => {\r\n    const { selection } = editor.state;\r\n    if (!isCellSelection(selection)) {\r\n        return false;\r\n    }\r\n    let cellCount = 0;\r\n    const table = findParentNodeClosestToPos(selection.ranges[0].$from, node => {\r\n        return node.type.name === 'table';\r\n    });\r\n    table === null || table === void 0 ? void 0 : table.node.descendants(node => {\r\n        if (node.type.name === 'table') {\r\n            return false;\r\n        }\r\n        if (['tableCell', 'tableHeader'].includes(node.type.name)) {\r\n            cellCount += 1;\r\n        }\r\n    });\r\n    const allCellsSelected = cellCount === selection.ranges.length;\r\n    if (!allCellsSelected) {\r\n        return false;\r\n    }\r\n    editor.commands.deleteTable();\r\n    return true;\r\n};\n\nconst Table = Node.create({\r\n    name: 'table',\r\n    // @ts-ignore\r\n    addOptions() {\r\n        return {\r\n            HTMLAttributes: {},\r\n            resizable: false,\r\n            handleWidth: 5,\r\n            cellMinWidth: 25,\r\n            // TODO: fix\r\n            View: TableView,\r\n            lastColumnResizable: true,\r\n            allowTableNodeSelection: false,\r\n        };\r\n    },\r\n    content: 'tableRow+',\r\n    tableRole: 'table',\r\n    isolating: true,\r\n    group: 'block',\r\n    parseHTML() {\r\n        return [{ tag: 'table' }];\r\n    },\r\n    renderHTML({ HTMLAttributes }) {\r\n        return ['table', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), ['tbody', 0]];\r\n    },\r\n    addCommands() {\r\n        return {\r\n            insertTable: ({ rows = 3, cols = 3, withHeaderRow = true } = {}) => ({ tr, dispatch, editor }) => {\r\n                const node = createTable(editor.schema, rows, cols, withHeaderRow);\r\n                if (dispatch) {\r\n                    const offset = tr.selection.anchor + 1;\r\n                    tr.replaceSelectionWith(node)\r\n                        .scrollIntoView()\r\n                        .setSelection(TextSelection.near(tr.doc.resolve(offset)));\r\n                }\r\n                return true;\r\n            },\r\n            addColumnBefore: () => ({ state, dispatch }) => {\r\n                return addColumnBefore(state, dispatch);\r\n            },\r\n            addColumnAfter: () => ({ state, dispatch }) => {\r\n                return addColumnAfter(state, dispatch);\r\n            },\r\n            deleteColumn: () => ({ state, dispatch }) => {\r\n                return deleteColumn(state, dispatch);\r\n            },\r\n            addRowBefore: () => ({ state, dispatch }) => {\r\n                return addRowBefore(state, dispatch);\r\n            },\r\n            addRowAfter: () => ({ state, dispatch }) => {\r\n                return addRowAfter(state, dispatch);\r\n            },\r\n            deleteRow: () => ({ state, dispatch }) => {\r\n                return deleteRow(state, dispatch);\r\n            },\r\n            deleteTable: () => ({ state, dispatch }) => {\r\n                return deleteTable(state, dispatch);\r\n            },\r\n            mergeCells: () => ({ state, dispatch }) => {\r\n                return mergeCells(state, dispatch);\r\n            },\r\n            splitCell: () => ({ state, dispatch }) => {\r\n                return splitCell(state, dispatch);\r\n            },\r\n            toggleHeaderColumn: () => ({ state, dispatch }) => {\r\n                return toggleHeader('column')(state, dispatch);\r\n            },\r\n            toggleHeaderRow: () => ({ state, dispatch }) => {\r\n                return toggleHeader('row')(state, dispatch);\r\n            },\r\n            toggleHeaderCell: () => ({ state, dispatch }) => {\r\n                return toggleHeaderCell(state, dispatch);\r\n            },\r\n            mergeOrSplit: () => ({ state, dispatch }) => {\r\n                if (mergeCells(state, dispatch)) {\r\n                    return true;\r\n                }\r\n                return splitCell(state, dispatch);\r\n            },\r\n            setCellAttribute: (name, value) => ({ state, dispatch }) => {\r\n                return setCellAttr(name, value)(state, dispatch);\r\n            },\r\n            goToNextCell: () => ({ state, dispatch }) => {\r\n                return goToNextCell(1)(state, dispatch);\r\n            },\r\n            goToPreviousCell: () => ({ state, dispatch }) => {\r\n                return goToNextCell(-1)(state, dispatch);\r\n            },\r\n            fixTables: () => ({ state, dispatch }) => {\r\n                if (dispatch) {\r\n                    fixTables(state);\r\n                }\r\n                return true;\r\n            },\r\n            setCellSelection: position => ({ tr, dispatch }) => {\r\n                if (dispatch) {\r\n                    const selection = CellSelection.create(tr.doc, position.anchorCell, position.headCell);\r\n                    // @ts-ignore\r\n                    tr.setSelection(selection);\r\n                }\r\n                return true;\r\n            },\r\n        };\r\n    },\r\n    addKeyboardShortcuts() {\r\n        return {\r\n            Tab: () => {\r\n                if (this.editor.commands.goToNextCell()) {\r\n                    return true;\r\n                }\r\n                if (!this.editor.can().addRowAfter()) {\r\n                    return false;\r\n                }\r\n                return this.editor.chain().addRowAfter().goToNextCell().run();\r\n            },\r\n            'Shift-Tab': () => this.editor.commands.goToPreviousCell(),\r\n            Backspace: deleteTableWhenAllCellsSelected,\r\n            'Mod-Backspace': deleteTableWhenAllCellsSelected,\r\n            Delete: deleteTableWhenAllCellsSelected,\r\n            'Mod-Delete': deleteTableWhenAllCellsSelected,\r\n        };\r\n    },\r\n    addProseMirrorPlugins() {\r\n        const isResizable = this.options.resizable && this.editor.isEditable;\r\n        return [\r\n            ...(isResizable\r\n                ? [\r\n                    columnResizing({\r\n                        handleWidth: this.options.handleWidth,\r\n                        cellMinWidth: this.options.cellMinWidth,\r\n                        // @ts-ignore (incorrect type)\r\n                        View: this.options.View,\r\n                        // TODO: PR for @types/prosemirror-tables\r\n                        // @ts-ignore (incorrect type)\r\n                        lastColumnResizable: this.options.lastColumnResizable,\r\n                    }),\r\n                ]\r\n                : []),\r\n            tableEditing({\r\n                allowTableNodeSelection: this.options.allowTableNodeSelection,\r\n            }),\r\n        ];\r\n    },\r\n    extendNodeSchema(extension) {\r\n        const context = {\r\n            name: extension.name,\r\n            options: extension.options,\r\n            storage: extension.storage,\r\n        };\r\n        return {\r\n            tableRole: callOrReturn(getExtensionField(extension, 'tableRole', context)),\r\n        };\r\n    },\r\n});\n\nexport { Table, createTable, Table as default };\n//# sourceMappingURL=index.js.map\n","import { propsToAttributes } from \"../../../../Blocks/api/block\";\nimport { defaultProps } from \"../../../api/defaultProps\";\nimport { Table as TableExt } from \"@tiptap/extension-table\";\n\nexport const tablePropSchema = {\n  ...defaultProps,\n  cols: { default: 3 },\n  rows: { default: 3 },\n  withHeaderRow: { default: true },\n  handleWidth: { default: 5 },\n  cellMinWidth: { default: 25 },\n  resizable: { default: false },\n  lastColumnResizable: { default: true },\n  allowTableNodeSelection: { default: false },\n};\n\nconst CustomTable = TableExt.extend({\n  addAttributes() {\n    return propsToAttributes({\n      type: \"table\",\n      propSchema: tablePropSchema,\n      containsInlineContent: false,\n    });\n  },\n});\n\nexport const Table = {\n  node: CustomTable.configure({\n    resizable: true,\n    cellMinWidth: 100,\n  }),\n  propSchema: tablePropSchema,\n};\n","import { Node, mergeAttributes } from '@tiptap/core';\n\nconst TableRow = Node.create({\r\n    name: 'tableRow',\r\n    addOptions() {\r\n        return {\r\n            HTMLAttributes: {},\r\n        };\r\n    },\r\n    content: '(tableCell | tableHeader)*',\r\n    tableRole: 'row',\r\n    parseHTML() {\r\n        return [\r\n            { tag: 'tr' },\r\n        ];\r\n    },\r\n    renderHTML({ HTMLAttributes }) {\r\n        return ['tr', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\r\n    },\r\n});\n\nexport { TableRow, TableRow as default };\n//# sourceMappingURL=index.js.map\n","import { defaultProps } from \"../../../api/defaultProps\";\nimport { TableRow as TableExt } from \"@tiptap/extension-table-row\";\n\nexport const tableRowPropSchema = {\n  ...defaultProps,\n};\n\nconst CustomTableRow = TableExt.extend({\n  addAttributes() {\n    return {\n      ...this.parent?.(),\n    };\n  },\n});\n\nexport const TableRow = {\n  node: CustomTableRow,\n  propSchema: tableRowPropSchema,\n};\n","import { Node, mergeAttributes } from '@tiptap/core';\n\nconst TableCell = Node.create({\r\n    name: 'tableCell',\r\n    addOptions() {\r\n        return {\r\n            HTMLAttributes: {},\r\n        };\r\n    },\r\n    content: 'block+',\r\n    addAttributes() {\r\n        return {\r\n            colspan: {\r\n                default: 1,\r\n            },\r\n            rowspan: {\r\n                default: 1,\r\n            },\r\n            colwidth: {\r\n                default: null,\r\n                parseHTML: element => {\r\n                    const colwidth = element.getAttribute('colwidth');\r\n                    const value = colwidth\r\n                        ? [parseInt(colwidth, 10)]\r\n                        : null;\r\n                    return value;\r\n                },\r\n            },\r\n        };\r\n    },\r\n    tableRole: 'cell',\r\n    isolating: true,\r\n    parseHTML() {\r\n        return [\r\n            { tag: 'td' },\r\n        ];\r\n    },\r\n    renderHTML({ HTMLAttributes }) {\r\n        return ['td', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\r\n    },\r\n});\n\nexport { TableCell, TableCell as default };\n//# sourceMappingURL=index.js.map\n","import { Editor } from \"@tiptap/core\";\nimport { getBlockInfoFromPos } from \"../../../helpers/getBlockInfoFromPos\";\n\nexport const handleEnter = (editor: Editor) => {\n  const { node, contentType } = getBlockInfoFromPos(\n    editor.state.doc,\n    editor.state.selection.from\n  )!;\n  const selectionEmpty =\n    editor.state.selection.anchor === editor.state.selection.head;\n\n  if (contentType.name !== \"table\" || !selectionEmpty) {\n    return false;\n  }\n\n  return editor.commands.first(({ state, chain, commands }) => [\n    () =>\n      commands.command(() => {\n        if (node.textContent.length === 0) {\n          return commands.BNUpdateBlock(state.selection.from, {\n            type: \"paragraph\",\n            props: {},\n          });\n        }\n\n        return false;\n      }),\n\n    () =>\n      commands.command(() => {\n        if (node.textContent.length > 0) {\n          chain()\n            .deleteSelection()\n            .insertContent({ type: \"paragraph\", content: [] })\n            .run();\n\n          return true;\n        }\n\n        return false;\n      }),\n  ]);\n};\n\nexport const handleBackspace = (editor: Editor) =>\n  editor.commands.first(({ commands }) => [\n    // Deletes the selection if it's not empty.\n    () => commands.deleteSelection(),\n    // Undoes an input rule if one was triggered in the last editor state change.\n    () => commands.undoInputRule(),\n    // Reverts block content type to a paragraph if the selection is at the start of the block.\n    () =>\n      commands.command(({ state }) => {\n        const { contentType } = getBlockInfoFromPos(\n          state.doc,\n          state.selection.from\n        )!;\n\n        const selectionAtBlockStart =\n          state.selection.$anchor.parentOffset === 0;\n        const isParagraph = contentType.name === \"paragraph\";\n\n        if (selectionAtBlockStart && !isParagraph) {\n          return commands.BNUpdateBlock(state.selection.from, {\n            type: \"paragraph\",\n            props: {},\n          });\n        }\n\n        return false;\n      }),\n    // Removes a level of nesting if the block is indented if the selection is at the start of the block.\n    () =>\n      commands.command(({ state }) => {\n        const selectionAtBlockStart =\n          state.selection.$anchor.parentOffset === 0;\n\n        if (selectionAtBlockStart) {\n          return commands.liftListItem(\"blockContainer\");\n        }\n\n        return false;\n      }),\n    // Merges block with the previous one if it isn't indented, isn't the first block in the doc, and the selection\n    // is at the start of the block.\n    () =>\n      commands.command(({ state }) => {\n        const { depth, startPos } = getBlockInfoFromPos(\n          state.doc,\n          state.selection.from\n        )!;\n\n        const selectionAtBlockStart =\n          state.selection.$anchor.parentOffset === 0;\n        const selectionEmpty = state.selection.anchor === state.selection.head;\n        const blockAtDocStart = startPos === 2;\n\n        const posBetweenBlocks = startPos - 1;\n\n        if (\n          !blockAtDocStart &&\n          selectionAtBlockStart &&\n          selectionEmpty &&\n          depth > 1\n        ) {\n          return commands.BNMergeBlocks(posBetweenBlocks);\n        }\n\n        return false;\n      }),\n  ]);\n","import { defaultProps } from \"../../../api/defaultProps\";\nimport { TableCell as TableExt } from \"@tiptap/extension-table-cell\";\nimport { handleBackspace, handleEnter } from \"./TableCellKeyboardShortcuts\";\n\nexport const tableCellPropSchema = {\n  ...defaultProps,\n  colwidth: { default: null },\n};\n\nconst CustomTableCell = TableExt.extend({\n  content: \"blockContainer+\",\n  addAttributes() {\n    return {\n      ...this.parent?.(),\n      backgroundColor: {\n        default: \"default\",\n        parseHTML: (element) => element.getAttribute(\"data-background-color\"),\n        renderHTML: (attributes) => {\n          return {\n            \"data-background-color\": attributes.backgroundColor,\n            style: `background-color: ${attributes.backgroundColor}`,\n          };\n        },\n      },\n      textColor: {\n        default: \"default\",\n        parseHTML: (element) => element.getAttribute(\"data-text-color\"),\n        renderHTML: (attributes) => {\n          return {\n            \"data-text-color\": attributes.textColor,\n            style: `color: ${attributes.textColor}`,\n          };\n        },\n      },\n      colwidth: {\n        default: null,\n        parseHTML: (element) => {\n          const colwidth = element.getAttribute(\"colwidth\");\n          const value = colwidth ? [parseInt(colwidth, 10)] : null;\n          return value;\n        },\n        renderHTML: (attributes) => {\n          return {\n            \"data-colwidth\": attributes.colwidth,\n          };\n        },\n      },\n    };\n  },\n  addKeyboardShortcuts() {\n    return {\n      Enter: () => handleEnter(this.editor),\n      Backspace: () => handleBackspace(this.editor),\n    };\n  },\n});\n\nexport const TableCell = {\n  node: CustomTableCell,\n  propSchema: tableCellPropSchema,\n};\n","import { Node, mergeAttributes } from '@tiptap/core';\n\nconst TableHeader = Node.create({\r\n    name: 'tableHeader',\r\n    addOptions() {\r\n        return {\r\n            HTMLAttributes: {},\r\n        };\r\n    },\r\n    content: 'block+',\r\n    addAttributes() {\r\n        return {\r\n            colspan: {\r\n                default: 1,\r\n            },\r\n            rowspan: {\r\n                default: 1,\r\n            },\r\n            colwidth: {\r\n                default: null,\r\n                parseHTML: element => {\r\n                    const colwidth = element.getAttribute('colwidth');\r\n                    const value = colwidth\r\n                        ? [parseInt(colwidth, 10)]\r\n                        : null;\r\n                    return value;\r\n                },\r\n            },\r\n        };\r\n    },\r\n    tableRole: 'header_cell',\r\n    isolating: true,\r\n    parseHTML() {\r\n        return [\r\n            { tag: 'th' },\r\n        ];\r\n    },\r\n    renderHTML({ HTMLAttributes }) {\r\n        return ['th', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\r\n    },\r\n});\n\nexport { TableHeader, TableHeader as default };\n//# sourceMappingURL=index.js.map\n","import { defaultProps } from \"../../../api/defaultProps\";\nimport { TableHeader as TableExt } from \"@tiptap/extension-table-header\";\n\nexport const tableHeaderPropSchema = {\n  ...defaultProps,\n  colwidth: { default: null },\n};\n\nconst CustomTableHeader = TableExt.extend({\n  content: \"blockContainer+\",\n  addAttributes() {\n    return {\n      ...this.parent?.(),\n      backgroundColor: {\n        default: \"default\",\n        parseHTML: (element) => element.getAttribute(\"data-background-color\"),\n        renderHTML: (attributes) => {\n          return {\n            \"data-background-color\": attributes.backgroundColor,\n            style: `background-color: ${attributes.backgroundColor}`,\n          };\n        },\n      },\n      textColor: {\n        default: \"default\",\n        parseHTML: (element) => element.getAttribute(\"data-text-color\"),\n        renderHTML: (attributes) => {\n          return {\n            \"data-text-color\": attributes.textColor,\n            style: `color: ${attributes.textColor}`,\n          };\n        },\n      },\n      colwidth: {\n        default: null,\n        parseHTML: (element) => {\n          const colwidth = element.getAttribute(\"colwidth\");\n          const value = colwidth ? [parseInt(colwidth, 10)] : null;\n          return value;\n        },\n        renderHTML: (attributes) => {\n          return {\n            \"data-colwidth\": attributes.colwidth,\n          };\n        },\n      },\n    };\n  },\n});\n\nexport const TableHeader = {\n  node: CustomTableHeader,\n  propSchema: tableHeaderPropSchema,\n};\n","import { Heading } from \"../nodes/BlockContent/HeadingBlockContent/HeadingBlockContent\";\nimport { BulletListItem } from \"../nodes/BlockContent/ListItemBlockContent/BulletListItemBlockContent/BulletListItemBlockContent\";\nimport { NumberedListItem } from \"../nodes/BlockContent/ListItemBlockContent/NumberedListItemBlockContent/NumberedListItemBlockContent\";\nimport { Paragraph } from \"../nodes/BlockContent/ParagraphBlockContent/ParagraphBlockContent\";\nimport { Image } from \"../nodes/BlockContent/ImageBlockContent/ImageBlockContent\";\nimport { BlockSchema } from \"./blockTypes\";\nimport { Table } from \"../nodes/BlockContent/TableBlockContent/TableBlockContent\";\nimport { TableRow } from \"../nodes/BlockContent/TableBlockContent/TableRowBlockContent\";\nimport { TableCell } from \"../nodes/BlockContent/TableBlockContent/TableCellBlockContent\";\nimport { TableHeader } from \"../nodes/BlockContent/TableBlockContent/TableHeaderBlockContent\";\n\nexport const defaultBlockSchema = {\n  paragraph: Paragraph,\n  heading: Heading,\n  bulletListItem: BulletListItem,\n  numberedListItem: NumberedListItem,\n  image: Image,\n  table: Table as any,\n  tableRow: TableRow as any,\n  tableHeader: TableHeader as any,\n  tableCell: TableCell as any,\n} as const satisfies BlockSchema;\n\nexport type DefaultBlockSchema = typeof defaultBlockSchema;\n","import { isNodeSelection, posToDOMRect } from \"@tiptap/core\";\nimport { EditorState, Plugin, PluginKey } from \"prosemirror-state\";\nimport { EditorView } from \"prosemirror-view\";\nimport {\n  BaseUiElementCallbacks,\n  BaseUiElementState,\n  BlockNoteEditor,\n  BlockSchema,\n} from \"../..\";\nimport { EventEmitter } from \"../../shared/EventEmitter\";\n\nexport type FormattingToolbarCallbacks = BaseUiElementCallbacks;\n\nexport type FormattingToolbarState = BaseUiElementState;\n\nexport class FormattingToolbarView<BSchema extends BlockSchema> {\n  private formattingToolbarState?: FormattingToolbarState;\n  public updateFormattingToolbar: () => void;\n\n  public preventHide = false;\n  public preventShow = false;\n  public prevWasEditable: boolean | null = null;\n\n  public shouldShow: (props: {\n    view: EditorView;\n    state: EditorState;\n    from: number;\n    to: number;\n  }) => boolean = ({ state }) => {\n    return !state.selection.empty && !isNodeSelection(state.selection);\n  };\n\n  constructor(\n    private readonly editor: BlockNoteEditor<BSchema>,\n    private readonly pmView: EditorView,\n    updateFormattingToolbar: (\n      formattingToolbarState: FormattingToolbarState\n    ) => void\n  ) {\n    this.updateFormattingToolbar = () => {\n      if (!this.formattingToolbarState) {\n        throw new Error(\n          \"Attempting to update uninitialized formatting toolbar\"\n        );\n      }\n\n      updateFormattingToolbar(this.formattingToolbarState);\n    };\n\n    pmView.dom.addEventListener(\"mousedown\", this.viewMousedownHandler);\n    pmView.dom.addEventListener(\"mouseup\", this.viewMouseupHandler);\n    pmView.dom.addEventListener(\"dragstart\", this.dragstartHandler);\n\n    pmView.dom.addEventListener(\"focus\", this.focusHandler);\n    pmView.dom.addEventListener(\"blur\", this.blurHandler);\n\n    document.addEventListener(\"scroll\", this.scrollHandler);\n  }\n\n  viewMousedownHandler = () => {\n    this.preventShow = true;\n  };\n\n  viewMouseupHandler = () => {\n    this.preventShow = false;\n    setTimeout(() => this.update(this.pmView));\n  };\n\n  // For dragging the whole editor.\n  dragstartHandler = () => {\n    if (this.formattingToolbarState?.show) {\n      this.formattingToolbarState.show = false;\n      this.updateFormattingToolbar();\n    }\n  };\n\n  focusHandler = () => {\n    // we use `setTimeout` to make sure `selection` is already updated\n    setTimeout(() => this.update(this.pmView));\n  };\n\n  blurHandler = (event: FocusEvent) => {\n    if (this.preventHide) {\n      this.preventHide = false;\n\n      return;\n    }\n\n    const editorWrapper = this.pmView.dom.parentElement!;\n\n    // Checks if the focus is moving to an element outside the editor. If it is,\n    // the toolbar is hidden.\n    if (\n      // An element is clicked.\n      event &&\n      event.relatedTarget &&\n      // Element is inside the editor.\n      (editorWrapper === (event.relatedTarget as Node) ||\n        editorWrapper.contains(event.relatedTarget as Node))\n    ) {\n      return;\n    }\n\n    if (this.formattingToolbarState?.show) {\n      this.formattingToolbarState.show = false;\n      this.updateFormattingToolbar();\n    }\n  };\n\n  scrollHandler = () => {\n    if (this.formattingToolbarState?.show) {\n      this.formattingToolbarState.referencePos = this.getSelectionBoundingBox();\n      this.updateFormattingToolbar();\n    }\n  };\n\n  update(view: EditorView, oldState?: EditorState) {\n    const { state, composing } = view;\n    const { doc, selection } = state;\n    const isSame =\n      oldState && oldState.doc.eq(doc) && oldState.selection.eq(selection);\n\n    if (\n      (this.prevWasEditable === null ||\n        this.prevWasEditable === this.editor.isEditable) &&\n      (composing || isSame)\n    ) {\n      return;\n    }\n\n    this.prevWasEditable = this.editor.isEditable;\n\n    // support for CellSelections\n    const { ranges } = selection;\n    const from = Math.min(...ranges.map((range) => range.$from.pos));\n    const to = Math.max(...ranges.map((range) => range.$to.pos));\n\n    const shouldShow = this.shouldShow?.({\n      view,\n      state,\n      from,\n      to,\n    });\n    // Checks if menu should be shown/updated.\n    if (\n      this.editor.isEditable &&\n      !this.preventShow &&\n      (shouldShow || this.preventHide)\n    ) {\n      this.formattingToolbarState = {\n        show: true,\n        referencePos: this.getSelectionBoundingBox(),\n      };\n\n      this.updateFormattingToolbar();\n\n      return;\n    }\n\n    // Checks if menu should be hidden.\n    if (\n      this.formattingToolbarState?.show &&\n      !this.preventHide &&\n      (!shouldShow || this.preventShow || !this.editor.isEditable)\n    ) {\n      this.formattingToolbarState.show = false;\n      this.updateFormattingToolbar();\n\n      return;\n    }\n  }\n\n  destroy() {\n    this.pmView.dom.removeEventListener(\"mousedown\", this.viewMousedownHandler);\n    this.pmView.dom.removeEventListener(\"mouseup\", this.viewMouseupHandler);\n    this.pmView.dom.removeEventListener(\"dragstart\", this.dragstartHandler);\n\n    this.pmView.dom.removeEventListener(\"focus\", this.focusHandler);\n    this.pmView.dom.removeEventListener(\"blur\", this.blurHandler);\n\n    document.removeEventListener(\"scroll\", this.scrollHandler);\n  }\n\n  getSelectionBoundingBox() {\n    const { state } = this.pmView;\n    const { selection } = state;\n\n    // support for CellSelections\n    const { ranges } = selection;\n    const from = Math.min(...ranges.map((range) => range.$from.pos));\n    const to = Math.max(...ranges.map((range) => range.$to.pos));\n\n    if (isNodeSelection(selection)) {\n      const node = this.pmView.nodeDOM(from) as HTMLElement;\n\n      if (node) {\n        return node.getBoundingClientRect();\n      }\n    }\n\n    return posToDOMRect(this.pmView, from, to);\n  }\n}\n\nexport const formattingToolbarPluginKey = new PluginKey(\n  \"FormattingToolbarPlugin\"\n);\n\nexport class FormattingToolbarProsemirrorPlugin<\n  BSchema extends BlockSchema\n> extends EventEmitter<any> {\n  private view: FormattingToolbarView<BSchema> | undefined;\n  public readonly plugin: Plugin;\n\n  constructor(editor: BlockNoteEditor<BSchema>) {\n    super();\n    this.plugin = new Plugin({\n      key: formattingToolbarPluginKey,\n      view: (editorView) => {\n        this.view = new FormattingToolbarView(editor, editorView, (state) => {\n          this.emit(\"update\", state);\n        });\n        return this.view;\n      },\n    });\n  }\n\n  public onUpdate(callback: (state: FormattingToolbarState) => void) {\n    return this.on(\"update\", callback);\n  }\n}\n","import { getMarkRange, posToDOMRect, Range } from \"@tiptap/core\";\nimport { EditorView } from \"@tiptap/pm/view\";\nimport { Mark } from \"prosemirror-model\";\nimport { Plugin, PluginKey } from \"prosemirror-state\";\nimport { BlockNoteEditor } from \"../../BlockNoteEditor\";\nimport { BaseUiElementState } from \"../../shared/BaseUiElementTypes\";\nimport { EventEmitter } from \"../../shared/EventEmitter\";\nimport { BlockSchema } from \"../Blocks/api/blockTypes\";\n\nexport type HyperlinkToolbarState = BaseUiElementState & {\n  // The hovered hyperlink's URL, and the text it's displayed with in the\n  // editor.\n  url: string;\n  text: string;\n};\n\nclass HyperlinkToolbarView<BSchema extends BlockSchema> {\n  private hyperlinkToolbarState?: HyperlinkToolbarState;\n  public updateHyperlinkToolbar: () => void;\n\n  menuUpdateTimer: NodeJS.Timeout | undefined;\n  startMenuUpdateTimer: () => void;\n  stopMenuUpdateTimer: () => void;\n\n  mouseHoveredHyperlinkMark: Mark | undefined;\n  mouseHoveredHyperlinkMarkRange: Range | undefined;\n\n  keyboardHoveredHyperlinkMark: Mark | undefined;\n  keyboardHoveredHyperlinkMarkRange: Range | undefined;\n\n  hyperlinkMark: Mark | undefined;\n  hyperlinkMarkRange: Range | undefined;\n\n  constructor(\n    private readonly editor: BlockNoteEditor<BSchema>,\n    private readonly pmView: EditorView,\n    updateHyperlinkToolbar: (\n      hyperlinkToolbarState: HyperlinkToolbarState\n    ) => void\n  ) {\n    this.updateHyperlinkToolbar = () => {\n      if (!this.hyperlinkToolbarState) {\n        throw new Error(\"Attempting to update uninitialized hyperlink toolbar\");\n      }\n\n      updateHyperlinkToolbar(this.hyperlinkToolbarState);\n    };\n\n    this.startMenuUpdateTimer = () => {\n      this.menuUpdateTimer = setTimeout(() => {\n        this.update();\n      }, 250);\n    };\n\n    this.stopMenuUpdateTimer = () => {\n      if (this.menuUpdateTimer) {\n        clearTimeout(this.menuUpdateTimer);\n        this.menuUpdateTimer = undefined;\n      }\n\n      return false;\n    };\n\n    this.pmView.dom.addEventListener(\"mouseover\", this.mouseOverHandler);\n    document.addEventListener(\"click\", this.clickHandler, true);\n    document.addEventListener(\"scroll\", this.scrollHandler);\n  }\n\n  mouseOverHandler = (event: MouseEvent) => {\n    // Resets the hyperlink mark currently hovered by the mouse cursor.\n    this.mouseHoveredHyperlinkMark = undefined;\n    this.mouseHoveredHyperlinkMarkRange = undefined;\n\n    this.stopMenuUpdateTimer();\n\n    if (\n      event.target instanceof HTMLAnchorElement &&\n      event.target.nodeName === \"A\"\n    ) {\n      // Finds link mark at the hovered element's position to update mouseHoveredHyperlinkMark and\n      // mouseHoveredHyperlinkMarkRange.\n      const hoveredHyperlinkElement = event.target;\n      const posInHoveredHyperlinkMark =\n        this.pmView.posAtDOM(hoveredHyperlinkElement, 0) + 1;\n      const resolvedPosInHoveredHyperlinkMark = this.pmView.state.doc.resolve(\n        posInHoveredHyperlinkMark\n      );\n      const marksAtPos = resolvedPosInHoveredHyperlinkMark.marks();\n\n      for (const mark of marksAtPos) {\n        if (\n          mark.type.name === this.pmView.state.schema.mark(\"link\").type.name\n        ) {\n          this.mouseHoveredHyperlinkMark = mark;\n          this.mouseHoveredHyperlinkMarkRange =\n            getMarkRange(\n              resolvedPosInHoveredHyperlinkMark,\n              mark.type,\n              mark.attrs\n            ) || undefined;\n\n          break;\n        }\n      }\n    }\n\n    this.startMenuUpdateTimer();\n\n    return false;\n  };\n\n  clickHandler = (event: MouseEvent) => {\n    const editorWrapper = this.pmView.dom.parentElement!;\n\n    if (\n      // Toolbar is open.\n      this.hyperlinkMark &&\n      // An element is clicked.\n      event &&\n      event.target &&\n      // The clicked element is not the editor.\n      !(\n        editorWrapper === (event.target as Node) ||\n        editorWrapper.contains(event.target as Node)\n      )\n    ) {\n      if (this.hyperlinkToolbarState?.show) {\n        this.hyperlinkToolbarState.show = false;\n        this.updateHyperlinkToolbar();\n      }\n    }\n  };\n\n  scrollHandler = () => {\n    if (this.hyperlinkMark !== undefined) {\n      if (this.hyperlinkToolbarState?.show) {\n        this.hyperlinkToolbarState.referencePos = posToDOMRect(\n          this.pmView,\n          this.hyperlinkMarkRange!.from,\n          this.hyperlinkMarkRange!.to\n        );\n        this.updateHyperlinkToolbar();\n      }\n    }\n  };\n\n  editHyperlink(url: string, text: string) {\n    const tr = this.pmView.state.tr.insertText(\n      text,\n      this.hyperlinkMarkRange!.from,\n      this.hyperlinkMarkRange!.to\n    );\n    tr.addMark(\n      this.hyperlinkMarkRange!.from,\n      this.hyperlinkMarkRange!.from + text.length,\n      this.pmView.state.schema.mark(\"link\", { href: url })\n    );\n    this.pmView.dispatch(tr);\n    this.pmView.focus();\n\n    if (this.hyperlinkToolbarState?.show) {\n      this.hyperlinkToolbarState.show = false;\n      this.updateHyperlinkToolbar();\n    }\n  }\n\n  deleteHyperlink() {\n    this.pmView.dispatch(\n      this.pmView.state.tr\n        .removeMark(\n          this.hyperlinkMarkRange!.from,\n          this.hyperlinkMarkRange!.to,\n          this.hyperlinkMark!.type\n        )\n        .setMeta(\"preventAutolink\", true)\n    );\n    this.pmView.focus();\n\n    if (this.hyperlinkToolbarState?.show) {\n      this.hyperlinkToolbarState.show = false;\n      this.updateHyperlinkToolbar();\n    }\n  }\n\n  update() {\n    if (!this.pmView.hasFocus()) {\n      return;\n    }\n\n    // Saves the currently hovered hyperlink mark before it's updated.\n    const prevHyperlinkMark = this.hyperlinkMark;\n\n    // Resets the currently hovered hyperlink mark.\n    this.hyperlinkMark = undefined;\n    this.hyperlinkMarkRange = undefined;\n\n    // Resets the hyperlink mark currently hovered by the keyboard cursor.\n    this.keyboardHoveredHyperlinkMark = undefined;\n    this.keyboardHoveredHyperlinkMarkRange = undefined;\n\n    // Finds link mark at the editor selection's position to update keyboardHoveredHyperlinkMark and\n    // keyboardHoveredHyperlinkMarkRange.\n    if (this.pmView.state.selection.empty) {\n      const marksAtPos = this.pmView.state.selection.$from.marks();\n\n      for (const mark of marksAtPos) {\n        if (\n          mark.type.name === this.pmView.state.schema.mark(\"link\").type.name\n        ) {\n          this.keyboardHoveredHyperlinkMark = mark;\n          this.keyboardHoveredHyperlinkMarkRange =\n            getMarkRange(\n              this.pmView.state.selection.$from,\n              mark.type,\n              mark.attrs\n            ) || undefined;\n\n          break;\n        }\n      }\n    }\n\n    if (this.mouseHoveredHyperlinkMark) {\n      this.hyperlinkMark = this.mouseHoveredHyperlinkMark;\n      this.hyperlinkMarkRange = this.mouseHoveredHyperlinkMarkRange;\n    }\n\n    // Keyboard cursor position takes precedence over mouse hovered hyperlink.\n    if (this.keyboardHoveredHyperlinkMark) {\n      this.hyperlinkMark = this.keyboardHoveredHyperlinkMark;\n      this.hyperlinkMarkRange = this.keyboardHoveredHyperlinkMarkRange;\n    }\n\n    if (this.hyperlinkMark && this.editor.isEditable) {\n      this.hyperlinkToolbarState = {\n        show: true,\n        referencePos: posToDOMRect(\n          this.pmView,\n          this.hyperlinkMarkRange!.from,\n          this.hyperlinkMarkRange!.to\n        ),\n        url: this.hyperlinkMark!.attrs.href,\n        text: this.pmView.state.doc.textBetween(\n          this.hyperlinkMarkRange!.from,\n          this.hyperlinkMarkRange!.to\n        ),\n      };\n      this.updateHyperlinkToolbar();\n\n      return;\n    }\n\n    // Hides menu.\n    if (\n      this.hyperlinkToolbarState?.show &&\n      prevHyperlinkMark &&\n      (!this.hyperlinkMark || !this.editor.isEditable)\n    ) {\n      this.hyperlinkToolbarState.show = false;\n      this.updateHyperlinkToolbar();\n\n      return;\n    }\n  }\n\n  destroy() {\n    this.pmView.dom.removeEventListener(\"mouseover\", this.mouseOverHandler);\n    document.removeEventListener(\"scroll\", this.scrollHandler);\n    document.removeEventListener(\"click\", this.clickHandler, true);\n  }\n}\n\nexport const hyperlinkToolbarPluginKey = new PluginKey(\n  \"HyperlinkToolbarPlugin\"\n);\n\nexport class HyperlinkToolbarProsemirrorPlugin<\n  BSchema extends BlockSchema\n> extends EventEmitter<any> {\n  private view: HyperlinkToolbarView<BSchema> | undefined;\n  public readonly plugin: Plugin;\n\n  constructor(editor: BlockNoteEditor<BSchema>) {\n    super();\n    this.plugin = new Plugin({\n      key: hyperlinkToolbarPluginKey,\n      view: (editorView) => {\n        this.view = new HyperlinkToolbarView(editor, editorView, (state) => {\n          this.emit(\"update\", state);\n        });\n        return this.view;\n      },\n    });\n  }\n\n  public onUpdate(callback: (state: HyperlinkToolbarState) => void) {\n    return this.on(\"update\", callback);\n  }\n\n  /**\n   * Edit the currently hovered hyperlink.\n   */\n  public editHyperlink = (url: string, text: string) => {\n    this.view!.editHyperlink(url, text);\n  };\n\n  /**\n   * Delete the currently hovered hyperlink.\n   */\n  public deleteHyperlink = () => {\n    this.view!.deleteHyperlink();\n  };\n\n  /**\n   * When hovering on/off hyperlinks using the mouse cursor, the hyperlink\n   * toolbar will open & close with a delay.\n   *\n   * This function starts the delay timer, and should be used for when the mouse cursor enters the hyperlink toolbar.\n   */\n  public startHideTimer = () => {\n    this.view!.startMenuUpdateTimer();\n  };\n\n  /**\n   * When hovering on/off hyperlinks using the mouse cursor, the hyperlink\n   * toolbar will open & close with a delay.\n   *\n   * This function stops the delay timer, and should be used for when the mouse cursor exits the hyperlink toolbar.\n   */\n  public stopHideTimer = () => {\n    this.view!.stopMenuUpdateTimer();\n  };\n}\n","import {\n  findParentNodeClosestToPos,\n  isNodeSelection,\n  isTextSelection,\n  posToDOMRect,\n} from \"@tiptap/core\";\nimport { EditorState, Plugin, PluginKey } from \"prosemirror-state\";\nimport { EditorView } from \"prosemirror-view\";\nimport {\n  BaseUiElementCallbacks,\n  BlockNoteEditor,\n  BlockSchema,\n  Block,\n} from \"../..\";\n// import { nodeToBlock } from \"../../api/nodeConversions/nodeConversions\";\nimport { EventEmitter } from \"../../shared/EventEmitter\";\n\nexport type TableToolbarCallbacks = BaseUiElementCallbacks;\n\nexport type tableToolbarState = {\n  show: boolean;\n  referencePosCell: DOMRect;\n  referencePosTable?: DOMRect;\n\n  block?: Block;\n  colIndex?: number;\n  rowIndex?: number;\n\n  draggingState?:\n    | {\n        draggedCellOrientation: \"row\" | \"col\";\n        originalIndex: number;\n        mousePos: number;\n      }\n    | undefined;\n};\n\n// function getChildIndex(node: Element) {\n//   return Array.prototype.indexOf.call(node.parentElement!.childNodes, node);\n// }\n\n// // Finds the DOM element corresponding to the table cell that the target element\n// // is currently in. If the target element is not in a table cell, returns null.\n// function domCellAround(target: Element | null): Element | null {\n//   while (target && target.nodeName !== \"TD\" && target.nodeName !== \"TH\") {\n//     target =\n//       target.classList && target.classList.contains(\"ProseMirror\")\n//         ? null\n//         : (target.parentNode as Element);\n//   }\n//   return target;\n// }\n\nexport class TableToolbarView<BSchema extends BlockSchema> {\n  private tableToolbarState?: tableToolbarState;\n  public updateTableToolbar: () => void;\n\n  public tableId: string | undefined;\n  public tablePos: number | undefined;\n\n  public menuFrozen = false;\n\n  public shouldShow: (state: EditorState) => boolean = (state) => {\n    const closestTable = findParentNodeClosestToPos(\n      state.selection.$from,\n      (node) => {\n        return node.type.name === \"table\";\n      }\n    );\n    return !!closestTable?.node;\n  };\n\n  public shouldFormattingShow: (props: {\n    view: EditorView;\n    state: EditorState;\n    from: number;\n    to: number;\n  }) => boolean = ({ view, state, from, to }) => {\n    const { doc, selection } = state;\n    const { empty } = selection;\n\n    // Sometime check for `empty` is not enough.\n    // Doubleclick an empty paragraph returns a node size of 2.\n    // So we check also for an empty text size.\n    const isEmptyTextBlock =\n      !doc.textBetween(from, to).length && isTextSelection(state.selection);\n\n    return !(!view.hasFocus() || empty || isEmptyTextBlock);\n  };\n\n  constructor(\n    private readonly editor: BlockNoteEditor<BSchema>,\n    private readonly pmView: EditorView,\n    updateTableToolbar: (tableToolbarState: tableToolbarState) => void\n  ) {\n    this.updateTableToolbar = () => {\n      if (!this.tableToolbarState) {\n        throw new Error(\"Attempting to update uninitialized table toolbar\");\n      }\n      updateTableToolbar(this.tableToolbarState);\n    };\n\n    pmView.dom.addEventListener(\"dragstart\", this.dragstartHandler);\n\n    pmView.dom.addEventListener(\"mouseup\", this.mouseupHandler);\n\n    // pmView.dom.addEventListener(\"mousemove\", this.mouseMoveHandler);\n\n    pmView.dom.addEventListener(\"blur\", this.blurHandler);\n\n    document.addEventListener(\"scroll\", this.scrollHandler);\n  }\n\n  // For dragging the whole editor.\n  dragstartHandler = () => {\n    if (this.tableToolbarState?.show) {\n      this.tableToolbarState.show = false;\n      this.updateTableToolbar();\n    }\n  };\n\n  blurHandler = (event: FocusEvent) => {\n    const editorWrapper = this.pmView.dom.parentElement!;\n\n    // Checks if the focus is moving to an element outside the editor. If it is,\n    // the toolbar is hidden.\n    if (\n      // An element is clicked.\n      event &&\n      event.relatedTarget &&\n      // Element is inside the editor.\n      (editorWrapper === (event.relatedTarget as Node) ||\n        editorWrapper.contains(event.relatedTarget as Node))\n    ) {\n      return;\n    }\n\n    if (this.tableToolbarState?.show) {\n      this.tableToolbarState.show = false;\n      this.updateTableToolbar();\n    }\n  };\n\n  scrollHandler = () => {\n    if (this.tableToolbarState?.show) {\n      this.tableToolbarState.referencePosCell = this.getSelectionBoundingBox();\n      this.updateTableToolbar();\n    }\n  };\n\n  mouseupHandler = () => {\n    setTimeout(() => this.update(this.pmView));\n  };\n\n  // mouseMoveHandler = (_event: MouseEvent) => {\n  //   if (this.menuFrozen) {\n  //     return;\n  //   }\n  // };\n\n  //   const target = domCellAround(event.target as HTMLElement);\n\n  //   if (!target || !this.editor.isEditable) {\n  //     if (this.tableToolbarState?.show) {\n  //       this.tableToolbarState.show = false;\n  //       this.updateTableToolbar();\n  //     }\n  //     return;\n  //   }\n\n  //   const colIndex = getChildIndex(target);\n  //   const rowIndex = getChildIndex(target.parentElement!);\n  //   const cellRect = target.getBoundingClientRect();\n  //   const tableRect =\n  //     target.parentElement!.parentElement!.getBoundingClientRect();\n\n  //   // const el = getDraggableBlockFromCoords(cellRect, this.pmView);\n  //   const blockEl = target\n  //     .closest(\"table\")\n  //     ?.closest('[data-node-type=\"blockContainer\"]');\n\n  //   if (!blockEl) {\n  //     throw new Error(\n  //       \"Found table cell element, but could not find surrounding blockContent element.\"\n  //     );\n  //   }\n  //   this.tableId = blockEl.getAttribute(\"data-id\") || \"\";\n  //   if (\n  //     this.tableToolbarState !== undefined &&\n  //     this.tableToolbarState.show\n  //     // this.tableId === blockEl.id &&\n  //     // this.tableToolbarState.rowIndex === rowIndex &&\n  //     // this.tableToolbarState.colIndex === colIndex\n  //   ) {\n  //     return;\n  //   }\n\n  //   let block: Block<BSchema> | undefined = undefined;\n  //   // Copied from `getBlock`. We don't use `getBlock` since we also need the PM\n  //   // node for the table, so we would effectively be doing the same work twice.\n  //   this.editor._tiptapEditor.state.doc.descendants((node, pos) => {\n  //     if (typeof block !== \"undefined\") {\n  //       return false;\n  //     }\n\n  //     if (\n  //       node.type.name !== \"blockContainer\" ||\n  //       node.attrs.id !== this.tableId\n  //     ) {\n  //       return true;\n  //     }\n\n  //     block = nodeToBlock(node, this.editor.schema, this.editor.blockCache);\n  //     this.tablePos = pos + 1;\n\n  //     return false;\n  //   });\n\n  //   this.tableToolbarState = {\n  //     show: true,\n  //     referencePosCell: cellRect,\n  //     referencePosTable: tableRect,\n\n  //     block: block! as any,\n  //     colIndex: colIndex,\n  //     rowIndex: rowIndex,\n\n  //     draggingState: undefined,\n  //   };\n  //   this.updateTableToolbar();\n\n  //   return false;\n  // };\n\n  update(view: EditorView, oldState?: EditorState) {\n    const { state, composing } = view;\n    const { doc, selection } = state;\n    const isSame =\n      oldState && oldState.doc.eq(doc) && oldState.selection.eq(selection);\n\n    if (composing || isSame) {\n      return;\n    }\n\n    const shouldShow = this.shouldShow?.(state);\n\n    // support for CellSelections\n    const { ranges } = selection;\n    const from = Math.min(...ranges.map((range) => range.$from.pos));\n    const to = Math.max(...ranges.map((range) => range.$to.pos));\n\n    const shouldFormattingShow = this.shouldFormattingShow?.({\n      view,\n      state,\n      from,\n      to,\n    });\n\n    // Checks if menu should be shown/updated.\n    if (shouldShow && !shouldFormattingShow) {\n      this.tableToolbarState = {\n        show: true,\n        referencePosCell: this.getSelectionBoundingBox(),\n      };\n      this.updateTableToolbar();\n\n      return;\n    }\n\n    // Checks if menu should be hidden.\n    if (\n      this.tableToolbarState?.show &&\n      (!shouldShow || !this.editor?.isEditable)\n    ) {\n      this.tableToolbarState.show = false;\n      this.updateTableToolbar();\n\n      return;\n    }\n  }\n\n  getSelectionBoundingBox() {\n    const { state } = this.pmView;\n    const { selection } = state;\n\n    // support for CellSelections\n    const { ranges } = selection;\n    const from = Math.min(...ranges.map((range) => range.$from.pos));\n    const to = Math.max(...ranges.map((range) => range.$to.pos));\n\n    if (isNodeSelection(selection)) {\n      const node = this.pmView.nodeDOM(from) as HTMLElement;\n      if (node) {\n        return node.getBoundingClientRect();\n      }\n    }\n\n    return posToDOMRect(this.pmView, from, to);\n  }\n\n  destroy() {\n    this.pmView.dom.removeEventListener(\"dragstart\", this.dragstartHandler);\n\n    this.pmView.dom.removeEventListener(\"blur\", this.blurHandler);\n\n    this.pmView.dom.removeEventListener(\"mouseup\", this.mouseupHandler);\n\n    // this.pmView.dom.removeEventListener(\"mousemove\", this.mouseMoveHandler);\n\n    document.removeEventListener(\"scroll\", this.scrollHandler);\n  }\n}\n\nexport const tableToolbarPluginKey = new PluginKey(\"TableToolbarPlugin\");\n\nexport class TableToolbarProsemirrorPlugin<\n  BSchema extends BlockSchema\n> extends EventEmitter<any> {\n  private view: TableToolbarView<BSchema> | undefined;\n  public readonly plugin: Plugin;\n\n  constructor(editor: BlockNoteEditor<BSchema>) {\n    super();\n    this.plugin = new Plugin({\n      key: tableToolbarPluginKey,\n      view: (editorView) => {\n        this.view = new TableToolbarView(editor, editorView, (state) => {\n          this.emit(\"update\", state);\n        });\n        return this.view;\n      },\n    });\n  }\n\n  public onUpdate(callback: (state: tableToolbarState) => void) {\n    return this.on(\"update\", callback);\n  }\n\n  /**\n   * Freezes the drag handles. When frozen, they will stay attached to the same\n   * cell regardless of which cell is hovered by the mouse cursor.\n   */\n  freezeHandles = () => (this.view!.menuFrozen = true);\n\n  /**\n   * Unfreezes the drag handles. When frozen, they will stay attached to the\n   * same cell regardless of which cell is hovered by the mouse cursor.\n   */\n  unfreezeHandles = () => (this.view!.menuFrozen = false);\n}\n","import { Fragment, Node, ResolvedPos, Slice } from \"prosemirror-model\";\nimport { Selection } from \"prosemirror-state\";\nimport { Mappable } from \"prosemirror-transform\";\n\n/**\n * This class represents an editor selection which spans multiple nodes/blocks. It's currently only used to allow users\n * to drag multiple blocks at the same time. Expects the selection anchor and head to be between nodes, i.e. just before\n * the first target node and just after the last, and that anchor and head are at the same nesting level.\n *\n * Partially based on ProseMirror's NodeSelection implementation:\n * (https://github.com/ProseMirror/prosemirror-state/blob/master/src/selection.ts)\n * MultipleNodeSelection differs from NodeSelection in the following ways:\n * 1. Stores which nodes are included in the selection instead of just a single node.\n * 2. Already expects the selection to start just before the first target node and ends just after the last, while a\n * NodeSelection automatically sets both anchor and head to just before the single target node.\n */\nexport class MultipleNodeSelection extends Selection {\n  nodes: Array<Node>;\n\n  constructor($anchor: ResolvedPos, $head: ResolvedPos) {\n    super($anchor, $head);\n\n    // Parent is at the same nesting level as anchor/head since they are just before/ just after target nodes.\n    const parentNode = $anchor.node();\n\n    this.nodes = [];\n    $anchor.doc.nodesBetween($anchor.pos, $head.pos, (node, _pos, parent) => {\n      if (parent !== null && parent.eq(parentNode)) {\n        this.nodes.push(node);\n        return false;\n      }\n      return;\n    });\n  }\n\n  static create(doc: Node, from: number, to = from): MultipleNodeSelection {\n    return new MultipleNodeSelection(doc.resolve(from), doc.resolve(to));\n  }\n\n  content(): Slice {\n    return new Slice(Fragment.from(this.nodes), 0, 0);\n  }\n\n  eq(selection: Selection): boolean {\n    if (!(selection instanceof MultipleNodeSelection)) {\n      return false;\n    }\n\n    if (this.nodes.length !== selection.nodes.length) {\n      return false;\n    }\n\n    if (this.from !== selection.from || this.to !== selection.to) {\n      return false;\n    }\n\n    for (let i = 0; i < this.nodes.length; i++) {\n      if (!this.nodes[i].eq(selection.nodes[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  map(doc: Node, mapping: Mappable): Selection {\n    const fromResult = mapping.mapResult(this.from);\n    const toResult = mapping.mapResult(this.to);\n\n    if (toResult.deleted) {\n      return Selection.near(doc.resolve(fromResult.pos));\n    }\n\n    if (fromResult.deleted) {\n      return Selection.near(doc.resolve(toResult.pos));\n    }\n\n    return new MultipleNodeSelection(\n      doc.resolve(fromResult.pos),\n      doc.resolve(toResult.pos)\n    );\n  }\n\n  toJSON(): any {\n    return { type: \"node\", anchor: this.anchor, head: this.head };\n  }\n}\n","import { PluginView } from \"@tiptap/pm/state\";\nimport { Node } from \"prosemirror-model\";\nimport { NodeSelection, Plugin, PluginKey, Selection } from \"prosemirror-state\";\nimport * as pv from \"prosemirror-view\";\nimport { EditorView } from \"prosemirror-view\";\nimport { BlockNoteEditor } from \"../../BlockNoteEditor\";\nimport styles from \"../../editor.module.css\";\nimport { BaseUiElementState } from \"../../shared/BaseUiElementTypes\";\nimport { EventEmitter } from \"../../shared/EventEmitter\";\nimport { Block, BlockSchema } from \"../Blocks/api/blockTypes\";\nimport { getBlockInfoFromPos } from \"../Blocks/helpers/getBlockInfoFromPos\";\nimport { slashMenuPluginKey } from \"../SlashMenu/SlashMenuPlugin\";\nimport { MultipleNodeSelection } from \"./MultipleNodeSelection\";\n\nconst serializeForClipboard = (pv as any).__serializeForClipboard;\n// code based on https://github.com/ueberdosis/tiptap/issues/323#issuecomment-506637799\n\nlet dragImageElement: Element | undefined;\n\nexport type SideMenuState<BSchema extends BlockSchema> = BaseUiElementState & {\n  // The block that the side menu is attached to.\n  block: Block<BSchema>;\n};\n\nexport function getDraggableBlockFromCoords(\n  coords: { left: number; top: number },\n  view: EditorView\n) {\n  if (!view.dom.isConnected) {\n    // view is not connected to the DOM, this can cause posAtCoords to fail\n    // (Cannot read properties of null (reading 'nearestDesc'), https://github.com/TypeCellOS/BlockNote/issues/123)\n    return undefined;\n  }\n\n  const pos = view.posAtCoords(coords);\n  if (!pos) {\n    return undefined;\n  }\n  let node = view.domAtPos(pos.pos).node as HTMLElement;\n\n  if (node === view.dom) {\n    // mouse over root\n    return undefined;\n  }\n  while (\n    node &&\n    node.parentNode &&\n    node.parentNode !== view.dom &&\n    !node.hasAttribute?.(\"data-id\")\n  ) {\n    node = node.parentNode as HTMLElement;\n  }\n  if (!node) {\n    return undefined;\n  }\n  return { node, id: node.getAttribute(\"data-id\")! };\n}\n\nfunction blockPositionFromCoords(\n  coords: { left: number; top: number },\n  view: EditorView\n) {\n  const block = getDraggableBlockFromCoords(coords, view);\n\n  if (block && block.node.nodeType === 1) {\n    // TODO: this uses undocumented PM APIs? do we need this / let's add docs?\n    const docView = (view as any).docView;\n    const desc = docView.nearestDesc(block.node, true);\n    if (!desc || desc === docView) {\n      return null;\n    }\n    return desc.posBefore;\n  }\n  return null;\n}\n\nfunction blockPositionsFromSelection(selection: Selection, doc: Node) {\n  // Absolute positions just before the first block spanned by the selection, and just after the last block. Having the\n  // selection start and end just before and just after the target blocks ensures no whitespace/line breaks are left\n  // behind after dragging & dropping them.\n  let beforeFirstBlockPos: number;\n  let afterLastBlockPos: number;\n\n  // Even the user starts dragging blocks but drops them in the same place, the selection will still be moved just\n  // before & just after the blocks spanned by the selection, and therefore doesn't need to change if they try to drag\n  // the same blocks again. If this happens, the anchor & head move out of the block content node they were originally\n  // in. If the anchor should update but the head shouldn't and vice versa, it means the user selection is outside a\n  // block content node, which should never happen.\n  const selectionStartInBlockContent =\n    doc.resolve(selection.from).node().type.spec.group === \"blockContent\";\n  const selectionEndInBlockContent =\n    doc.resolve(selection.to).node().type.spec.group === \"blockContent\";\n\n  // Ensures that entire outermost nodes are selected if the selection spans multiple nesting levels.\n  const minDepth = Math.min(selection.$anchor.depth, selection.$head.depth);\n\n  if (selectionStartInBlockContent && selectionEndInBlockContent) {\n    // Absolute positions at the start of the first block in the selection and at the end of the last block. User\n    // selections will always start and end in block content nodes, but we want the start and end positions of their\n    // parent block nodes, which is why minDepth - 1 is used.\n    const startFirstBlockPos = selection.$from.start(minDepth - 1);\n    const endLastBlockPos = selection.$to.end(minDepth - 1);\n\n    // Shifting start and end positions by one moves them just outside the first and last selected blocks.\n    beforeFirstBlockPos = doc.resolve(startFirstBlockPos - 1).pos;\n    afterLastBlockPos = doc.resolve(endLastBlockPos + 1).pos;\n  } else {\n    beforeFirstBlockPos = selection.from;\n    afterLastBlockPos = selection.to;\n  }\n\n  return { from: beforeFirstBlockPos, to: afterLastBlockPos };\n}\n\nfunction setDragImage(view: EditorView, from: number, to = from) {\n  if (from === to) {\n    // Moves to position to be just after the first (and only) selected block.\n    to += view.state.doc.resolve(from + 1).node().nodeSize;\n  }\n\n  // Parent element is cloned to remove all unselected children without affecting the editor content.\n  const parentClone = view.domAtPos(from).node.cloneNode(true) as Element;\n  const parent = view.domAtPos(from).node as Element;\n\n  const getElementIndex = (parentElement: Element, targetElement: Element) =>\n    Array.prototype.indexOf.call(parentElement.children, targetElement);\n\n  const firstSelectedBlockIndex = getElementIndex(\n    parent,\n    // Expects from position to be just before the first selected block.\n    view.domAtPos(from + 1).node.parentElement!\n  );\n  const lastSelectedBlockIndex = getElementIndex(\n    parent,\n    // Expects to position to be just after the last selected block.\n    view.domAtPos(to - 1).node.parentElement!\n  );\n\n  for (let i = parent.childElementCount - 1; i >= 0; i--) {\n    if (i > lastSelectedBlockIndex || i < firstSelectedBlockIndex) {\n      parentClone.removeChild(parentClone.children[i]);\n    }\n  }\n\n  // dataTransfer.setDragImage(element) only works if element is attached to the DOM.\n  unsetDragImage();\n  dragImageElement = parentClone;\n\n  // TODO: This is hacky, need a better way of assigning classes to the editor so that they can also be applied to the\n  //  drag preview.\n  const classes = view.dom.className.split(\" \");\n  const inheritedClasses = classes\n    .filter(\n      (className) =>\n        !className.includes(\"bn\") &&\n        !className.includes(\"ProseMirror\") &&\n        !className.includes(\"editor\")\n    )\n    .join(\" \");\n\n  dragImageElement.className =\n    dragImageElement.className +\n    \" \" +\n    styles.dragPreview +\n    \" \" +\n    inheritedClasses;\n\n  document.body.appendChild(dragImageElement);\n}\n\nfunction unsetDragImage() {\n  if (dragImageElement !== undefined) {\n    document.body.removeChild(dragImageElement);\n    dragImageElement = undefined;\n  }\n}\n\nfunction dragStart(\n  e: { dataTransfer: DataTransfer | null; clientY: number },\n  view: EditorView\n) {\n  if (!e.dataTransfer) {\n    return;\n  }\n\n  const editorBoundingBox = view.dom.getBoundingClientRect();\n\n  const coords = {\n    left: editorBoundingBox.left + editorBoundingBox.width / 2, // take middle of editor\n    top: e.clientY,\n  };\n\n  const pos = blockPositionFromCoords(coords, view);\n  if (pos != null) {\n    const selection = view.state.selection;\n    const doc = view.state.doc;\n\n    const { from, to } = blockPositionsFromSelection(selection, doc);\n\n    const draggedBlockInSelection = from <= pos && pos < to;\n    const multipleBlocksSelected =\n      selection.$anchor.node() !== selection.$head.node() ||\n      selection instanceof MultipleNodeSelection;\n\n    if (draggedBlockInSelection && multipleBlocksSelected) {\n      view.dispatch(\n        view.state.tr.setSelection(MultipleNodeSelection.create(doc, from, to))\n      );\n      setDragImage(view, from, to);\n    } else {\n      view.dispatch(\n        view.state.tr.setSelection(NodeSelection.create(view.state.doc, pos))\n      );\n      setDragImage(view, pos);\n    }\n\n    const slice = view.state.selection.content();\n    const { dom, text } = serializeForClipboard(view, slice);\n\n    e.dataTransfer.clearData();\n    e.dataTransfer.setData(\"text/html\", dom.innerHTML);\n    e.dataTransfer.setData(\"text/plain\", text);\n    e.dataTransfer.effectAllowed = \"move\";\n    e.dataTransfer.setDragImage(dragImageElement!, 0, 0);\n    view.dragging = { slice, move: true };\n  }\n}\n\nexport class SideMenuView<BSchema extends BlockSchema> implements PluginView {\n  private sideMenuState?: SideMenuState<BSchema>;\n\n  // When true, the drag handle with be anchored at the same level as root elements\n  // When false, the drag handle with be just to the left of the element\n  // TODO: Is there any case where we want this to be false?\n  private horizontalPosAnchoredAtRoot: boolean;\n  private horizontalPosAnchor: number;\n\n  private hoveredBlock: HTMLElement | undefined;\n\n  // Used to check if currently dragged content comes from this editor instance.\n  public isDragging = false;\n\n  public menuFrozen = false;\n\n  constructor(\n    private readonly editor: BlockNoteEditor<BSchema>,\n    private readonly pmView: EditorView,\n    private readonly updateSideMenu: (\n      sideMenuState: SideMenuState<BSchema>\n    ) => void\n  ) {\n    this.horizontalPosAnchoredAtRoot = true;\n    this.horizontalPosAnchor = (\n      this.pmView.dom.firstChild! as HTMLElement\n    ).getBoundingClientRect().x;\n\n    document.body.addEventListener(\"drop\", this.onDrop, true);\n    document.body.addEventListener(\"dragover\", this.onDragOver);\n    this.pmView.dom.addEventListener(\"dragstart\", this.onDragStart);\n\n    // Shows or updates menu position whenever the cursor moves, if the menu isn't frozen.\n    document.body.addEventListener(\"mousemove\", this.onMouseMove, true);\n\n    // Makes menu scroll with the page.\n    document.addEventListener(\"scroll\", this.onScroll);\n\n    // Unfreezes the menu whenever the user clicks anywhere.\n    document.body.addEventListener(\"mousedown\", this.onMouseDown, true);\n    // Hides and unfreezes the menu whenever the user presses a key.\n    document.body.addEventListener(\"keydown\", this.onKeyDown, true);\n  }\n\n  /**\n   * Sets isDragging when dragging text.\n   */\n  onDragStart = () => {\n    this.isDragging = true;\n  };\n\n  /**\n   * If the event is outside the editor contents,\n   * we dispatch a fake event, so that we can still drop the content\n   * when dragging / dropping to the side of the editor\n   */\n  onDrop = (event: DragEvent) => {\n    this.editor._tiptapEditor.commands.blur();\n\n    if ((event as any).synthetic || !this.isDragging) {\n      return;\n    }\n\n    const pos = this.pmView.posAtCoords({\n      left: event.clientX,\n      top: event.clientY,\n    });\n\n    this.isDragging = false;\n\n    if (!pos || pos.inside === -1) {\n      const evt = new Event(\"drop\", event) as any;\n      const editorBoundingBox = (\n        this.pmView.dom.firstChild! as HTMLElement\n      ).getBoundingClientRect();\n      evt.clientX = editorBoundingBox.left + editorBoundingBox.width / 2;\n      evt.clientY = event.clientY;\n      evt.dataTransfer = event.dataTransfer;\n      evt.preventDefault = () => event.preventDefault();\n      evt.synthetic = true; // prevent recursion\n      // console.log(\"dispatch fake drop\");\n      this.pmView.dom.dispatchEvent(evt);\n    }\n  };\n\n  /**\n   * If the event is outside the editor contents,\n   * we dispatch a fake event, so that we can still drop the content\n   * when dragging / dropping to the side of the editor\n   */\n  onDragOver = (event: DragEvent) => {\n    if ((event as any).synthetic || !this.isDragging) {\n      return;\n    }\n    const pos = this.pmView.posAtCoords({\n      left: event.clientX,\n      top: event.clientY,\n    });\n\n    if (!pos || pos.inside === -1) {\n      const evt = new Event(\"dragover\", event) as any;\n      const editorBoundingBox = (\n        this.pmView.dom.firstChild! as HTMLElement\n      ).getBoundingClientRect();\n      evt.clientX = editorBoundingBox.left + editorBoundingBox.width / 2;\n      evt.clientY = event.clientY;\n      evt.dataTransfer = event.dataTransfer;\n      evt.preventDefault = () => event.preventDefault();\n      evt.synthetic = true; // prevent recursion\n      // console.log(\"dispatch fake dragover\");\n      this.pmView.dom.dispatchEvent(evt);\n    }\n  };\n\n  onKeyDown = (_event: KeyboardEvent) => {\n    if (this.sideMenuState?.show) {\n      this.sideMenuState.show = false;\n      this.updateSideMenu(this.sideMenuState);\n    }\n    this.menuFrozen = false;\n  };\n\n  onMouseDown = (_event: MouseEvent) => {\n    if (this.sideMenuState && !this.sideMenuState.show) {\n      this.sideMenuState.show = true;\n      this.updateSideMenu(this.sideMenuState);\n    }\n    this.menuFrozen = false;\n  };\n\n  onMouseMove = (event: MouseEvent) => {\n    const target = event.target as HTMLElement;\n    if (target.tagName === \"th\" || target.tagName === \"td\") {\n      return;\n    }\n    if (this.menuFrozen) {\n      return;\n    }\n\n    // Editor itself may have padding or other styling which affects\n    // size/position, so we get the boundingRect of the first child (i.e. the\n    // blockGroup that wraps all blocks in the editor) for more accurate side\n    // menu placement.\n    const editorBoundingBox = (\n      this.pmView.dom.firstChild! as HTMLElement\n    ).getBoundingClientRect();\n    // We want the full area of the editor to check if the cursor is hovering\n    // above it though.\n    const editorOuterBoundingBox = this.pmView.dom.getBoundingClientRect();\n    const cursorWithinEditor =\n      event.clientX >= editorOuterBoundingBox.left &&\n      event.clientX <= editorOuterBoundingBox.right &&\n      event.clientY >= editorOuterBoundingBox.top &&\n      event.clientY <= editorOuterBoundingBox.bottom;\n\n    const editorWrapper = this.pmView.dom.parentElement!;\n\n    // Doesn't update if the mouse hovers an element that's over the editor but\n    // isn't a part of it or the side menu.\n    if (\n      // Cursor is within the editor area\n      cursorWithinEditor &&\n      // An element is hovered\n      event &&\n      event.target &&\n      // Element is outside the editor\n      !(\n        editorWrapper === event.target ||\n        editorWrapper.contains(event.target as HTMLElement)\n      )\n    ) {\n      if (this.sideMenuState?.show) {\n        this.sideMenuState.show = false;\n        this.updateSideMenu(this.sideMenuState);\n      }\n\n      return;\n    }\n\n    this.horizontalPosAnchor = editorBoundingBox.x;\n\n    // Gets block at mouse cursor's vertical position.\n    const coords = {\n      left: editorBoundingBox.left + editorBoundingBox.width / 2, // take middle of editor\n      top: event.clientY,\n    };\n    let block = getDraggableBlockFromCoords(coords, this.pmView);\n\n    const outsideTable = block?.node\n      .closest(\"table\")\n      ?.closest('[data-node-type=\"blockContainer\"]');\n    if (outsideTable) {\n      block = {\n        node: outsideTable as HTMLElement,\n        id: outsideTable.getAttribute(\"data-id\") || \"\",\n      };\n    }\n\n    // Closes the menu if the mouse cursor is beyond the editor vertically.\n    if (!block || !this.editor.isEditable) {\n      if (this.sideMenuState?.show) {\n        this.sideMenuState.show = false;\n        this.updateSideMenu(this.sideMenuState);\n      }\n\n      return;\n    }\n\n    // Doesn't update if the menu is already open and the mouse cursor is still hovering the same block.\n    if (\n      this.sideMenuState?.show &&\n      this.hoveredBlock?.hasAttribute(\"data-id\") &&\n      this.hoveredBlock?.getAttribute(\"data-id\") === block.id\n    ) {\n      return;\n    }\n\n    this.hoveredBlock = block.node;\n\n    // Gets the block's content node, which lets to ignore child blocks when determining the block menu's position.\n    const blockContent = block.node.firstChild as HTMLElement;\n\n    if (!blockContent) {\n      return;\n    }\n\n    // Shows or updates elements.\n    if (this.editor.isEditable) {\n      const blockContentBoundingBox = blockContent.getBoundingClientRect();\n\n      this.sideMenuState = {\n        show: true,\n        referencePos: new DOMRect(\n          this.horizontalPosAnchoredAtRoot\n            ? this.horizontalPosAnchor\n            : blockContentBoundingBox.x,\n          blockContentBoundingBox.y,\n          blockContentBoundingBox.width,\n          blockContentBoundingBox.height\n        ),\n        block: this.editor.getBlock(\n          this.hoveredBlock!.getAttribute(\"data-id\")!\n        )!,\n      };\n\n      this.updateSideMenu(this.sideMenuState);\n    }\n  };\n\n  onScroll = () => {\n    if (this.sideMenuState?.show) {\n      const blockContent = this.hoveredBlock!.firstChild as HTMLElement;\n      const blockContentBoundingBox = blockContent.getBoundingClientRect();\n\n      this.sideMenuState.referencePos = new DOMRect(\n        this.horizontalPosAnchoredAtRoot\n          ? this.horizontalPosAnchor\n          : blockContentBoundingBox.x,\n        blockContentBoundingBox.y,\n        blockContentBoundingBox.width,\n        blockContentBoundingBox.height\n      );\n      this.updateSideMenu(this.sideMenuState);\n    }\n  };\n\n  destroy() {\n    if (this.sideMenuState?.show) {\n      this.sideMenuState.show = false;\n      this.updateSideMenu(this.sideMenuState);\n    }\n    document.body.removeEventListener(\"mousemove\", this.onMouseMove);\n    document.body.removeEventListener(\"dragover\", this.onDragOver);\n    this.pmView.dom.removeEventListener(\"dragstart\", this.onDragStart);\n    document.body.removeEventListener(\"drop\", this.onDrop, true);\n    document.removeEventListener(\"scroll\", this.onScroll);\n    document.body.removeEventListener(\"mousedown\", this.onMouseDown, true);\n    document.body.removeEventListener(\"keydown\", this.onKeyDown, true);\n  }\n\n  addBlock() {\n    if (this.sideMenuState?.show) {\n      this.sideMenuState.show = false;\n      this.updateSideMenu(this.sideMenuState);\n    }\n\n    this.menuFrozen = true;\n\n    const blockContent = this.hoveredBlock!.firstChild! as HTMLElement;\n    const blockContentBoundingBox = blockContent.getBoundingClientRect();\n\n    const isTable = blockContent.querySelector(\"table\");\n\n    const pos = this.pmView.posAtCoords({\n      left: blockContentBoundingBox.left + blockContentBoundingBox.width / 2,\n      top: isTable\n        ? blockContentBoundingBox.top + blockContentBoundingBox.height\n        : blockContentBoundingBox.top + blockContentBoundingBox.height / 2,\n    });\n    if (!pos) {\n      return;\n    }\n\n    const blockInfo = getBlockInfoFromPos(\n      this.editor._tiptapEditor.state.doc,\n      pos.pos\n    );\n    if (blockInfo === undefined) {\n      return;\n    }\n\n    const { contentNode, endPos } = blockInfo;\n\n    // Creates a new block if current one is not empty for the suggestion menu to open in.\n    if (contentNode.textContent.length !== 0) {\n      const newBlockInsertionPos = endPos + 1;\n      const newBlockContentPos = newBlockInsertionPos + 2;\n\n      this.editor._tiptapEditor\n        .chain()\n        .BNCreateBlock(newBlockInsertionPos)\n        .BNUpdateBlock(newBlockContentPos, { type: \"paragraph\", props: {} })\n        .setTextSelection(newBlockContentPos)\n        .run();\n    } else {\n      this.editor._tiptapEditor.commands.setTextSelection(endPos);\n    }\n\n    // Focuses and activates the suggestion menu.\n    this.pmView.focus();\n    this.pmView.dispatch(\n      this.pmView.state.tr.scrollIntoView().setMeta(slashMenuPluginKey, {\n        // TODO import suggestion plugin key\n        activate: true,\n        type: \"drag\",\n      })\n    );\n  }\n}\n\nexport const sideMenuPluginKey = new PluginKey(\"SideMenuPlugin\");\n\nexport class SideMenuProsemirrorPlugin<\n  BSchema extends BlockSchema\n> extends EventEmitter<any> {\n  private sideMenuView: SideMenuView<BSchema> | undefined;\n  public readonly plugin: Plugin;\n\n  constructor(private readonly editor: BlockNoteEditor<BSchema>) {\n    super();\n    this.plugin = new Plugin({\n      key: sideMenuPluginKey,\n      view: (editorView) => {\n        this.sideMenuView = new SideMenuView(\n          editor,\n          editorView,\n          (sideMenuState) => {\n            this.emit(\"update\", sideMenuState);\n          }\n        );\n        return this.sideMenuView;\n      },\n    });\n  }\n\n  public onUpdate(callback: (state: SideMenuState<BSchema>) => void) {\n    return this.on(\"update\", callback);\n  }\n\n  /**\n   * If the block is empty, opens the slash menu. If the block has content,\n   * creates a new block below and opens the slash menu in it.\n   */\n  addBlock = () => this.sideMenuView!.addBlock();\n\n  /**\n   * Handles drag & drop events for blocks.\n   */\n  blockDragStart = (event: {\n    dataTransfer: DataTransfer | null;\n    clientY: number;\n  }) => {\n    this.sideMenuView!.isDragging = true;\n    dragStart(event, this.editor.prosemirrorView);\n  };\n\n  /**\n   * Handles drag & drop events for blocks.\n   */\n  blockDragEnd = () => unsetDragImage();\n  /**\n   * Freezes the side menu. When frozen, the side menu will stay\n   * attached to the same block regardless of which block is hovered by the\n   * mouse cursor.\n   */\n  freezeMenu = () => (this.sideMenuView!.menuFrozen = true);\n  /**\n   * Unfreezes the side menu. When frozen, the side menu will stay\n   * attached to the same block regardless of which block is hovered by the\n   * mouse cursor.\n   */\n  unfreezeMenu = () => (this.sideMenuView!.menuFrozen = false);\n}\n","import { BlockNoteEditor } from \"../../BlockNoteEditor\";\nimport { BlockSchema, PartialBlock } from \"../Blocks/api/blockTypes\";\nimport { BaseSlashMenuItem } from \"./BaseSlashMenuItem\";\nimport { defaultBlockSchema } from \"../Blocks/api/defaultBlocks\";\nimport { imageToolbarPluginKey } from \"../ImageToolbar/ImageToolbarPlugin\";\n\nfunction insertOrUpdateBlock<BSchema extends BlockSchema>(\n  editor: BlockNoteEditor<BSchema>,\n  block: PartialBlock<BSchema>\n) {\n  const currentBlock = editor.getTextCursorPosition().block;\n  if (currentBlock.type === \"table\") {\n    editor.insertBlocks([block], currentBlock, \"after\");\n    editor.setTextCursorPosition(\n      editor.getTextCursorPosition().nextBlock!,\n      \"end\"\n    );\n    return;\n  }\n\n  if (currentBlock.content === undefined) {\n    throw new Error(\n      \"Slash Menu open in a block that doesn't contain inline content.\"\n    );\n  }\n\n  // if (\n  //   (currentBlock.content.length === 1 &&\n  //     currentBlock.content[0].type === \"text\" &&\n  //     currentBlock.content[0].text === \"/\") ||\n  //   currentBlock.content.length === 0\n  // ) {\n  //   editor.updateBlock(currentBlock, block);\n  // } else {\n  //   editor.insertBlocks([block], currentBlock, \"after\");\n  //   editor.setTextCursorPosition(editor.getTextCursorPosition().nextBlock!);\n  // }\n  editor.updateBlock(currentBlock, block);\n}\n\nexport const getDefaultSlashMenuItems = <BSchema extends BlockSchema>(\n  // This type casting is weird, but it's the best way of doing it, as it allows\n  // the schema type to be automatically inferred if it is defined, or be\n  // inferred as any if it is not defined. I don't think it's possible to make it\n  // infer to DefaultBlockSchema if it is not defined.\n  schema: BSchema = defaultBlockSchema as unknown as BSchema\n) => {\n  const slashMenuItems: BaseSlashMenuItem<BSchema>[] = [];\n\n  if (\"heading\" in schema && \"level\" in schema.heading.propSchema) {\n    // Command for creating a level 1 heading\n    if (schema.heading.propSchema.level.values?.includes(1)) {\n      slashMenuItems.push({\n        name: \"Heading\",\n        aliases: [\"h\", \"heading1\", \"h1\"],\n        execute: (editor) =>\n          insertOrUpdateBlock(editor, {\n            type: \"heading\",\n            props: { level: 1 },\n          } as PartialBlock<BSchema>),\n      });\n    }\n\n    // Command for creating a level 2 heading\n    if (schema.heading.propSchema.level.values?.includes(2)) {\n      slashMenuItems.push({\n        name: \"Heading 2\",\n        aliases: [\"h2\", \"heading2\", \"subheading\"],\n        execute: (editor) =>\n          insertOrUpdateBlock(editor, {\n            type: \"heading\",\n            props: { level: 2 },\n          } as PartialBlock<BSchema>),\n      });\n    }\n\n    // Command for creating a level 3 heading\n    if (schema.heading.propSchema.level.values?.includes(3)) {\n      slashMenuItems.push({\n        name: \"Heading 3\",\n        aliases: [\"h3\", \"heading3\", \"subheading\"],\n        execute: (editor) =>\n          insertOrUpdateBlock(editor, {\n            type: \"heading\",\n            props: { level: 3 },\n          } as PartialBlock<BSchema>),\n      });\n    }\n  }\n\n  if (\"bulletListItem\" in schema) {\n    slashMenuItems.push({\n      name: \"Bullet List\",\n      aliases: [\"ul\", \"list\", \"bulletlist\", \"bullet list\"],\n      execute: (editor) =>\n        insertOrUpdateBlock(editor, {\n          type: \"bulletListItem\",\n        } as PartialBlock<BSchema>),\n    });\n  }\n\n  if (\"numberedListItem\" in schema) {\n    slashMenuItems.push({\n      name: \"Numbered List\",\n      aliases: [\"li\", \"list\", \"numberedlist\", \"numbered list\"],\n      execute: (editor) =>\n        insertOrUpdateBlock(editor, {\n          type: \"numberedListItem\",\n        } as PartialBlock<BSchema>),\n    });\n  }\n\n  if (\"paragraph\" in schema) {\n    slashMenuItems.push({\n      name: \"Paragraph\",\n      aliases: [\"p\"],\n      execute: (editor) =>\n        insertOrUpdateBlock(editor, {\n          type: \"paragraph\",\n        } as PartialBlock<BSchema>),\n    });\n  }\n\n  if (\"table\" in schema) {\n    slashMenuItems.push({\n      name: \"Table\",\n      aliases: [\"table\"],\n      execute: (editor) => {\n        const currentBlock = editor.getTextCursorPosition().block;\n        editor.insertBlocks(\n          [\n            {\n              type: \"table\",\n              props: {},\n            } as PartialBlock<BSchema>,\n          ],\n          currentBlock,\n          \"after\"\n        );\n        editor.setTextCursorPosition(editor.getTextCursorPosition().nextBlock!);\n      },\n    });\n  }\n\n  if (\"image\" in schema) {\n    slashMenuItems.push({\n      name: \"Image\",\n      aliases: [\n        \"image\",\n        \"imageUpload\",\n        \"upload\",\n        \"img\",\n        \"picture\",\n        \"media\",\n        \"url\",\n        \"drive\",\n        \"dropbox\",\n      ],\n      execute: (editor) => {\n        insertOrUpdateBlock(editor, {\n          type: \"image\",\n        } as PartialBlock<BSchema>);\n        // Don't want to select the add image button, instead select the block\n        // below it\n        editor.setTextCursorPosition(\n          editor.getTextCursorPosition().nextBlock!,\n          \"start\"\n        );\n        // Immediately open the image toolbar\n        editor._tiptapEditor.view.dispatch(\n          editor._tiptapEditor.state.tr.setMeta(imageToolbarPluginKey, {\n            block: editor.getTextCursorPosition().prevBlock,\n          })\n        );\n      },\n    });\n  }\n\n  return slashMenuItems;\n};\n","import { Editor, EditorOptions, Extension } from \"@tiptap/core\";\nimport { Node } from \"prosemirror-model\";\n// import \"./blocknote.css\";\nimport { Editor as TiptapEditor } from \"@tiptap/core/dist/packages/core/src/Editor\";\nimport * as Y from \"yjs\";\nimport { getBlockNoteExtensions } from \"./BlockNoteExtensions\";\nimport {\n  insertBlocks,\n  removeBlocks,\n  replaceBlocks,\n  updateBlock,\n} from \"./api/blockManipulation/blockManipulation\";\nimport {\n  HTMLToBlocks,\n  blocksToHTML,\n  blocksToMarkdown,\n  markdownToBlocks,\n} from \"./api/formatConversions/formatConversions\";\nimport {\n  blockToNode,\n  nodeToBlock,\n} from \"./api/nodeConversions/nodeConversions\";\nimport { getNodeById } from \"./api/util/nodeUtil\";\nimport styles from \"./editor.module.css\";\nimport {\n  Block,\n  BlockIdentifier,\n  BlockNoteDOMAttributes,\n  BlockSchema,\n  PartialBlock,\n} from \"./extensions/Blocks/api/blockTypes\";\nimport {\n  DefaultBlockSchema,\n  defaultBlockSchema,\n} from \"./extensions/Blocks/api/defaultBlocks\";\nimport {\n  ColorStyle,\n  Styles,\n  ToggledStyle,\n} from \"./extensions/Blocks/api/inlineContentTypes\";\nimport { Selection } from \"./extensions/Blocks/api/selectionTypes\";\nimport { getBlockInfoFromPos } from \"./extensions/Blocks/helpers/getBlockInfoFromPos\";\n\nimport { TextCursorPosition } from \"./extensions/Blocks/api/cursorPositionTypes\";\nimport { FormattingToolbarProsemirrorPlugin } from \"./extensions/FormattingToolbar/FormattingToolbarPlugin\";\nimport { HyperlinkToolbarProsemirrorPlugin } from \"./extensions/HyperlinkToolbar/HyperlinkToolbarPlugin\";\nimport { ImageToolbarProsemirrorPlugin } from \"./extensions/ImageToolbar/ImageToolbarPlugin\";\nimport { TableToolbarProsemirrorPlugin } from \"./extensions/TableToolbar/TableToolbarPlugin\";\nimport { SideMenuProsemirrorPlugin } from \"./extensions/SideMenu/SideMenuPlugin\";\nimport { BaseSlashMenuItem } from \"./extensions/SlashMenu/BaseSlashMenuItem\";\nimport { SlashMenuProsemirrorPlugin } from \"./extensions/SlashMenu/SlashMenuPlugin\";\nimport { getDefaultSlashMenuItems } from \"./extensions/SlashMenu/defaultSlashMenuItems\";\nimport { UniqueID } from \"./extensions/UniqueID/UniqueID\";\nimport { mergeCSSClasses } from \"./shared/utils\";\n\nexport type BlockNoteEditorOptions<BSchema extends BlockSchema> = {\n  // TODO: Figure out if enableBlockNoteExtensions/disableHistoryExtension are needed and document them.\n  enableBlockNoteExtensions: boolean;\n  /**\n   *\n   * (couldn't fix any type, see https://github.com/TypeCellOS/BlockNote/pull/191#discussion_r1210708771)\n   *\n   * @default defaultSlashMenuItems from `./extensions/SlashMenu`\n   */\n  slashMenuItems: BaseSlashMenuItem<any>[];\n\n  /**\n   * The HTML element that should be used as the parent element for the editor.\n   *\n   * @default: undefined, the editor is not attached to the DOM\n   */\n  parentElement: HTMLElement;\n  /**\n   * An object containing attributes that should be added to HTML elements of the editor.\n   *\n   * @example { editor: { class: \"my-editor-class\" } }\n   */\n  domAttributes: Partial<BlockNoteDOMAttributes>;\n  /**\n   *  A callback function that runs when the editor is ready to be used.\n   */\n  onEditorReady: (editor: BlockNoteEditor<BSchema>) => void;\n  /**\n   * A callback function that runs whenever the editor's contents change.\n   */\n  onEditorContentChange: (editor: BlockNoteEditor<BSchema>) => void;\n  /**\n   * A callback function that runs whenever the text cursor position changes.\n   */\n  onTextCursorPositionChange: (editor: BlockNoteEditor<BSchema>) => void;\n  /**\n   * Locks the editor from being editable by the user if set to `false`.\n   */\n  editable: boolean;\n  /**\n   * The content that should be in the editor when it's created, represented as an array of partial block objects.\n   */\n  initialContent: PartialBlock<BSchema>[];\n  /**\n   * Use default BlockNote font and reset the styles of <p> <li> <h1> elements etc., that are used in BlockNote.\n   *\n   * @default true\n   */\n  defaultStyles: boolean;\n\n  /**\n   * A list of block types that should be available in the editor.\n   */\n  blockSchema: BSchema;\n\n  /**\n   * A custom function to handle file uploads.\n   * @param file The file that should be uploaded.\n   * @returns The URL of the uploaded file.\n   */\n  uploadFile: (file: File) => Promise<string>;\n\n  /**\n   * When enabled, allows for collaboration between multiple users.\n   */\n  collaboration: {\n    /**\n     * The Yjs XML fragment that's used for collaboration.\n     */\n    fragment: Y.XmlFragment;\n    /**\n     * The user info for the current user that's shown to other collaborators.\n     */\n    user: {\n      name: string;\n      color: string;\n    };\n    /**\n     * A Yjs provider (used for awareness / cursor information)\n     */\n    provider: any;\n    /**\n     * Optional function to customize how cursors of users are rendered\n     */\n    renderCursor?: (user: any) => HTMLElement;\n  };\n\n  // tiptap options, undocumented\n  _tiptapOptions: Partial<EditorOptions>;\n};\n\nconst blockNoteTipTapOptions = {\n  enableInputRules: true,\n  enablePasteRules: true,\n  enableCoreExtensions: false,\n};\n\nexport class BlockNoteEditor<BSchema extends BlockSchema = DefaultBlockSchema> {\n  public readonly _tiptapEditor: TiptapEditor & { contentComponent: any };\n  public blockCache = new WeakMap<Node, Block<BSchema>>();\n  public readonly schema: BSchema;\n  public ready = false;\n\n  public readonly sideMenu: SideMenuProsemirrorPlugin<BSchema>;\n  public readonly formattingToolbar: FormattingToolbarProsemirrorPlugin<BSchema>;\n  public readonly slashMenu: SlashMenuProsemirrorPlugin<BSchema, any>;\n  public readonly hyperlinkToolbar: HyperlinkToolbarProsemirrorPlugin<BSchema>;\n  public readonly imageToolbar: ImageToolbarProsemirrorPlugin<BSchema>;\n  public readonly tableToolbar: TableToolbarProsemirrorPlugin<BSchema>;\n\n  public readonly uploadFile: ((file: File) => Promise<string>) | undefined;\n\n  constructor(\n    private readonly options: Partial<BlockNoteEditorOptions<BSchema>> = {}\n  ) {\n    // apply defaults\n    const newOptions: Omit<typeof options, \"defaultStyles\" | \"blockSchema\"> & {\n      defaultStyles: boolean;\n      blockSchema: BSchema;\n    } = {\n      defaultStyles: true,\n      // TODO: There's a lot of annoying typing stuff to deal with here. If\n      //  BSchema is specified, then options.blockSchema should also be required.\n      //  If BSchema is not specified, then options.blockSchema should also not\n      //  be defined. Unfortunately, trying to implement these constraints seems\n      //  to be a huge pain, hence the `as any` casts.\n      blockSchema: options.blockSchema || (defaultBlockSchema as any),\n      ...options,\n    };\n\n    this.sideMenu = new SideMenuProsemirrorPlugin(this);\n    this.formattingToolbar = new FormattingToolbarProsemirrorPlugin(this);\n    this.slashMenu = new SlashMenuProsemirrorPlugin(\n      this,\n      newOptions.slashMenuItems ||\n        getDefaultSlashMenuItems(newOptions.blockSchema)\n    );\n    this.hyperlinkToolbar = new HyperlinkToolbarProsemirrorPlugin(this);\n    this.imageToolbar = new ImageToolbarProsemirrorPlugin(this);\n    this.tableToolbar = new TableToolbarProsemirrorPlugin(this);\n\n    const extensions = getBlockNoteExtensions<BSchema>({\n      editor: this,\n      domAttributes: newOptions.domAttributes || {},\n      blockSchema: newOptions.blockSchema,\n      collaboration: newOptions.collaboration,\n    });\n\n    const blockNoteUIExtension = Extension.create({\n      name: \"BlockNoteUIExtension\",\n\n      addProseMirrorPlugins: () => {\n        return [\n          this.sideMenu.plugin,\n          this.formattingToolbar.plugin,\n          this.slashMenu.plugin,\n          this.hyperlinkToolbar.plugin,\n          this.imageToolbar.plugin,\n          this.tableToolbar.plugin,\n        ];\n      },\n    });\n    extensions.push(blockNoteUIExtension);\n\n    this.schema = newOptions.blockSchema;\n\n    this.uploadFile = newOptions.uploadFile;\n\n    if (newOptions.collaboration && newOptions.initialContent) {\n      console.warn(\n        \"When using Collaboration, initialContent might cause conflicts, because changes should come from the collaboration provider\"\n      );\n    }\n\n    const initialContent =\n      newOptions.initialContent ||\n      (options.collaboration\n        ? undefined\n        : [\n            {\n              type: \"paragraph\",\n              id: UniqueID.options.generateID(),\n            },\n          ]);\n\n    const tiptapOptions: Partial<EditorOptions> = {\n      ...blockNoteTipTapOptions,\n      ...newOptions._tiptapOptions,\n      onBeforeCreate(editor) {\n        newOptions._tiptapOptions?.onBeforeCreate?.(editor);\n        // We always set the initial content to a single paragraph block. This\n        // allows us to easily replace it with the actual initial content once\n        // the TipTap editor is initialized.\n        const schema = editor.editor.schema;\n\n        // This is a hack to make \"initial content detection\" by y-prosemirror (and also tiptap isEmpty)\n        // properly detect whether or not the document has changed.\n        // We change the doc.createAndFill function to make sure the initial block id is set, instead of null\n        let cache: any;\n        const oldCreateAndFill = schema.nodes.doc.createAndFill;\n        (schema.nodes.doc as any).createAndFill = (...args: any) => {\n          if (cache) {\n            return cache;\n          }\n          const ret = oldCreateAndFill.apply(schema.nodes.doc, args);\n\n          // create a copy that we can mutate (otherwise, assigning attrs is not safe and corrupts the pm state)\n          const jsonNode = JSON.parse(JSON.stringify(ret!.toJSON()));\n          jsonNode.content[0].content[0].attrs.id = \"initialBlockId\";\n\n          cache = Node.fromJSON(schema, jsonNode);\n          return ret;\n        };\n\n        const root = schema.node(\n          \"doc\",\n          undefined,\n          schema.node(\"blockGroup\", undefined, [\n            blockToNode({ id: \"initialBlockId\", type: \"paragraph\" }, schema),\n          ])\n        );\n        editor.editor.options.content = root.toJSON();\n      },\n      onCreate: (editor) => {\n        newOptions._tiptapOptions?.onCreate?.(editor);\n        // We need to wait for the TipTap editor to init before we can set the\n        // initial content, as the schema may contain custom blocks which need\n        // it to render.\n        if (initialContent !== undefined) {\n          this.replaceBlocks(this.topLevelBlocks, initialContent);\n        }\n\n        newOptions.onEditorReady?.(this);\n        this.ready = true;\n      },\n      onUpdate: (editor) => {\n        newOptions._tiptapOptions?.onUpdate?.(editor);\n        // This seems to be necessary due to a bug in TipTap:\n        // https://github.com/ueberdosis/tiptap/issues/2583\n        if (!this.ready) {\n          return;\n        }\n\n        newOptions.onEditorContentChange?.(this);\n      },\n      onSelectionUpdate: (editor) => {\n        newOptions._tiptapOptions?.onSelectionUpdate?.(editor);\n        // This seems to be necessary due to a bug in TipTap:\n        // https://github.com/ueberdosis/tiptap/issues/2583\n        if (!this.ready) {\n          return;\n        }\n\n        newOptions.onTextCursorPositionChange?.(this);\n      },\n      editable:\n        options.editable !== undefined\n          ? options.editable\n          : newOptions._tiptapOptions?.editable !== undefined\n          ? newOptions._tiptapOptions?.editable\n          : true,\n      extensions:\n        newOptions.enableBlockNoteExtensions === false\n          ? newOptions._tiptapOptions?.extensions || []\n          : [...(newOptions._tiptapOptions?.extensions || []), ...extensions],\n      editorProps: {\n        ...newOptions._tiptapOptions?.editorProps,\n        attributes: {\n          ...newOptions._tiptapOptions?.editorProps?.attributes,\n          ...newOptions.domAttributes?.editor,\n          class: mergeCSSClasses(\n            styles.bnEditor,\n            styles.bnRoot,\n            newOptions.domAttributes?.editor?.class || \"\",\n            newOptions.defaultStyles ? styles.defaultStyles : \"\",\n            newOptions.domAttributes?.editor?.class || \"\"\n          ),\n        },\n      },\n    };\n\n    if (newOptions.parentElement) {\n      tiptapOptions.element = newOptions.parentElement;\n    }\n\n    this._tiptapEditor = new Editor(tiptapOptions) as Editor & {\n      contentComponent: any;\n    };\n  }\n\n  public get prosemirrorView() {\n    return this._tiptapEditor.view;\n  }\n\n  public get domElement() {\n    return this._tiptapEditor.view.dom as HTMLDivElement;\n  }\n\n  public isFocused() {\n    return this._tiptapEditor.view.hasFocus();\n  }\n\n  public focus() {\n    this._tiptapEditor.view.focus();\n  }\n\n  /**\n   * Gets a snapshot of all top-level (non-nested) blocks in the editor.\n   * @returns A snapshot of all top-level (non-nested) blocks in the editor.\n   */\n  public get topLevelBlocks(): Block<BSchema>[] {\n    const blocks: Block<BSchema>[] = [];\n\n    this._tiptapEditor.state.doc.firstChild!.descendants((node) => {\n      blocks.push(nodeToBlock(node, this.schema, this.blockCache));\n\n      return false;\n    });\n\n    return blocks;\n  }\n\n  /**\n   * Gets a snapshot of an existing block from the editor.\n   * @param blockIdentifier The identifier of an existing block that should be retrieved.\n   * @returns The block that matches the identifier, or `undefined` if no matching block was found.\n   */\n  public getBlock(\n    blockIdentifier: BlockIdentifier\n  ): Block<BSchema> | undefined {\n    const id =\n      typeof blockIdentifier === \"string\"\n        ? blockIdentifier\n        : blockIdentifier.id;\n    let newBlock: Block<BSchema> | undefined = undefined;\n\n    this._tiptapEditor.state.doc.firstChild!.descendants((node) => {\n      if (typeof newBlock !== \"undefined\") {\n        return false;\n      }\n\n      if (node.type.name !== \"blockContainer\" || node.attrs.id !== id) {\n        return true;\n      }\n\n      newBlock = nodeToBlock(node, this.schema, this.blockCache);\n\n      return false;\n    });\n\n    return newBlock;\n  }\n\n  /**\n   * Traverses all blocks in the editor depth-first, and executes a callback for each.\n   * @param callback The callback to execute for each block. Returning `false` stops the traversal.\n   * @param reverse Whether the blocks should be traversed in reverse order.\n   */\n  public forEachBlock(\n    callback: (block: Block<BSchema>) => boolean,\n    reverse = false\n  ): void {\n    const blocks = this.topLevelBlocks.slice();\n\n    if (reverse) {\n      blocks.reverse();\n    }\n\n    function traverseBlockArray(blockArray: Block<BSchema>[]): boolean {\n      for (const block of blockArray) {\n        if (!callback(block)) {\n          return false;\n        }\n\n        const children = reverse\n          ? block.children.slice().reverse()\n          : block.children;\n\n        if (!traverseBlockArray(children)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    traverseBlockArray(blocks);\n  }\n\n  /**\n   * Executes a callback whenever the editor's contents change.\n   * @param callback The callback to execute.\n   */\n  public onEditorContentChange(callback: () => void) {\n    this._tiptapEditor.on(\"update\", callback);\n  }\n\n  /**\n   * Executes a callback whenever the editor's selection changes.\n   * @param callback The callback to execute.\n   */\n  public onEditorSelectionChange(callback: () => void) {\n    this._tiptapEditor.on(\"selectionUpdate\", callback);\n  }\n\n  /**\n   * Gets a snapshot of the current text cursor position.\n   * @returns A snapshot of the current text cursor position.\n   */\n  public getTextCursorPosition(): TextCursorPosition<BSchema> {\n    const { node, depth, startPos, endPos } = getBlockInfoFromPos(\n      this._tiptapEditor.state.doc,\n      this._tiptapEditor.state.selection.from\n    )!;\n\n    // Index of the current blockContainer node relative to its parent blockGroup.\n    const nodeIndex = this._tiptapEditor.state.doc\n      .resolve(endPos)\n      .index(depth - 1);\n    // Number of the parent blockGroup's child blockContainer nodes.\n    const numNodes = this._tiptapEditor.state.doc\n      .resolve(endPos + 1)\n      .node().childCount;\n\n    // Gets previous blockContainer node at the same nesting level, if the current node isn't the first child.\n    let prevNode: Node | undefined = undefined;\n    if (nodeIndex > 0) {\n      prevNode = this._tiptapEditor.state.doc.resolve(startPos - 2).node();\n    }\n\n    // Gets next blockContainer node at the same nesting level, if the current node isn't the last child.\n    let nextNode: Node | undefined = undefined;\n    if (nodeIndex < numNodes - 1) {\n      nextNode = this._tiptapEditor.state.doc.resolve(endPos + 2).node();\n    }\n\n    return {\n      block: nodeToBlock(node, this.schema, this.blockCache),\n      prevBlock:\n        prevNode === undefined\n          ? undefined\n          : nodeToBlock(prevNode, this.schema, this.blockCache),\n      nextBlock:\n        nextNode === undefined\n          ? undefined\n          : nodeToBlock(nextNode, this.schema, this.blockCache),\n    };\n  }\n\n  /**\n   * Sets the text cursor position to the start or end of an existing block. Throws an error if the target block could\n   * not be found.\n   * @param targetBlock The identifier of an existing block that the text cursor should be moved to.\n   * @param placement Whether the text cursor should be placed at the start or end of the block.\n   */\n  public setTextCursorPosition(\n    targetBlock: BlockIdentifier,\n    placement: \"start\" | \"end\" = \"start\"\n  ) {\n    const id = typeof targetBlock === \"string\" ? targetBlock : targetBlock?.id;\n    if (!id) return;\n    const { posBeforeNode } = getNodeById(id, this._tiptapEditor.state.doc);\n    const { startPos, contentNode } = getBlockInfoFromPos(\n      this._tiptapEditor.state.doc,\n      posBeforeNode + 2\n    )!;\n\n    // For blocks without inline content\n    if (contentNode.type.spec.content === \"\") {\n      this._tiptapEditor.commands.setNodeSelection(startPos);\n      return;\n    }\n\n    if (placement === \"start\") {\n      this._tiptapEditor.commands.setTextSelection(startPos + 1);\n    } else {\n      this._tiptapEditor.commands.setTextSelection(\n        startPos + contentNode.nodeSize - 1\n      );\n    }\n  }\n\n  /**\n   * Gets a snapshot of the current selection.\n   */\n  public getSelection(): Selection<BSchema> | undefined {\n    // Either the TipTap selection is empty, or it's a node selection. In either\n    // case, it only spans one block, so we return undefined.\n    if (\n      this._tiptapEditor.state.selection.from ===\n        this._tiptapEditor.state.selection.to ||\n      \"node\" in this._tiptapEditor.state.selection\n    ) {\n      return undefined;\n    }\n\n    const blocks: Block<BSchema>[] = [];\n\n    this._tiptapEditor.state.doc.descendants((node, pos) => {\n      if (node.type.spec.group !== \"blockContent\") {\n        return true;\n      }\n\n      if (\n        pos + node.nodeSize < this._tiptapEditor.state.selection.from ||\n        pos > this._tiptapEditor.state.selection.to\n      ) {\n        return true;\n      }\n\n      blocks.push(\n        nodeToBlock(\n          this._tiptapEditor.state.doc.resolve(pos).node(),\n          this.schema,\n          this.blockCache\n        )\n      );\n\n      return false;\n    });\n\n    return { blocks: blocks };\n  }\n\n  /**\n   * Checks if the editor is currently editable, or if it's locked.\n   * @returns True if the editor is editable, false otherwise.\n   */\n  public get isEditable(): boolean {\n    return this._tiptapEditor.isEditable;\n  }\n\n  /**\n   * Makes the editor editable or locks it, depending on the argument passed.\n   * @param editable True to make the editor editable, or false to lock it.\n   */\n  public set isEditable(editable: boolean) {\n    this._tiptapEditor.setEditable(editable);\n  }\n\n  /**\n   * Inserts new blocks into the editor. If a block's `id` is undefined, BlockNote generates one automatically. Throws an\n   * error if the reference block could not be found.\n   * @param blocksToInsert An array of partial blocks that should be inserted.\n   * @param referenceBlock An identifier for an existing block, at which the new blocks should be inserted.\n   * @param placement Whether the blocks should be inserted just before, just after, or nested inside the\n   * `referenceBlock`. Inserts the blocks at the start of the existing block's children if \"nested\" is used.\n   */\n  public insertBlocks(\n    blocksToInsert: PartialBlock<BSchema>[],\n    referenceBlock: BlockIdentifier,\n    placement: \"before\" | \"after\" | \"nested\" = \"before\"\n  ): void {\n    insertBlocks(blocksToInsert, referenceBlock, placement, this._tiptapEditor);\n  }\n\n  /**\n   * Updates an existing block in the editor. Since updatedBlock is a PartialBlock object, some fields might not be\n   * defined. These undefined fields are kept as-is from the existing block. Throws an error if the block to update could\n   * not be found.\n   * @param blockToUpdate The block that should be updated.\n   * @param update A partial block which defines how the existing block should be changed.\n   */\n  public updateBlock(\n    blockToUpdate: BlockIdentifier,\n    update: PartialBlock<BSchema>\n  ) {\n    updateBlock(blockToUpdate, update, this._tiptapEditor);\n  }\n\n  /**\n   * Removes existing blocks from the editor. Throws an error if any of the blocks could not be found.\n   * @param blocksToRemove An array of identifiers for existing blocks that should be removed.\n   */\n  public removeBlocks(blocksToRemove: BlockIdentifier[]) {\n    removeBlocks(blocksToRemove, this._tiptapEditor);\n  }\n\n  /**\n   * Replaces existing blocks in the editor with new blocks. If the blocks that should be removed are not adjacent or\n   * are at different nesting levels, `blocksToInsert` will be inserted at the position of the first block in\n   * `blocksToRemove`. Throws an error if any of the blocks to remove could not be found.\n   * @param blocksToRemove An array of blocks that should be replaced.\n   * @param blocksToInsert An array of partial blocks to replace the old ones with.\n   */\n  public replaceBlocks(\n    blocksToRemove: BlockIdentifier[],\n    blocksToInsert: PartialBlock<BSchema>[]\n  ) {\n    replaceBlocks(blocksToRemove, blocksToInsert, this._tiptapEditor);\n  }\n\n  /**\n   * Gets the active text styles at the text cursor position or at the end of the current selection if it's active.\n   */\n  public getActiveStyles() {\n    const styles: Styles = {};\n    const marks = this._tiptapEditor.state.selection.$to.marks();\n\n    const toggleStyles = new Set<ToggledStyle>([\n      \"bold\",\n      \"italic\",\n      \"underline\",\n      \"strike\",\n      \"code\",\n    ]);\n    const colorStyles = new Set<ColorStyle>([\"textColor\", \"backgroundColor\"]);\n\n    for (const mark of marks) {\n      if (toggleStyles.has(mark.type.name as ToggledStyle)) {\n        styles[mark.type.name as ToggledStyle] = true;\n      } else if (colorStyles.has(mark.type.name as ColorStyle)) {\n        styles[mark.type.name as ColorStyle] = mark.attrs.color;\n      }\n    }\n\n    return styles;\n  }\n\n  /**\n   * Adds styles to the currently selected content.\n   * @param styles The styles to add.\n   */\n  public addStyles(styles: Styles) {\n    const toggleStyles = new Set<ToggledStyle>([\n      \"bold\",\n      \"italic\",\n      \"underline\",\n      \"strike\",\n      \"code\",\n    ]);\n    const colorStyles = new Set<ColorStyle>([\"textColor\", \"backgroundColor\"]);\n\n    this._tiptapEditor.view.focus();\n\n    for (const [style, value] of Object.entries(styles)) {\n      if (toggleStyles.has(style as ToggledStyle)) {\n        this._tiptapEditor.commands.setMark(style);\n      } else if (colorStyles.has(style as ColorStyle)) {\n        this._tiptapEditor.commands.setMark(style, { color: value });\n      }\n    }\n  }\n\n  /**\n   * Removes styles from the currently selected content.\n   * @param styles The styles to remove.\n   */\n  public removeStyles(styles: Styles) {\n    this._tiptapEditor.view.focus();\n\n    for (const style of Object.keys(styles)) {\n      this._tiptapEditor.commands.unsetMark(style);\n    }\n  }\n\n  /**\n   * Toggles styles on the currently selected content.\n   * @param styles The styles to toggle.\n   */\n  public toggleStyles(styles: Styles) {\n    const toggleStyles = new Set<ToggledStyle>([\n      \"bold\",\n      \"italic\",\n      \"underline\",\n      \"strike\",\n      \"code\",\n    ]);\n    const colorStyles = new Set<ColorStyle>([\"textColor\", \"backgroundColor\"]);\n\n    this._tiptapEditor.view.focus();\n\n    for (const [style, value] of Object.entries(styles)) {\n      if (toggleStyles.has(style as ToggledStyle)) {\n        this._tiptapEditor.commands.toggleMark(style);\n      } else if (colorStyles.has(style as ColorStyle)) {\n        this._tiptapEditor.commands.toggleMark(style, { color: value });\n      }\n    }\n  }\n\n  /**\n   * Gets the currently selected text.\n   */\n  public getSelectedText() {\n    return this._tiptapEditor.state.doc.textBetween(\n      this._tiptapEditor.state.selection.from,\n      this._tiptapEditor.state.selection.to\n    );\n  }\n\n  /**\n   * Gets the URL of the last link in the current selection, or `undefined` if there are no links in the selection.\n   */\n  public getSelectedLinkUrl() {\n    return this._tiptapEditor.getAttributes(\"link\").href as string | undefined;\n  }\n\n  /**\n   * Creates a new link to replace the selected content.\n   * @param url The link URL.\n   * @param text The text to display the link with.\n   */\n  public createLink(url: string, text?: string) {\n    if (url === \"\") {\n      return;\n    }\n\n    const { from, to } = this._tiptapEditor.state.selection;\n\n    if (!text) {\n      text = this._tiptapEditor.state.doc.textBetween(from, to);\n    }\n\n    const mark = this._tiptapEditor.schema.mark(\"link\", { href: url });\n\n    this._tiptapEditor.view.dispatch(\n      this._tiptapEditor.view.state.tr\n        .insertText(text, from, to)\n        .addMark(from, from + text.length, mark)\n    );\n  }\n\n  /**\n   * Checks if the block containing the text cursor can be nested.\n   */\n  public canNestBlock() {\n    const { startPos, depth } = getBlockInfoFromPos(\n      this._tiptapEditor.state.doc,\n      this._tiptapEditor.state.selection.from\n    )!;\n\n    return this._tiptapEditor.state.doc.resolve(startPos).index(depth - 1) > 0;\n  }\n\n  /**\n   * Nests the block containing the text cursor into the block above it.\n   */\n  public nestBlock() {\n    this._tiptapEditor.commands.sinkListItem(\"blockContainer\");\n  }\n\n  /**\n   * Checks if the block containing the text cursor is nested.\n   */\n  public canUnnestBlock() {\n    const { depth } = getBlockInfoFromPos(\n      this._tiptapEditor.state.doc,\n      this._tiptapEditor.state.selection.from\n    )!;\n\n    return depth > 2;\n  }\n\n  /**\n   * Lifts the block containing the text cursor out of its parent.\n   */\n  public unnestBlock() {\n    this._tiptapEditor.commands.liftListItem(\"blockContainer\");\n  }\n\n  /**\n   * Serializes blocks into an HTML string. To better conform to HTML standards, children of blocks which aren't list\n   * items are un-nested in the output HTML.\n   * @param blocks An array of blocks that should be serialized into HTML.\n   * @returns The blocks, serialized as an HTML string.\n   */\n  public async blocksToHTML(blocks: Block<BSchema>[]): Promise<string> {\n    return blocksToHTML(blocks, this._tiptapEditor.schema);\n  }\n\n  /**\n   * Parses blocks from an HTML string. Tries to create `Block` objects out of any HTML block-level elements, and\n   * `InlineNode` objects from any HTML inline elements, though not all element types are recognized. If BlockNote\n   * doesn't recognize an HTML element's tag, it will parse it as a paragraph or plain text.\n   * @param html The HTML string to parse blocks from.\n   * @returns The blocks parsed from the HTML string.\n   */\n  public async HTMLToBlocks(html: string): Promise<Block<BSchema>[]> {\n    return HTMLToBlocks(html, this.schema, this._tiptapEditor.schema);\n  }\n\n  /**\n   * Serializes blocks into a Markdown string. The output is simplified as Markdown does not support all features of\n   * BlockNote - children of blocks which aren't list items are un-nested and certain styles are removed.\n   * @param blocks An array of blocks that should be serialized into Markdown.\n   * @returns The blocks, serialized as a Markdown string.\n   */\n  public async blocksToMarkdown(blocks: Block<BSchema>[]): Promise<string> {\n    return blocksToMarkdown(blocks, this._tiptapEditor.schema);\n  }\n\n  /**\n   * Creates a list of blocks from a Markdown string. Tries to create `Block` and `InlineNode` objects based on\n   * Markdown syntax, though not all symbols are recognized. If BlockNote doesn't recognize a symbol, it will parse it\n   * as text.\n   * @param markdown The Markdown string to parse blocks from.\n   * @returns The blocks parsed from the Markdown string.\n   */\n  public async markdownToBlocks(markdown: string): Promise<Block<BSchema>[]> {\n    return markdownToBlocks(markdown, this.schema, this._tiptapEditor.schema);\n  }\n\n  /**\n   * Updates the user info for the current user that's shown to other collaborators.\n   */\n  public updateCollaborationUserInfo(user: { name: string; color: string }) {\n    if (!this.options.collaboration) {\n      throw new Error(\n        \"Cannot update collaboration user info when collaboration is disabled.\"\n      );\n    }\n    this._tiptapEditor.commands.updateUser(user);\n  }\n}\n","export const uploadToTmpFilesDotOrg_DEV_ONLY = async (file: File) => {\n  const body = new FormData();\n  body.append(\"file\", file);\n\n  const ret = await fetch(\"https://tmpfiles.org/api/v1/upload\", {\n    method: \"POST\",\n    body: body,\n  });\n  return (await ret.json()).data.url.replace(\n    \"tmpfiles.org/\",\n    \"tmpfiles.org/dl/\"\n  );\n};\n"],"names":["content","key","i","found","self","map","a","from","text","node","last","first","index","copy","p","Mark","replace","joinable","path","doc","Node","one","base","string","search","types","min","max","type","nfa","edge","expr","states","defaults","NodeType","mark","ok","DOMParser","style","wrap","parser","styles","block","option","space","del","parent","tr","s","lift","setBlockType","split","join","matches","match","close","point","deleteRange","TransformError","selectionToInsertionEnd","head","ignore","Transaction","keys","ie","mac","element","enter","root","preMatch","wrapper","img","empty","code","serializeForClipboard","html","dom","handlers","event","handleTripleClick","cut","getText","isNode","oldOffset","find","anchor","parse","sel","prop","normalizeKeyName","shift","meta","normalize","deleteSelection","joinBackward","selectNodeBackward","joinForward","selectNodeForward","joinUp","joinDown","newlineInCode","defaultBlockAt","exitCode","createParagraphNear","liftEmptyBlock","selectParentNode","selectTextblockStart","selectTextblockEnd","wrapIn","wrapInList","liftListItem","list","sinkListItem","command","run","extension","extensions","_a","Schema","run$1","commands","findDuplicates","isPlainObject","source","range","position","forEach","isActive","document","transform","removeDuplicates","setMeta","newNextTypeAttributes","nextType","handleBackspace","handleDelete","handleEnter","isEmpty","EventEmitter","focus","blur","removeMark","starInputRegex","starPasteRegex","underscoreInputRegex","underscorePasteRegex","inputRegex","pasteRegex","create","isArray","map.create","map.setIfUndefined","set.create","array.from","math.floor","length","math.max","binary.BITS7","binary.BIT8","math.isNegativeZero","binary.BITS6","binary.BIT7","string.utf8TextEncoder","string.encodeUtf8","math.min","number.isInteger","math.abs","binary.BITS31","array.isArray","getRandomValues","assign","hasProperty","string.fromCamelCase","conditions.undefinedToNull","storage.varStorage","f.isOneOf","map.map","timeout","symbol.create","common.BOLD","pair.create","common.UNBOLD","common.BLUE","common.GREEN","common.GREY","common.RED","common.PURPLE","common.ORANGE","common.UNCOLOR","dom.mapToStyleString","env.supportsColor","common.computeNoColorLoggingArgs","warn","array.appendTo","encoding.writeVarUint","random.uint32","Doc","random.uuidv4","promise.create","resolve","encoding.createEncoder","encoding.toUint8Array","encoding.writeUint8","encoding.writeVarString","any","encoding.writeAny","encoding.writeVarUint8Array","error.unexpectedCase","encoding.IntDiffOptRleEncoder","encoding.UintOptRleEncoder","encoding.RleEncoder","encoding.StringEncoder","encoding.writeUint8Array","f.callAll","createRelativePosition","Item","isVisible","snapshot","map.any","struct","logging.print","logging.ORANGE","logging.BOLD","logging.UNBOLD","logging.RED","time.getUnixTime","logging.warn","error.create","array.last","error.methodUnimplemented","iterator.iteratorFilter","iterator.iteratorMap","equalAttrs","object.equalFlat","map.copy","object.isEmpty","object.assign","xml","object.forEach","item","array.some","binary.BIT2","binary.BIT4","binary.BIT1","binary.BIT3","binary.BITS5","binary.BIT6","Y.isDeleted","color","random.oneOf","eventloop.timeout","environment.isBrowser","dom.doc","Y.createSnapshot","Y.createDeleteSet","PModel.Slice","PModel.Fragment","Y.snapshot","Y.iterateDeletedStructs","Y.typeListToArraySnapshot","Y.Snapshot","Y.Item","Y.XmlElement","Y.XmlText","object.keys","Y.ContentString","Y.ContentFormat","Y.createRelativePositionFromTypeIndex","Y.RelativePosition","Y.findRootTypeKey","Y.createID","Y.createAbsolutePositionFromRelativePosition","Y.isParentOf","Y.createRelativePositionFromJSON","getSelection","Y.compareRelativePositions","undo","redo","Text","XmlElement","undoManager","rect","handleKeyDown","arrow","RopeSequence","Leaf","flatten","Append","history","domain","whitespace","input","nextState","scheme","autolink","link","stringify","blockContent","blockSpec","PLUGIN_KEY","items","editor","hasAnchor","pos","blockStyles","unicode","require$$0","ERR","require$$1","$","Preprocessor","require$$2","require$$3","Tokenizer","NS","HTML","OpenElementStack","FormattingElementList","mixin","Mixin","preprocessor","preprocessorMixin","PositionTrackingPreprocessorMixin","tokenizer","tokenizerMixin","LocationInfoTokenizerMixin","LocationInfoOpenElementStackMixin","require$$4","siblings","parserMixin","LocationInfoParserMixin","ErrorReportingMixinBase","ErrorReportingPreprocessorMixin","ErrorReportingTokenizerMixin","ErrorReportingParserMixin","DOCUMENT_MODE","parentNode","location","mergeOptions","doctype","ATTRS","foreignContent","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12","definitions","own","definition","svg","camelcase","htmlBase","svgBase","previous","core","h","spaces","commas","patch","all","anyFactory","castFactory","checks","skippable","contents","skippables","visit","unknown","setProperty","getProperty","extend","phrasing","nodes","hastPhrasing","mdastPhrasing","blockquote","br","cell","prefix","comment","dt","dd","clean","handle","heading","inlineCode","props","li","strong","tableCell","tableRow","thead","table","cells","result","bridge","mutate","basic","numeric","increment","body","tbody","invalid","compiler","buffer","trail","constructs","attentionMarkers","exit","characterReference","effects","nok","start","furtherStart","between","raw","titleBefore","media","thematicBreak","tokenizeIndent","paragraph","strikethrough","insideSpan","escape","value","none","footnoteReference","row","sizes","columnIndex","listItem","flow","write","resolveText","blockQuote","codeText","emphasis","hardBreak","image","configure","data","imageReference","linkReference","dangerous","subexit","isBuffer","assertPath","dirname","basename","extname","bufferLike","process","options","isPlainObj","Parser","file","blockOuter","blockGroup","blocks","rehypeRemark","remarkRehype","defaultHandlers","addImageButton","addImageButtonIcon","addImageButtonText","imageAndCaptionWrapper","imageWrapper","caption","NodeSelection2","PluginKey2","Slice2","Fragment2","Selection2","Slice3","Fragment3","TextSelection2","TableView","colgroup","PluginKey3","DecorationSet2","Decoration2","Fragment4","TextSelection3","Plugin2","Table","TableExt","TableRow","TableCell","TableHeader","toResult","pv.__serializeForClipboard","_b","_c","toggleStyles","colorStyles"],"mappings":"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N,OAAO;AAAA,IACP,MAAM;AAAA,IACN,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,KAAK;AAAA,IACL,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,KAAK;AAAA,IACL,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,MAAM;AAAA,IACN,KAAK;AAAA,IACL,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IAC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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,66,67,68,69,70,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,409,410,412,414,417]}